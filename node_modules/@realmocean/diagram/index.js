(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("tuval$core$graphics"), require("tuval$graphics"), require("tuval$core"), require("tuval$forms"));
	else if(typeof define === 'function' && define.amd)
		define(["tuval$core$graphics", "tuval$graphics", "tuval$core", "tuval$forms"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("tuval$core$graphics"), require("tuval$graphics"), require("tuval$core"), require("tuval$forms")) : factory(root["tuval$core$graphics"], root["tuval$graphics"], root["tuval$core"], root["tuval$forms"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function(__WEBPACK_EXTERNAL_MODULE__tuval_cg__, __WEBPACK_EXTERNAL_MODULE__tuval_graphics__, __WEBPACK_EXTERNAL_MODULE__tuval_core__, __WEBPACK_EXTERNAL_MODULE__tuval_forms__) {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Forms/Border3DStyle.ts":
/*!************************************!*\
  !*** ./src/Forms/Border3DStyle.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Border3DStyle": () => (/* binding */ Border3DStyle)
/* harmony export */ });
var Border3DStyle;
(function (Border3DStyle) {
    Border3DStyle[Border3DStyle["RaisedOuter"] = 1] = "RaisedOuter";
    Border3DStyle[Border3DStyle["SunkenOuter"] = 2] = "SunkenOuter";
    Border3DStyle[Border3DStyle["RaisedInner"] = 4] = "RaisedInner";
    Border3DStyle[Border3DStyle["Raised"] = 5] = "Raised";
    Border3DStyle[Border3DStyle["Etched"] = 6] = "Etched";
    Border3DStyle[Border3DStyle["SunkenInner"] = 8] = "SunkenInner";
    Border3DStyle[Border3DStyle["Bump"] = 9] = "Bump";
    Border3DStyle[Border3DStyle["Sunken"] = 10] = "Sunken";
    Border3DStyle[Border3DStyle["Adjust"] = 8192] = "Adjust";
    Border3DStyle[Border3DStyle["Flat"] = 16394] = "Flat";
})(Border3DStyle || (Border3DStyle = {}));


/***/ }),

/***/ "./src/Forms/BorderStyle.ts":
/*!**********************************!*\
  !*** ./src/Forms/BorderStyle.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BorderStyle": () => (/* binding */ BorderStyle)
/* harmony export */ });
var BorderStyle;
(function (BorderStyle) {
    BorderStyle[BorderStyle["None"] = 0] = "None";
    BorderStyle[BorderStyle["FixedSingle"] = 1] = "FixedSingle";
    BorderStyle[BorderStyle["Fixed3D"] = 2] = "Fixed3D";
})(BorderStyle || (BorderStyle = {}));


/***/ }),

/***/ "./src/Forms/CancelEventArgs.ts":
/*!**************************************!*\
  !*** ./src/Forms/CancelEventArgs.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CancelEventArgs": () => (/* binding */ CancelEventArgs)
/* harmony export */ });
var CancelEventArgs = /** @class */ (function () {
    function CancelEventArgs(cancel) {
        this.Cancel = false;
        if (cancel !== undefined) {
            this.Cancel = cancel;
        }
    }
    return CancelEventArgs;
}());



/***/ }),

/***/ "./src/Forms/Clipboard.ts":
/*!********************************!*\
  !*** ./src/Forms/Clipboard.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Clipboard": () => (/* binding */ Clipboard)
/* harmony export */ });
var Clipboard = /** @class */ (function () {
    function Clipboard() {
    }
    Clipboard.SetDataObject = function (obj) {
    };
    Clipboard.GetDataObject = function () {
        return null;
    };
    return Clipboard;
}());



/***/ }),

/***/ "./src/Forms/ControlPaint.ts":
/*!***********************************!*\
  !*** ./src/Forms/ControlPaint.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ControlPaint": () => (/* binding */ ControlPaint)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);


var ControlPaint = /** @class */ (function () {
    function ControlPaint() {
    }
    ControlPaint.DrawReversibleFrame = function (rectangle, backColor, style) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('ControlPaint.DrawReversibleFrame not implemented.');
    };
    ControlPaint.DrawReversibleLine = function (start, end, backColor) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('ControlPaint.DrawReversibleFrame not implemented.');
    };
    ControlPaint.DrawBorder3D = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 3) {
            var graphics = args[0];
            var rectangle = args[1];
            graphics.DrawRectangle(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.Black, rectangle);
        }
    };
    return ControlPaint;
}());



/***/ }),

/***/ "./src/Forms/Cursor.ts":
/*!*****************************!*\
  !*** ./src/Forms/Cursor.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cursor": () => (/* binding */ Cursor)
/* harmony export */ });
var Cursor = /** @class */ (function () {
    function Cursor(name) {
        this.myName = '';
        this.myName = name;
    }
    Object.defineProperty(Cursor.prototype, "Name", {
        get: function () {
            return this.myName;
        },
        enumerable: false,
        configurable: true
    });
    return Cursor;
}());



/***/ }),

/***/ "./src/Forms/Cursors.ts":
/*!******************************!*\
  !*** ./src/Forms/Cursors.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cursors": () => (/* binding */ Cursors)
/* harmony export */ });
/* harmony import */ var _Cursor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Cursor */ "./src/Forms/Cursor.ts");

var Cursors = /** @class */ (function () {
    function Cursors() {
    }
    ;
    Cursors.VSplit = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('col-resize');
    Cursors.HSplit = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('row-resize');
    Cursors.SizeWE = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('ew-resize');
    Cursors.SizeNWSE = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('nwse-resize');
    Cursors.SizeNS = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('ns-resize');
    Cursors.SizeNESW = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('nesw-resize');
    Cursors.SizeAll = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('move');
    Cursors.No = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('not-allowed');
    Cursors.IBeam = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('text');
    Cursors.Default = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('default');
    Cursors.Hand = new _Cursor__WEBPACK_IMPORTED_MODULE_0__.Cursor('pointer');
    return Cursors;
}());



/***/ }),

/***/ "./src/Forms/DataFormats.ts":
/*!**********************************!*\
  !*** ./src/Forms/DataFormats.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataFormats": () => (/* binding */ DataFormats)
/* harmony export */ });
var DataFormats = /** @class */ (function () {
    function DataFormats() {
    }
    DataFormats.Bitmap = 'BITMAP';
    return DataFormats;
}());



/***/ }),

/***/ "./src/Forms/DataObject.ts":
/*!*********************************!*\
  !*** ./src/Forms/DataObject.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataObject": () => (/* binding */ DataObject)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);

var DragAndDropPool = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
var DataObject = /** @class */ (function () {
    function DataObject() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 0) {
            this.id = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Guid.NewGuid().ToString();
            this.data = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
        }
        else if (args.length === 1 && args[0] instanceof DataTransfer) {
            var dataTransfer = args[0];
            this.id = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Guid.NewGuid().ToString();
            this.dataTransfer = dataTransfer;
            this.dataTransfer.setData('text', this.id);
            this.data = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
            DragAndDropPool.Set(this.id, this.data);
        }
        else {
            this.id = args[0];
            this.dataTransfer = args[1];
            this.data = DragAndDropPool.Get(this.id);
            if (this.data == null) {
                this.dataTransfer.effectAllowed = 'none';
            }
        }
    }
    DataObject.prototype.GetData = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1 && args[0] instanceof _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Type) {
            var type = args[0];
            if (this.data.ContainsKey(type.FullName)) {
                return this.data.Get(type.FullName);
            }
        }
        else if (args.length === 1 && _tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.string(args[0])) {
            var key = args[0];
            if (this.data.ContainsKey(key)) {
                return this.data.Get(key);
            }
        }
        return null;
    };
    DataObject.prototype.GetDataPresent = function (format, autoConvert) {
        throw new Error("Method not implemented.");
    };
    DataObject.prototype.GetFormats = function (autoConvert) {
        throw new Error("Method not implemented.");
    };
    DataObject.prototype.SetData = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 2 && _tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.string(args[0])) {
            var key = args[0];
            var data = args[1];
            this.data.Set(key, data);
        }
        else if (args.length === 2 && args[0] instanceof _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Type) {
            var type = args[0];
            this.data.Set(type.FullName, args[1]);
        }
    };
    return DataObject;
}());



/***/ }),

/***/ "./src/Forms/DialogResult.ts":
/*!***********************************!*\
  !*** ./src/Forms/DialogResult.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DialogResult": () => (/* binding */ DialogResult)
/* harmony export */ });
var DialogResult;
(function (DialogResult) {
    DialogResult[DialogResult["None"] = 0] = "None";
    DialogResult[DialogResult["OK"] = 1] = "OK";
    DialogResult[DialogResult["Cancel"] = 2] = "Cancel";
    DialogResult[DialogResult["Abort"] = 3] = "Abort";
    DialogResult[DialogResult["Retry"] = 4] = "Retry";
    DialogResult[DialogResult["Ignore"] = 5] = "Ignore";
    DialogResult[DialogResult["Yes"] = 6] = "Yes";
    DialogResult[DialogResult["No"] = 7] = "No";
})(DialogResult || (DialogResult = {}));


/***/ }),

/***/ "./src/Forms/DragDropEffects.ts":
/*!**************************************!*\
  !*** ./src/Forms/DragDropEffects.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DragDropEffects": () => (/* binding */ DragDropEffects)
/* harmony export */ });
var DragDropEffects;
(function (DragDropEffects) {
    DragDropEffects[DragDropEffects["Scroll"] = Number.MIN_VALUE] = "Scroll";
    DragDropEffects[DragDropEffects["All"] = -2147483645] = "All";
    DragDropEffects[DragDropEffects["None"] = 0] = "None";
    DragDropEffects[DragDropEffects["Copy"] = 1] = "Copy";
    DragDropEffects[DragDropEffects["Move"] = 2] = "Move";
    DragDropEffects[DragDropEffects["Link"] = 4] = "Link";
})(DragDropEffects || (DragDropEffects = {}));


/***/ }),

/***/ "./src/Forms/DragEventArgs.ts":
/*!************************************!*\
  !*** ./src/Forms/DragEventArgs.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DragEventArgs": () => (/* binding */ DragEventArgs)
/* harmony export */ });
/* harmony import */ var _EventArgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventArgs */ "./src/Forms/EventArgs.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var DragEventArgs = /** @class */ (function (_super) {
    __extends(DragEventArgs, _super);
    function DragEventArgs(data, keyState, x, y, allowedEffect, effect) {
        var _this = _super.call(this) || this;
        _this.myData = data;
        _this.myKeyState = keyState;
        _this.myX = x;
        _this.myY = y;
        _this.myAllowedEffect = allowedEffect;
        _this.myEffect = effect;
        return _this;
    }
    Object.defineProperty(DragEventArgs.prototype, "AllowedEffect", {
        get: function () {
            return this.myAllowedEffect;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DragEventArgs.prototype, "Data", {
        get: function () {
            return this.myData;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DragEventArgs.prototype, "Effect", {
        get: function () {
            return this.myEffect;
        },
        set: function (value) {
            this.myEffect = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DragEventArgs.prototype, "KeyState", {
        get: function () {
            return this.myKeyState;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DragEventArgs.prototype, "X", {
        get: function () {
            return this.myX;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DragEventArgs.prototype, "Y", {
        get: function () {
            return this.myY;
        },
        enumerable: false,
        configurable: true
    });
    return DragEventArgs;
}(_EventArgs__WEBPACK_IMPORTED_MODULE_0__.EventArgs));



/***/ }),

/***/ "./src/Forms/EventArgs.ts":
/*!********************************!*\
  !*** ./src/Forms/EventArgs.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventArgs": () => (/* binding */ EventArgs)
/* harmony export */ });
var EventArgs = /** @class */ (function () {
    function EventArgs() {
    }
    EventArgs.Empty = new EventArgs();
    return EventArgs;
}());



/***/ }),

/***/ "./src/Forms/FormWindowState.ts":
/*!**************************************!*\
  !*** ./src/Forms/FormWindowState.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormWindowState": () => (/* binding */ FormWindowState)
/* harmony export */ });
var FormWindowState;
(function (FormWindowState) {
    FormWindowState[FormWindowState["Normal"] = 0] = "Normal";
    FormWindowState[FormWindowState["Minimized"] = 1] = "Minimized";
    FormWindowState[FormWindowState["Maximized"] = 2] = "Maximized";
})(FormWindowState || (FormWindowState = {}));


/***/ }),

/***/ "./src/Forms/FrameStyle.ts":
/*!*********************************!*\
  !*** ./src/Forms/FrameStyle.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FrameStyle": () => (/* binding */ FrameStyle)
/* harmony export */ });
var FrameStyle;
(function (FrameStyle) {
    FrameStyle[FrameStyle["Dashed"] = 0] = "Dashed";
    FrameStyle[FrameStyle["Thick"] = 1] = "Thick";
})(FrameStyle || (FrameStyle = {}));


/***/ }),

/***/ "./src/Forms/IDataObject.ts":
/*!**********************************!*\
  !*** ./src/Forms/IDataObject.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IDataObject": () => (/* binding */ IDataObject)
/* harmony export */ });
var IDataObject = /** @class */ (function () {
    function IDataObject() {
    }
    return IDataObject;
}());



/***/ }),

/***/ "./src/Forms/Keys.ts":
/*!***************************!*\
  !*** ./src/Forms/Keys.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Keys": () => (/* binding */ Keys)
/* harmony export */ });
var Keys;
(function (Keys) {
    //
    // Summary:
    //     The bitmask to extract modifiers from a key value.
    Keys[Keys["Modifiers"] = -65536] = "Modifiers";
    //
    // Summary:
    //     No key pressed.
    Keys[Keys["None"] = 0] = "None";
    //
    // Summary:
    //     The left mouse button.
    Keys[Keys["LButton"] = 1] = "LButton";
    //
    // Summary:
    //     The right mouse button.
    Keys[Keys["RButton"] = 2] = "RButton";
    //
    // Summary:
    //     The CANCEL key.
    Keys[Keys["Cancel"] = 3] = "Cancel";
    //
    // Summary:
    //     The middle mouse button (three-button mouse).
    Keys[Keys["MButton"] = 4] = "MButton";
    //
    // Summary:
    //     The first x mouse button (five-button mouse).
    Keys[Keys["XButton1"] = 5] = "XButton1";
    //
    // Summary:
    //     The second x mouse button (five-button mouse).
    Keys[Keys["XButton2"] = 6] = "XButton2";
    //
    // Summary:
    //     The BACKSPACE key.
    Keys[Keys["Back"] = 8] = "Back";
    //
    // Summary:
    //     The TAB key.
    Keys[Keys["Tab"] = 9] = "Tab";
    //
    // Summary:
    //     The LINEFEED key.
    Keys[Keys["LineFeed"] = 10] = "LineFeed";
    //
    // Summary:
    //     The CLEAR key.
    Keys[Keys["Clear"] = 12] = "Clear";
    //
    // Summary:
    //     The RETURN key.
    Keys[Keys["Return"] = 13] = "Return";
    //
    // Summary:
    //     The ENTER key.
    Keys[Keys["Enter"] = 13] = "Enter";
    //
    // Summary:
    //     The SHIFT key.
    Keys[Keys["ShiftKey"] = 16] = "ShiftKey";
    //
    // Summary:
    //     The CTRL key.
    Keys[Keys["ControlKey"] = 17] = "ControlKey";
    //
    // Summary:
    //     The ALT key.
    Keys[Keys["Menu"] = 18] = "Menu";
    //
    // Summary:
    //     The PAUSE key.
    Keys[Keys["Pause"] = 19] = "Pause";
    //
    // Summary:
    //     The CAPS LOCK key.
    Keys[Keys["Capital"] = 20] = "Capital";
    //
    // Summary:
    //     The CAPS LOCK key.
    Keys[Keys["CapsLock"] = 20] = "CapsLock";
    //
    // Summary:
    //     The IME Kana mode key.
    Keys[Keys["KanaMode"] = 21] = "KanaMode";
    //
    // Summary:
    //     The IME Hanguel mode key. (maintained for compatibility; use HangulMode)
    Keys[Keys["HanguelMode"] = 21] = "HanguelMode";
    //
    // Summary:
    //     The IME Hangul mode key.
    Keys[Keys["HangulMode"] = 21] = "HangulMode";
    //
    // Summary:
    //     The IME Junja mode key.
    Keys[Keys["JunjaMode"] = 23] = "JunjaMode";
    //
    // Summary:
    //     The IME final mode key.
    Keys[Keys["FinalMode"] = 24] = "FinalMode";
    //
    // Summary:
    //     The IME Hanja mode key.
    Keys[Keys["HanjaMode"] = 25] = "HanjaMode";
    //
    // Summary:
    //     The IME Kanji mode key.
    Keys[Keys["KanjiMode"] = 25] = "KanjiMode";
    //
    // Summary:
    //     The ESC key.
    Keys[Keys["Escape"] = 27] = "Escape";
    //
    // Summary:
    //     The IME convert key.
    Keys[Keys["IMEConvert"] = 28] = "IMEConvert";
    //
    // Summary:
    //     The IME nonconvert key.
    Keys[Keys["IMENonconvert"] = 29] = "IMENonconvert";
    //
    // Summary:
    //     The IME accept key, replaces System.Windows.Forms.Keys.IMEAceept.
    Keys[Keys["IMEAccept"] = 30] = "IMEAccept";
    //
    // Summary:
    //     The IME accept key. Obsolete, use System.Windows.Forms.Keys.IMEAccept instead.
    Keys[Keys["IMEAceept"] = 30] = "IMEAceept";
    //
    // Summary:
    //     The IME mode change key.
    Keys[Keys["IMEModeChange"] = 31] = "IMEModeChange";
    //
    // Summary:
    //     The SPACEBAR key.
    Keys[Keys["Space"] = 32] = "Space";
    //
    // Summary:
    //     The PAGE UP key.
    Keys[Keys["Prior"] = 33] = "Prior";
    //
    // Summary:
    //     The PAGE UP key.
    Keys[Keys["PageUp"] = 33] = "PageUp";
    //
    // Summary:
    //     The PAGE DOWN key.
    Keys[Keys["Next"] = 34] = "Next";
    //
    // Summary:
    //     The PAGE DOWN key.
    Keys[Keys["PageDown"] = 34] = "PageDown";
    //
    // Summary:
    //     The END key.
    Keys[Keys["End"] = 35] = "End";
    //
    // Summary:
    //     The HOME key.
    Keys[Keys["Home"] = 36] = "Home";
    //
    // Summary:
    //     The LEFT ARROW key.
    Keys[Keys["Left"] = 37] = "Left";
    //
    // Summary:
    //     The UP ARROW key.
    Keys[Keys["Up"] = 38] = "Up";
    //
    // Summary:
    //     The RIGHT ARROW key.
    Keys[Keys["Right"] = 39] = "Right";
    //
    // Summary:
    //     The DOWN ARROW key.
    Keys[Keys["Down"] = 40] = "Down";
    //
    // Summary:
    //     The SELECT key.
    Keys[Keys["Select"] = 41] = "Select";
    //
    // Summary:
    //     The PRINT key.
    Keys[Keys["Print"] = 42] = "Print";
    //
    // Summary:
    //     The EXECUTE key.
    Keys[Keys["Execute"] = 43] = "Execute";
    //
    // Summary:
    //     The PRINT SCREEN key.
    Keys[Keys["Snapshot"] = 44] = "Snapshot";
    //
    // Summary:
    //     The PRINT SCREEN key.
    Keys[Keys["PrintScreen"] = 44] = "PrintScreen";
    //
    // Summary:
    //     The INS key.
    Keys[Keys["Insert"] = 45] = "Insert";
    //
    // Summary:
    //     The DEL key.
    Keys[Keys["Delete"] = 46] = "Delete";
    //
    // Summary:
    //     The HELP key.
    Keys[Keys["Help"] = 47] = "Help";
    //
    // Summary:
    //     The 0 key.
    Keys[Keys["D0"] = 48] = "D0";
    //
    // Summary:
    //     The 1 key.
    Keys[Keys["D1"] = 49] = "D1";
    //
    // Summary:
    //     The 2 key.
    Keys[Keys["D2"] = 50] = "D2";
    //
    // Summary:
    //     The 3 key.
    Keys[Keys["D3"] = 51] = "D3";
    //
    // Summary:
    //     The 4 key.
    Keys[Keys["D4"] = 52] = "D4";
    //
    // Summary:
    //     The 5 key.
    Keys[Keys["D5"] = 53] = "D5";
    //
    // Summary:
    //     The 6 key.
    Keys[Keys["D6"] = 54] = "D6";
    //
    // Summary:
    //     The 7 key.
    Keys[Keys["D7"] = 55] = "D7";
    //
    // Summary:
    //     The 8 key.
    Keys[Keys["D8"] = 56] = "D8";
    //
    // Summary:
    //     The 9 key.
    Keys[Keys["D9"] = 57] = "D9";
    //
    // Summary:
    //     The A key.
    Keys[Keys["A"] = 65] = "A";
    //
    // Summary:
    //     The B key.
    Keys[Keys["B"] = 66] = "B";
    //
    // Summary:
    //     The C key.
    Keys[Keys["C"] = 67] = "C";
    //
    // Summary:
    //     The D key.
    Keys[Keys["D"] = 68] = "D";
    //
    // Summary:
    //     The E key.
    Keys[Keys["E"] = 69] = "E";
    //
    // Summary:
    //     The F key.
    Keys[Keys["F"] = 70] = "F";
    //
    // Summary:
    //     The G key.
    Keys[Keys["G"] = 71] = "G";
    //
    // Summary:
    //     The H key.
    Keys[Keys["H"] = 72] = "H";
    //
    // Summary:
    //     The I key.
    Keys[Keys["I"] = 73] = "I";
    //
    // Summary:
    //     The J key.
    Keys[Keys["J"] = 74] = "J";
    //
    // Summary:
    //     The K key.
    Keys[Keys["K"] = 75] = "K";
    //
    // Summary:
    //     The L key.
    Keys[Keys["L"] = 76] = "L";
    //
    // Summary:
    //     The M key.
    Keys[Keys["M"] = 77] = "M";
    //
    // Summary:
    //     The N key.
    Keys[Keys["N"] = 78] = "N";
    //
    // Summary:
    //     The O key.
    Keys[Keys["O"] = 79] = "O";
    //
    // Summary:
    //     The P key.
    Keys[Keys["P"] = 80] = "P";
    //
    // Summary:
    //     The Q key.
    Keys[Keys["Q"] = 81] = "Q";
    //
    // Summary:
    //     The R key.
    Keys[Keys["R"] = 82] = "R";
    //
    // Summary:
    //     The S key.
    Keys[Keys["S"] = 83] = "S";
    //
    // Summary:
    //     The T key.
    Keys[Keys["T"] = 84] = "T";
    //
    // Summary:
    //     The U key.
    Keys[Keys["U"] = 85] = "U";
    //
    // Summary:
    //     The V key.
    Keys[Keys["V"] = 86] = "V";
    //
    // Summary:
    //     The W key.
    Keys[Keys["W"] = 87] = "W";
    //
    // Summary:
    //     The X key.
    Keys[Keys["X"] = 88] = "X";
    //
    // Summary:
    //     The Y key.
    Keys[Keys["Y"] = 89] = "Y";
    //
    // Summary:
    //     The Z key.
    Keys[Keys["Z"] = 90] = "Z";
    //
    // Summary:
    //     The left Windows logo key (Microsoft Natural Keyboard).
    Keys[Keys["LWin"] = 91] = "LWin";
    //
    // Summary:
    //     The right Windows logo key (Microsoft Natural Keyboard).
    Keys[Keys["RWin"] = 92] = "RWin";
    //
    // Summary:
    //     The application key (Microsoft Natural Keyboard).
    Keys[Keys["Apps"] = 93] = "Apps";
    //
    // Summary:
    //     The computer sleep key.
    Keys[Keys["Sleep"] = 95] = "Sleep";
    //
    // Summary:
    //     The 0 key on the numeric keypad.
    Keys[Keys["NumPad0"] = 96] = "NumPad0";
    //
    // Summary:
    //     The 1 key on the numeric keypad.
    Keys[Keys["NumPad1"] = 97] = "NumPad1";
    //
    // Summary:
    //     The 2 key on the numeric keypad.
    Keys[Keys["NumPad2"] = 98] = "NumPad2";
    //
    // Summary:
    //     The 3 key on the numeric keypad.
    Keys[Keys["NumPad3"] = 99] = "NumPad3";
    //
    // Summary:
    //     The 4 key on the numeric keypad.
    Keys[Keys["NumPad4"] = 100] = "NumPad4";
    //
    // Summary:
    //     The 5 key on the numeric keypad.
    Keys[Keys["NumPad5"] = 101] = "NumPad5";
    //
    // Summary:
    //     The 6 key on the numeric keypad.
    Keys[Keys["NumPad6"] = 102] = "NumPad6";
    //
    // Summary:
    //     The 7 key on the numeric keypad.
    Keys[Keys["NumPad7"] = 103] = "NumPad7";
    //
    // Summary:
    //     The 8 key on the numeric keypad.
    Keys[Keys["NumPad8"] = 104] = "NumPad8";
    //
    // Summary:
    //     The 9 key on the numeric keypad.
    Keys[Keys["NumPad9"] = 105] = "NumPad9";
    //
    // Summary:
    //     The multiply key.
    Keys[Keys["Multiply"] = 106] = "Multiply";
    //
    // Summary:
    //     The add key.
    Keys[Keys["Add"] = 107] = "Add";
    //
    // Summary:
    //     The separator key.
    Keys[Keys["Separator"] = 108] = "Separator";
    //
    // Summary:
    //     The subtract key.
    Keys[Keys["Subtract"] = 109] = "Subtract";
    //
    // Summary:
    //     The decimal key.
    Keys[Keys["Decimal"] = 110] = "Decimal";
    //
    // Summary:
    //     The divide key.
    Keys[Keys["Divide"] = 111] = "Divide";
    //
    // Summary:
    //     The F1 key.
    Keys[Keys["F1"] = 112] = "F1";
    //
    // Summary:
    //     The F2 key.
    Keys[Keys["F2"] = 113] = "F2";
    //
    // Summary:
    //     The F3 key.
    Keys[Keys["F3"] = 114] = "F3";
    //
    // Summary:
    //     The F4 key.
    Keys[Keys["F4"] = 115] = "F4";
    //
    // Summary:
    //     The F5 key.
    Keys[Keys["F5"] = 116] = "F5";
    //
    // Summary:
    //     The F6 key.
    Keys[Keys["F6"] = 117] = "F6";
    //
    // Summary:
    //     The F7 key.
    Keys[Keys["F7"] = 118] = "F7";
    //
    // Summary:
    //     The F8 key.
    Keys[Keys["F8"] = 119] = "F8";
    //
    // Summary:
    //     The F9 key.
    Keys[Keys["F9"] = 120] = "F9";
    //
    // Summary:
    //     The F10 key.
    Keys[Keys["F10"] = 121] = "F10";
    //
    // Summary:
    //     The F11 key.
    Keys[Keys["F11"] = 122] = "F11";
    //
    // Summary:
    //     The F12 key.
    Keys[Keys["F12"] = 123] = "F12";
    //
    // Summary:
    //     The F13 key.
    Keys[Keys["F13"] = 124] = "F13";
    //
    // Summary:
    //     The F14 key.
    Keys[Keys["F14"] = 125] = "F14";
    //
    // Summary:
    //     The F15 key.
    Keys[Keys["F15"] = 126] = "F15";
    //
    // Summary:
    //     The F16 key.
    Keys[Keys["F16"] = 127] = "F16";
    //
    // Summary:
    //     The F17 key.
    Keys[Keys["F17"] = 128] = "F17";
    //
    // Summary:
    //     The F18 key.
    Keys[Keys["F18"] = 129] = "F18";
    //
    // Summary:
    //     The F19 key.
    Keys[Keys["F19"] = 130] = "F19";
    //
    // Summary:
    //     The F20 key.
    Keys[Keys["F20"] = 131] = "F20";
    //
    // Summary:
    //     The F21 key.
    Keys[Keys["F21"] = 132] = "F21";
    //
    // Summary:
    //     The F22 key.
    Keys[Keys["F22"] = 133] = "F22";
    //
    // Summary:
    //     The F23 key.
    Keys[Keys["F23"] = 134] = "F23";
    //
    // Summary:
    //     The F24 key.
    Keys[Keys["F24"] = 135] = "F24";
    //
    // Summary:
    //     The NUM LOCK key.
    Keys[Keys["NumLock"] = 144] = "NumLock";
    //
    // Summary:
    //     The SCROLL LOCK key.
    Keys[Keys["Scroll"] = 145] = "Scroll";
    //
    // Summary:
    //     The left SHIFT key.
    Keys[Keys["LShiftKey"] = 160] = "LShiftKey";
    //
    // Summary:
    //     The right SHIFT key.
    Keys[Keys["RShiftKey"] = 161] = "RShiftKey";
    //
    // Summary:
    //     The left CTRL key.
    Keys[Keys["LControlKey"] = 162] = "LControlKey";
    //
    // Summary:
    //     The right CTRL key.
    Keys[Keys["RControlKey"] = 163] = "RControlKey";
    //
    // Summary:
    //     The left ALT key.
    Keys[Keys["LMenu"] = 164] = "LMenu";
    //
    // Summary:
    //     The right ALT key.
    Keys[Keys["RMenu"] = 165] = "RMenu";
    //
    // Summary:
    //     The browser back key (Windows 2000 or later).
    Keys[Keys["BrowserBack"] = 166] = "BrowserBack";
    //
    // Summary:
    //     The browser forward key (Windows 2000 or later).
    Keys[Keys["BrowserForward"] = 167] = "BrowserForward";
    //
    // Summary:
    //     The browser refresh key (Windows 2000 or later).
    Keys[Keys["BrowserRefresh"] = 168] = "BrowserRefresh";
    //
    // Summary:
    //     The browser stop key (Windows 2000 or later).
    Keys[Keys["BrowserStop"] = 169] = "BrowserStop";
    //
    // Summary:
    //     The browser search key (Windows 2000 or later).
    Keys[Keys["BrowserSearch"] = 170] = "BrowserSearch";
    //
    // Summary:
    //     The browser favorites key (Windows 2000 or later).
    Keys[Keys["BrowserFavorites"] = 171] = "BrowserFavorites";
    //
    // Summary:
    //     The browser home key (Windows 2000 or later).
    Keys[Keys["BrowserHome"] = 172] = "BrowserHome";
    //
    // Summary:
    //     The volume mute key (Windows 2000 or later).
    Keys[Keys["VolumeMute"] = 173] = "VolumeMute";
    //
    // Summary:
    //     The volume down key (Windows 2000 or later).
    Keys[Keys["VolumeDown"] = 174] = "VolumeDown";
    //
    // Summary:
    //     The volume up key (Windows 2000 or later).
    Keys[Keys["VolumeUp"] = 175] = "VolumeUp";
    //
    // Summary:
    //     The media next track key (Windows 2000 or later).
    Keys[Keys["MediaNextTrack"] = 176] = "MediaNextTrack";
    //
    // Summary:
    //     The media previous track key (Windows 2000 or later).
    Keys[Keys["MediaPreviousTrack"] = 177] = "MediaPreviousTrack";
    //
    // Summary:
    //     The media Stop key (Windows 2000 or later).
    Keys[Keys["MediaStop"] = 178] = "MediaStop";
    //
    // Summary:
    //     The media play pause key (Windows 2000 or later).
    Keys[Keys["MediaPlayPause"] = 179] = "MediaPlayPause";
    //
    // Summary:
    //     The launch mail key (Windows 2000 or later).
    Keys[Keys["LaunchMail"] = 180] = "LaunchMail";
    //
    // Summary:
    //     The select media key (Windows 2000 or later).
    Keys[Keys["SelectMedia"] = 181] = "SelectMedia";
    //
    // Summary:
    //     The start application one key (Windows 2000 or later).
    Keys[Keys["LaunchApplication1"] = 182] = "LaunchApplication1";
    //
    // Summary:
    //     The start application two key (Windows 2000 or later).
    Keys[Keys["LaunchApplication2"] = 183] = "LaunchApplication2";
    //
    // Summary:
    //     The OEM Semicolon key on a US standard keyboard (Windows 2000 or later).
    Keys[Keys["OemSemicolon"] = 186] = "OemSemicolon";
    //
    // Summary:
    //     The OEM 1 key.
    Keys[Keys["Oem1"] = 186] = "Oem1";
    //
    // Summary:
    //     The OEM plus key on any country/region keyboard (Windows 2000 or later).
    Keys[Keys["Oemplus"] = 187] = "Oemplus";
    //
    // Summary:
    //     The OEM comma key on any country/region keyboard (Windows 2000 or later).
    Keys[Keys["Oemcomma"] = 188] = "Oemcomma";
    //
    // Summary:
    //     The OEM minus key on any country/region keyboard (Windows 2000 or later).
    Keys[Keys["OemMinus"] = 189] = "OemMinus";
    //
    // Summary:
    //     The OEM period key on any country/region keyboard (Windows 2000 or later).
    Keys[Keys["OemPeriod"] = 190] = "OemPeriod";
    //
    // Summary:
    //     The OEM question mark key on a US standard keyboard (Windows 2000 or later).
    Keys[Keys["OemQuestion"] = 191] = "OemQuestion";
    //
    // Summary:
    //     The OEM 2 key.
    Keys[Keys["Oem2"] = 191] = "Oem2";
    //
    // Summary:
    //     The OEM tilde key on a US standard keyboard (Windows 2000 or later).
    Keys[Keys["Oemtilde"] = 192] = "Oemtilde";
    //
    // Summary:
    //     The OEM 3 key.
    Keys[Keys["Oem3"] = 192] = "Oem3";
    //
    // Summary:
    //     The OEM open bracket key on a US standard keyboard (Windows 2000 or later).
    Keys[Keys["OemOpenBrackets"] = 219] = "OemOpenBrackets";
    //
    // Summary:
    //     The OEM 4 key.
    Keys[Keys["Oem4"] = 219] = "Oem4";
    //
    // Summary:
    //     The OEM pipe key on a US standard keyboard (Windows 2000 or later).
    Keys[Keys["OemPipe"] = 220] = "OemPipe";
    //
    // Summary:
    //     The OEM 5 key.
    Keys[Keys["Oem5"] = 220] = "Oem5";
    //
    // Summary:
    //     The OEM close bracket key on a US standard keyboard (Windows 2000 or later).
    Keys[Keys["OemCloseBrackets"] = 221] = "OemCloseBrackets";
    //
    // Summary:
    //     The OEM 6 key.
    Keys[Keys["Oem6"] = 221] = "Oem6";
    //
    // Summary:
    //     The OEM singled/double quote key on a US standard keyboard (Windows 2000 or later).
    Keys[Keys["OemQuotes"] = 222] = "OemQuotes";
    //
    // Summary:
    //     The OEM 7 key.
    Keys[Keys["Oem7"] = 222] = "Oem7";
    //
    // Summary:
    //     The OEM 8 key.
    Keys[Keys["Oem8"] = 223] = "Oem8";
    //
    // Summary:
    //     The OEM angle bracket or backslash key on the RT 102 key keyboard (Windows 2000
    //     or later).
    Keys[Keys["OemBackslash"] = 226] = "OemBackslash";
    //
    // Summary:
    //     The OEM 102 key.
    Keys[Keys["Oem102"] = 226] = "Oem102";
    //
    // Summary:
    //     The PROCESS KEY key.
    Keys[Keys["ProcessKey"] = 229] = "ProcessKey";
    //
    // Summary:
    //     Used to pass Unicode characters as if they were keystrokes. The Packet key value
    //     is the low word of a 32-bit virtual-key value used for non-keyboard input methods.
    Keys[Keys["Packet"] = 231] = "Packet";
    //
    // Summary:
    //     The ATTN key.
    Keys[Keys["Attn"] = 246] = "Attn";
    //
    // Summary:
    //     The CRSEL key.
    Keys[Keys["Crsel"] = 247] = "Crsel";
    //
    // Summary:
    //     The EXSEL key.
    Keys[Keys["Exsel"] = 248] = "Exsel";
    //
    // Summary:
    //     The ERASE EOF key.
    Keys[Keys["EraseEof"] = 249] = "EraseEof";
    //
    // Summary:
    //     The PLAY key.
    Keys[Keys["Play"] = 250] = "Play";
    //
    // Summary:
    //     The ZOOM key.
    Keys[Keys["Zoom"] = 251] = "Zoom";
    //
    // Summary:
    //     A constant reserved for future use.
    Keys[Keys["NoName"] = 252] = "NoName";
    //
    // Summary:
    //     The PA1 key.
    Keys[Keys["Pa1"] = 253] = "Pa1";
    //
    // Summary:
    //     The CLEAR key.
    Keys[Keys["OemClear"] = 254] = "OemClear";
    //
    // Summary:
    //     The bitmask to extract a key code from a key value.
    Keys[Keys["KeyCode"] = 65535] = "KeyCode";
    //
    // Summary:
    //     The SHIFT modifier key.
    Keys[Keys["Shift"] = 65536] = "Shift";
    //
    // Summary:
    //     The CTRL modifier key.
    Keys[Keys["Control"] = 131072] = "Control";
    //
    // Summary:
    //     The ALT modifier key.
    Keys[Keys["Alt"] = 262144] = "Alt";
})(Keys || (Keys = {}));


/***/ }),

/***/ "./src/Forms/MouseButtons.ts":
/*!***********************************!*\
  !*** ./src/Forms/MouseButtons.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MouseButtons": () => (/* binding */ MouseButtons)
/* harmony export */ });
var MouseButtons;
(function (MouseButtons) {
    MouseButtons[MouseButtons["None"] = 0] = "None";
    MouseButtons[MouseButtons["Left"] = 1048576] = "Left";
    MouseButtons[MouseButtons["Right"] = 2097152] = "Right";
    MouseButtons[MouseButtons["Middle"] = 4194304] = "Middle";
    MouseButtons[MouseButtons["XButton1"] = 8388608] = "XButton1";
    MouseButtons[MouseButtons["XButton2"] = 16777216] = "XButton2";
})(MouseButtons || (MouseButtons = {}));


/***/ }),

/***/ "./src/Forms/MouseEventArgs.ts":
/*!*************************************!*\
  !*** ./src/Forms/MouseEventArgs.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MouseEventArgs": () => (/* binding */ MouseEventArgs)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _MouseButtons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MouseButtons */ "./src/Forms/MouseButtons.ts");
/* harmony import */ var _EventArgs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EventArgs */ "./src/Forms/EventArgs.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var MouseEventArgs = /** @class */ (function (_super) {
    __extends(MouseEventArgs, _super);
    function MouseEventArgs(button, clicks, x, y, delta, htmlEventObject) {
        var _this = _super.call(this) || this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.assert)((button & (_MouseButtons__WEBPACK_IMPORTED_MODULE_2__.MouseButtons.Left | _MouseButtons__WEBPACK_IMPORTED_MODULE_2__.MouseButtons.None | _MouseButtons__WEBPACK_IMPORTED_MODULE_2__.MouseButtons.Right | _MouseButtons__WEBPACK_IMPORTED_MODULE_2__.MouseButtons.Middle | _MouseButtons__WEBPACK_IMPORTED_MODULE_2__.MouseButtons.XButton1 | _MouseButtons__WEBPACK_IMPORTED_MODULE_2__.MouseButtons.XButton2)) ===
            button, "Invalid information passed into MouseEventArgs constructor!");
        _this.button = button;
        _this.clicks = clicks;
        _this.x = x;
        _this.y = y;
        _this.delta = delta;
        _this.htmlEventObject = htmlEventObject;
        return _this;
    }
    Object.defineProperty(MouseEventArgs.prototype, "Button", {
        /// <include file='doc\MouseEvent.uex' path='docs/doc[@for="MouseEventArgs.Button"]/*' />
        /// <devdoc>
        ///    <para>
        ///       Gets which mouse button was pressed.
        ///    </para>
        /// </devdoc>
        get: function () {
            return this.button;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MouseEventArgs.prototype, "Clicks", {
        /// <include file='doc\MouseEvent.uex' path='docs/doc[@for="MouseEventArgs.Clicks"]/*' />
        /// <devdoc>
        ///    <para>
        ///       Gets the
        ///       number of times the mouse
        ///       button was pressed and released.
        ///    </para>
        /// </devdoc>
        get: function () {
            return this.clicks;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MouseEventArgs.prototype, "X", {
        /// <include file='doc\MouseEvent.uex' path='docs/doc[@for="MouseEventArgs.X"]/*' />
        /// <devdoc>
        ///    <para>
        ///       Gets the x-coordinate
        ///       of a mouse click.
        ///    </para>
        /// </devdoc>
        get: function () {
            return this.x;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MouseEventArgs.prototype, "Y", {
        get: function () {
            return this.y;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MouseEventArgs.prototype, "Delta", {
        get: function () {
            return this.delta;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MouseEventArgs.prototype, "Location", {
        get: function () {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(this.x, this.y);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MouseEventArgs.prototype, "HtmlEventObject", {
        get: function () {
            return this.htmlEventObject;
        },
        enumerable: false,
        configurable: true
    });
    return MouseEventArgs;
}(_EventArgs__WEBPACK_IMPORTED_MODULE_3__.EventArgs));



/***/ }),

/***/ "./src/Forms/Orientation.ts":
/*!**********************************!*\
  !*** ./src/Forms/Orientation.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Orientation": () => (/* binding */ Orientation)
/* harmony export */ });
var Orientation;
(function (Orientation) {
    Orientation[Orientation["Horizontal"] = 0] = "Horizontal";
    Orientation[Orientation["Vertical"] = 1] = "Vertical";
})(Orientation || (Orientation = {}));


/***/ }),

/***/ "./src/Forms/PrintDocument.ts":
/*!************************************!*\
  !*** ./src/Forms/PrintDocument.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PrintDocument": () => (/* binding */ PrintDocument)
/* harmony export */ });
var PrintDocument = /** @class */ (function () {
    function PrintDocument() {
    }
    PrintDocument.prototype.print = function () {
    };
    return PrintDocument;
}());



/***/ }),

/***/ "./src/Forms/PrintPageEventHandler.ts":
/*!********************************************!*\
  !*** ./src/Forms/PrintPageEventHandler.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PrintPageEventHandler": () => (/* binding */ PrintPageEventHandler)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PrintPageEventHandler = /** @class */ (function (_super) {
    __extends(PrintPageEventHandler, _super);
    function PrintPageEventHandler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PrintPageEventHandler;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.Delegate));



/***/ }),

/***/ "./src/Forms/PropertyChangedEventArgs.ts":
/*!***********************************************!*\
  !*** ./src/Forms/PropertyChangedEventArgs.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PropertyChangedEventArgs": () => (/* binding */ PropertyChangedEventArgs)
/* harmony export */ });
var PropertyChangedEventArgs = /** @class */ (function () {
    function PropertyChangedEventArgs(propertyName) {
        this.PropertyName = propertyName;
    }
    return PropertyChangedEventArgs;
}());



/***/ }),

/***/ "./src/Forms/ScrollEventType.ts":
/*!**************************************!*\
  !*** ./src/Forms/ScrollEventType.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScrollEventType": () => (/* binding */ ScrollEventType)
/* harmony export */ });
var ScrollEventType;
(function (ScrollEventType) {
    ScrollEventType[ScrollEventType["SmallDecrement"] = 0] = "SmallDecrement";
    ScrollEventType[ScrollEventType["SmallIncrement"] = 1] = "SmallIncrement";
    ScrollEventType[ScrollEventType["LargeDecrement"] = 2] = "LargeDecrement";
    ScrollEventType[ScrollEventType["LargeIncrement"] = 3] = "LargeIncrement";
    ScrollEventType[ScrollEventType["ThumbPosition"] = 4] = "ThumbPosition";
    ScrollEventType[ScrollEventType["ThumbTrack"] = 5] = "ThumbTrack";
    ScrollEventType[ScrollEventType["First"] = 6] = "First";
    ScrollEventType[ScrollEventType["Last"] = 7] = "Last";
    ScrollEventType[ScrollEventType["EndScroll"] = 8] = "EndScroll";
})(ScrollEventType || (ScrollEventType = {}));


/***/ }),

/***/ "./src/Forms/SystemInformation.ts":
/*!****************************************!*\
  !*** ./src/Forms/SystemInformation.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SystemInformation": () => (/* binding */ SystemInformation)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);

var SystemInformation = /** @class */ (function () {
    function SystemInformation() {
    }
    SystemInformation.VerticalScrollBarWidth = 20;
    SystemInformation.HorizontalScrollBarHeight = 20;
    SystemInformation.Border3DSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(1, 1);
    SystemInformation.BorderSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(1, 1);
    return SystemInformation;
}());



/***/ }),

/***/ "./src/GeomUtilities.ts":
/*!******************************!*\
  !*** ./src/GeomUtilities.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Blend": () => (/* binding */ Blend),
/* harmony export */   "CurveType": () => (/* binding */ CurveType),
/* harmony export */   "GeomUtilities": () => (/* binding */ GeomUtilities)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);


var Blend = /** @class */ (function () {
    function Blend(count) {
        if (count === void 0) { count = 1; }
        this.Factors = new Array(count);
        this.Positions = new Array(count);
    }
    return Blend;
}());

var CurveType;
(function (CurveType) {
    CurveType[CurveType["Open"] = 0] = "Open";
    CurveType[CurveType["Close"] = 1] = "Close";
})(CurveType || (CurveType = {}));
var GeomUtilities = /** @class */ (function () {
    function GeomUtilities() {
    }
    /**
     * Yönlendirme çizgisinin açısı, başlangıç ve bitiş çizgilerinin hangi köşelerden geçeceğini belirler.
     * Örneğin, açı 0 ile 90 derece arasındaysa, başlangıç çizgisi sol üst köşeden, bitiş çizgisi ise sağ alt köşeden geçer.
     *  Linear gradient başlama noktaları,
     * 	Rotation angle		Start corner
     * 	0-89 degrees		Lower-left
     * 	90-179 degrees		Lower-right
     * 	180-269 degrees		Upper-right
     * 	270-359 degrees		Upper-left
     * @param rect
     * @param angle
     * @param start
     * @param end
     */
    GeomUtilities.ComputeOrientationLine = function (rect, angle, start, end) {
        start.value = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint.Empty;
        end.value = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint.Empty;
        var tanSize = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize.Empty;
        // 360 dereceye kadar
        angle = angle % 360;
        // Açıyı quadranlara bölüyoruz
        // Tabloya göre işliyoruz
        if (angle < 90) {
            start.value.X = rect.Location.X;
            start.value.Y = rect.Location.Y;
            tanSize.Width = rect.Size.Width;
            tanSize.Height = rect.Size.Height;
        }
        else if (angle < 180) {
            start.value.X = rect.Location.X + rect.Size.Width;
            start.value.Y = rect.Location.Y;
            tanSize.Width = -rect.Size.Width;
            tanSize.Height = rect.Size.Height;
        }
        else if (angle < 270) {
            start.value.X = rect.Location.X + rect.Size.Width;
            start.value.Y = rect.Location.Y + rect.Size.Height;
            tanSize.Width = -rect.Size.Width;
            tanSize.Height = -rect.Size.Height;
        }
        else {
            start.value.X = rect.Location.X;
            start.value.Y = rect.Location.Y + rect.Size.Height;
            tanSize.Width = rect.Size.Width;
            tanSize.Height = -rect.Size.Height;
        }
        var radAngle = GeomUtilities.ToRadians(angle);
        // Daire yarıçapı için formül - http://en.wikipedia.org/wiki/Distance
        var radius = Math.sqrt(rect.Size.Width * rect.Size.Width + rect.Size.Height * rect.Size.Height);
        // eğim açısını alıyoruz
        var slopeAngle = Math.atan2(tanSize.Height, tanSize.Width);
        //  Mesafeyi hesaplıyoruz
        var distance = Math.cos(slopeAngle - radAngle) * radius;
        end.value.X = Math.cos(radAngle) * distance + start.value.X;
        end.value.Y = Math.sin(radAngle) * distance + start.value.Y;
    };
    GeomUtilities.ToRadians = function (degrees) {
        return (degrees * Math.PI) / 180;
    };
    GeomUtilities.Lerp = function (value1, value2, amount) {
        return value1 + (value2 - value1) * amount;
    };
    GeomUtilities.SigmaBellShape = function (focus, scale) {
        var blend = new Blend();
        var pos = 0.0;
        var count = 511;
        var index;
        var sigma;
        var mean;
        var fall_off_len = 2.0;
        var delta;
        var phi;
        var curve_bottom;
        var curve_top;
        var curve_height;
        if (focus === 0 || focus === 1) {
            count = 256;
        }
        if (blend.Positions.length !== count) {
            blend = new Blend();
        }
        if (focus === 0) {
            sigma = 1.0 / fall_off_len;
            mean = 0.5;
            delta = 1.0 / 255.0;
            curve_bottom = GeomUtilities.Phi((1.0 - mean) / sigma);
            curve_top = GeomUtilities.Phi((focus - mean) / sigma);
            curve_height = curve_top - curve_bottom;
            blend.Positions[0] = focus;
            blend.Factors[0] = scale;
            for (index = 1, pos = delta; index < 255; index++, pos += delta) {
                blend.Positions[index] = pos;
                phi = GeomUtilities.Phi((pos - mean) / sigma);
                blend.Factors[index] = (scale / curve_height) * (phi - curve_bottom);
            }
            /* set the end */
            blend.Positions[count - 1] = 1.0;
            blend.Factors[count - 1] = 0.0;
        }
        else if (focus === 1) {
            sigma = 1.0 / fall_off_len;
            mean = 0.5;
            delta = 1.0 / 255.0;
            curve_bottom = GeomUtilities.Phi((0.0 - mean) / sigma);
            curve_top = GeomUtilities.Phi((focus - mean) / sigma);
            curve_height = curve_top - curve_bottom;
            /* set the start */
            blend.Positions[0] = 0.0;
            blend.Factors[0] = 0.0;
            for (index = 1, pos = delta; index < 255; index++, pos += delta) {
                blend.Positions[index] = pos;
                phi = GeomUtilities.Phi((pos - mean) / sigma);
                blend.Factors[index] = (scale / curve_height) * (pos - curve_bottom);
            }
            /* set the end */
            blend.Positions[count - 1] = focus;
            blend.Factors[count - 1] = scale;
        }
        else {
            sigma = focus / (2 * fall_off_len);
            mean = focus / 2.0;
            delta = focus / 255.0;
            /* set the start */
            blend.Positions[0] = 0.0;
            blend.Factors[0] = 0.0;
            curve_bottom = GeomUtilities.Phi((0.0 - mean) / sigma);
            curve_top = GeomUtilities.Phi((focus - mean) / sigma);
            curve_height = curve_top - curve_bottom;
            for (index = 1, pos = delta; index < 255; index++, pos += delta) {
                blend.Positions[index] = pos;
                phi = GeomUtilities.Phi((pos - mean) / sigma);
                blend.Factors[index] = (scale / curve_height) * (phi - curve_bottom);
            }
            blend.Positions[index] = focus;
            blend.Factors[index] = scale;
            sigma = (1.0 - focus) / (2 * fall_off_len);
            mean = (1.0 + focus) / 2.0;
            delta = (1.0 - focus) / 255.0;
            curve_bottom = GeomUtilities.Phi((1.0 - mean) / sigma);
            curve_top = GeomUtilities.Phi((focus - mean) / sigma);
            curve_height = curve_top - curve_bottom;
            index++;
            pos = focus + delta;
            for (; index < 510; index++, pos += delta) {
                blend.Positions[index] = pos;
                phi = GeomUtilities.Phi((pos - mean) / sigma);
                blend.Factors[index] = (scale / curve_height) * (phi - curve_bottom);
            }
            /* set the end */
            blend.Positions[count - 1] = 1.0;
            blend.Factors[count - 1] = 0.0;
        }
        return blend;
    };
    GeomUtilities.Phi = function (x) {
        // constants
        var a1 = 0.254829592;
        var a2 = -0.284496736;
        var a3 = 1.421413741;
        var a4 = -1.453152027;
        var a5 = 1.061405429;
        var p = 0.3275911;
        // Save the sign of x
        var sign = 1;
        if (x < 0)
            sign = -1;
        x = Math.abs(x) / Math.sqrt(2.0);
        var t = 1.0 / (1.0 + p * x);
        var y = 1.0 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);
        return 0.5 * (1.0 + sign * y);
    };
    GeomUtilities.Erf = function (x) {
        // sabitler
        var a1 = 0.254829592;
        var a2 = -0.284496736;
        var a3 = 1.421413741;
        var a4 = -1.453152027;
        var a5 = 1.061405429;
        var p = 0.3275911;
        var sign = 1;
        if (x < 0)
            sign = -1;
        x = Math.abs(x);
        var t = 1.0 / (1.0 + p * x);
        var y = 1.0 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);
        return sign * y;
    };
    GeomUtilities.CreateGeometricTransform = function (rect, points) {
        var p0 = points[0];
        var p1 = points[1];
        var p2 = points[2];
        var width = rect.Width;
        var height = rect.Height;
        var m11 = (p1.X - p0.X) / width;
        var m12 = (p1.Y - p0.Y) / width;
        var m21 = (p2.X - p0.X) / height;
        var m22 = (p2.Y - p0.Y) / height;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGAffineTransform(m11, m12, m21, m22, p0.X, p0.Y);
    };
    GeomUtilities.CreateRotateFlipTransform = function (width, height, angle, flipX, flipY) {
        var rotateX = Math.abs(Math.cos(GeomUtilities.ToRadians(angle)));
        var rotateY = Math.abs(Math.sin(GeomUtilities.ToRadians(angle)));
        var deltaWidth = width.value * rotateX + height.value * rotateY;
        var deltaHeight = width.value * rotateY + height.value * rotateX;
        var rotateFlipTransform = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGAffineTransform.MakeTranslation(flipX ? -deltaWidth : 0.0, flipY ? -deltaHeight : 0.0);
        rotateFlipTransform.multiply(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGAffineTransform.MakeScale(flipX ? -1.0 : 1.0, flipY ? -1.0 : 1.0));
        if (0.0 !== angle) {
            var rot = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGAffineTransform.MakeTranslation(-deltaHeight * 0.5, -deltaWidth * 0.5);
            rot.rotate(GeomUtilities.ToRadians(angle));
            rot.translate(deltaWidth * 0.5, deltaHeight * 0.5);
            rotateFlipTransform = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGAffineTransform.Multiply(rot, rotateFlipTransform);
        }
        width.value = deltaWidth;
        height.value = deltaHeight;
        return rotateFlipTransform;
    };
    GeomUtilities.TransformRectangle = function (rectangle, matrix) {
        var transform = matrix.transform;
        var x = rectangle.value.X;
        var y = rectangle.value.Y;
        rectangle.value.X = transform.m[0] * x + transform.m[1] * y + transform.m[4];
        rectangle.value.Y = transform.m[1] * x + transform.m[3] * y + transform.m[5];
        x = rectangle.value.Width;
        y = rectangle.value.Height;
        rectangle.value.Width = transform.m[0] * x + transform.m[2] * y + transform.m[4];
        rectangle.value.Height = transform.m[1] * x + transform.m[3] * y + transform.m[5];
    };
    GeomUtilities.GetCurveTangents = function (terms, points, count, tension, type) {
        var coefficient = tension / 3;
        var tangents = new Array(count);
        for (var i = 0; i < count; i++) {
            tangents[i] = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint.Empty;
        }
        if (count <= 2)
            return tangents;
        for (var i = 0; i < count; i++) {
            var r = i + 1;
            var s = i - 1;
            if (r >= count)
                r = count - 1;
            if (type === CurveType.Open) {
                if (s < 0)
                    s = 0;
            }
            else {
                if (s < 0)
                    s += count;
            }
            tangents[i].X += coefficient * (points[r].X - points[s].X);
            tangents[i].Y += coefficient * (points[r].Y - points[s].Y);
        }
        return tangents;
    };
    GeomUtilities.QuadraticToCubic = function (start, controlPoint, end, controlPoint1, controlPoint2) {
        controlPoint1.value = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint.Empty;
        controlPoint2.value = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint.Empty;
        controlPoint1.value.X = start.X + GeomUtilities.quadCubeCoeff * (controlPoint.X - start.X);
        controlPoint2.value.X = end.X + GeomUtilities.quadCubeCoeff * (controlPoint.X - end.X);
        controlPoint1.value.Y = start.Y + GeomUtilities.quadCubeCoeff * (controlPoint.Y - start.Y);
        controlPoint2.value.Y = end.Y + GeomUtilities.quadCubeCoeff * (controlPoint.Y - end.Y);
    };
    GeomUtilities.DotProduct = function (u, v) {
        return u.X * v.X + u.Y * v.Y; // + (u).z * (v).z)
    };
    GeomUtilities.Normal = function (v) {
        return Math.sqrt(GeomUtilities.DotProduct(v, v)); // normal = vector uzunluğu
    };
    GeomUtilities.CrossProduct = function (v1, v2) {
        return v1.X * v2.Y - v1.Y * v2.X;
    };
    GeomUtilities.TriangleBoundingBox = function (points) {
        var maxX = Math.max(points[0].X, Math.max(points[1].X, points[2].X));
        var minX = Math.min(points[0].X, Math.min(points[1].X, points[2].X));
        var maxY = Math.max(points[0].Y, Math.max(points[1].Y, points[2].Y));
        var minY = Math.min(points[0].Y, Math.min(points[1].Y, points[2].Y));
        var bb = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(minX, minY, maxX - minX, maxY - minY);
        return bb;
    };
    GeomUtilities.PolygonBoundingBox = function (points) {
        var minX = Number.MAX_VALUE;
        var minY = Number.MAX_VALUE;
        var maxX = Number.MIN_VALUE;
        var maxY = Number.MIN_VALUE;
        /* get the bounding box of the polygon */
        for (var m = 0; m < points.length; m++) {
            minX = Math.min(points[m].X, minX);
            minY = Math.min(points[m].Y, minY);
            maxX = Math.max(points[m].X, maxX);
            maxY = Math.max(points[m].Y, maxY);
        }
        var bb = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(minX, minY, maxX - minX, maxY - minY);
        return bb;
    };
    GeomUtilities.PolygonCentroid = function (points) {
        var C = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint.Empty;
        var area = 0;
        var first = points[0];
        var last = points[points.length - 1];
        if (last !== first)
            last = first;
        last = first;
        var dotProd = 0;
        for (var i = 1; i < points.length; i++) {
            var next = points[i];
            dotProd = last.X * next.Y - next.X * last.Y;
            area += dotProd;
            C.X += (last.X + next.X) * dotProd;
            C.Y += (last.Y + next.Y) * dotProd;
            last = next;
        }
        dotProd = last.X * first.Y - first.X * last.Y;
        area += dotProd;
        C.X += (last.X + first.X) * dotProd;
        C.Y += (last.Y + first.Y) * dotProd;
        var aaa = GeomUtilities.PolygonArea(points);
        var A6 = 6.0 * (area / 2);
        var reciprocal = 1.0 / A6;
        C.X = C.X * reciprocal;
        C.Y = C.Y * reciprocal;
        return C;
    };
    GeomUtilities.PolygonArea = function (points) {
        var first = points[0];
        var last = points[points.length - 1];
        // path i kapattığımızdan emin olmalıyız
        if (last != first)
            last = first;
        var area = 0;
        for (var p = 1; p < points.length; p++) {
            var next = points[p];
            area += last.X * next.Y - next.X * last.Y;
            last = next;
        }
        area += last.X * first.Y - first.X * last.Y;
        return area / 2;
    };
    GeomUtilities.InflateRect = function (a, w, h) {
        a.value.X = a.value.X - w;
        a.value.Width = a.value.Width + w * 2;
        a.value.Y = a.value.Y - h;
        a.value.Height = a.value.Height + h * 2;
    };
    GeomUtilities.IntersectionRect = function (a, b) {
        var single = Math.max(a.X, b.X);
        var single1 = Math.max(a.Y, b.Y);
        var single2 = Math.min(a.X + a.Width, b.X + b.Width);
        var single3 = Math.min(a.Y + a.Height, b.Y + b.Height);
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(single, single1, Math.max(0, single2 - single), Math.max(0, single3 - single1));
    };
    GeomUtilities.ContainsRect = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 2 && args[1] instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint) {
            var a = args[0];
            var b = args[1];
            if (a.X > b.X || b.X > a.X + a.Width || a.Y > b.Y) {
                return false;
            }
            return b.Y <= a.Y + a.Height;
        }
        else if (args.length === 2 && args[1] instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle) {
            var a = args[0];
            var b = args[1];
            if (a.X > b.X || b.X + b.Width > a.X + a.Width || a.Y > b.Y || b.Y + b.Height > a.Y + a.Height || a.Width < 0) {
                return false;
            }
            return a.Height >= 0;
        }
    };
    GeomUtilities.IntersectsLineSegment = function (rect, p1, p2) {
        if (p1.X === p2.X) {
            if (rect.Left > p1.X || p1.X > rect.Right || Math.min(p1.Y, p2.Y) > rect.Bottom) {
                return false;
            }
            return Math.max(p1.Y, p2.Y) >= rect.Top;
        }
        if (p1.Y == p2.Y) {
            if (rect.Top > p1.Y || p1.Y > rect.Bottom || Math.min(p1.X, p2.X) > rect.Right) {
                return false;
            }
            return Math.max(p1.X, p2.X) >= rect.Left;
        }
        if (GeomUtilities.ContainsRect(rect, p1)) {
            return true;
        }
        if (GeomUtilities.ContainsRect(rect, p2)) {
            return true;
        }
        if (GeomUtilities.IntersectingLines(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left, rect.Top), new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right, rect.Top), p1, p2)) {
            return true;
        }
        if (GeomUtilities.IntersectingLines(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right, rect.Top), new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right, rect.Bottom), p1, p2)) {
            return true;
        }
        if (GeomUtilities.IntersectingLines(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right, rect.Bottom), new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left, rect.Bottom), p1, p2)) {
            return true;
        }
        if (GeomUtilities.IntersectingLines(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left, rect.Bottom), new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left, rect.Top), p1, p2)) {
            return true;
        }
        return false;
    };
    GeomUtilities.IntersectsRect = function (a, b) {
        var width = a.Width;
        if (width < 0) {
            return false;
        }
        var height = a.Height;
        if (height < 0) {
            return false;
        }
        var single = b.Width;
        if (single < 0) {
            return false;
        }
        var height1 = b.Height;
        if (height1 < 0) {
            return false;
        }
        var x = a.X;
        var x1 = b.X;
        width = width + x;
        single = single + x1;
        if (x > single || x1 > width) {
            return false;
        }
        var y = a.Y;
        var y1 = b.Y;
        height = height + y;
        height1 = height1 + y1;
        if (y <= height1 && y1 <= height) {
            return true;
        }
        return false;
    };
    GeomUtilities.ComparePointWithLine = function (a1, a2, p) {
        var x = a2.X - a1.X;
        var y = a2.Y - a1.Y;
        var single = p.X - a1.X;
        var y1 = p.Y - a1.Y;
        var single1 = single * y - y1 * x;
        if (single1 === 0) {
            single1 = single * x + y1 * y;
            if (single1 > 0) {
                single = single - x;
                y1 = y1 - y;
                single1 = single * x + y1 * y;
                if (single1 < 0) {
                    single1 = 0;
                }
            }
        }
        if (single1 < 0) {
            return -1;
        }
        if (single1 <= 0) {
            return 0;
        }
        return 1;
    };
    GeomUtilities.IntersectingLines = function (a1, a2, b1, b2) {
        if ((GeomUtilities.ComparePointWithLine(a1, a2, b1) * GeomUtilities.ComparePointWithLine(a1, a2, b2)) > 0) {
            return false;
        }
        return (GeomUtilities.ComparePointWithLine(b1, b2, a1) * GeomUtilities.ComparePointWithLine(b1, b2, a2)) <= 0;
    };
    GeomUtilities.LineBounds = function (a, b) {
        var single = Math.min(a.X, b.X);
        var single1 = Math.min(a.Y, b.Y);
        var single2 = Math.max(a.X, b.X);
        var single3 = Math.max(a.Y, b.Y);
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(single, single1, single2 - single, single3 - single1);
    };
    GeomUtilities.LineContainsPoint = function (a, b, fuzz, p) {
        var x;
        var single;
        var y;
        var y1;
        if (a.X >= b.X) {
            single = b.X;
            x = a.X;
        }
        else {
            single = a.X;
            x = b.X;
        }
        if (a.Y >= b.Y) {
            y1 = b.Y;
            y = a.Y;
        }
        else {
            y1 = a.Y;
            y = b.Y;
        }
        if (a.X == b.X) {
            if (y1 > p.Y || p.Y > y || a.X - fuzz > p.X) {
                return false;
            }
            return p.X <= a.X + fuzz;
        }
        if (a.Y == b.Y) {
            if (single > p.X || p.X > x || a.Y - fuzz > p.Y) {
                return false;
            }
            return p.Y <= a.Y + fuzz;
        }
        var single1 = x + fuzz;
        var single2 = single - fuzz;
        if (single2 <= p.X && p.X <= single1) {
            var single3 = y + fuzz;
            var single4 = y1 - fuzz;
            if (single4 <= p.Y && p.Y <= single3) {
                if (single1 - single2 <= single3 - single4) {
                    if (a.Y - b.Y <= fuzz && b.Y - a.Y <= fuzz) {
                        return true;
                    }
                    var x1 = (b.X - a.X) / (b.Y - a.Y) * (p.Y - a.Y) + a.X;
                    if (x1 - fuzz <= p.X && p.X <= x1 + fuzz) {
                        return true;
                    }
                }
                else {
                    if (a.X - b.X <= fuzz && b.X - a.X <= fuzz) {
                        return true;
                    }
                    var y2 = (b.Y - a.Y) / (b.X - a.X) * (p.X - a.X) + a.Y;
                    if (y2 - fuzz <= p.Y && p.Y <= y2 + fuzz) {
                        return true;
                    }
                }
            }
        }
        return false;
    };
    GeomUtilities.NearestIntersectionOnLine = function (a, b, p, q, result) {
        var x = a.X;
        var y = a.Y;
        var single = b.X;
        var y1 = b.Y;
        var x1 = p.X;
        var single1 = p.Y;
        var x2 = q.X;
        var y2 = q.Y;
        if (x1 == x2) {
            if (x == single) {
                GeomUtilities.NearestPointOnLine(a, b, p, result);
                return false;
            }
            var single2 = (y1 - y) / (single - x) * (x1 - x) + y;
            return GeomUtilities.NearestPointOnLine(a, b, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x1, single2), result);
        }
        var single3 = (y2 - single1) / (x2 - x1);
        if (x == single) {
            var single4 = single3 * (x - x1) + single1;
            if (single4 < Math.min(y, y1)) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, Math.min(y, y1));
                return false;
            }
            if (single4 <= Math.max(y, y1)) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, single4);
                return true;
            }
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, Math.max(y, y1));
            return false;
        }
        var single5 = (y1 - y) / (single - x);
        if (single3 == single5) {
            GeomUtilities.NearestPointOnLine(a, b, p, result);
            return false;
        }
        var single6 = (single5 * x - single3 * x1 + single1 - y) / (single5 - single3);
        if (single5 !== 0) {
            var single7 = single5 * (single6 - x) + y;
            return GeomUtilities.NearestPointOnLine(a, b, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single6, single7), result);
        }
        if (single6 < Math.min(x, single)) {
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(Math.min(x, single), y);
            return false;
        }
        if (single6 <= Math.max(x, single)) {
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single6, y);
            return true;
        }
        result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(Math.max(x, single), y);
        return false;
    };
    GeomUtilities.RectFromLine = function (a, b, w) {
        if (a.X === b.X) {
            var y = a.Y;
            var single = b.Y;
            if (y > single) {
                y = b.Y;
                single = a.Y;
            }
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(a.X - w / 2, y, w, single - y);
        }
        if (a.Y == b.Y) {
            var x = a.X;
            var x1 = b.X;
            if (x > x1) {
                x = b.X;
                x1 = a.X;
            }
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(x, a.Y - w / 2, x1 - x, w);
        }
        var y1 = a.Y;
        var single1 = b.Y;
        if (y1 > single1) {
            y1 = b.Y;
            single1 = a.Y;
        }
        var x2 = a.X;
        var single2 = b.X;
        if (x2 > single2) {
            x2 = b.X;
            single2 = a.X;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(x2, y1, single2 - x2, single1 - y1);
    };
    GeomUtilities.NearestPointOnLine = function (a, b, p, result) {
        var single;
        var single1;
        var single2;
        var single3;
        var x = a.X;
        var y = a.Y;
        var x1 = b.X;
        var y1 = b.Y;
        var x2 = p.X;
        var y2 = p.Y;
        if (x === x1) {
            if (y >= y1) {
                single = y1;
                single1 = y;
            }
            else {
                single = y;
                single1 = y1;
            }
            var single4 = y2;
            if (single4 < single) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, single);
                return false;
            }
            if (single4 > single1) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, single1);
                return false;
            }
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, single4);
            return true;
        }
        if (y === y1) {
            if (x >= x1) {
                single2 = x1;
                single3 = x;
            }
            else {
                single2 = x;
                single3 = x1;
            }
            var single5 = x2;
            if (single5 < single2) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single2, y);
                return false;
            }
            if (single5 > single3) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single3, y);
                return false;
            }
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single5, y);
            return true;
        }
        var single6 = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y);
        var single7 = ((x - x2) * (x - x1) + (y - y2) * (y - y1)) / single6;
        if (single7 < 0) {
            result.value = a;
            return false;
        }
        if (single7 > 1) {
            result.value = b;
            return false;
        }
        var single8 = x + single7 * (x1 - x);
        var single9 = y + single7 * (y1 - y);
        result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single8, single9);
        return true;
    };
    GeomUtilities.GetNearestIntersectionPoint = function (rect, p1, p2, result) {
        var pointF = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X, rect.Y);
        var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X + rect.Width, rect.Y);
        var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X, rect.Y + rect.Height);
        var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X + rect.Width, rect.Y + rect.Height);
        var x = p1.X;
        var y = p1.Y;
        var single = 1E+21;
        var pointF5 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        if (GeomUtilities.NearestIntersectionOnLine(pointF1, pointF2, p1, p2, pointF)) {
            var x1 = (pointF.value.X - x) * (pointF.value.X - x) + (pointF.value.Y - y) * (pointF.value.Y - y);
            if (x1 < single) {
                single = x1;
                pointF5.value = pointF.value;
            }
        }
        if (GeomUtilities.NearestIntersectionOnLine(pointF2, pointF4, p1, p2, pointF)) {
            var single1 = (pointF.value.X - x) * (pointF.value.X - x) + (pointF.value.Y - y) * (pointF.value.Y - y);
            if (single1 < single) {
                single = single1;
                pointF5 = pointF;
            }
        }
        if (GeomUtilities.NearestIntersectionOnLine(pointF4, pointF3, p1, p2, pointF)) {
            var x2 = (pointF.value.X - x) * (pointF.value.X - x) + (pointF.value.Y - y) * (pointF.value.Y - y);
            if (x2 < single) {
                single = x2;
                pointF5 = pointF;
            }
        }
        if (GeomUtilities.NearestIntersectionOnLine(pointF3, pointF1, p1, p2, pointF)) {
            var single2 = (pointF.value.X - x) * (pointF.value.X - x) + (pointF.value.Y - y) * (pointF.value.Y - y);
            if (single2 < single) {
                single = single2;
                pointF5 = pointF;
            }
        }
        result.value = pointF5.value;
        return single < 1E+21;
    };
    GeomUtilities.LargestSizeKeepingAspectRatio = function (target, aspect) {
        var single = Math.max(0, aspect.Width);
        var single1 = Math.max(0, aspect.Height);
        if (single === 0 && single1 === 0) {
            single = 1;
            single1 = 1;
        }
        var single2 = Math.max(0, target.Width);
        var single3 = Math.max(0, target.Height);
        if (single === 0) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(0, single3);
        }
        if (single1 === 0) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(single2, 0);
        }
        if (single2 === 0 || single3 === 0) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(single2, single3);
        }
        var single4 = single1 / single;
        if (single4 < single3 / single2) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(single2, single4 * single2);
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(single3 / single4, single3);
    };
    GeomUtilities.MakeRect = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (typeof args[0] === 'number') {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(args[0], 0, 0, 0);
        }
        else if (args[0] instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(args[0].X, args[0].Y, 0, 0);
        }
        else if (args[0] instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(0, 0, args[0].Width, args[0].Height);
        }
    };
    GeomUtilities.UnionRect = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 2 && args[1] instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle) {
            var a = args[0];
            var b = args[1];
            var single = Math.min(a.X, b.X);
            var single1 = Math.min(a.Y, b.Y);
            var single2 = Math.max(a.X + a.Width, b.X + b.Width);
            var single3 = Math.max(a.Y + a.Height, b.Y + b.Height);
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(single, single1, single2 - single, single3 - single1);
        }
        else {
            var r = args[0];
            var p = args[1];
            if (p.X < r.X) {
                r.Width = r.X + r.Width - p.X;
                r.X = p.X;
            }
            else if (p.X > r.X + r.Width) {
                r.Width = p.X - r.X;
            }
            if (p.Y < r.Y) {
                r.Height = r.Y + r.Height - p.Y;
                r.Y = p.Y;
            }
            else if (p.Y > r.Y + r.Height) {
                r.Height = p.Y - r.Y;
            }
            return r;
        }
    };
    GeomUtilities.lineBounds = function (a, b) {
        var single = Math.min(a.X, b.X);
        var single1 = Math.min(a.Y, b.Y);
        var single2 = Math.max(a.X, b.X);
        var single3 = Math.max(a.Y, b.Y);
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle({ x: single, y: single1, width: single2 - single, height: single3 - single1 });
    };
    GeomUtilities.BezierBounds = function (s, c1, c2, e, epsilon) {
        if (GeomUtilities.LineContainsPoint(s, e, epsilon, c1) && GeomUtilities.LineContainsPoint(s, e, epsilon, c2)) {
            return GeomUtilities.lineBounds(s, e);
        }
        var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (s.X + c1.X) / 2, y: (s.Y + c1.Y) / 2 });
        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (c1.X + c2.X) / 2, y: (c1.Y + c2.Y) / 2 });
        var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (c2.X + e.X) / 2, y: (c2.Y + e.Y) / 2 });
        var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF.X + pointF1.X) / 2, y: (pointF.Y + pointF1.Y) / 2 });
        var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF1.X + pointF2.X) / 2, y: (pointF1.Y + pointF2.Y) / 2 });
        var pointF5 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF3.X + pointF4.X) / 2, y: (pointF3.Y + pointF4.Y) / 2 });
        return GeomUtilities.UnionRect(GeomUtilities.BezierBounds(s, pointF, pointF3, pointF5, epsilon), GeomUtilities.BezierBounds(pointF5, pointF4, pointF2, e, epsilon));
    };
    GeomUtilities.BezierContainsPoint = function (s, c1, c2, e, epsilon, p) {
        if (GeomUtilities.LineContainsPoint(s, e, epsilon, c1) && GeomUtilities.LineContainsPoint(s, e, epsilon, c2)) {
            return GeomUtilities.LineContainsPoint(s, e, epsilon, p);
        }
        var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (s.X + c1.X) / 2, y: (s.Y + c1.Y) / 2 });
        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (c1.X + c2.X) / 2, y: (c1.Y + c2.Y) / 2 });
        var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (c2.X + e.X) / 2, y: (c2.Y + e.Y) / 2 });
        var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF.X + pointF1.X) / 2, y: (pointF.Y + pointF1.Y) / 2 });
        var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF1.X + pointF2.X) / 2, y: (pointF1.Y + pointF2.Y) / 2 });
        var pointF5 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF3.X + pointF4.X) / 2, y: (pointF3.Y + pointF4.Y) / 2 });
        if (GeomUtilities.BezierContainsPoint(s, pointF, pointF3, pointF5, epsilon, p)) {
            return true;
        }
        return GeomUtilities.BezierContainsPoint(pointF5, pointF4, pointF2, e, epsilon, p);
    };
    GeomUtilities.BezierMidPoint = function (b0, b1, b2, b3, v, w) {
        v = v || _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        w = w || _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint((b0.X + b1.X) / 2, (b0.Y + b1.Y) / 2);
        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint((b1.X + b2.X) / 2, (b1.Y + b2.Y) / 2);
        var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint((b2.X + b3.X) / 2, (b2.Y + b3.Y) / 2);
        v.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint((pointF.X + pointF1.X) / 2, (pointF.Y + pointF1.Y) / 2);
        w.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint((pointF1.X + pointF2.X) / 2, (pointF1.Y + pointF2.Y) / 2);
    };
    GeomUtilities.BezierNearestIntersectionOnLine = function (s, c1, c2, e, p1, p2, epsilon, /*out*/ result) {
        result = result || _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        var pointF = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        var single = 1E+21;
        var pointF1;
        if (!GeomUtilities.LineContainsPoint(s, e, epsilon, c1) || !GeomUtilities.LineContainsPoint(s, e, epsilon, c2)) {
            var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (s.X + c1.X) / 2, y: (s.Y + c1.Y) / 2 });
            var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (c1.X + c2.X) / 2, y: (c1.Y + c2.Y) / 2 });
            var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (c2.X + e.X) / 2, y: (c2.Y + e.Y) / 2 });
            var pointF5 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF2.X + pointF3.X) / 2, y: (pointF2.Y + pointF3.Y) / 2 });
            var pointF6 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF3.X + pointF4.X) / 2, y: (pointF3.Y + pointF4.Y) / 2 });
            var pointF7 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: (pointF5.X + pointF6.X) / 2, y: (pointF5.Y + pointF6.Y) / 2 });
            if (GeomUtilities.BezierNearestIntersectionOnLine(s, pointF2, pointF5, pointF7, p1, p2, epsilon, pointF)) {
                var x = (pointF.value.X - p1.X) * (pointF.value.X - p1.X) + (pointF.value.Y - p1.Y) * (pointF.value.Y - p1.Y);
                if (x < single) {
                    single = x;
                    pointF1 = pointF.value;
                }
            }
            if (GeomUtilities.BezierNearestIntersectionOnLine(pointF7, pointF6, pointF4, e, p1, p2, epsilon, pointF)) {
                var x1 = (pointF.value.X - p1.X) * (pointF.value.X - p1.X) + (pointF.value.Y - p1.Y) * (pointF.value.Y - p1.Y);
                if (x1 < single) {
                    single = x1;
                    pointF1 = pointF.value;
                }
            }
        }
        if (GeomUtilities.NearestIntersectionOnLine(s, e, p1, p2, pointF)) {
            var single1 = (pointF.value.X - p1.X) * (pointF.value.X - p1.X) + (pointF.value.Y - p1.Y) * (pointF.value.Y - p1.Y);
            if (single1 < single) {
                single = single1;
                pointF1 = pointF.value;
            }
        }
        result.value = pointF1;
        return single < 1E+21;
    };
    GeomUtilities.RescalePoints = function (v, oldr, newr) {
        var width = 1;
        if (oldr.Width !== 0) {
            width = newr.Width / oldr.Width;
        }
        var height = 1;
        if (oldr.Height !== 0) {
            height = newr.Height / oldr.Height;
        }
        for (var i = 0; i < v.length; i++) {
            var pointF = v[i];
            var x = newr.X + (pointF.X - oldr.X) * width;
            var y = newr.Y + (pointF.Y - oldr.Y) * height;
            v[i] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: x, y: y });
        }
    };
    GeomUtilities.ExpandPointOnEdge = function (p, rect, shift) {
        if (p.X <= rect.X) {
            p.X = p.X - shift;
        }
        else if (p.X >= rect.X + rect.Width) {
            p.X = p.X + shift;
        }
        if (p.Y <= rect.Y) {
            p.Y = p.Y - shift;
        }
        else if (p.Y >= rect.Y + rect.Height) {
            p.Y = p.Y + shift;
        }
        return p;
    };
    GeomUtilities.TranslatePoints = function (v, dx, dy) {
        for (var i = 0; i < v.length; i++) {
            if (v[i] !== undefined) {
                var x = v[i];
                x.X = x.X + dx;
                x.Y = x.Y + dy;
                v[i] = x;
            }
        }
    };
    GeomUtilities.GetAngle = function (x, y) {
        var single;
        if (x === 0) {
            single = (y <= 0 ? 270 : 90);
        }
        else if (y != 0) {
            single = Math.atan(Math.abs(y / x)) * 180 / 3.14159265358979;
            if (x < 0) {
                single = (y >= 0 ? 180 - single : single + 180);
            }
            else if (y < 0) {
                single = 360 - single;
            }
        }
        else {
            single = (x <= 0 ? 180 : 0);
        }
        return single;
    };
    GeomUtilities.NearestIntersectionOnArc = function (rect, p1, p2, result, startAngle, sweepAngle) {
        var single;
        var single1;
        var single2;
        var width = rect.Width / 2;
        var height = rect.Height / 2;
        var x = rect.X + width;
        var y = rect.Y + height;
        if (sweepAngle >= 0) {
            single = startAngle;
            single1 = sweepAngle;
        }
        else {
            single = startAngle + sweepAngle;
            single1 = -sweepAngle;
        }
        if (p1.X == p2.X) {
            var single3 = height;
            var single4 = height;
            var single5 = width;
            var single6 = Math.sqrt((single3 * single3 - single4 * single4 / (single5 * single5) * ((p1.X - x) * (p1.X - x))));
            var single7 = y + single6;
            var single8 = y - single6;
            var angle = GeomUtilities.GetAngle(p1.X - x, single7 - y);
            var angle1 = GeomUtilities.GetAngle(p1.X - x, single8 - y);
            if (angle < single) {
                angle += 360;
            }
            if (angle1 < single) {
                angle1 += 360;
            }
            if (angle > single + single1) {
                angle -= 360;
            }
            if (angle1 > single + single1) {
                angle1 -= 360;
            }
            var flag = (angle < single ? false : angle <= single + single1);
            var flag1 = (angle1 < single ? false : angle1 <= single + single1);
            if (flag && flag1) {
                if (Math.abs(single7 - p1.Y) >= Math.abs(single8 - p1.Y)) {
                    result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(p1.X, single8);
                }
                else {
                    result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(p1.X, single7);
                }
                return true;
            }
            if (flag && !flag1) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(p1.X, single7);
                return true;
            }
            if (!(!flag && flag1)) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
                return false;
            }
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(p1.X, single8);
            return true;
        }
        single2 = (p1.X <= p2.X ? (p2.Y - p1.Y) / (p2.X - p1.X) : (p1.Y - p2.Y) / (p1.X - p2.X));
        var y1 = p1.Y - y - single2 * (p1.X - x);
        var single9 = width;
        var single10 = single2;
        var single11 = height;
        var single12 = y1;
        var single13 = Math.sqrt((single9 * single9 * (single10 * single10) + single11 * single11 - single12 * single12));
        var single14 = width;
        var single15 = height;
        var single16 = width;
        var single17 = single2;
        var single18 = (-(single14 * single14 * single2 * y1) + width * height * single13) / (single15 * single15 + single16 * single16 * (single17 * single17)) + x;
        var single19 = width;
        var single20 = height;
        var single21 = width;
        var single22 = single2;
        var single23 = (-(single19 * single19 * single2 * y1) - width * height * single13) / (single20 * single20 + single21 * single21 * (single22 * single22)) + x;
        var single24 = single2 * (single18 - x) + y1 + y;
        var single25 = single2 * (single23 - x) + y1 + y;
        var angle2 = GeomUtilities.GetAngle(single18 - x, single24 - y);
        var angle3 = GeomUtilities.GetAngle(single23 - x, single25 - y);
        if (angle2 < single) {
            angle2 += 360;
        }
        if (angle3 < single) {
            angle3 += 360;
        }
        if (angle2 > single + single1) {
            angle2 -= 360;
        }
        if (angle3 > single + single1) {
            angle3 -= 360;
        }
        var flag2 = (angle2 < single ? false : angle2 <= single + single1);
        var flag3 = (angle3 < single ? false : angle3 <= single + single1);
        if (!(flag2 && flag3)) {
            if (flag2 && !flag3) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single18, single24);
                return true;
            }
            if (!(!flag2 && flag3)) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
                return false;
            }
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single23, single25);
            return true;
        }
        if (Math.abs((p1.X - single18) * (p1.X - single18)) + Math.abs((p1.Y - single24) * (p1.Y - single24)) >= Math.abs((p1.X - single23) * (p1.X - single23)) + Math.abs((p1.Y - single25) * (p1.Y - single25))) {
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single23, single25);
        }
        else {
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single18, single24);
        }
        return true;
    };
    GeomUtilities.NearestIntersectionOnEllipse = function (rect, p1, p2, result) {
        if (rect.Width === 0) {
            return GeomUtilities.NearestIntersectionOnLine(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X, rect.Y), new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X, rect.Y + rect.Height), p1, p2, result);
        }
        if (rect.Height === 0) {
            return GeomUtilities.NearestIntersectionOnLine(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X, rect.Y), new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X + rect.Width, rect.Y), p1, p2, result);
        }
        var width = rect.Width / 2;
        var height = rect.Height / 2;
        var x = rect.X + width;
        var y = rect.Y + height;
        var single = 9999;
        if (p1.X > p2.X) {
            single = (p1.Y - p2.Y) / (p1.X - p2.X);
        }
        else if (p1.X < p2.X) {
            single = (p2.Y - p1.Y) / (p2.X - p1.X);
        }
        if (Math.abs(single) >= 9999) {
            var single1 = height;
            var single2 = single1 * single1;
            var single3 = width;
            var single4 = single3 * single3;
            var x1 = p1.X - x;
            var single5 = single2 - single2 / single4 * (x1 * x1);
            if (single5 < 0) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
                return false;
            }
            var single6 = Math.sqrt(single5);
            var single7 = y + single6;
            var single8 = y - single6;
            if (Math.abs(single7 - p1.Y) >= Math.abs(single8 - p1.Y)) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(p1.X, single8);
            }
            else {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(p1.X, single7);
            }
        }
        else {
            var y1 = p1.Y - y - single * (p1.X - x);
            var single9 = width;
            var single10 = single;
            var single11 = height;
            var single12 = y1;
            if (single9 * single9 * (single10 * single10) + single11 * single11 - single12 * single12 < 0) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
                return false;
            }
            var single13 = width;
            var single14 = single;
            var single15 = height;
            var single16 = y1;
            var single17 = Math.sqrt((single13 * single13 * (single14 * single14) + single15 * single15 - single16 * single16));
            var single18 = width;
            var single19 = height;
            var single20 = width;
            var single21 = single;
            var single22 = (-(single18 * single18 * single * y1) + width * height * single17) / (single19 * single19 + single20 * single20 * (single21 * single21)) + x;
            var single23 = width;
            var single24 = height;
            var single25 = width;
            var single26 = single;
            var single27 = (-(single23 * single23 * single * y1) - width * height * single17) / (single24 * single24 + single25 * single25 * (single26 * single26)) + x;
            var single28 = single * (single22 - x) + y1 + y;
            var single29 = single * (single27 - x) + y1 + y;
            if (Math.abs((p1.X - single22) * (p1.X - single22)) + Math.abs((p1.Y - single28) * (p1.Y - single28)) >= Math.abs((p1.X - single27) * (p1.X - single27)) + Math.abs((p1.Y - single29) * (p1.Y - single29))) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single27, single29);
            }
            else {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single22, single28);
            }
        }
        return true;
    };
    /**
     * Get surrounding rectangle of  given rect with angle.
     * @param angleInDeg
     * @param rect
     */
    GeomUtilities.GetSurroundingRectangle = function (angleInDeg, rect) {
        var alpha = (angleInDeg % 90) * Math.PI / 180;
        var tetha = (90 - (angleInDeg % 90)) * Math.PI / 180;
        var w = rect.Width;
        var h = rect.Height;
        var x1 = Math.cos(tetha) * Math.sin(alpha) * w;
        var y1 = Math.sin(tetha) * Math.sin(alpha) * w;
        var x2 = Math.sin(alpha) * Math.sin(tetha) * h;
        var y2 = Math.cos(alpha) * Math.sin(tetha) * h;
        var x3 = Math.cos(alpha) * Math.sin(tetha) * w;
        var y3 = Math.sin(alpha) * Math.sin(tetha) * w;
        var x4 = Math.sin(alpha) * Math.cos(alpha) * h;
        var y4 = Math.cos(alpha) * Math.cos(alpha) * h;
        if (angleInDeg <= 90) {
            var point1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x1, rect.Top - y1);
            var point2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left - x2, rect.Top + y2);
            var point3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x3, rect.Bottom + y3);
            var point4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right + x4, rect.Bottom - y4);
        }
        else if (angleInDeg > 90 && angleInDeg <= 180) {
            var point2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x1, rect.Top - y1);
            var point3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left - x2, rect.Top + y2);
            var point4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x3, rect.Bottom + y3);
            var point1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right + x4, rect.Bottom - y4);
        }
        else if (angleInDeg > 180 && angleInDeg <= 270) {
            var point3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x1, rect.Top - y1);
            var point4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left - x2, rect.Top + y2);
            var point1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x3, rect.Bottom + y3);
            var point2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right + x4, rect.Bottom - y4);
        }
        else if (angleInDeg <= 360) {
            var point4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x1, rect.Top - y1);
            var point1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left - x2, rect.Top + y2);
            var point2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Left + x3, rect.Bottom + y3);
            var point3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.Right + x4, rect.Bottom - y4);
        }
        return [point1, point2, point3, point4];
    };
    GeomUtilities.CheckLineIntersection = function (line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {
        var denominator, a, b, numerator1, numerator2, result = {
            x: null,
            y: null,
            onLine1: false,
            onLine2: false
        };
        denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));
        if (denominator == 0) {
            return result;
        }
        a = line1StartY - line2StartY;
        b = line1StartX - line2StartX;
        numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);
        numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);
        a = numerator1 / denominator;
        b = numerator2 / denominator;
        result.x = line1StartX + (a * (line1EndX - line1StartX));
        result.y = line1StartY + (a * (line1EndY - line1StartY));
        if (a > 0 && a < 1) {
            result.onLine1 = true;
        }
        if (b > 0 && b < 1) {
            result.onLine2 = true;
        }
        return result;
    };
    GeomUtilities.quadCubeCoeff = 2.0 / 3.0;
    return GeomUtilities;
}());



/***/ }),

/***/ "./src/Globals.ts":
/*!************************!*\
  !*** ./src/Globals.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NullRect": () => (/* binding */ NullRect),
/* harmony export */   "LastSpot": () => (/* binding */ LastSpot),
/* harmony export */   "Pens_Black": () => (/* binding */ Pens_Black),
/* harmony export */   "Pens_Gray": () => (/* binding */ Pens_Gray),
/* harmony export */   "Pens_LightGray": () => (/* binding */ Pens_LightGray),
/* harmony export */   "SystemPens_Control": () => (/* binding */ SystemPens_Control),
/* harmony export */   "SystemPens_ControlDarkDark": () => (/* binding */ SystemPens_ControlDarkDark),
/* harmony export */   "SystemPens_ControlDark": () => (/* binding */ SystemPens_ControlDark),
/* harmony export */   "SystemPens_ControlLightLight": () => (/* binding */ SystemPens_ControlLightLight),
/* harmony export */   "SystemPens_WindowFrame": () => (/* binding */ SystemPens_WindowFrame),
/* harmony export */   "Brushes_Black": () => (/* binding */ Brushes_Black),
/* harmony export */   "Brushes_Gray": () => (/* binding */ Brushes_Gray),
/* harmony export */   "Brushes_LightGray": () => (/* binding */ Brushes_LightGray),
/* harmony export */   "Brushes_White": () => (/* binding */ Brushes_White),
/* harmony export */   "Brushes_Yellow": () => (/* binding */ Brushes_Yellow),
/* harmony export */   "Brushes_LemonChiffon": () => (/* binding */ Brushes_LemonChiffon),
/* harmony export */   "Brushes_Gold": () => (/* binding */ Brushes_Gold),
/* harmony export */   "SystemBrushes_Control": () => (/* binding */ SystemBrushes_Control),
/* harmony export */   "getPenColor": () => (/* binding */ getPenColor),
/* harmony export */   "getPenWidth": () => (/* binding */ getPenWidth),
/* harmony export */   "makeRoundedRectangularPath": () => (/* binding */ makeRoundedRectangularPath),
/* harmony export */   "AllEvents": () => (/* binding */ AllEvents)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Spot */ "./src/Spot.ts");



var NullRect = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(0, 0, 0, 0);
var LastSpot = 8192;
var Pens_Black = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.Black;
var Pens_Gray = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.Gray;
var Pens_LightGray = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.LightGray;
var SystemPens_Control = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.Gray;
var SystemPens_ControlDarkDark = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.Black;
var SystemPens_ControlDark = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.BlueViolet;
var SystemPens_ControlLightLight = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.Chartreuse;
var SystemPens_WindowFrame = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pens.LightCyan;
var Brushes_Black = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.Black;
var Brushes_Gray = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.Gray;
var Brushes_LightGray = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.LightGray;
var Brushes_White = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.White;
var Brushes_Yellow = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.Yellow;
var Brushes_LemonChiffon = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.LemonChiffon;
var Brushes_Gold = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.Gold;
var SystemBrushes_Control = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Brushes.GreenYellow;
function getPenColor(p, def) {
    var color;
    if (p == null) {
        return def;
    }
    try {
        color = p.Color;
    }
    catch (exception) {
        color = def;
    }
    return color;
}
function getPenWidth(pen) {
    var width;
    if (pen == null) {
        return 0;
    }
    try {
        width = pen.Width;
    }
    catch (exception) {
        width = 1;
    }
    return width;
}
function makeRoundedRectangularPath() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    if (args.length === 5) {
        makeRoundedRectangularPath(args[0], new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(args[3].X + args[1], args[3].Y + args[2], args[3].Width, args[3].Height), args[4], new _Spot__WEBPACK_IMPORTED_MODULE_2__.Spot(-1, -1, 30));
    }
    else if (args.length === 4) {
        var path = args[0];
        var rect = args[1];
        var corner = args[2];
        var spots = args[3];
        if (corner.Width > rect.Width / 2) {
            corner.Width = rect.Width / 2;
        }
        if (corner.Height > rect.Height / 2) {
            corner.Height = rect.Height / 2;
        }
        var width = corner.Width * 2;
        var height = corner.Height * 2;
        if (width < 0.01 || height < 0.01 || spots === _Spot__WEBPACK_IMPORTED_MODULE_2__.NoSpot) {
            path.addRectangle(rect);
        }
        else {
            var x = rect.X;
            var y = rect.Y;
            var single = x + width;
            var single1 = y + height;
            var width1 = x + rect.Width - width;
            var height1 = y + rect.Height - height;
            var width2 = x + rect.Width;
            var height2 = y + rect.Height;
            var flag = (spots.ID & 4) !== 0;
            var flag1 = (spots.ID & 8) !== 0;
            var flag2 = (spots.ID & 16) !== 0;
            var flag3 = (spots.ID & 2) !== 0;
            if (flag) {
                path.addArc(width1, y, width, height, 270, 90);
            }
            if (!flag || !flag1 || single1 < height1) {
                path.addLine(width2, (flag ? single1 : y), width2, (flag1 ? height1 : height2));
            }
            if (flag1) {
                path.addArc(width1, height1, width, height, 0, 90);
            }
            if (!flag1 || !flag2 || single < width1) {
                path.addLine((flag1 ? width1 : width2), height2, (flag2 ? single : x), height2);
            }
            if (flag2) {
                path.addArc(x, height1, width, height, 90, 90);
            }
            if (!flag2 || !flag3 || single1 < height1) {
                path.addLine(x, (flag2 ? height1 : height2), x, (flag3 ? single1 : y));
            }
            if (flag3) {
                path.addArc(x, y, width, height, 180, 90);
            }
        }
        path.closeAllFigures();
    }
}
var AllEvents = {};


/***/ }),

/***/ "./src/ITuCollection.ts":
/*!******************************!*\
  !*** ./src/ITuCollection.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ "./src/Matrix.ts":
/*!***********************!*\
  !*** ./src/Matrix.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SvgMatrix": () => (/* binding */ SvgMatrix)
/* harmony export */ });
var SvgMatrix = /** @class */ (function () {
    function SvgMatrix(_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.a, a = _c === void 0 ? 1 : _c, _d = _b.b, b = _d === void 0 ? 0 : _d, _e = _b.c, c = _e === void 0 ? 0 : _e, _f = _b.d, d = _f === void 0 ? 1 : _f, _g = _b.e, e = _g === void 0 ? 0 : _g, _h = _b.f, f = _h === void 0 ? 0 : _h;
        this.bag = {};
        this.bag['a'] = a;
        this.bag['b'] = b;
        this.bag['c'] = c;
        this.bag['d'] = d;
        this.bag['e'] = e;
        this.bag['f'] = f;
    }
    SvgMatrix.prototype.plus = function (other) {
        var a = other.a, b = other.b, c = other.c, d = other.d, e = other.e, f = other.f;
        var out = [[], [], []], m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]], matrix = [[a, c, e], [b, d, f], [0, 0, 1]], x, y, z, res;
        for (x = 0; x < 3; x++) {
            for (y = 0; y < 3; y++) {
                res = 0;
                for (z = 0; z < 3; z++) {
                    res += m[x][z] * matrix[z][y];
                }
                out[x][y] = res;
            }
        }
        return new SvgMatrix({ 'a': out[0][0], 'b': out[1][0], 'c': out[0][1], 'd': out[1][1], 'e': out[0][2], 'f': out[1][2] });
    };
    SvgMatrix.prototype.inverse = function () {
        var x = this.a * this.d - this.b * this.c;
        return new SvgMatrix({
            a: this.d / x,
            b: -this.b / x,
            c: -this.c / x,
            d: this.a / x,
            e: (this.c * this.f - this.d * this.e) / x,
            f: (this.b * this.e - this.a * this.f) / x
        });
    };
    SvgMatrix.prototype.reset = function () {
        var a = 1, b = 0, c = 0, d = 1, e = 0, f = 0;
        this.bag['a'] = a;
        this.bag['b'] = b;
        this.bag['c'] = c;
        this.bag['d'] = d;
        this.bag['e'] = e;
        this.bag['f'] = f;
    };
    SvgMatrix.prototype.translate = function (x, y) {
        return this.plus(new SvgMatrix({ e: x, f: y }));
    };
    SvgMatrix.prototype.rotate = function (deg, x, y) {
        if (x === void 0) { x = 0; }
        if (y === void 0) { y = 0; }
        var rad = deg % 360 * Math.PI / 180, sin = +Math.sin(rad).toFixed(9), cos = +Math.cos(rad).toFixed(9);
        return this.plus(new SvgMatrix({ a: cos, b: sin, c: -sin, d: cos, e: x, f: y }))
            .plus(new SvgMatrix({ e: -x, f: -y }));
    };
    SvgMatrix.prototype.scale = function (x, y, cx, cy) {
        if (cx === void 0) { cx = 0; }
        if (cy === void 0) { cy = 0; }
        if (!y) {
            y = x;
        }
        return this.plus(new SvgMatrix({ e: cx, f: cy }))
            .plus(new SvgMatrix({ a: x, d: y }))
            .plus(new SvgMatrix({ e: -cx, f: -cy }));
    };
    Object.defineProperty(SvgMatrix.prototype, "transformString", {
        get: function () {
            return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.e + ", " + this.f + ")";
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SvgMatrix.prototype, "a", {
        get: function () {
            return this.bag['a'];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SvgMatrix.prototype, "b", {
        get: function () {
            return this.bag['b'];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SvgMatrix.prototype, "c", {
        get: function () {
            return this.bag['c'];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SvgMatrix.prototype, "d", {
        get: function () {
            return this.bag['d'];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SvgMatrix.prototype, "e", {
        get: function () {
            return this.bag['e'];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SvgMatrix.prototype, "f", {
        get: function () {
            return this.bag['f'];
        },
        enumerable: false,
        configurable: true
    });
    return SvgMatrix;
}());



/***/ }),

/***/ "./src/Spot.ts":
/*!*********************!*\
  !*** ./src/Spot.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Spot": () => (/* binding */ Spot),
/* harmony export */   "NoSpot": () => (/* binding */ NoSpot),
/* harmony export */   "Middle": () => (/* binding */ Middle),
/* harmony export */   "MiddleCenter": () => (/* binding */ MiddleCenter),
/* harmony export */   "TopLeft": () => (/* binding */ TopLeft),
/* harmony export */   "TopRight": () => (/* binding */ TopRight),
/* harmony export */   "BottomRight": () => (/* binding */ BottomRight),
/* harmony export */   "BottomLeft": () => (/* binding */ BottomLeft),
/* harmony export */   "MiddleTop": () => (/* binding */ MiddleTop),
/* harmony export */   "TopCenter": () => (/* binding */ TopCenter),
/* harmony export */   "MiddleRight": () => (/* binding */ MiddleRight),
/* harmony export */   "MiddleBottom": () => (/* binding */ MiddleBottom),
/* harmony export */   "BottomCenter": () => (/* binding */ BottomCenter),
/* harmony export */   "MiddleLeft": () => (/* binding */ MiddleLeft)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);

var Spot = /** @class */ (function () {
    function Spot(xFactor, yFactor, myID) {
        this.xFactor = xFactor;
        this.yFactor = yFactor;
        this.myID = myID;
    }
    Object.defineProperty(Spot.prototype, "ID", {
        get: function () {
            return this.myID;
        },
        set: function (value) {
            this.myID = value;
        },
        enumerable: false,
        configurable: true
    });
    Spot.prototype.getSpotLocation = function (rect) {
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(rect.X + (this.xFactor * rect.Width), rect.Y + (this.yFactor * rect.Height));
    };
    Spot.prototype.equals = function (spot) {
        return this.xFactor === spot.xFactor && this.yFactor === spot.yFactor;
    };
    Spot.prototype.notEquals = function (spot) {
        return this.xFactor !== spot.xFactor && this.yFactor !== spot.yFactor;
    };
    Spot.FromID = function (id) {
        switch (id) {
            case 0: {
                return NoSpot;
            }
            case 1: {
                return Middle;
            }
            case 2: {
                return TopLeft;
            }
            case 4: {
                return TopRight;
            }
            case 8: {
                return BottomRight;
            }
            case 16: {
                return BottomLeft;
            }
            case 32: {
                return MiddleTop;
            }
            case 64:
                {
                    return MiddleRight;
                }
            case 128: {
                return MiddleBottom;
            }
            case 256: {
                return MiddleLeft;
            }
            default: {
                return new Spot(Number.NaN, Number.NaN, id);
            }
        }
    };
    Spot.None = new Spot(-1, -1);
    return Spot;
}());

var NoSpot = new Spot(Number.NaN, Number.NaN, 0);
/**
* Nesnenin tam ortasını temsil eder.
* <pre>
* ------------------
* -                -
* -       O        -
* -                -
* ------------------
* </pre>
*/
var Middle = new Spot(0.5, 0.5, 1);
var MiddleCenter = new Spot(0.5, 0.5, 1);
/**
* Nesnenin sol köşesini temsil eder.
* <pre>
* 0=================
* |                |
* |                |
* |                |
* ==================
* </pre>
*/
var TopLeft = new Spot(0, 0, 2);
/**
* Nesnenin sağ üst köşesini temsil eder.
* <pre>
* =================0
* |                |
* |                |
* |                |
* ==================
* </pre>
*/
var TopRight = new Spot(1, 0, 4);
/**
* This represents a corner po in the object's bounds.
*/
var BottomRight = new Spot(1, 1, 8);
/**
* This represents a corner po in the object's bounds.
*/
var BottomLeft = new Spot(0, 1, 16);
/**
 * Nesnenin üst ortasını temsil eder.
 * <pre>
 * --------O---------
 * -                -
 * -                -
 * -                -
 * ------------------
 * </pre>
 */
var MiddleTop = new Spot(0.5, 0, 32);
/**
* Nesnenin üst ortasını temsil eder.
* <pre>
* --------O---------
* -                -
* -                -
* -                -
* ------------------
* </pre>
* [[MiddleTop]]
* [[GetSpotLocation]]
*/
var TopCenter = new Spot(0.5, 0, 32);
/**
* Nesnenin sağ ortasını temsil eder.
* <pre>
* ------------------
* -                -
* -                O
* -                -
* ------------------
* </pre>
*/
var MiddleRight = new Spot(1, 0.5, 64);
/**
* Nesnenin alt ortasını temsil eder.
* <pre>
* ------------------
* -                -
* -                -
* -                -
* --------O---------
* </pre>
*/
var MiddleBottom = new Spot(0.5, 1, 128);
/**
 * This represents a po in the object's bounds.
 */
var BottomCenter = new Spot(0.5, 1, 128);
/**
* Nesnenin sol ortasını temsil eder.
* <pre>
* ------------------
* -                -
* O                -
* -                -
* ------------------
* </pre>
*/
var MiddleLeft = new Spot(0, 0.5, 256);


/***/ }),

/***/ "./src/SvgMesurements.ts":
/*!*******************************!*\
  !*** ./src/SvgMesurements.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetPathBoundingBox": () => (/* binding */ GetPathBoundingBox),
/* harmony export */   "GetTextWidth": () => (/* binding */ GetTextWidth),
/* harmony export */   "GetFontHeight": () => (/* binding */ GetFontHeight),
/* harmony export */   "MeasureString": () => (/* binding */ MeasureString)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);


var svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
svg.setAttribute("width", "0");
svg.setAttribute("height", "0");
svg.setAttribute("visibility", "hidden");
document.body.appendChild(svg);
var path = document.createElementNS("http://www.w3.org/2000/svg", "path");
svg.appendChild(path);
var text = document.createElementNS("http://www.w3.org/2000/svg", "text");
svg.appendChild(text);
function GetPathBoundingBox(data) {
    path.setAttribute("d", data);
    var svgRect = path.getBBox();
    return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(svgRect.x, svgRect.y, svgRect.width, svgRect.height);
}
function GetTextWidth(content, font) {
    text.setAttribute("font-family", font.Name);
    text.setAttribute("font-size", font.Size + 'pt');
    text.textContent = content;
    var svgRect = text.getBBox();
    return Math.round(svgRect.width);
}
function GetFontHeight(font) {
    text.setAttribute("font-family", font.Name);
    text.setAttribute("font-size", font.Size + 'pt');
    text.textContent = 'H';
    var svgRect = text.getBBox();
    return Math.round(svgRect.height);
}
function MeasureString(str, font, strFormat, size) {
    text.setAttribute("font-family", font.Name);
    text.setAttribute("font-size", font.Size + 'pt');
    text.setAttribute("width", size.Width + 'px');
    text.setAttribute("height", size.Height + 'px');
    if (strFormat.Alignment === _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Near) {
        text.setAttribute("text-anchor", 'start');
    }
    if (strFormat.Alignment === _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Center) {
        text.setAttribute("text-anchor", 'middle');
    }
    if (strFormat.Alignment === _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Far) {
        text.setAttribute("text-anchor", 'end');
    }
    text.textContent = str;
    var svgRect = text.getBBox();
    return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(Math.round(svgRect.width), Math.round(svgRect.height));
}


/***/ }),

/***/ "./src/TuChangedEventArgs.ts":
/*!***********************************!*\
  !*** ./src/TuChangedEventArgs.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuChangedEventArgs": () => (/* binding */ TuChangedEventArgs)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "./src/types.ts");



var TuChangedEventArgs = /** @class */ (function () {
    //#endregion
    function TuChangedEventArgs(e) {
        if (e) {
            this.myIsBeforeChanging = e.IsBeforeChanging;
            this.myDocument = e.Document;
            this.myHint = e.Hint;
            this.mySubHint = e.SubHint;
            this.myObject = e.Object;
            this.myOldInt = e.OldInt;
            this.myOldValue = e.OldValue;
            this.myOldRect = e.OldRect;
            this.myNewInt = e.NewInt;
            this.myNewValue = e.NewValue;
            this.myNewRect = e.NewRect;
            if (this.myDocument) {
                this.myDocument.copyOldValueForUndo(this);
                this.myDocument.copyNewValueForRedo(this);
            }
        }
    }
    Object.defineProperty(TuChangedEventArgs.prototype, "Document", {
        get: function () {
            return this.GetDocument();
        },
        set: function (value) {
            this.SetDocument(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.GetDocument = function () {
        return this.myDocument;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.SetDocument = function (value) {
        this.myDocument = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "TuObject", {
        get: function () {
            return this.GetTuObject();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.GetTuObject = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(this.myObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuObject);
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "Hint", {
        get: function () {
            return this.GetEvent();
        },
        set: function (value) {
            this.SetEvent(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.GetEvent = function () {
        return this.myHint;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.SetEvent = function (value) {
        this.myHint = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "IsBeforeChanging", {
        get: function () {
            return this.GetIsBeforeChanging();
        },
        set: function (value) {
            this.SetIsBeforeChanging(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.GetIsBeforeChanging = function () {
        return this.myIsBeforeChanging;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.SetIsBeforeChanging = function (value) {
        this.myIsBeforeChanging = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "NewInt", {
        get: function () {
            return this.GetNewInt();
        },
        set: function (value) {
            this.SetNewInt(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.GetNewInt = function () {
        return this.myNewInt;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.SetNewInt = function (value) {
        this.myNewInt = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "NewRect", {
        get: function () {
            return this.getNewRect();
        },
        set: function (value) {
            this.setNewRect(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getNewRect = function () {
        return this.myNewRect;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.setNewRect = function (value) {
        this.myNewRect = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "NewValue", {
        get: function () {
            return this.getNewValue();
        },
        set: function (value) {
            this.setNewValue(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getNewValue = function () {
        return this.myNewValue;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.setNewValue = function (value) {
        this.myNewValue = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "Object", {
        get: function () {
            return this.getObject();
        },
        set: function (value) {
            this.setObject(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getObject = function () {
        return this.myObject;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.setObject = function (value) {
        this.myObject = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "OldInt", {
        get: function () {
            return this.getOldInt();
        },
        set: function (value) {
            this.setOldInt(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getOldInt = function () {
        return this.myOldInt;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.setOldInt = function (value) {
        this.myOldInt = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "OldRect", {
        get: function () {
            return this.getOldRect();
        },
        set: function (value) {
            this.setOldRect(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getOldRect = function () {
        return this.myOldRect;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.setOldRect = function (value) {
        this.myOldRect = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "OldValue", {
        get: function () {
            return this.getOldValue();
        },
        set: function (value) {
            this.setOldValue(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getOldValue = function () {
        return this.myOldValue;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.setOldValue = function (value) {
        this.myOldValue = value;
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "PresentationName", {
        get: function () {
            return this.getPresentationName();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getPresentationName = function () {
        return this.myHint.toString();
    };
    Object.defineProperty(TuChangedEventArgs.prototype, "SubHint", {
        get: function () {
            return this.getSubEvent();
        },
        set: function (value) {
            this.setSubEvent(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuChangedEventArgs.prototype.getSubEvent = function () {
        return this.mySubHint;
    };
    /**
     * @hidden
     * @param value
     */
    TuChangedEventArgs.prototype.setSubEvent = function (value) {
        this.mySubHint = value;
    };
    TuChangedEventArgs.prototype.CanRedo = function () {
        return this.Document ? true : false;
    };
    TuChangedEventArgs.prototype.CanUndo = function () {
        return this.Document ? true : false;
    };
    TuChangedEventArgs.prototype.Clear = function () {
        this.myDocument = undefined;
        this.myObject = undefined;
        this.myOldValue = undefined;
        this.myNewValue = undefined;
    };
    TuChangedEventArgs.prototype.FindBeforeChangingEdit = function () {
        return undefined;
        /* if (this.IsBeforeChanging)
        {
            return null;
        }
        GoDocument document = this.Document;
        if (document == null)
        {
            return null;
        }
        GoUndoManager undoManager = document.UndoManager;
        if (undoManager == null)
        {
            return null;
        }
        GoUndoManagerCompoundEdit currentEdit = undoManager.CurrentEdit;
        if (currentEdit == null)
        {
            return null;
        }
        IList<IGoUndoableEdit> allEdits = currentEdit.AllEdits;
        for (int i = checked(allEdits.Count - 1); i >= 0; i = checked(i - 1))
        {
            GoChangedEventArgs ıtem = allEdits[i] as GoChangedEventArgs;
            if (ıtem != null && ıtem.IsBeforeChanging && ıtem.Document == this.Document && ıtem.Hint == this.Hint && ıtem.SubHint == this.SubHint && ıtem.Object == this.Object)
            {
                return ıtem;
            }
        }
        return null; */
    };
    TuChangedEventArgs.prototype.getFloat = function (undo) {
        if (undo) {
            return this.OldInt;
        }
        return this.NewInt;
    };
    TuChangedEventArgs.prototype.getInt = function (undo) {
        if (undo) {
            return ~~this.OldInt;
        }
        return ~~this.NewInt;
    };
    TuChangedEventArgs.prototype.getPoint = function (undo) {
        if (undo) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: this.OldRect.X, y: this.OldRect.Y });
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: this.NewRect.X, y: this.NewRect.Y });
    };
    TuChangedEventArgs.prototype.getRect = function (undo) {
        if (undo) {
            return this.OldRect;
        }
        return this.NewRect;
    };
    TuChangedEventArgs.prototype.getSize = function (undo) {
        if (undo) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize({ width: this.OldRect.Width, height: this.OldRect.Height });
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize({ width: this.NewRect.Width, height: this.NewRect.Height });
    };
    TuChangedEventArgs.prototype.getValue = function (undo) {
        if (undo) {
            return this.OldValue;
        }
        return this.NewValue;
    };
    TuChangedEventArgs.prototype.Redo = function () {
        if (this.CanRedo()) {
            var document_1 = this.Document;
            document_1.Initializing = true;
            document_1.ChangeValue(this, false);
            document_1.Initializing = false;
        }
    };
    //TODO: toString()
    TuChangedEventArgs.prototype.Undo = function () {
        if (this.CanUndo()) {
            var document_2 = this.Document;
            document_2.Initializing = true;
            document_2.ChangeValue(this, true);
            document_2.Initializing = false;
        }
    };
    return TuChangedEventArgs;
}());



/***/ }),

/***/ "./src/TuChangedEventHandler.ts":
/*!**************************************!*\
  !*** ./src/TuChangedEventHandler.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuChangedEventHandler": () => (/* binding */ TuChangedEventHandler)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuChangedEventHandler = /** @class */ (function (_super) {
    __extends(TuChangedEventHandler, _super);
    function TuChangedEventHandler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TuChangedEventHandler;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.Delegate));



/***/ }),

/***/ "./src/TuCollection/TuCollection.ts":
/*!******************************************!*\
  !*** ./src/TuCollection/TuCollection.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuCollection": () => (/* binding */ TuCollection)
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _TuCollectionEnumerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuCollectionEnumerator */ "./src/TuCollection/TuCollectionEnumerator.ts");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var TuCollection = /** @class */ (function () {
    function TuCollection(config) {
        this.myObjects = new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.List();
        this.myInternalChecksForDuplicates = true;
        this.myChanges = 0;
        if (config != null) {
            this.myInternalChecksForDuplicates = config.internalChecksForDuplicates;
            if (Array.isArray(config.entries)) {
                this.importEntries(config.entries);
            }
        }
    }
    TuCollection_1 = TuCollection;
    TuCollection.prototype.Get = function (index) {
        return this.myObjects.Get(index);
    };
    TuCollection.prototype.Set = function (index, value) {
        this.myObjects.Set(index, value);
    };
    TuCollection.prototype.IndexOf = function (item) {
        return this.myObjects.IndexOf(item);
    };
    TuCollection.prototype.Insert = function (index, item) {
        this.myObjects.Insert(index, item);
    };
    TuCollection.prototype.RemoveAt = function (index) {
        this.myObjects.RemoveAt(index);
    };
    TuCollection.prototype.importEntries = function (entries) {
        var _this = this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(entries, function (item) {
            _this.Add(item);
        });
        return 0;
    };
    Object.defineProperty(TuCollection.prototype, "Backwards", {
        /// <summary>
        /// Gets an enumerable whose enumerator will iterate over the GoObjects in reverse order.
        /// </summary>
        get: function () {
            return this.GetBackwards();
        },
        enumerable: false,
        configurable: true
    });
    TuCollection.prototype.GetBackwards = function () {
        var goCollectionEnumerators = new _TuCollectionEnumerator__WEBPACK_IMPORTED_MODULE_2__.TuCollectionEnumerator(this.myObjects, false);
        goCollectionEnumerators.myOriginalCollection = this,
            goCollectionEnumerators.myOriginalChanges = this.myChanges;
        return goCollectionEnumerators;
    };
    Object.defineProperty(TuCollection.prototype, "Count", {
        /// <summary>
        /// Gets the number of objects in this collection.
        /// </summary>
        get: function () {
            return this.myObjects.Count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuCollection.prototype, "First", {
        /// <summary>
        /// Gets the first object in this collection.
        /// </summary>
        /// <value>
        /// If this collection is empty, this value is null.
        /// </value>
        get: function () {
            if (this.IsEmpty) {
                return null;
            }
            return this.myObjects.Get(0);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuCollection.prototype, "InternalChecksForDuplicates", {
        /* internal */ get: function () {
            return this.myInternalChecksForDuplicates;
        },
        /* internal */ set: function (value) {
            this.myInternalChecksForDuplicates = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuCollection.prototype, "IsEmpty", {
        /// <summary>
        /// This predicate is true when there are no objects in this collection.
        /// </summary>
        get: function () {
            return this.myObjects.Count === 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuCollection.prototype, "IsReadOnly", {
        /// <summary>
        /// True when this collection may not be modified.
        /// </summary>
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuCollection.prototype, "Last", {
        /// <summary>
        /// Gets the last object in this collection.
        /// </summary>
        /// <value>
        /// If this collection is empty, this value is null.
        /// </value>
        get: function () {
            if (this.IsEmpty) {
                return null;
            }
            return this.myObjects.Get(this.Count - 1);
        },
        enumerable: false,
        configurable: true
    });
    /// <summary>
    /// Add an object to this collection.
    /// </summary>
    /// <param name="obj"></param>
    /// <remarks>
    /// Duplicates are not allowed.
    /// </remarks>
    TuCollection.prototype.Add = function (obj) {
        if (obj == null) {
            return;
        }
        if (!this.InternalChecksForDuplicates || !this.Contains(obj)) {
            this.myObjects.Add(obj);
            this.myChanges = (this.myChanges + 1);
        }
        return this;
    };
    /// <summary>
    /// Iterate over the <see cref="T:Northwoods.Go.GoObject" />s in the given collection <paramref name="coll" />
    /// and <see cref="M:Northwoods.Go.GoCollection.Add(Northwoods.Go.GoObject)" /> each one to this collection.
    /// </summary>
    /// <param name="coll"></param>
    TuCollection.prototype.AddRange = function (coll) {
        var _this = this;
        if (coll == null) {
            return;
        }
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(coll, function (goObject) {
            _this.Add(goObject);
        });
    };
    /// <summary>
    /// Remove all of the objects in this collection.
    /// </summary>
    TuCollection.prototype.Clear = function () {
        for (var i = this.Count; i > 0; i = Math.min(i, this.Count)) {
            var goObjects = this.myObjects;
            var int32 = i - 1;
            i = int32;
            this.Remove(goObjects[int32]);
        }
        return 0;
    };
    /// <summary>
    /// Determine if the given object is present in this collection.
    /// </summary>
    /// <param name="obj"></param>
    /// <returns></returns>
    TuCollection.prototype.Contains = function (obj) {
        if (obj == null) {
            return false;
        }
        return this.myObjects.Contains(obj);
    };
    /// <summary>
    /// Returns a newly allocated array of all of the GoObjects in the collection.
    /// </summary>
    TuCollection.prototype.CopyArray = function () {
        return this.myObjects.ToArray();
    };
    /// <summary>
    /// Copy references to all of the objects in this collection into an array.
    /// </summary>
    /// <param name="array"></param>
    /// <param name="index"></param>
    TuCollection.prototype.CopyTo = function (array, index) {
        this.myObjects.CopyTo(array, index);
    };
    /* internal */ TuCollection.FastRemove = function (a, o) {
        var int32 = -1;
        var count = a.Count;
        if (count > 1000) {
            int32 = a.IndexOf(o, count - 50);
        }
        if (int32 < 0) {
            int32 = a.IndexOf(o);
        }
        if (int32 >= 0) {
            a.RemoveAt(int32);
        }
        return int32;
    };
    /// <summary>
    /// Gets an enumerator for iterating over the GoObjects in this collection.
    /// </summary>
    TuCollection.prototype.GetEnumerator = function () {
        var goCollectionEnumerators = new _TuCollectionEnumerator__WEBPACK_IMPORTED_MODULE_2__.TuCollectionEnumerator(this.myObjects, true);
        goCollectionEnumerators.myOriginalCollection = this;
        goCollectionEnumerators.myOriginalChanges = this.myChanges;
        return goCollectionEnumerators;
    };
    TuCollection.prototype.Remove = function (obj) {
        if (obj == null) {
            return false;
        }
        if (TuCollection_1.FastRemove(this.myObjects, obj) < 0) {
            return false;
        }
        this.myChanges = this.myChanges + 1;
        return true;
    };
    /* internal */ TuCollection.prototype.Sort = function (comp) {
        if (this.Count > 1) {
            this.myObjects.Sort(comp);
            this.myChanges = (this.myChanges + 1);
        }
    };
    var TuCollection_1;
    TuCollection = TuCollection_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuCollection,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuCollection,
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.ITuCollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.ICollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Generics.IList
            ]
        })
    ], TuCollection);
    return TuCollection;
}());

_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_3__.TuObject.prototype.AddObserver = function (obj) {
    if (obj == null) {
        return;
    }
    if (this.myObservers == null) {
        this.myObservers = new TuCollection();
    }
    if (!this.myObservers.Contains(obj)) {
        this.myObservers.add(obj);
        this.Changed(1014, 0, null, _Globals__WEBPACK_IMPORTED_MODULE_4__.NullRect, 0, obj, _Globals__WEBPACK_IMPORTED_MODULE_4__.NullRect);
    }
};


/***/ }),

/***/ "./src/TuCollection/TuCollectionEnumerator.ts":
/*!****************************************************!*\
  !*** ./src/TuCollection/TuCollectionEnumerator.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuCollectionEnumerator": () => (/* binding */ TuCollectionEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuCollectionEnumerator = /** @class */ (function (_super) {
    __extends(TuCollectionEnumerator, _super);
    /// <summary>
    /// Construct an IEnumerator for iterating either forwards or backwards over a
    /// <see cref="T:System.Collections.Generic.List`1" />s.
    /// </summary>
    /// <param name="a"></param>
    /// <param name="forward"></param>
    function TuCollectionEnumerator(a, forward) {
        var _this = _super.call(this) || this;
        _this.myForward = false;
        _this.myIndex = 0;
        _this.myOriginalChanges = 0;
        _this.isEndless = false;
        _this.myArray = a;
        _this.myForward = forward;
        _this.myIndex = -1;
        _this.myOriginalChanges = 0;
        _this.myOriginalCollection = null;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuCollectionEnumerator.prototype, "Current", {
        /// <summary>
        ///  Gets the current object in the collection for this enumerator.
        /// </summary>
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("TuCollectionEnumerator is not at a valid position for the List");
            }
            return this.myArray[this.myIndex];
        },
        enumerable: false,
        configurable: true
    });
    TuCollectionEnumerator.prototype.GetEnumerator = function () {
        var goCollectionEnumerators = this;
        goCollectionEnumerators.Reset();
        return goCollectionEnumerators;
    };
    /// <summary>
    /// Advance the enumerator to the next GoObject.
    /// </summary>
    /// <returns>True if there is a next GoObject; false if it has finished iterating over the collection.</returns>
    TuCollectionEnumerator.prototype.MoveNext = function () {
        if (this.myOriginalCollection != null && this.myOriginalCollection.myChanges !== this.myOriginalChanges) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat(this.myOriginalCollection /* .getType().FullName */, " was modified during enumeration."));
        }
        if (!this.myForward) {
            if ((this.myIndex - 1) < 0) {
                return false;
            }
            this.myIndex = (this.myIndex - 1);
            return true;
        }
        if ((this.myIndex + 1) >= this.myArray.Count) {
            return false;
        }
        this.myIndex = (this.myIndex + 1);
        return true;
    };
    /// <summary>
    /// Reset the enumerator to its original position.
    /// </summary>
    TuCollectionEnumerator.prototype.Reset = function () {
        if (this.myOriginalCollection != null && this.myOriginalCollection.myChanges != this.myOriginalChanges) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat(this.myOriginalCollection /* .getType() .FullName*/, " was modified during enumeration."));
        }
        if (this.myForward) {
            this.myIndex = -1;
            return;
        }
        this.myIndex = this.myArray.Count;
    };
    TuCollectionEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('tryMoveNext not implemented in TuCollectionEnumerator');
    };
    TuCollectionEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('end not implemented in TuCollectionEnumerator');
    };
    TuCollectionEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('nextValue not implemented in TuCollectionEnumerator');
    };
    TuCollectionEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('next not implemented in TuCollectionEnumerator');
    };
    TuCollectionEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('return not implemented in TuCollectionEnumerator');
    };
    TuCollectionEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('throw not implemented in TuCollectionEnumerator');
    };
    TuCollectionEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuCollectionEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuCollectionEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Disposable.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuCollectionEnumerator);
    return TuCollectionEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));

(function staticConstructor() {
    TuCollectionEnumerator.Empty = new TuCollectionEnumerator(new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List(), true);
})();


/***/ }),

/***/ "./src/TuControl/TuControl.ts":
/*!************************************!*\
  !*** ./src/TuControl/TuControl.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuControl": () => (/* binding */ TuControl)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuControlEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuControlEvents */ "./src/TuControl/TuControlEvents.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var Activator = {};
var TuControl = /** @class */ (function (_super) {
    __extends(TuControl, _super);
    function TuControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TuControl.prototype, "ControlType", {
        //#region [Property] AutoRescales
        get: function () {
            return this.getControlType();
        },
        set: function (value) {
            this.setControlType(value);
        },
        enumerable: false,
        configurable: true
    });
    TuControl.prototype.getControlType = function () {
        return this.myControlType;
    };
    TuControl.prototype.setControlType = function (value) {
        var type = this.myControlType;
        if (type !== value) {
            this.myControlType = value;
            this.Changed(_TuControlEvents__WEBPACK_IMPORTED_MODULE_2__.TuControlEvents.ChangedControlType, 0, type, _Globals__WEBPACK_IMPORTED_MODULE_3__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_3__.NullRect);
        }
    };
    Object.defineProperty(TuControl.prototype, "EditedObject", {
        //#endregion
        //#region [Property] EditedObject
        get: function () {
            return this.getEditedObject();
        },
        set: function (value) {
            this.setEditedObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuControl.prototype.getEditedObject = function () {
        return this.myEditedObject;
    };
    TuControl.prototype.setEditedObject = function (value) {
        this.myEditedObject = value;
    };
    Object.defineProperty(TuControl.prototype, "Map", {
        //#endregion
        //#region [Property] EditedObject
        get: function () {
            if (this.myMap == null) {
                this.myMap = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
            }
            return this.myMap;
        },
        enumerable: false,
        configurable: true
    });
    //#endregion
    TuControl.prototype.Changed = function (subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
        var _this = this;
        if (this.SuspendsUpdates) {
            return;
        }
        _super.prototype.Changed.call(this, subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
        if (subhint === _TuControlEvents__WEBPACK_IMPORTED_MODULE_2__.TuControlEvents.ChangedVisible) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Map, function (map) {
                var key = map.key;
                var value = map.value;
                if (key == null || _this.CanView() || value == null) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                value.Visible = false;
            });
        }
    };
    TuControl.prototype.ChangeValue = function (e, undo) {
        if (e.SubHint !== _TuControlEvents__WEBPACK_IMPORTED_MODULE_2__.TuControlEvents.ChangedControlType) {
            _super.prototype.ChangeValue.call(this, e, undo);
            return;
        }
        this.ControlType = e.getValue(undo);
    };
    TuControl.prototype.copyObject = function (env) {
        var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(_super.prototype.CopyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuObject);
        item.myEditedObject = env.Get(this.myEditedObject);
        item.myMap = undefined;
        return item;
    };
    TuControl.prototype.createControl = function (view) {
        var controlType = this.ControlType;
        if (controlType == null) {
            return undefined;
        }
        var control = Activator.CreateInstance(controlType);
        control.Bounds = view.convertDocToView(this.Bounds);
        var goControlObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(control, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuControlObject);
        if (goControlObject != null) {
            goControlObject.TuView = view;
            goControlObject.TuControl = this;
        }
        return control;
    };
    TuControl.prototype.disposeControl = function (comp, view) {
        if (comp != null && view != null) {
            if (view.EditControl !== this) {
                view.removeTuControl(this, comp);
                comp.dispose();
                return;
            }
            comp.Visible = false;
        }
    };
    TuControl.prototype.DoEndEdit = function (view) {
        var editedObject = this.EditedObject;
        if (editedObject != null) {
            editedObject.DoEndEdit(view);
        }
    };
    TuControl.prototype.findControl = function (view) {
        var control = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.New.Out();
        if (this.Map.TryGetValue(view, control)) {
            return control.value;
        }
        return undefined;
    };
    TuControl.prototype.getControl = function (view) {
        if (view == null) {
            return undefined;
        }
        if (this.IsInView && this.View !== view) {
            return undefined;
        }
        if (this.IsInDocument && this.Document !== view.Document) {
            return undefined;
        }
        var control = this.findControl(view);
        if (control == null) {
            control = this.createControl(view);
            if (control != null) {
                this.Map.Set(view, control);
                view.addTuControl(this, control);
            }
        }
        return control;
    };
    TuControl.prototype.OnLayerChanged = function (oldlayer, newlayer, mainObj) {
        var _this = this;
        _super.prototype.OnLayerChanged.call(this, oldlayer, newlayer, mainObj);
        if (oldlayer == null || newlayer != null || !oldlayer.IsInDocument) {
            if (oldlayer != null && newlayer == null && oldlayer.IsInView) {
                var view = oldlayer.View;
                var control = this.findControl(view);
                if (control != null) {
                    this.Map.Remove(view);
                    if (control != null) {
                        this.disposeControl(control, view);
                    }
                }
            }
            return;
        }
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Map, function (map) {
            var key = map.key;
            var value = map.value;
            if (key == null || value == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            _this.disposeControl(value, key);
        });
        this.Map.Clear();
    };
    TuControl.prototype.Paint = function (g, view) {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(view, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuOverview)) {
            var bounds = this.Bounds;
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawRectangle(g, view, _Globals__WEBPACK_IMPORTED_MODULE_3__.Pens_Black, _Globals__WEBPACK_IMPORTED_MODULE_3__.Brushes_LightGray, bounds.X, bounds.Y, bounds.Width, bounds.Height);
            return;
        }
        var control = this.getControl(view);
        if (control != null) {
            var rectangle = view.convertDocToView(this.Bounds);
            if (!_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(control, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ComboBoxControl)) {
                control.Bounds = rectangle;
            }
            if (!control.Visible) {
                control.Visible = true;
            }
        }
    };
    TuControl = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuControl,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuControl
            ]
        })
    ], TuControl);
    return TuControl;
}(_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_5__.TuObject));



/***/ }),

/***/ "./src/TuControl/TuControlEvents.ts":
/*!******************************************!*\
  !*** ./src/TuControl/TuControlEvents.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuControlEvents": () => (/* binding */ TuControlEvents)
/* harmony export */ });
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuObjectEvents */ "./src/TuObjectEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuControlEvents = /** @class */ (function (_super) {
    __extends(TuControlEvents, _super);
    function TuControlEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuControlEvents.ChangedControlType = 1901;
    TuControlEvents[1901] = 'ChangedControlType';
    return TuControlEvents;
}(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__.TuObjectEvents));



/***/ }),

/***/ "./src/TuCopyDelayedsCollection.ts":
/*!*****************************************!*\
  !*** ./src/TuCopyDelayedsCollection.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuCopyDelayedsCollection": () => (/* binding */ TuCopyDelayedsCollection)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ "./src/types.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuCopyDelayedsCollection = /** @class */ (function () {
    function TuCopyDelayedsCollection() {
        this.myObjects = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
    }
    Object.defineProperty(TuCopyDelayedsCollection.prototype, "Count", {
        get: function () {
            return this.getCount();
        },
        enumerable: false,
        configurable: true
    });
    TuCopyDelayedsCollection.prototype.getCount = function () {
        return this.myObjects.Count;
    };
    Object.defineProperty(TuCopyDelayedsCollection.prototype, "IsEmpty", {
        get: function () {
            return this.getIsEmpty();
        },
        enumerable: false,
        configurable: true
    });
    TuCopyDelayedsCollection.prototype.getIsEmpty = function () {
        return this.Count === 0;
    };
    Object.defineProperty(TuCopyDelayedsCollection.prototype, "IsReadOnly", {
        get: function () {
            return this.getIsReadOnly();
        },
        enumerable: false,
        configurable: true
    });
    TuCopyDelayedsCollection.prototype.getIsReadOnly = function () {
        return false;
    };
    TuCopyDelayedsCollection.prototype.Add = function (obj) {
        if (obj != null) {
            this.myObjects.Add(obj, true);
        }
        return this;
    };
    TuCopyDelayedsCollection.prototype.Clear = function () {
        this.myObjects.Clear();
    };
    TuCopyDelayedsCollection.prototype.Contains = function (obj) {
        if (obj == null) {
            return false;
        }
        return this.myObjects.ContainsKey(obj);
    };
    TuCopyDelayedsCollection.prototype.CopyArray = function () {
        var objArray = new Array(this.Count);
        this.CopyTo(objArray, 0);
        return objArray;
    };
    TuCopyDelayedsCollection.prototype.CopyTo = function (array, index) {
        var ınt32 = index;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.myObjects, function (myObject) {
            if (ınt32 < array.length) {
                var key = myObject.key;
                var ınt321 = ınt32;
                ınt32 = (ınt321 + 1);
                array[ınt321] = key;
            }
            else {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.BREAK;
            }
        });
        return array;
    };
    TuCopyDelayedsCollection.prototype.GetEnumerator = function () {
        return this.myObjects.Keys.GetEnumerator();
    };
    TuCopyDelayedsCollection.prototype.Remove = function (obj) {
        if (obj == null) {
            return false;
        }
        this.myObjects.Remove(obj);
        return true;
    };
    TuCopyDelayedsCollection.prototype.importEntries = function (entries) {
        return 0;
    };
    TuCopyDelayedsCollection.prototype.toArray = function () {
        return undefined;
    };
    TuCopyDelayedsCollection.prototype.removeAt = function (index) {
    };
    TuCopyDelayedsCollection = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuCopyDelayedsCollection,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuCopyDelayedsCollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.ICollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuCopyDelayedsCollection);
    return TuCopyDelayedsCollection;
}());



/***/ }),

/***/ "./src/TuCopyDictionary.ts":
/*!*********************************!*\
  !*** ./src/TuCopyDictionary.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuCopyDictionary": () => (/* binding */ TuCopyDictionary)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TuCopyDelayedsCollection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TuCopyDelayedsCollection */ "./src/TuCopyDelayedsCollection.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var TuCopyDictionary = /** @class */ (function (_super) {
    __extends(TuCopyDictionary, _super);
    function TuCopyDictionary(config) {
        var _this = _super.call(this) || this;
        Object.assign(_this, config);
        return _this;
    }
    Object.defineProperty(TuCopyDictionary.prototype, "Delayeds", {
        get: function () {
            return this.getDelayeds();
        },
        enumerable: false,
        configurable: true
    });
    TuCopyDictionary.prototype.getDelayeds = function () {
        if (this.myDelayeds == null) {
            this.myDelayeds = new _TuCopyDelayedsCollection__WEBPACK_IMPORTED_MODULE_1__.TuCopyDelayedsCollection();
        }
        return this.myDelayeds;
    };
    Object.defineProperty(TuCopyDictionary.prototype, "DestinationDocument", {
        get: function () {
            return this.getDestinationDocument();
        },
        set: function (value) {
            this.setDestinationDocument(value);
        },
        enumerable: false,
        configurable: true
    });
    TuCopyDictionary.prototype.getDestinationDocument = function () {
        return this.myDestinationDocument;
    };
    TuCopyDictionary.prototype.setDestinationDocument = function (value) {
        this.myDestinationDocument = value;
    };
    Object.defineProperty(TuCopyDictionary.prototype, "SourceCollection", {
        get: function () {
            return this.getSourceCollection();
        },
        set: function (value) {
            this.setSourceCollection(value);
        },
        enumerable: false,
        configurable: true
    });
    TuCopyDictionary.prototype.getSourceCollection = function () {
        return this.mySourceCollection;
    };
    TuCopyDictionary.prototype.setSourceCollection = function (value) {
        this.mySourceCollection = value;
    };
    TuCopyDictionary.prototype.copy = function (obj) {
        if (obj == null) {
            return undefined;
        }
        var node = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.Get(obj), _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuObject);
        var ıtem = node ? node : obj.CopyObject(this);
        return ıtem;
    };
    TuCopyDictionary.prototype.CopyComplete = function (obj) {
        if (obj == null) {
            return undefined;
        }
        var goObject = this.copy(obj);
        this.finishDelayedCopies();
        return goObject;
    };
    TuCopyDictionary.prototype.finishDelayedCopies = function () {
        var _this = this;
        if (this.myDelayeds == null) {
            return;
        }
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Delayeds, function (delayed) {
            var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(delayed, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuObject);
            if (goObject == null) {
                return;
            }
            var ıtem = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(_this.Get(goObject), _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuObject);
            if (ıtem == null) {
                return;
            }
            goObject.CopyObjectDelayed(_this, ıtem);
        });
        this.Delayeds.Clear();
    };
    TuCopyDictionary.prototype.Get = function (key) {
        if (this.ContainsKey(key)) {
            return _super.prototype.Get.call(this, key);
        }
        else {
            return null;
        }
    };
    return TuCopyDictionary;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary));



/***/ }),

/***/ "./src/TuDocument/SegInfo.ts":
/*!***********************************!*\
  !*** ./src/TuDocument/SegInfo.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SegInfo": () => (/* binding */ SegInfo)
/* harmony export */ });
var SegInfo = /** @class */ (function () {
    function SegInfo() {
    }
    SegInfo.prototype.SegInfo = function () {
    };
    return SegInfo;
}());



/***/ }),

/***/ "./src/TuDocument/SegInfoComparer.ts":
/*!*******************************************!*\
  !*** ./src/TuDocument/SegInfoComparer.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SegInfoComparer": () => (/* binding */ SegInfoComparer)
/* harmony export */ });
var SegInfoComparer = /** @class */ (function () {
    function SegInfoComparer() {
    }
    Object.defineProperty(SegInfoComparer, "Default", {
        get: function () {
            return SegInfoComparer.myDefaultComparer;
        },
        enumerable: false,
        configurable: true
    });
    SegInfoComparer.prototype.Compare = function (a, b) {
        if (a == null || b == null || a === b) {
            return 0;
        }
        if (a.Layer < b.Layer) {
            return -1;
        }
        if (a.Layer > b.Layer) {
            return 1;
        }
        if (a.ColumnMin < b.ColumnMin) {
            return -1;
        }
        if (a.ColumnMin > b.ColumnMin) {
            return 1;
        }
        if (a.ColumnMax < b.ColumnMax) {
            return -1;
        }
        if (a.ColumnMax > b.ColumnMax) {
            return 1;
        }
        return 0;
    };
    return SegInfoComparer;
}());

(function SegInfoComparerStaticConstructor() {
    SegInfoComparer.myDefaultComparer = new SegInfoComparer();
})();


/***/ }),

/***/ "./src/TuDocument/SegInfoComparer2.ts":
/*!********************************************!*\
  !*** ./src/TuDocument/SegInfoComparer2.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SegInfoComparer2": () => (/* binding */ SegInfoComparer2)
/* harmony export */ });
var SegInfoComparer2 = /** @class */ (function () {
    function SegInfoComparer2(f) {
        this.myFirst = f;
    }
    Object.defineProperty(SegInfoComparer2, "DefaultFirst", {
        get: function () {
            return SegInfoComparer2.myDefaultFirstComparer;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SegInfoComparer2, "DefaultLast", {
        get: function () {
            return SegInfoComparer2.myDefaultLastComparer;
        },
        enumerable: false,
        configurable: true
    });
    SegInfoComparer2.prototype.Compare = function (a, b) {
        if (a == null || b == null || a === b) {
            return 0;
        }
        // TODO:
        // Trace.Assert(a.Layer == b.Layer);
        if (!this.myFirst) {
            if (a.Last < b.Last) {
                return -1;
            }
            if (a.Last > b.Last) {
                return 1;
            }
        }
        else {
            if (a.First < b.First) {
                return -1;
            }
            if (a.First > b.First) {
                return 1;
            }
        }
        if (a.Turns < b.Turns) {
            return 1;
        }
        if (a.Turns > b.Turns) {
            return -1;
        }
        if (a.ColumnMin < b.ColumnMin) {
            return -1;
        }
        if (a.ColumnMin > b.ColumnMin) {
            return 1;
        }
        if (a.ColumnMax < b.ColumnMax) {
            return -1;
        }
        if (a.ColumnMax > b.ColumnMax) {
            return 1;
        }
        return 0;
    };
    return SegInfoComparer2;
}());

function segInfoComparer2StaticConstructor() {
    SegInfoComparer2.myDefaultFirstComparer = new SegInfoComparer2(true);
    SegInfoComparer2.myDefaultLastComparer = new SegInfoComparer2(false);
}
segInfoComparer2StaticConstructor();


/***/ }),

/***/ "./src/TuDocument/TuDocument.ts":
/*!**************************************!*\
  !*** ./src/TuDocument/TuDocument.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuDocument": () => (/* binding */ TuDocument)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TuLayer/TuLayer */ "./src/TuLayer/TuLayer.tsx");
/* harmony import */ var _TuLayer_TuLayerCollection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TuLayer/TuLayerCollection */ "./src/TuLayer/TuLayerCollection.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuChangedEventArgs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuChangedEventArgs */ "./src/TuChangedEventArgs.ts");
/* harmony import */ var _TuCopyDelayedsCollection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuCopyDelayedsCollection */ "./src/TuCopyDelayedsCollection.ts");
/* harmony import */ var _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TuRoutingTime */ "./src/TuDocument/TuRoutingTime.ts");
/* harmony import */ var _TuPositionArray__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TuPositionArray */ "./src/TuDocument/TuPositionArray.ts");
/* harmony import */ var _TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./TuDocumentEvents */ "./src/TuDocument/TuDocumentEvents.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
/* harmony import */ var _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../TuTool/TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _SegInfo__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./SegInfo */ "./src/TuDocument/SegInfo.ts");
/* harmony import */ var _TuStroke_TuStrokeStyle__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../TuStroke/TuStrokeStyle */ "./src/TuStroke/TuStrokeStyle.ts");
/* harmony import */ var _SegInfoComparer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./SegInfoComparer */ "./src/TuDocument/SegInfoComparer.ts");
/* harmony import */ var _SegInfoComparer2__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./SegInfoComparer2 */ "./src/TuDocument/SegInfoComparer2.ts");
/* harmony import */ var _TuCopyDictionary__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../TuCopyDictionary */ "./src/TuCopyDictionary.ts");
/* harmony import */ var _TuLayer_TuLayerEvents__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../TuLayer/TuLayerEvents */ "./src/TuLayer/TuLayerEvents.ts");
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../TuObjectEvents */ "./src/TuObjectEvents.ts");
/* harmony import */ var _TuGroup_TuGroupEvents__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../TuGroup/TuGroupEvents */ "./src/TuGroup/TuGroupEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






















var LastHint = 10000;
var RIGHT = 0;
var DOWN = 90;
var LEFT = 180;
var UP = 270;
var TuDocument = /** @class */ (function (_super) {
    __extends(TuDocument, _super);
    function TuDocument() {
        var _this = _super.call(this) || this;
        _this.myLayers = new _TuLayer_TuLayerCollection__WEBPACK_IMPORTED_MODULE_2__.TuLayerCollection();
        _this.myName = '';
        _this.myDocumentSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(0, 0);
        _this.myDocumentTopLeft = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(0, 0);
        _this.myWorldScale = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(1, 1);
        _this.myWorldEpsilon = 0.5;
        _this.myPaperColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Empty;
        _this.myAllowSelect = true;
        _this.myAllowMove = true;
        _this.myAllowCopy = true;
        _this.myAllowResize = true;
        _this.myAllowReshape = true;
        _this.myAllowDelete = true;
        _this.myAllowInsert = true;
        _this.myAllowLink = true;
        _this.myAllowEdit = true;
        _this.myChanged$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        _this.myUndoEditIndex = -2;
        _this.myDelayedRoutings = new _TuCopyDelayedsCollection__WEBPACK_IMPORTED_MODULE_6__.TuCopyDelayedsCollection();
        _this.myRoutingTime = _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__.TuRoutingTime.Delayed;
        _this.myLinkSpacing = 4;
        _this.myLastPartID = -1;
        _this.myLayers.init(_this);
        _this.myLinksLayer = _this.myLayers.Default;
        return _this;
    }
    TuDocument_1 = TuDocument;
    Object.defineProperty(TuDocument.prototype, "AllowCopy", {
        //#region [Property] AllowCopy
        get: function () {
            return this.getAllowCopy();
        },
        set: function (value) {
            this.setAllowCopy(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowCopy = function () {
        return this.myAllowCopy;
    };
    TuDocument.prototype.setAllowCopy = function (value) {
        var flag = this.myAllowCopy;
        if (flag !== value) {
            this.myAllowCopy = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowCopy, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowDelete", {
        //#endregion
        //#region [Property] AllowDelete
        get: function () {
            return this.getAllowDelete();
        },
        set: function (value) {
            this.setAllowDelete(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowDelete = function () {
        return this.myAllowDelete;
    };
    TuDocument.prototype.setAllowDelete = function (value) {
        var flag = this.myAllowDelete;
        if (flag != value) {
            this.myAllowDelete = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowDelete, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowEdit", {
        //#endregion
        //#region [Property] AllowEdit
        get: function () {
            return this.getAllowEdit();
        },
        set: function (value) {
            this.setAllowEdit(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowEdit = function () {
        return this.myAllowEdit;
    };
    TuDocument.prototype.setAllowEdit = function (value) {
        var flag = this.myAllowEdit;
        if (flag !== value) {
            this.myAllowEdit = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowEdit, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowInsert", {
        //#endregion
        //#region [Property] AllowInsert
        get: function () {
            return this.getAllowInsert();
        },
        set: function (value) {
            this.setAllowInsert(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowInsert = function () {
        return this.myAllowInsert;
    };
    TuDocument.prototype.setAllowInsert = function (value) {
        var flag = this.myAllowInsert;
        if (flag !== value) {
            this.myAllowInsert = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowInsert, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowLink", {
        //#endregion
        //#region [Property] AllowLink
        get: function () {
            return this.getAllowLink();
        },
        set: function (value) {
            this.setAllowLink(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowLink = function () {
        return this.myAllowLink;
    };
    TuDocument.prototype.setAllowLink = function (value) {
        var flag = this.myAllowLink;
        if (flag != value) {
            this.myAllowLink = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowLink, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowMove", {
        //#endregion
        //#region [Property] AllowMove
        get: function () {
            return this.getAllowMove();
        },
        set: function (value) {
            this.setAllowMove(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowMove = function () {
        return this.myAllowMove;
    };
    TuDocument.prototype.setAllowMove = function (value) {
        var flag = this.myAllowMove;
        if (flag !== value) {
            this.myAllowMove = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowMove, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowReshape", {
        //#endregion
        //#region [Property] AllowReshape
        get: function () {
            return this.getAllowReshape();
        },
        set: function (value) {
            this.setAllowReshape(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowReshape = function () {
        return this.myAllowReshape;
    };
    TuDocument.prototype.setAllowReshape = function (value) {
        var flag = this.myAllowReshape;
        if (flag !== value) {
            this.myAllowReshape = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowReshape, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowResize", {
        //#endregion
        //#region [Property] AllowResize
        get: function () {
            return this.getAllowResize();
        },
        set: function (value) {
            this.setAllowResize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowResize = function () {
        return this.myAllowResize;
    };
    TuDocument.prototype.setAllowResize = function (value) {
        var flag = this.myAllowResize;
        if (flag !== value) {
            this.myAllowResize = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowResize, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "AllowSelect", {
        //#endregion
        //#region [Property] AllowSelect
        get: function () {
            return this.getAllowSelect();
        },
        set: function (value) {
            this.setAllowSelect(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getAllowSelect = function () {
        return this.myAllowSelect;
    };
    TuDocument.prototype.setAllowSelect = function (value) {
        var flag = this.myAllowSelect;
        if (flag !== value) {
            this.myAllowSelect = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedAllowSelect, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "Backwards", {
        //#endregion
        get: function () {
            return this.Layers.GetObjectEnumerator(false);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuDocument.prototype, "Bounds", {
        //#region [Property] Bounds
        get: function () {
            return this.getBounds();
        },
        set: function (value) {
            this.setBounds(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getBounds = function () {
        var topLeft = this.TopLeft;
        var size = this.Size;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle(topLeft.X, topLeft.Y, size.Width, size.Height);
    };
    TuDocument.prototype.setBounds = function (value) {
        this.TopLeft = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(value.X, value.Y);
        this.Size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(value.Width, value.Height);
    };
    Object.defineProperty(TuDocument.prototype, "Count", {
        //#endregion
        //#region [Property] Count
        get: function () {
            return this.getCount();
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getCount = function () {
        var count = 0;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
            count = (count + layer.Count);
        });
        return count;
    };
    Object.defineProperty(TuDocument.prototype, "DataFormat", {
        //#endregion
        //#region [Property] DataFormat
        get: function () {
            return this.getDataFormat();
        },
        set: function (value) {
            this.setDataFormat(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getType = function () {
        return {
            FullName: 'TuDocuemnt'
        };
    };
    TuDocument.prototype.getDataFormat = function () {
        if (this.myDataFormat == null) {
            this.myDataFormat = this.getType().FullName;
        }
        return this.myDataFormat;
    };
    TuDocument.prototype.setDataFormat = function (value) {
        if (this.myDataFormat == null) {
            this.myDataFormat = this.getType().FullName;
        }
        var str = this.myDataFormat;
        if (value != null && str !== value) {
            this.myDataFormat = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedDataFormat, 0, undefined, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "DefaultLayer", {
        //#endregion
        //#region [Property] DefaultLayer
        get: function () {
            return this.getDefaultLayer();
        },
        set: function (value) {
            this.setDefaultLayer(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getDefaultLayer = function () {
        return this.Layers.Default;
    };
    TuDocument.prototype.setDefaultLayer = function (value) {
        this.Layers.Default = value;
    };
    Object.defineProperty(TuDocument.prototype, "DelayedRoutings", {
        //#endregion
        get: function () {
            return this.myDelayedRoutings;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuDocument.prototype, "FixedSize", {
        //#region [Property] FixedSize
        get: function () {
            return this.getFixedSize();
        },
        set: function (value) {
            this.setFixedSize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getFixedSize = function () {
        return this.myFixedSize;
    };
    TuDocument.prototype.setFixedSize = function (value) {
        var flag = this.myFixedSize;
        if (flag !== value) {
            this.myFixedSize = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedFixedSize, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "Initializing", {
        //#endregion
        //#region [Property] Initializing
        get: function () {
            return this.getInitializing();
        },
        set: function (value) {
            this.setInitializing(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getInitializing = function () {
        return this.myInitializing;
    };
    TuDocument.prototype.setInitializing = function (value) {
        this.myInitializing = value;
    };
    Object.defineProperty(TuDocument.prototype, "IsEmpty", {
        //#endregion
        get: function () {
            return this.Count === 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuDocument.prototype, "IsModified", {
        //#region [Property] IsModified
        get: function () {
            return this.getIsModified();
        },
        set: function (value) {
            this.setIsModified(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getIsModified = function () {
        if (this.UndoManager == null) {
            return this.myIsModified;
        }
        if (this.UndoManager.CurrentEdit != null) {
            return true;
        }
        if (!this.myIsModified) {
            return false;
        }
        return this.myUndoEditIndex !== this.UndoManager.UndoEditIndex;
    };
    TuDocument.prototype.setIsModified = function (value) {
        var flag = this.myIsModified;
        this.myIsModified = value;
        if (!value && this.UndoManager != null) {
            this.myUndoEditIndex = this.UndoManager.UndoEditIndex;
        }
        if (flag !== value) {
            this.InvalidateViews();
        }
    };
    Object.defineProperty(TuDocument.prototype, "IsReadOnly", {
        //#endregion
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuDocument.prototype, "LastPartID", {
        //#region [Property] LastPartID
        get: function () {
            return this.getLastPartID();
        },
        set: function (value) {
            this.setLastPartID(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getLastPartID = function () {
        return this.myLastPartID;
    };
    TuDocument.prototype.setLastPartID = function (value) {
        var int32 = this.myLastPartID;
        if (int32 != value) {
            this.myLastPartID = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedLastPartID, 0, undefined, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "Layers", {
        //#endregion
        get: function () {
            return this.myLayers;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuDocument.prototype, "LinksLayer", {
        //#region [Property] LinksLayer
        get: function () {
            return this.getLinksLayer();
        },
        set: function (value) {
            this.setLinksLayer(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getLinksLayer = function () {
        return this.myLinksLayer;
    };
    TuDocument.prototype.setLinksLayer = function (value) {
        var goLayers = this.myLinksLayer;
        if (goLayers !== value) {
            if (value == null || value.Document !== this) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("The new value for TuDocument.LinksLayer must belong to this document.");
            }
            this.myLinksLayer = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedLinksLayer, 0, undefined, 0, goLayers, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "MaintainsPartID", {
        //#endregion
        //#region [Property] MaintainsPartID
        get: function () {
            return this.getMaintainsPartID();
        },
        set: function (value) {
            this.setMaintainsPartID(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getMaintainsPartID = function () {
        return this.myMaintainsPartID;
    };
    TuDocument.prototype.setMaintainsPartID = function (value) {
        var flag = this.myMaintainsPartID;
        if (flag !== value) {
            this.myMaintainsPartID = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedMaintainsPartID, 0, undefined, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
            if (!this.Initializing) {
                if (value) {
                    this.ensureUniquePartID();
                    return;
                }
                this.myParts = null;
            }
        }
    };
    Object.defineProperty(TuDocument.prototype, "Name", {
        //#endregion
        //#region [Property] Name
        get: function () {
            return this.getName();
        },
        set: function (value) {
            this.setName(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getName = function () {
        return this.myName;
    };
    TuDocument.prototype.setName = function (value) {
        var str = this.myName;
        if (value != null && str != value) {
            this.myName = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedName, 0, undefined, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "PaperColor", {
        //#endregion
        //#region [Property] PaperColor
        get: function () {
            return this.getPaperColor();
        },
        set: function (value) {
            this.setPaperColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getPaperColor = function () {
        return this.myPaperColor;
    };
    TuDocument.prototype.setPaperColor = function (value) {
        var color = this.myPaperColor;
        if (color.notEquals(value)) {
            this.myPaperColor = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedPaperColor, 0, undefined, 0, color, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "RoutingTime", {
        //#endregion
        //#region [Property] RoutingTime
        get: function () {
            return this.getRoutingTime();
        },
        set: function (value) {
            this.setRoutingTime(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getRoutingTime = function () {
        return this.myRoutingTime;
    };
    TuDocument.prototype.setRoutingTime = function (value) {
        var goRoutingTime = this.myRoutingTime;
        if (goRoutingTime !== value) {
            this.myRoutingTime = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedRoutingTime, 0, undefined, goRoutingTime, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "SerializesUndoManager", {
        //#endregion
        //#region [Property] SerializesUndoManager
        get: function () {
            return this.getSerializesUndoManager();
        },
        set: function (value) {
            this.setSerializesUndoManager(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getSerializesUndoManager = function () {
        return this.mySerializesUndoManager;
    };
    TuDocument.prototype.setSerializesUndoManager = function (value) {
        this.mySerializesUndoManager = value;
        if (!value) {
            this.mySerializedUndoManager = undefined;
            return;
        }
        this.mySerializedUndoManager = this.myUndoManager;
    };
    Object.defineProperty(TuDocument.prototype, "Size", {
        //#endregion
        //#region [Property] Size
        get: function () {
            return this.getSize();
        },
        set: function (value) {
            this.setSize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getSize = function () {
        return this.myDocumentSize;
    };
    TuDocument.prototype.setSize = function (value) {
        var worldScale;
        if (value.Width >= 0) {
            var sizeF = this.myDocumentSize;
            if (value.Width >= 0 && value.Height >= 0 && sizeF.NotEquals(value)) {
                this.myDocumentSize = value;
                this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedSize, 0, undefined, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.MakeRect(sizeF), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.MakeRect(value));
            }
            return;
        }
        if (value.Width !== -23) {
            if (value.Width === -24) {
                this.WorldScale = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(value.Height, value.Height);
                return;
            }
            if (value.Width === -26) {
                var height = value.Height;
                worldScale = this.WorldScale;
                this.WorldScale = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(height, worldScale.Height);
                return;
            }
            if (value.Width === -27) {
                worldScale = this.WorldScale;
                this.WorldScale = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(worldScale.Width, value.Height);
                return;
            }
            if (value.Width === -25) {
                if (this.myPositions != null) {
                    var goPositionArray = this.myPositions;
                    var single = value.Height;
                    worldScale = this.WorldScale;
                    var width = single / worldScale.Width;
                    var height1 = value.Height;
                    worldScale = this.WorldScale;
                    goPositionArray.CellSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(width, height1 / worldScale.Height);
                    return;
                }
            }
            else if (value.Width === -28) {
                if (this.myPositions != null) {
                    this.myPositions.WholeDocument = value.Height > 0;
                    return;
                }
            }
            else if (value.Width === -29) {
                if (this.myPositions != null) {
                    this.myPositions.SmallMargin = value.Height;
                    return;
                }
            }
            else if (value.Width !== -30) {
                if (value.Width === -31) {
                    this.myLinkSpacing = value.Height;
                    return;
                }
                if (value.Width === -32) {
                    this.myAvoidsOrthogonalLinks = true;
                    return;
                }
                if (value.Width === -33) {
                    this.myAvoidsOrthogonalLinks = false;
                }
            }
            else if (this.myPositions != null) {
                this.myPositions.LargeMargin = value.Height;
                return;
            }
        }
        else {
            if (value.Height === -23) {
                TuDocument_1.myCaching = true;
                return;
            }
            if (value.Height === -24) {
                TuDocument_1.myCaching = false;
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
                    layer.ResetCaches();
                });
            }
        }
    };
    Object.defineProperty(TuDocument.prototype, "SkipsUndoManager", {
        //#endregion
        //#region [Property] SkipsUndoManager
        get: function () {
            return this.getSkipsUndoManager();
        },
        set: function (value) {
            this.setSkipsUndoManager(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getSkipsUndoManager = function () {
        return this.mySkipsUndoManager;
    };
    TuDocument.prototype.setSkipsUndoManager = function (value) {
        this.mySkipsUndoManager = value;
    };
    Object.defineProperty(TuDocument.prototype, "SuspendsRouting", {
        //#endregion
        //#region [Property] SuspendsRouting
        get: function () {
            return this.getSuspendsRouting();
        },
        set: function (value) {
            this.setSuspendsRouting(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getSuspendsRouting = function () {
        return this.mySuspendsRouting;
    };
    TuDocument.prototype.setSuspendsRouting = function (value) {
        this.mySuspendsRouting = value;
    };
    Object.defineProperty(TuDocument.prototype, "SuspendsUpdates", {
        //#endregion
        //#region [Property] SuspendsUpdates
        get: function () {
            return this.getSuspendsUpdates();
        },
        set: function (value) {
            this.setSuspendsUpdates(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getSuspendsUpdates = function () {
        return this.mySuspendsUpdates;
    };
    TuDocument.prototype.setSuspendsUpdates = function (value) {
        this.mySuspendsUpdates = value;
        if (!value) {
            this.invalidatePositionArray(undefined);
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
                layer.ResetCaches();
            });
        }
    };
    Object.defineProperty(TuDocument.prototype, "TopLeft", {
        //#endregion
        //#region [Property] TopLeft
        get: function () {
            return this.getTopLeft();
        },
        set: function (value) {
            this.setTopLeft(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getTopLeft = function () {
        return this.myDocumentTopLeft;
    };
    TuDocument.prototype.setTopLeft = function (value) {
        var pointF = this.myDocumentTopLeft;
        if (pointF.notEquals(value)) {
            this.myDocumentTopLeft = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedTopLeft, 0, undefined, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.MakeRect(pointF), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuDocument.prototype, "UndoManager", {
        //#endregion
        //#region [Property] UndoManager
        get: function () {
            return this.getUndoManager();
        },
        set: function (value) {
            this.setUndoManager(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getUndoManager = function () {
        return this.myUndoManager;
    };
    TuDocument.prototype.setUndoManager = function (value) {
        if (this.myUndoManager !== value) {
            if (this.myUndoManager != null) {
                this.myUndoManager.RemoveDocument(this);
            }
            this.myUndoManager = value;
            if (this.SerializesUndoManager) {
                this.mySerializedUndoManager = value;
            }
            this.myIsModified = false;
            this.myUndoEditIndex = -2;
            if (this.myUndoManager != null) {
                this.myUndoManager.AddDocument(this);
            }
        }
    };
    Object.defineProperty(TuDocument.prototype, "UserFlags", {
        //#endregion
        //#region [Property] UserFlags
        get: function () {
            return this.getUserFlags();
        },
        set: function (value) {
            this.setUserFlags(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getUserFlags = function () {
        return this.myUserFlags;
    };
    TuDocument.prototype.setUserFlags = function (value) {
        var int32 = this.myUserFlags;
        if (int32 !== value) {
            this.myUserFlags = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedUserFlags, 0, undefined, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "UserObject", {
        //#endregion
        //#region [Property] UserObject
        get: function () {
            return this.getUserObject();
        },
        set: function (value) {
            this.setUserObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getUserObject = function () {
        return this.myUserObject;
    };
    TuDocument.prototype.setUserObject = function (value) {
        var obj = this.myUserObject;
        if (obj !== value) {
            this.myUserObject = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedUserObject, 0, undefined, 0, obj, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "ValidCycle", {
        //#endregion
        //#region [Property] ValidCycle
        get: function () {
            return this.getValidCycle();
        },
        set: function (value) {
            this.setUserObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.getValidCycle = function () {
        return this.myValidCycle;
    };
    TuDocument.prototype.setValidCycle = function (value) {
        var goDocumentValidCycle = this.myValidCycle;
        if (goDocumentValidCycle !== value) {
            this.myValidCycle = value;
            this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedValidCycle, 0, undefined, goDocumentValidCycle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, value, 0, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
        }
    };
    Object.defineProperty(TuDocument.prototype, "WorldEpsilon", {
        //#endregion
        /* internal */ get: function () {
            return this.myWorldEpsilon;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuDocument.prototype, "WorldScale", {
        /* internal */ get: function () {
            return this.myWorldScale;
        },
        /* internal */ set: function (value) {
            var sizeF = this.myWorldScale;
            if (sizeF.NotEquals(value) && value.Width > 0 && value.Height > 0) {
                this.myWorldScale = value;
                this.myWorldEpsilon = 0.5 / value.Width;
                if (this.myPositions != null) {
                    var cellSize = this.myPositions.CellSize;
                    this.myPositions.CellSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(cellSize.Width * sizeF.Width / value.Width, cellSize.Height * sizeF.Height / value.Height);
                }
                this.invalidatePositionArray(undefined);
                this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedWorldScale, 0, undefined, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.MakeRect(sizeF), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.MakeRect(value));
                if (!this.Initializing) {
                    this.Bounds = this.computeBounds();
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.AbortTransaction = function () {
        var undoManager = this.UndoManager;
        if (undoManager == null) {
            return false;
        }
        return undoManager.AbortTransaction();
    };
    TuDocument.prototype.Add = function (obj) {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLink)) {
            this.LinksLayer.Add(obj);
            return;
        }
        this.DefaultLayer.Add(obj);
        return this;
    };
    /* internal */ TuDocument.prototype.addAllParts = function (obj) {
        var _this = this;
        var goIdentifiablePart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuIdentifiablePart);
        if (goIdentifiablePart != null) {
            this.addPart(goIdentifiablePart);
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                _this.addAllParts(enumerator);
            });
        }
    };
    TuDocument.prototype.addCopy = function (obj, loc) {
        var location = obj.Location;
        var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection({
            entries: [obj]
        });
        var sizeF = _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_13__.TuTool.SubtractPoints(loc, location);
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.CopyFromCollection(goCollections, false, false, sizeF, null).Get(obj), _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuObject);
    };
    /* internal */ TuDocument.prototype.addPart = function (p) {
        var i;
        var goIdentifiablePart = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.New.Out();
        if (this.myParts == null) {
            this.myParts = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary(1000);
        }
        var partID = p.PartID;
        if (partID !== -1) {
            if (!this.myParts.TryGetValue(partID, goIdentifiablePart)) {
                this.myParts[partID] = p;
                return;
            }
            if (goIdentifiablePart != null && goIdentifiablePart.value.PartID != partID) {
                this.myParts[partID] = p;
                goIdentifiablePart.value.PartID = -1;
                this.addPart(goIdentifiablePart.value);
            }
            return;
        }
        var int32 = (this.myLastPartID + 1);
        this.myLastPartID = int32;
        for (i = int32; this.myParts.ContainsKey(i); i = int32) {
            int32 = (this.myLastPartID + 1);
            this.myLastPartID = int32;
        }
        this.myParts[i] = p;
        p.PartID = i;
    };
    TuDocument.prototype.adjustOverlapsH = function (routables) {
        var int32 = 0;
        var l = 0;
        var flag;
        var int321;
        var single = (this.myPositions != null ? this.myPositions.CellSize.Height : 8);
        var int322 = 0;
        var segInfos = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(routables, function (routable) {
            var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(routable, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
            if (goLink == null || !goLink.Orthogonal || goLink.Style === _TuStroke_TuStrokeStyle__WEBPACK_IMPORTED_MODULE_15__.TuStrokeStyle.Bezier) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            for (var i = 2; i < (goLink.PointsCount - 3); i++) {
                var point = goLink.getPoint(i);
                var pointF = goLink.getPoint(i + 1);
                if (TuDocument_1.IsApprox(point.Y, pointF.Y) && !TuDocument_1.IsApprox(point.X, pointF.X)) {
                    var segInfo = new _SegInfo__WEBPACK_IMPORTED_MODULE_14__.SegInfo();
                    segInfo.Layer = Math.floor((point.Y / single));
                    var point1 = goLink.getPoint(0);
                    var goLink1 = goLink;
                    var pointF1 = goLink1.getPoint(goLink1.PointsCount - 1);
                    segInfo.First = point1.X * point1.X + point1.Y;
                    segInfo.Last = pointF1.X * pointF1.X + pointF1.Y;
                    segInfo.ColumnMin = Math.min(point.X, pointF.X);
                    segInfo.ColumnMax = Math.max(point.X, pointF.X);
                    segInfo.Index = i;
                    segInfo.Link = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(routable, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLink);
                    if ((i + 2) < goLink.PointsCount) {
                        var point2 = goLink.getPoint(i - 1);
                        var pointF2 = goLink.getPoint(i + 2);
                        var int323 = 0;
                        if (point2.Y < point.Y) {
                            if (pointF2.Y >= point.Y) {
                                int323 = (point.X >= pointF.X ? 1 : 2);
                            }
                            else {
                                int323 = 3;
                            }
                        }
                        else if (point2.Y > point.Y) {
                            if (pointF2.Y <= point.Y) {
                                int323 = (pointF.X >= point.X ? 1 : 2);
                            }
                            else {
                                int323 = 0;
                            }
                        }
                        segInfo.Turns = int323;
                    }
                    segInfos.Add(segInfo);
                }
            }
        });
        if (segInfos.Count > 1) {
            segInfos.Sort(_SegInfoComparer__WEBPACK_IMPORTED_MODULE_16__.SegInfoComparer.Default);
            for (var j = 0; j < segInfos.Count; j = int32) {
                var layer = segInfos[j].Layer;
                int32 = (j + 1);
                while (int32 < segInfos.Count && segInfos[int32].Layer === layer) {
                    int32++;
                }
                if ((int32 - j) > 1) {
                    for (var k = j; k < int32; k = l) {
                        var columnMax = segInfos[k].ColumnMax;
                        for (l = (j + 1); l < int32 && segInfos[l].ColumnMin < columnMax; l++) {
                            columnMax = Math.max(columnMax, segInfos[l].ColumnMax);
                        }
                        var int324 = (l - k);
                        if (int324 > 1) {
                            segInfos.Sort(k, int324, _SegInfoComparer2__WEBPACK_IMPORTED_MODULE_17__.SegInfoComparer2.DefaultLast);
                            var int325 = 1;
                            var last = segInfos[k].Last;
                            for (var m = k; m < l; m++) {
                                var item = segInfos[m];
                                if (item.Last !== last) {
                                    int325++;
                                    last = item.Last;
                                }
                            }
                            segInfos.Sort(k, int324, _SegInfoComparer2__WEBPACK_IMPORTED_MODULE_17__.SegInfoComparer2.DefaultFirst);
                            var int326 = 1;
                            last = segInfos[k].First;
                            for (var n = k; n < l; n++) {
                                var item1 = segInfos[n];
                                if (item1.First !== last) {
                                    int326++;
                                    last = item1.First;
                                }
                            }
                            if (int325 >= int326) {
                                flag = true;
                                int321 = int326;
                                last = segInfos[k].First;
                            }
                            else {
                                flag = false;
                                int321 = int325;
                                last = segInfos[k].Last;
                                segInfos.Sort(k, int324, _SegInfoComparer2__WEBPACK_IMPORTED_MODULE_17__.SegInfoComparer2.DefaultLast);
                            }
                            var single1 = layer * single + single / 2;
                            var int327 = 0;
                            for (var o = k; o < l; o++) {
                                var segInfo1 = segInfos[o];
                                if ((flag ? segInfo1.First : segInfo1.Last) !== last) {
                                    int327++;
                                    last = (flag ? segInfo1.First : segInfo1.Last);
                                }
                                var stroke = TuDocument_1.GetStroke(segInfo1.Link.TuObject);
                                var point3 = stroke.getPoint(segInfo1.Index);
                                var pointF3 = stroke.getPoint((segInfo1.Index + 1));
                                var single2 = this.myLinkSpacing * (int327 - (int321 - 1) / 2);
                                if (!stroke.AvoidsNodes || this.isUnoccupied2(point3.X, single1 + single2, pointF3.X, single1 + single2)) {
                                    int322++;
                                    stroke.setPoint(segInfo1.Index, new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(point3.X, single1 + single2));
                                    stroke.setPoint((segInfo1.Index + 1), new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(pointF3.X, single1 + single2));
                                }
                            }
                        }
                    }
                }
            }
        }
        return int322;
    };
    TuDocument.prototype.adjustOverlapsV = function (routables) {
        var int32 = 0;
        var l = 0;
        var flag;
        var int321;
        var single = (this.myPositions != null ? this.myPositions.CellSize.Width : 8);
        var int322 = 0;
        var segInfos = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(routables, function (routable) {
            var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(routable, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
            if (goLink == null || !goLink.Orthogonal || goLink.Style === _TuStroke_TuStrokeStyle__WEBPACK_IMPORTED_MODULE_15__.TuStrokeStyle.Bezier) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            for (var i = 2; i < (goLink.PointsCount - 3); i++) {
                var point = goLink.getPoint(i);
                var pointF = goLink.getPoint((i + 1));
                if (TuDocument_1.IsApprox(point.X, pointF.X) && !TuDocument_1.IsApprox(point.Y, pointF.Y)) {
                    var segInfo = new _SegInfo__WEBPACK_IMPORTED_MODULE_14__.SegInfo();
                    segInfo.Layer = Math.floor((point.X / single));
                    var point1 = goLink.getPoint(0);
                    var goLink1 = goLink;
                    var pointF1 = goLink1.getPoint(goLink1.PointsCount - 1);
                    segInfo.First = point1.X + point1.Y * point1.Y;
                    segInfo.Last = pointF1.X + pointF1.Y * pointF1.Y;
                    segInfo.ColumnMin = Math.min(point.Y, pointF.Y);
                    segInfo.ColumnMax = Math.max(point.Y, pointF.Y);
                    segInfo.Index = i;
                    segInfo.Link = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(routable, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLink);
                    if ((i + 2) < goLink.PointsCount) {
                        var point2 = goLink.getPoint(i - 1);
                        var pointF2 = goLink.getPoint(i + 2);
                        var int323 = 0;
                        if (point2.X < point.X) {
                            if (pointF2.X >= point.X) {
                                int323 = (point.Y >= pointF.Y ? 1 : 2);
                            }
                            else {
                                int323 = 3;
                            }
                        }
                        else if (point2.X > point.X) {
                            if (pointF2.X <= point.X) {
                                int323 = (pointF.Y >= point.Y ? 1 : 2);
                            }
                            else {
                                int323 = 0;
                            }
                        }
                        segInfo.Turns = int323;
                    }
                    segInfos.Add(segInfo);
                }
            }
        });
        {
        }
        if (segInfos.Count > 1) {
            segInfos.Sort(_SegInfoComparer__WEBPACK_IMPORTED_MODULE_16__.SegInfoComparer.Default);
            for (var j = 0; j < segInfos.Count; j = int32) {
                var layer = segInfos[j].Layer;
                int32 = (j + 1);
                while (int32 < segInfos.Count && segInfos[int32].Layer == layer) {
                    int32++;
                }
                if ((int32 - j) > 1) {
                    for (var k = j; k < int32; k = l) {
                        var columnMax = segInfos[k].ColumnMax;
                        for (l = (j + 1); l < int32 && segInfos[l].ColumnMin < columnMax; l++) {
                            columnMax = Math.max(columnMax, segInfos[l].ColumnMax);
                        }
                        var int324 = (l - k);
                        if (int324 > 1) {
                            segInfos.Sort(k, int324, _SegInfoComparer2__WEBPACK_IMPORTED_MODULE_17__.SegInfoComparer2.DefaultLast);
                            var int325 = 1;
                            var last = segInfos[k].Last;
                            for (var m = k; m < l; m++) {
                                var item = segInfos[m];
                                if (item.Last !== last) {
                                    int325++;
                                    last = item.Last;
                                }
                            }
                            segInfos.Sort(k, int324, _SegInfoComparer2__WEBPACK_IMPORTED_MODULE_17__.SegInfoComparer2.DefaultFirst);
                            var int326 = 1;
                            last = segInfos[k].First;
                            for (var n = k; n < l; n++) {
                                var item1 = segInfos[n];
                                if (item1.First !== last) {
                                    int326++;
                                    last = item1.First;
                                }
                            }
                            if (int325 >= int326) {
                                flag = true;
                                int321 = int326;
                                last = segInfos[k].First;
                            }
                            else {
                                flag = false;
                                int321 = int325;
                                last = segInfos[k].Last;
                                segInfos.Sort(k, int324, _SegInfoComparer2__WEBPACK_IMPORTED_MODULE_17__.SegInfoComparer2.DefaultLast);
                            }
                            var single1 = layer * single + single / 2;
                            var int327 = 0;
                            for (var o = k; o < l; o++) {
                                var segInfo1 = segInfos[o];
                                if ((flag ? segInfo1.First : segInfo1.Last) !== last) {
                                    int327++;
                                    last = (flag ? segInfo1.First : segInfo1.Last);
                                }
                                var stroke = TuDocument_1.GetStroke(segInfo1.Link.TuObject);
                                var point3 = stroke.getPoint(segInfo1.Index);
                                var pointF3 = stroke.getPoint((segInfo1.Index + 1));
                                var single2 = this.myLinkSpacing * (int327 - ((int321 - 1)) / 2);
                                if (!stroke.AvoidsNodes || this.isUnoccupied2(single1 + single2, point3.Y, single1 + single2, pointF3.Y)) {
                                    int322++;
                                    stroke.setPoint(segInfo1.Index, new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single1 + single2, point3.Y));
                                    stroke.setPoint((segInfo1.Index + 1), new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single1 + single2, pointF3.Y));
                                }
                            }
                        }
                    }
                }
            }
        }
        return int322;
    };
    TuDocument.alreadyCopied = function (copieds, o) {
        var flag = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.New.Out();
        for (var i = o; i != null; i = i.Parent) {
            if (copieds.TryGetValue(i, flag)) {
                return true;
            }
        }
        return false;
    };
    TuDocument.prototype.avoidOrthogonalOverlaps = function (routables) {
        var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection();
        var objArray = routables;
        for (var i = 0; i < objArray.length; i++) {
            goCollections.Add(objArray[i]);
        }
        var rectangleF = { value: TuDocument_1.ComputeBounds(goCollections, undefined) };
        var sizeF = (this.myPositions != null ? this.myPositions.CellSize : new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(8, 8));
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.InflateRect(rectangleF, sizeF.Width, sizeF.Height);
        goCollections.Clear();
        this.pickObjectsInRectangle(rectangleF.value, _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_1__.TuPickInRectangleStyle.AnyIntersectsBounds, goCollections, 999999);
        var goCollections1 = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections, function (goCollection) {
            if (!_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goCollection, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuRoutable)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            var stroke = TuDocument_1.GetStroke(goCollection);
            if (stroke == null || !_GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.IntersectsRect(stroke.Bounds, rectangleF.value)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            goCollections1.Add(stroke);
        });
        if (this.adjustOverlapsH(goCollections1) > 0 || this.adjustOverlapsV(goCollections1) > 0) {
            this.adjustOverlapsH(goCollections1);
            this.adjustOverlapsV(goCollections1);
        }
    };
    TuDocument.prototype.beginUpdateViews = function () {
        this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.BeginUpdateAllViews, 0, undefined, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
    };
    TuDocument.prototype.CanCopyObjects = function () {
        return this.AllowCopy;
    };
    TuDocument.prototype.CanDeleteObjects = function () {
        return this.AllowDelete;
    };
    TuDocument.prototype.CanEditObjects = function () {
        return this.AllowEdit;
    };
    TuDocument.prototype.CanInsertObjects = function () {
        return this.AllowInsert;
    };
    TuDocument.prototype.CanLinkObjects = function () {
        return this.AllowLink;
    };
    TuDocument.prototype.CanMoveObjects = function () {
        return this.AllowMove;
    };
    TuDocument.prototype.CanRedo = function () {
        var undoManager = this.UndoManager;
        if (undoManager == null) {
            return false;
        }
        return undoManager.CanRedo();
    };
    TuDocument.prototype.CanReshapeObjects = function () {
        return this.AllowReshape;
    };
    TuDocument.prototype.CanResizeObjects = function () {
        return this.AllowResize;
    };
    TuDocument.prototype.CanSelectObjects = function () {
        return this.AllowSelect;
    };
    TuDocument.prototype.CanUndo = function () {
        var undoManager = this.UndoManager;
        if (undoManager == null) {
            return false;
        }
        return undoManager.CanUndo();
    };
    TuDocument.prototype.ChangeValue = function (e, undo) {
        var hint = e.Hint;
        switch (hint) {
            case 201:
                {
                    this.Name = e.getValue(undo);
                    return;
                }
            case 202:
                {
                    this.Size = e.getSize(undo);
                    return;
                }
            case 203:
                {
                    this.TopLeft = e.getPoint(undo);
                    return;
                }
            case 204:
                {
                    this.FixedSize = e.getValue(undo);
                    return;
                }
            case 205:
                {
                    this.PaperColor = e.getValue(undo);
                    return;
                }
            case 206:
                {
                    this.DataFormat = e.getValue(undo);
                    return;
                }
            case 207:
                {
                    this.AllowSelect = e.getValue(undo);
                    return;
                }
            case 208:
                {
                    this.AllowMove = e.getValue(undo);
                    return;
                }
            case 209:
                {
                    this.AllowCopy = e.getValue(undo);
                    return;
                }
            case 210:
                {
                    this.AllowResize = e.getValue(undo);
                    return;
                }
            case 211:
                {
                    this.AllowReshape = e.getValue(undo);
                    return;
                }
            case 212:
                {
                    this.AllowDelete = e.getValue(undo);
                    return;
                }
            case 213:
                {
                    this.AllowInsert = e.getValue(undo);
                    return;
                }
            case 214:
                {
                    this.AllowLink = e.getValue(undo);
                    return;
                }
            case 215:
                {
                    this.AllowEdit = e.getValue(undo);
                    return;
                }
            case 216:
            case 217:
            case 218:
            case 219:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
                {
                    if (e.Hint >= 10000) {
                        hint = e.Hint;
                        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("Unknown TuChangedEventArgs hint--override GoDocument.ChangeValue to handle the Hint: ", hint.toString()));
                    }
                    return;
                }
            case 220:
                {
                    this.internalArrange(e.getValue(undo));
                    this.InvalidateViews();
                    return;
                }
            case 221:
                {
                    this.UserFlags = e.getInt(undo);
                    return;
                }
            case 222:
                {
                    this.UserObject = e.getValue(undo);
                    return;
                }
            case 223:
                {
                    this.LinksLayer = e.getValue(undo);
                    return;
                }
            case 224:
                {
                    this.MaintainsPartID = e.getValue(undo);
                    return;
                }
            case 225:
                {
                    this.ValidCycle = e.getInt(undo);
                    return;
                }
            case 226:
                {
                    this.LastPartID = e.getInt(undo);
                    return;
                }
            case 227:
                {
                    this.WorldScale = e.getSize(undo);
                    return;
                }
            case 228:
                {
                    this.RoutingTime = e.getInt(undo);
                    return;
                }
            case 241:
                {
                    this.Initializing = e.getValue(undo);
                    return;
                }
            default:
                {
                    switch (hint) {
                        case 801:
                            {
                                var obj = e.Object;
                                if (undo) {
                                    this.Layers.Remove(obj);
                                    return;
                                }
                                var oldValue = e.OldValue;
                                if (e.SubHint === 1) {
                                    this.Layers.InsertAfter(oldValue, obj);
                                    return;
                                }
                                this.Layers.InsertBefore(oldValue, obj);
                                return;
                            }
                        case 802:
                            {
                                var goLayers = e.Object;
                                if (!undo) {
                                    this.Layers.Remove(goLayers);
                                    return;
                                }
                                var oldValue1 = e.OldValue;
                                if (oldValue1 != null) {
                                    this.Layers.InsertBefore(oldValue1, goLayers);
                                    return;
                                }
                                this.Layers.InsertAfter(this.Layers.Top, goLayers);
                                return;
                            }
                        case 803:
                            {
                                var goLayers1 = e.OldValue;
                                var oldInt = e.OldInt;
                                var newInt = e.NewInt;
                                if (undo) {
                                    this.Layers.MoveInCollection(oldInt, goLayers1, newInt, true);
                                    return;
                                }
                                this.Layers.MoveInCollection(newInt, goLayers1, oldInt, true);
                                return;
                            }
                        case 804:
                            {
                                var value = e.getValue(undo);
                                this.Layers.Default = value;
                                return;
                            }
                        default:
                            {
                                switch (hint) {
                                    case 901:
                                        {
                                            var goObject = e.TuObject;
                                            var initializing = goObject.Initializing;
                                            goObject.Initializing = true;
                                            goObject.ChangeValue(e, undo);
                                            goObject.Initializing = initializing;
                                            return;
                                        }
                                    case 902:
                                        {
                                            var newValue = e.NewValue;
                                            var goObject1 = e.TuObject;
                                            if (undo) {
                                                newValue.removeFromLayer(goObject1, true);
                                                return;
                                            }
                                            newValue.AddToLayer(goObject1, true);
                                            return;
                                        }
                                    case 903:
                                        {
                                            var oldValue2 = e.OldValue;
                                            var goObject2 = e.TuObject;
                                            if (!undo) {
                                                oldValue2.removeFromLayer(goObject2, true);
                                                return;
                                            }
                                            oldValue2.AddToLayer(goObject2, true);
                                            oldValue2.MoveInLayerInternal(e.OldInt, goObject2, (oldValue2.Count - 1));
                                            return;
                                        }
                                    case 904:
                                        {
                                            var goObject3 = e.TuObject;
                                            var goLayers2 = e.OldValue;
                                            var newValue1 = e.NewValue;
                                            if (undo) {
                                                goLayers2.ChangeLayer(goObject3, newValue1, true);
                                                return;
                                            }
                                            newValue1.ChangeLayer(goObject3, goLayers2, true);
                                            return;
                                        }
                                    case 905:
                                        {
                                            var oldValue3 = e.OldValue;
                                            var layer = oldValue3.Layer;
                                            var int32 = e.OldInt;
                                            var newInt1 = e.NewInt;
                                            if (undo) {
                                                layer.MoveInLayer(int32, oldValue3, newInt1, true);
                                                return;
                                            }
                                            layer.MoveInLayer(newInt1, oldValue3, int32, true);
                                            return;
                                        }
                                    case 906:
                                    case 907:
                                    case 908:
                                    case 909:
                                    case 920:
                                    case 921:
                                    case 922:
                                    case 923:
                                    case 924:
                                    case 925:
                                    case 926:
                                    case 927:
                                    case 928:
                                    case 929:
                                        {
                                            if (e.Hint >= 10000) {
                                                hint = e.Hint;
                                                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("Unknown GoChangedEventArgs hint--override GoDocument.ChangeValue to handle the Hint: ", hint.toString()));
                                            }
                                            return;
                                        }
                                    case 910:
                                        {
                                            e.Object.AllowView = e.getValue(undo);
                                            return;
                                        }
                                    case 911:
                                        {
                                            e.Object.AllowSelect = e.getValue(undo);
                                            return;
                                        }
                                    case 912:
                                        {
                                            e.Object.AllowMove = e.getValue(undo);
                                            return;
                                        }
                                    case 913:
                                        {
                                            e.Object.AllowCopy = e.getValue(undo);
                                            return;
                                        }
                                    case 914:
                                        {
                                            e.Object.AllowResize = e.getValue(undo);
                                            return;
                                        }
                                    case 915:
                                        {
                                            e.Object.AllowReshape = e.getValue(undo);
                                            return;
                                        }
                                    case 916:
                                        {
                                            e.Object.AllowDelete = e.getValue(undo);
                                            return;
                                        }
                                    case 917:
                                        {
                                            e.Object.AllowInsert = e.getValue(undo);
                                            return;
                                        }
                                    case 918:
                                        {
                                            e.Object.AllowLink = e.getValue(undo);
                                            return;
                                        }
                                    case 919:
                                        {
                                            e.Object.AllowEdit = e.getValue(undo);
                                            return;
                                        }
                                    case 930:
                                        {
                                            e.Object.Identifier = e.getValue(undo);
                                            return;
                                        }
                                    default:
                                        {
                                            if (e.Hint >= 10000) {
                                                hint = e.Hint;
                                                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("Unknown GoChangedEventArgs hint--override GoDocument.ChangeValue to handle the Hint: ", hint.toString()));
                                            }
                                            return;
                                        }
                                }
                                break;
                            }
                    }
                    break;
                }
        }
    };
    TuDocument.prototype.Clear = function () {
        this.myParts = null;
        this.invalidatePositionArray(undefined);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
            layer.Clear();
        });
        return 1;
    };
    TuDocument.ComputeBounds = function (coll, view) {
        var flag = false;
        var x = 0;
        var y = 0;
        var single = 0;
        var y1 = 0;
        var flag1 = (view != null ? view.IsPrinting : false);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(coll, function (goObject) {
            if ((flag1 ? !goObject.CanPrint() : !goObject.CanView())) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            var rectangleF = goObject.ExpandPaintBounds(goObject.Bounds.clone(), view);
            if (flag) {
                if (rectangleF.X < x) {
                    x = rectangleF.X;
                }
                if (rectangleF.Y < y) {
                    y = rectangleF.Y;
                }
                if (rectangleF.X + rectangleF.Width > single) {
                    single = rectangleF.X + rectangleF.Width;
                }
                if (rectangleF.Y + rectangleF.Height <= y1) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                y1 = rectangleF.Y + rectangleF.Height;
            }
            else {
                flag = true;
                x = rectangleF.X;
                y = rectangleF.Y;
                single = rectangleF.X + rectangleF.Width;
                y1 = rectangleF.Y + rectangleF.Height;
            }
        });
        if (!flag) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle();
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle(x, y, single - x, y1 - y);
    };
    TuDocument.prototype.computeBounds = function () {
        return TuDocument_1.ComputeBounds(this, null);
    };
    TuDocument.prototype.Contains = function (obj) {
        if (obj == null) {
            return false;
        }
        var layer = obj.Layer;
        if (layer == null) {
            return false;
        }
        return layer.Document === this;
    };
    TuDocument.prototype.copy = function () {
        var goLayerCollections = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.clone)(this);
        goLayerCollections.myChanged$ = undefined;
        goLayerCollections.myChangedEventArgs = undefined;
        goLayerCollections.myPositions = undefined;
        goLayerCollections.mySkippedAvoidable = undefined;
        goLayerCollections.myParts = undefined;
        goLayerCollections.myUndoManager = undefined;
        goLayerCollections.mySerializedUndoManager = undefined;
        goLayerCollections.myUndoEditIndex = -2;
        goLayerCollections.myLayers = new _TuLayer_TuLayerCollection__WEBPACK_IMPORTED_MODULE_2__.TuLayerCollection();
        goLayerCollections.myLinksLayer = undefined;
        goLayerCollections.myLayers.init(goLayerCollections);
        goLayerCollections.DefaultLayer.Identifier = this.DefaultLayer.Identifier;
        goLayerCollections.MergeLayersFrom(this);
        if (goLayerCollections.Layers.Count > 1) {
            var defaultLayer = this.Layers.Default;
            var goLayers = this.Layers.NextLayer(defaultLayer, -1);
            if (goLayers == null || goLayers.Identifier == null) {
                var goLayers1 = this.Layers.NextLayer(defaultLayer, 1);
                if (goLayers1 != null && goLayers1.Identifier != null) {
                    var goLayers2 = goLayerCollections.Layers.Find(goLayers1.Identifier);
                    goLayerCollections.Layers.MoveBefore(goLayers2, goLayerCollections.Layers.Default);
                }
            }
            else {
                var goLayers3 = goLayerCollections.Layers.Find(goLayers.Identifier);
                goLayerCollections.Layers.MoveAfter(goLayers3, goLayerCollections.Layers.Default);
            }
        }
        goLayerCollections.CopyFromCollection(this);
        goLayerCollections.myIsModified = false;
        return goLayerCollections;
    };
    TuDocument.prototype.CopyArray = function () {
        var goObjectArray = new Array(this.Count);
        this.CopyTo(goObjectArray, 0);
        return goObjectArray;
    };
    TuDocument.prototype.CopyFromCollection = function () {
        var _this = this;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 0) {
            var coll = args[0];
            var sizeF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize();
            return this.CopyFromCollection(coll, false, false, sizeF, undefined);
        }
        else {
            var coll = args[0];
            var copyableOnly_1 = args[1];
            var dragging_1 = args[2];
            var offset_1 = args[3];
            var env_1 = args[4];
            if (env_1 == null) {
                env_1 = this.createCopyDictionary();
            }
            env_1.SourceCollection = coll;
            var goObjects_1 = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
            var goCollections_1 = null;
            var goCollections1_1 = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection({
                internalChecksForDuplicates: false
            });
            var goCollections2_1 = null;
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(coll, function (goObject) {
                var goObject1 = (dragging_1 ? goObject.DraggingObject : goObject);
                if (goObject1 == null || copyableOnly_1 && !goObject1.CanCopy() || TuDocument_1.alreadyCopied(goObjects_1, goObject1)) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                if (goCollections_1 != null && _tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject1, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuGroup)) {
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections_1, function (goObject2) {
                        if (!goObject2.isChildOf(goObject1)) {
                            return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                        }
                        goObjects_1.Remove(goObject2);
                        if (goCollections2_1 == null) {
                            goCollections2_1 = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection({
                                internalChecksForDuplicates: false
                            });
                        }
                        goCollections2_1.Add(goObject2);
                        goCollections1_1.Remove(goObject2);
                    });
                    if (goCollections2_1 != null && !goCollections2_1.IsEmpty) {
                        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections2_1, function (goCollection) {
                            goCollections_1.Remove(goCollection);
                        });
                        goCollections2_1.Clear();
                    }
                }
                goObjects_1.Add(goObject1, true);
                if (!goObject1.IsTopLevel) {
                    if (goCollections_1 == null) {
                        goCollections_1 = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection({
                            internalChecksForDuplicates: false
                        });
                    }
                    goCollections_1.Add(goObject1);
                }
                goCollections1_1.Add(goObject1);
            });
            var location_1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint();
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections1_1, function (goCollection1) {
                var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(env_1.Get(goCollection1), _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuObject);
                if (item != null) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                item = env_1.copy(goCollection1);
                if (item == null) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                location_1 = item.Location;
                var goObject3 = item;
                goObject3.Location = goObject3.ComputeMove(location_1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(location_1.X + offset_1.Width, location_1.Y + offset_1.Height));
                var layer = goCollection1.Layer;
                var defaultLayer = undefined;
                if (layer != null) {
                    defaultLayer = (layer.Document !== _this ? _this.Layers.Find(layer.Identifier) : layer);
                }
                if (defaultLayer == null) {
                    defaultLayer = _this.DefaultLayer;
                }
                if (copyableOnly_1 && !defaultLayer.CanInsertObjects()) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                defaultLayer.Add(item);
            });
            env_1.finishDelayedCopies();
            return env_1;
        }
    };
    TuDocument.prototype.copyNewValueForRedo = function (e) {
        var hint = e.Hint;
        if (hint !== 220) {
            if (hint !== 901) {
                return;
            }
            e.TuObject.CopyNewValueForRedo(e);
            return;
        }
        if (!e.IsBeforeChanging) {
            e.NewValue = this.internalCopy();
        }
    };
    TuDocument.prototype.copyOldValueForUndo = function (e) {
        var hint = e.Hint;
        if (hint !== 220) {
            if (hint !== 901) {
                return;
            }
            e.TuObject.CopyOldValueForUndo(e);
            return;
        }
        if (e.IsBeforeChanging) {
            e.OldValue = this.internalCopy();
        }
    };
    TuDocument.prototype.CopyTo = function (array, index) {
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(layer, function (goObject) {
                if (index < array.length) {
                    var int32 = index;
                    index = int32 + 1;
                    array[int32] = goObject;
                }
            });
        });
        return array;
    };
    TuDocument.prototype.createCopyDictionary = function () {
        return new _TuCopyDictionary__WEBPACK_IMPORTED_MODULE_18__.TuCopyDictionary({
            DestinationDocument: this
        });
    };
    TuDocument.prototype.DoDelayedRouting = function (moved) {
        var _this = this;
        if (moved && !moved.IsEmpty) {
            if ((this.RoutingTime & _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__.TuRoutingTime.AfterNodesDragged) === _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__.TuRoutingTime.AfterNodesDragged) {
                var goCollections_2 = undefined;
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(moved, function (goObject) {
                    if (goObject.Document !== _this || !_this.isAvoidable(goObject)) {
                        return;
                    }
                    if (goCollections_2) {
                        goCollections_2.Clear();
                    }
                    else {
                        goCollections_2 = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection();
                    }
                    var outBounds = { value: goObject.Bounds };
                    _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.InflateRect(outBounds, 1, 1);
                    _this.pickObjectsInRectangle(outBounds.value, _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_1__.TuPickInRectangleStyle.AnyIntersectsBounds, goCollections_2, 999999);
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections_2, function (goCollection) {
                        var goRoutable = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goCollection, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuRoutable);
                        if (goRoutable == null) {
                            return;
                        }
                        var stroke = TuDocument_1.GetStroke(goCollection);
                        if (stroke == null) {
                            _this.DelayedRoutings.Add(goRoutable);
                        }
                        else {
                            if (!stroke.intersectsRectangle(outBounds.value)) {
                                return;
                            }
                            _this.DelayedRoutings.Add(goRoutable);
                        }
                    });
                });
            }
            if ((this.RoutingTime & _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__.TuRoutingTime.AfterLinksDragged) === _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__.TuRoutingTime.AfterLinksDragged) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(moved, function (goObject1) {
                    var goRoutable1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject1, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuRoutable);
                    if (goRoutable1 == null) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    _this.DelayedRoutings.Add(goRoutable1);
                });
            }
        }
        while (!this.DelayedRoutings.IsEmpty) {
            var objArray = this.DelayedRoutings.CopyArray();
            this.DelayedRoutings.Clear();
            var objArray1 = objArray;
            for (var i = 0; i < objArray1.length; i++) {
                var goRoutable2 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(objArray1[i], _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuRoutable);
                if (goRoutable2 != null) {
                    goRoutable2.calculateRoute();
                }
            }
            if (!this.myAvoidsOrthogonalLinks) {
                continue;
            }
            this.avoidOrthogonalOverlaps(objArray);
        }
    };
    TuDocument.prototype.endUpdateViews = function () {
        this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.EndUpdateAllViews, 0, undefined, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
    };
    TuDocument.prototype.ensureUniquePartID = function () {
        var _this = this;
        if (this.myParts == null) {
            // TODO: Set dictionarty kağpa
            this.myParts = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary( /*1000*/);
        }
        var keyValuePairs = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.myParts, function (myPart) {
            var key = myPart.key;
            if (myPart.value.PartID === key) {
                return;
            }
            keyValuePairs.Add(myPart);
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(keyValuePairs, function (keyValuePair) {
            var int32 = keyValuePair.key;
            var value = keyValuePair.value;
            var partID = value.PartID;
            if (_this.myParts.ContainsKey(partID)) {
                value.PartID = int32;
            }
            else {
                _this.myParts.Remove(int32);
                _this.myParts.Set(partID, value);
            }
        });
        var int321 = -1;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject) {
            int321 = Math.max(int321, _this.maxPartID(goObject));
        });
        this.myLastPartID = Math.max(this.myLastPartID, int321);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject1) {
            _this.addAllParts(goObject1);
        });
    };
    TuDocument.prototype.findNode = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            return this.findNode(args[0], false, false, false);
        }
        else if (args.length === 3) {
            return this.findNode(args[0], args[1], args[2], false);
        }
        else if (args.length === 4) {
            var s = args[0];
            var prefix = args[1];
            var ignorecase = args[2];
            var insidesubgraph = args[3];
            if (s == null) {
                return null;
            }
            var upper = s;
            if (ignorecase) {
                upper = upper.toUpperCase();
            }
            return this.findNodeInternal(this, upper, prefix, ignorecase, insidesubgraph);
        }
    };
    TuDocument.prototype.findNodeInternal = function (coll, search, prefix, ignorecase, insidesubgraph) {
        var _this = this;
        var goObject;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.using)(coll.GetEnumerator(), function (enumerator) {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                var goLabeledPart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(current, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLabeledPart);
                if (goLabeledPart == null) {
                    continue;
                }
                var text = goLabeledPart.Text;
                if (ignorecase) {
                    text = text.toUpperCase();
                }
                if (prefix) {
                    if (text.startsWith(search)) {
                        goObject = current;
                        return goObject;
                    }
                }
                else if (text === search) {
                    goObject = current;
                    return goObject;
                }
                if (!insidesubgraph) {
                    continue;
                }
                var goSubGraphBase = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(current, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuSubGraphBase);
                if (goSubGraphBase == null) {
                    continue;
                }
                var goObject1 = _this.findNodeInternal(goSubGraphBase, search, prefix, ignorecase, insidesubgraph);
                if (goObject1 == null) {
                    continue;
                }
                goObject = goObject1;
                return goObject;
            }
            return undefined;
        });
        return goObject;
    };
    TuDocument.prototype.findPart = function (id) {
        var goIdentifiablePart;
        if (this.myParts == null) {
            return undefined;
        }
        if (!this.myParts.TryGetValue(id, goIdentifiablePart)) {
            return null;
        }
        return goIdentifiablePart.value;
    };
    TuDocument.prototype.finishTransaction = function (tname) {
        var undoManager = this.UndoManager;
        if (undoManager == null) {
            return false;
        }
        return undoManager.finishTransaction(tname);
    };
    TuDocument.prototype.getAvoidableRectangle = function (obj) {
        var bounds = obj.ExpandPaintBounds(obj.Bounds.clone(), undefined);
        return bounds;
    };
    TuDocument.prototype.GetEnumerator = function () {
        return this.Layers.GetObjectEnumerator(true);
    };
    TuDocument.prototype.getPositions = function () {
        var _this = this;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 0) {
            return this.getPositions(true, undefined);
        }
        else if (args.length === 2) {
            if (this.myPositions == null) {
                this.myPositions = new _TuPositionArray__WEBPACK_IMPORTED_MODULE_8__.TuPositionArray();
            }
            if (this.myPositions.Invalid) {
                var rectangleF = { value: this.computeBounds() };
                _GeomUtilities__WEBPACK_IMPORTED_MODULE_11__.GeomUtilities.InflateRect(rectangleF, 200 * this.WorldEpsilon, 200 * this.WorldEpsilon);
                this.myPositions.initialize(rectangleF.value);
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject) {
                    _this.getPositions1(goObject, args[1]);
                });
                this.myPositions.Invalid = false;
            }
            else if (args[0]) {
                this.myPositions.clearAllUnoccupied();
            }
            return this.myPositions;
        }
    };
    TuDocument.prototype.getPositions1 = function (obj, skip) {
        var _this = this;
        if (obj === skip) {
            return;
        }
        var goSubGraphBase = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuSubGraphBase);
        if (goSubGraphBase) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goSubGraphBase, function (goObject) {
                _this.getPositions1(goObject, skip);
            });
        }
        else if (this.isAvoidable(obj)) {
            var avoidableRectangle = this.getAvoidableRectangle(obj);
            var width = this.myPositions.CellSize.Width;
            var height = this.myPositions.CellSize.Height;
            var x = avoidableRectangle.X + avoidableRectangle.Width;
            var y = avoidableRectangle.Y + avoidableRectangle.Height;
            for (var i = avoidableRectangle.X; i < x; i = i + width) {
                for (var j = avoidableRectangle.Y; j < y; j = j + height) {
                    this.myPositions.setOccupied(i, j);
                }
                this.myPositions.setOccupied(i, y);
            }
            for (var k = avoidableRectangle.Y; k < y; k = k + height) {
                this.myPositions.setOccupied(x, k);
            }
            this.myPositions.setOccupied(x, y);
        }
    };
    TuDocument.GetStroke = function (obj) {
        var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
        if (goLink != null) {
            return goLink;
        }
        var goLabeledLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink);
        if (goLabeledLink == null) {
            return undefined;
        }
        return goLabeledLink.RealLink;
    };
    TuDocument.prototype.internalArrange = function (copy) {
        var item;
        if (copy == null) {
            return;
        }
        var suspendsRouting = this.SuspendsRouting;
        try {
            if (!suspendsRouting) {
                this.DelayedRoutings.Clear();
            }
            this.SuspendsRouting = true;
            for (var i = 0; i < copy.Count; i++) {
                var key = copy[i].key;
                var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(key, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
                if (goLink == null) {
                    var goLabeledLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(key, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink);
                    if (goLabeledLink == null) {
                        item = copy[i];
                        key.Bounds = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(item.value, _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CoreGraphicTypes.CGRectangle);
                        var goRoutable = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(key, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuRoutable);
                        if (goRoutable != null) {
                            goRoutable.updateRoute();
                        }
                    }
                    else {
                        item = copy[i];
                        var value = item.value;
                        goLabeledLink.RealLink.setPoints(value);
                    }
                }
                else {
                    item = copy[i];
                    goLink.setPoints(item.value);
                }
            }
        }
        finally {
            this.SuspendsRouting = suspendsRouting;
            if (!suspendsRouting) {
                this.DoDelayedRouting(undefined);
            }
        }
    };
    TuDocument.prototype.internalCopy = function () {
        var keyValuePairs = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject) {
            if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLink) || _tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            keyValuePairs.Add({ key: goObject, value: goObject.Bounds });
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject1) {
            var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject1, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
            if (goLink == null) {
                var goLabeledLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject1, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink);
                if (goLabeledLink == null) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                var pointFArray = goLabeledLink.RealLink.copyPointsArray();
                keyValuePairs.Add({ key: goObject1, value: pointFArray });
            }
            else {
                keyValuePairs.Add({ key: goObject1, value: goLink.copyPointsArray() });
            }
        });
        return keyValuePairs;
    };
    TuDocument.prototype.invalidatePositionArray = function (obj) {
        this.mySkippedAvoidable = undefined;
        if (this.myPositions && !this.myPositions.Invalid && (obj == null ||
            this.isAvoidable(obj))) {
            this.myPositions.Invalid = true;
        }
    };
    TuDocument.prototype.InvalidateViews = function () {
        this.RaiseChanged(100, 0, undefined, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
    };
    TuDocument.IsApprox = function (a, b) {
        var single = a - b;
        if (single <= -1) {
            return false;
        }
        return single < 1;
    };
    TuDocument.prototype.isAvoidable = function (obj) {
        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuNode);
    };
    TuDocument.prototype.isUnoccupied = function (r, skip) {
        if (skip !== this.mySkippedAvoidable) {
            this.invalidatePositionArray(undefined);
            this.mySkippedAvoidable = skip;
        }
        return this.getPositions(false, skip).isUnoccupied(r.X, r.Y, r.Width, r.Height);
    };
    TuDocument.prototype.isUnoccupied2 = function (px, py, qx, qy) {
        var single = Math.min(px, qx);
        var single1 = Math.min(py, qy);
        var single2 = Math.max(px, qx);
        var single3 = Math.max(py, qy);
        return this.isUnoccupied(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle({ x: single, y: single1, width: single2 - single, height: single3 - single1 }), undefined);
    };
    TuDocument.prototype.invokeOnChanged = function (hint, subhint, obj, oldI, oldVal, oldRect, newI, newVal, newRect, before) {
        if (this.SuspendsUpdates) {
            return;
        }
        var goChangedEventArg;
        /* lock(this)
        { */
        goChangedEventArg = this.myChangedEventArgs;
        this.myChangedEventArgs = undefined;
        //}
        if (goChangedEventArg == null) {
            goChangedEventArg = new _TuChangedEventArgs__WEBPACK_IMPORTED_MODULE_5__.TuChangedEventArgs();
            goChangedEventArg.Document = this;
        }
        goChangedEventArg.IsBeforeChanging = before;
        goChangedEventArg.Hint = hint;
        goChangedEventArg.SubHint = subhint;
        goChangedEventArg.Object = obj;
        goChangedEventArg.OldInt = oldI;
        goChangedEventArg.OldValue = oldVal;
        goChangedEventArg.OldRect = oldRect;
        goChangedEventArg.NewInt = newI;
        goChangedEventArg.NewValue = newVal;
        goChangedEventArg.NewRect = newRect;
        this.onChanged(goChangedEventArg);
        this.myChangedEventArgs = goChangedEventArg;
        goChangedEventArg.Object = undefined;
        goChangedEventArg.OldValue = undefined;
        goChangedEventArg.NewValue = undefined;
    };
    TuDocument.MakesDirectedCycle = function (a, b) {
        var flag;
        if (a === b) {
            return true;
        }
        /* lock (GoDocument.myCycleMap)
        { */
        TuDocument_1.myCycleMap.Clear();
        TuDocument_1.myCycleMap.Add(a, true);
        var flag1 = TuDocument_1.makesDirectedCycle1(a, b, TuDocument_1.myCycleMap);
        TuDocument_1.myCycleMap.Clear();
        flag = flag1;
        //}
        return flag;
    };
    TuDocument.makesDirectedCycle1 = function (a, b, map) {
        var flag = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.New.Out();
        var flag1;
        if (a === b) {
            return true;
        }
        if (a == null) {
            return false;
        }
        if (b == null) {
            return false;
        }
        if (map.TryGetValue(b, flag)) {
            return false;
        }
        map.Add(b, true);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.using)(b.Destinations.GetEnumerator(), function (enumerator) {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (current == b || !TuDocument_1.makesDirectedCycle1(a, current, map)) {
                    continue;
                }
                flag1 = true;
                return flag1;
            }
            return false;
        });
        return flag1;
    };
    TuDocument.MakesDirectedCycleFast = function (a, b) {
        var flag;
        if (a === b) {
            return true;
        }
        if (a == null) {
            return false;
        }
        if (b == null) {
            return false;
        }
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.using)(b.Destinations.GetEnumerator(), function (enumerator) {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (current === b || !TuDocument_1.MakesDirectedCycleFast(a, current)) {
                    continue;
                }
                flag = true;
                return flag;
            }
            return false;
        });
        return flag;
    };
    TuDocument.MakesUndirectedCycle = function (a, b) {
        var flag;
        if (a === b) {
            return true;
        }
        /* lock (GoDocument.myCycleMap)
        { */
        TuDocument_1.myCycleMap.Clear();
        TuDocument_1.myCycleMap.Add(a, true);
        var flag1 = TuDocument_1.makesUndirectedCycle1(a, b, TuDocument_1.myCycleMap);
        TuDocument_1.myCycleMap.Clear();
        flag = flag1;
        /* } */
        return flag;
    };
    TuDocument.makesUndirectedCycle1 = function (a, b, map) {
        var flag = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.New.Out(false);
        var flag1;
        if (a === b) {
            return true;
        }
        if (a == null) {
            return false;
        }
        if (b == null) {
            return false;
        }
        if (map.TryGetValue(b, flag)) {
            return false;
        }
        map.Add(b, true);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.using)(b.Nodes.GetEnumerator(), function (enumerator) {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (current === b || !TuDocument_1.makesUndirectedCycle1(a, current, map)) {
                    continue;
                }
                flag1 = true;
                return flag1;
            }
            return false;
        });
        return flag1;
    };
    TuDocument.prototype.maxPartID = function (obj) {
        var _this = this;
        var int32 = -1;
        var goIdentifiablePart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuIdentifiablePart);
        if (goIdentifiablePart) {
            int32 = Math.max(int32, goIdentifiablePart.PartID);
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuGroup);
        if (goGroups) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                int32 = Math.max(int32, _this.maxPartID(enumerator));
            });
        }
        return int32;
    };
    TuDocument.prototype.MergeLayersFrom = function (other) {
        var _this = this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(other.Layers, function (layer) {
            var identifier = layer.Identifier;
            if (identifier == null || _this.Layers.Find(identifier)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            _this.Layers.createNewLayerAfter(_this.Layers.Top).Identifier = identifier;
        });
        var obj = other.DefaultLayer.Identifier;
        var goLayers = this.Layers.Find(obj);
        if (goLayers) {
            this.DefaultLayer = goLayers;
        }
        var identifier1 = other.LinksLayer.Identifier;
        var goLayers1 = this.Layers.Find(identifier1);
        if (goLayers1) {
            this.LinksLayer = goLayers1;
        }
    };
    TuDocument.prototype.onChanged = function (evt) {
        if (this.myChanged$) {
            this.myChanged$(evt);
        }
        var hint = evt.Hint;
        if (!this.SkipsUndoManager) {
            var undoManager = this.UndoManager;
            if (undoManager) {
                undoManager.documentChanged(this, evt);
            }
            if ((hint < 0 || hint >= 200) && (hint != _TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.ChangedObject || evt.SubHint !== 1000)) {
                this.IsModified = true;
            }
        }
        if (hint !== _TuLayer_TuLayerEvents__WEBPACK_IMPORTED_MODULE_19__.TuLayerEvents.ChangedObject) {
            if (hint === _TuLayer_TuLayerEvents__WEBPACK_IMPORTED_MODULE_19__.TuLayerEvents.InsertedObject) {
                var goObject = evt.TuObject;
                if (this.MaintainsPartID) {
                    this.addAllParts(goObject);
                }
                this.updateDocumentBounds(goObject);
                this.invalidatePositionArray(goObject);
                return;
            }
            if (hint === _TuLayer_TuLayerEvents__WEBPACK_IMPORTED_MODULE_19__.TuLayerEvents.RemovedObject) {
                var goObject1 = evt.TuObject;
                this.removeAllParts(goObject1);
                this.invalidatePositionArray(goObject1);
                return;
            }
            if (hint === _TuLayer_TuLayerCollection__WEBPACK_IMPORTED_MODULE_2__.TuLayerCollectionEvents.InsertedLayer) {
                this.invalidatePositionArray(null);
                return;
            }
            if (hint === _TuLayer_TuLayerCollection__WEBPACK_IMPORTED_MODULE_2__.TuLayerCollectionEvents.RemovedLayer) {
                this.invalidatePositionArray(null);
                if (evt.Object == this.LinksLayer) {
                    this.LinksLayer = this.DefaultLayer;
                }
            }
        }
        else if (evt.SubHint === _TuObjectEvents__WEBPACK_IMPORTED_MODULE_20__.TuObjectEvents.ChangedBounds) {
            var goObject2 = evt.TuObject;
            this.updateDocumentBounds(goObject2);
            this.invalidatePositionArray(goObject2);
            if (goObject2.IsTopLevel) {
                var layer = goObject2.Layer;
                if (layer) {
                    layer.updateCaches(goObject2, evt);
                    return;
                }
            }
        }
        else if (evt.SubHint === _TuGroup_TuGroupEvents__WEBPACK_IMPORTED_MODULE_21__.TuGroupEvents.InsertedObject) {
            var newValue = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(evt.NewValue, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuObject);
            if (newValue) {
                if (newValue.Layer) {
                    newValue.Layer.resetPickCache();
                }
                if (this.MaintainsPartID) {
                    this.addAllParts(newValue);
                    return;
                }
            }
        }
        else if (evt.SubHint === _TuGroup_TuGroupEvents__WEBPACK_IMPORTED_MODULE_21__.TuGroupEvents.RemovedObject) {
            var oldValue = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(evt.OldValue, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuObject);
            if (oldValue) {
                if (oldValue.Layer) {
                    oldValue.Layer.resetPickCache();
                }
                this.removeAllParts(oldValue);
                return;
            }
        }
        else if (evt.SubHint === _TuObjectEvents__WEBPACK_IMPORTED_MODULE_20__.TuObjectEvents.ChangedSelectable) {
            var goObject3 = evt.TuObject;
            if (goObject3 && goObject3.Layer) {
                goObject3.Layer.resetPickCache();
                return;
            }
        }
    };
    TuDocument.prototype.pickObject = function (p, selectableOnly) {
        var goObject;
        if (selectableOnly && !this.CanSelectObjects()) {
            return undefined;
        }
        var enumerator = this.Layers.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var goObject1 = enumerator.Current.PickObject(p, selectableOnly);
                if (goObject1 == null) {
                    continue;
                }
                goObject = goObject1;
                return goObject;
            }
            return null;
        }
        finally {
            enumerator.Dispose();
        }
        return goObject;
    };
    TuDocument.prototype.pickObjects = function (p, selectableOnly, coll, max) {
        var goCollections;
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection({
                internalChecksForDuplicates: false
            });
        }
        if (selectableOnly && !this.CanSelectObjects()) {
            return coll;
        }
        var enumerator = this.Layers.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (coll.Count < max) {
                    current.PickObjects(p, selectableOnly, coll, max);
                }
                else {
                    goCollections = coll;
                    return goCollections;
                }
            }
            return coll;
        }
        finally {
            (enumerator).Dispose();
        }
        return goCollections;
    };
    TuDocument.prototype.pickObjectsInRectangle = function (rect, pickstyle, coll, max) {
        var goCollections;
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_12__.TuCollection({
                internalChecksForDuplicates: false
            });
        }
        if (TuDocument_1.PickStyleSelectableOnly(pickstyle) && !this.CanSelectObjects()) {
            return coll;
        }
        var enumerator = this.Layers.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (coll.Count < max) {
                    current.PickObjectsInRectangle(rect, pickstyle, coll, max);
                }
                else {
                    goCollections = coll;
                    return goCollections;
                }
            }
            return coll;
        }
        finally {
            // TODO: Implement dispose
            //((IDisposable)enumerator).Dispose();
        }
        return goCollections;
    };
    TuDocument.PickStyleAny = function (s) {
        return s < _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_1__.TuPickInRectangleStyle.SelectableOnlyContained;
    };
    TuDocument.PickStyleContained = function (s) {
        return (s & _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_1__.TuPickInRectangleStyle.AnyContained) !== 0;
    };
    TuDocument.PickStyleIntersectsBounds = function (s) {
        return (s & _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_1__.TuPickInRectangleStyle.AnyIntersectsBounds) !== 0;
    };
    TuDocument.PickStyleSelectableOnly = function (s) {
        return s >= _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_1__.TuPickInRectangleStyle.SelectableOnlyContained;
    };
    TuDocument.prototype.RaiseChanged = function (hint, subhint, obj, oldI, oldVal, oldRect, newI, newVal, newRect) {
        this.invokeOnChanged(hint, subhint, obj, oldI, oldVal, oldRect, newI, newVal, newRect, false);
    };
    TuDocument.prototype.RaiseChanging = function (hint, subhint, obj) {
        this.invokeOnChanged(hint, subhint, obj, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, true);
    };
    TuDocument.prototype.Redo = function () {
        if (!this.CanRedo()) {
            return;
        }
        var undoManager = this.UndoManager;
        if (undoManager) {
            undoManager.redo();
        }
    };
    TuDocument.prototype.Remove = function (obj) {
        if (obj == null) {
            return false;
        }
        var layer = obj.Layer;
        if (layer == null) {
            return false;
        }
        if (layer.Document !== this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("Cannot remove object that does not belong to this document");
        }
        return layer.Remove(obj);
    };
    TuDocument.prototype.removeAllParts = function (obj) {
        var _this = this;
        if (this.myParts) {
            var goIdentifiablePart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuIdentifiablePart);
            if (goIdentifiablePart) {
                this.removePart(goIdentifiablePart);
            }
            var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuGroup);
            if (goGroups) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                    _this.removeAllParts(enumerator);
                });
            }
        }
    };
    TuDocument.prototype.removePart = function (p) {
        if (this.myParts) {
            this.myParts.Remove(p.PartID);
        }
    };
    TuDocument.prototype.ResumeRouting = function (old, moved) {
        var _this = this;
        if (this.SuspendsRouting && !old) {
            var flag_1 = false;
            if (moved != null) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(moved, function (goObject) {
                    if (goObject.Document != _this) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    flag_1 = true;
                    if (flag_1 || moved == null) {
                        _this.DoDelayedRouting(moved);
                    }
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.BREAK;
                });
            }
        }
        this.SuspendsRouting = old;
    };
    TuDocument.prototype.SetModifiable = function (b) {
        this.AllowMove = b;
        this.AllowResize = b;
        this.AllowReshape = b;
        this.AllowDelete = b;
        this.AllowInsert = b;
        this.AllowLink = b;
        this.AllowEdit = b;
    };
    TuDocument.prototype.StartTransaction = function () {
        var undoManager = this.UndoManager;
        if (undoManager == null) {
            return false;
        }
        return undoManager.StartTransaction();
    };
    TuDocument.prototype.testSerialization = function () {
        /* MemoryStream memoryStream = new MemoryStream();
        ((IFormatter)(new BinaryFormatter())).Serialize(memoryStream, this);
        memoryStream.Position = (long)0;
        return ((IFormatter)(new BinaryFormatter())).Deserialize(memoryStream) as GoDocument; */
        return undefined;
    };
    TuDocument.prototype.Undo = function () {
        if (!this.CanUndo()) {
            return;
        }
        var undoManager = this.UndoManager;
        if (undoManager) {
            undoManager.Undo();
        }
    };
    TuDocument.prototype.updateDocumentBounds = function (obj) {
        if (obj == null) {
            return;
        }
        if (this.FixedSize) {
            return;
        }
        var size = this.Size;
        var topLeft = this.TopLeft;
        var bounds = obj.Bounds;
        var single = Math.min(topLeft.X, bounds.X);
        var single1 = Math.min(topLeft.Y, bounds.Y);
        var single2 = Math.max(topLeft.X + size.Width, bounds.X + bounds.Width);
        var single3 = single2 - single;
        var single4 = Math.max(topLeft.Y + size.Height, bounds.Y + bounds.Height) - single1;
        if (single < topLeft.X || single1 < topLeft.Y) {
            this.TopLeft = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint({ x: single, y: single1 });
        }
        if (single3 > size.Width || single4 > size.Height) {
            this.Size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize({ width: single3, height: single4 });
        }
    };
    TuDocument.prototype.UpdateRoute = function (obj) {
        if (!this.SuspendsRouting || (this.RoutingTime & _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__.TuRoutingTime.Delayed) === _TuRoutingTime__WEBPACK_IMPORTED_MODULE_7__.TuRoutingTime.Immediate) {
            obj.calculateRoute();
            return;
        }
        this.DelayedRoutings.Add(obj);
    };
    TuDocument.prototype.updateViews = function () {
        this.RaiseChanged(_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_9__.TuDocumentEvents.UpdateAllViews, 0, undefined, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_10__.NullRect);
    };
    Object.defineProperty(TuDocument.prototype, "Changed$", {
        get: function () {
            return this.myChanged$;
        },
        set: function (value) {
            this.myChanged$ = value;
        },
        enumerable: false,
        configurable: true
    });
    TuDocument.prototype.importEntries = function (entries) {
        return 0;
    };
    TuDocument.prototype.toArray = function () {
        return undefined;
    };
    TuDocument.prototype.removeAt = function (index) {
    };
    var TuDocument_1;
    TuDocument = TuDocument_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuDocument,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuDocument,
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.DisposableBase,
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuCollection,
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLayerCollectionContainer,
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLayerAbilities
            ]
        })
    ], TuDocument);
    return TuDocument;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));

(function staticConstructor() {
    TuDocument.myCycleMap = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
    TuDocument.myCaching = true;
})();


/***/ }),

/***/ "./src/TuDocument/TuDocumentEvents.ts":
/*!********************************************!*\
  !*** ./src/TuDocument/TuDocumentEvents.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuDocumentEvents": () => (/* binding */ TuDocumentEvents)
/* harmony export */ });
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuObjectEvents */ "./src/TuObjectEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuDocumentEvents = /** @class */ (function (_super) {
    __extends(TuDocumentEvents, _super);
    function TuDocumentEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuDocumentEvents.RepaintAll = 100;
    TuDocumentEvents.BeginUpdateAllViews = 101;
    TuDocumentEvents.EndUpdateAllViews = 102;
    TuDocumentEvents.UpdateAllViews = 103;
    TuDocumentEvents.StartedTransaction = 104;
    TuDocumentEvents.FinishedTransaction = 105;
    TuDocumentEvents.AbortedTransaction = 106;
    TuDocumentEvents.StartingUndo = 107;
    TuDocumentEvents.FinishedUndo = 108;
    TuDocumentEvents.StartingRedo = 109;
    TuDocumentEvents.FinishedRedo = 110;
    TuDocumentEvents.ChangedName = 201;
    TuDocumentEvents.ChangedSize = 202;
    TuDocumentEvents.ChangedTopLeft = 203;
    TuDocumentEvents.ChangedFixedSize = 204;
    TuDocumentEvents.ChangedPaperColor = 205;
    TuDocumentEvents.ChangedDataFormat = 206;
    TuDocumentEvents.ChangedAllowSelect = 207;
    TuDocumentEvents.ChangedAllowMove = 208;
    TuDocumentEvents.ChangedAllowCopy = 209;
    TuDocumentEvents.ChangedAllowResize = 210;
    TuDocumentEvents.ChangedAllowReshape = 211;
    TuDocumentEvents.ChangedAllowDelete = 212;
    TuDocumentEvents.ChangedAllowInsert = 213;
    TuDocumentEvents.ChangedAllowLink = 214;
    TuDocumentEvents.ChangedAllowEdit = 215;
    TuDocumentEvents.AllArranged = 220;
    TuDocumentEvents.ChangedUserFlags = 221;
    TuDocumentEvents.ChangedUserObject = 222;
    TuDocumentEvents.ChangedLinksLayer = 223;
    TuDocumentEvents.ChangedMaintainsPartID = 224;
    TuDocumentEvents.ChangedValidCycle = 225;
    TuDocumentEvents.ChangedLastPartID = 226;
    TuDocumentEvents.ChangedWorldScale = 227;
    TuDocumentEvents.ChangedRoutingTime = 228;
    //public static readonly ChangedInitializing = 241;
    TuDocumentEvents.ChangedObject = 901;
    TuDocumentEvents[100] = 'RepaintAll';
    TuDocumentEvents[101] = 'BeginUpdateAllViews';
    TuDocumentEvents[102] = 'EndUpdateAllViews';
    TuDocumentEvents[103] = 'UpdateAllViews';
    TuDocumentEvents[104] = 'StartedTransaction';
    TuDocumentEvents[105] = 'FinishedTransaction';
    TuDocumentEvents[106] = 'AbortedTransaction';
    TuDocumentEvents[107] = 'StartingUndo';
    TuDocumentEvents[108] = 'FinishedUndo';
    TuDocumentEvents[109] = 'StartingRedo';
    TuDocumentEvents[110] = 'FinishedRedo';
    TuDocumentEvents[201] = 'ChangedName';
    TuDocumentEvents[202] = 'ChangedSize';
    TuDocumentEvents[203] = 'ChangedTopLeft';
    TuDocumentEvents[204] = 'ChangedFixedSize';
    TuDocumentEvents[205] = 'ChangedPaperColor';
    TuDocumentEvents[206] = 'ChangedDataFormat';
    TuDocumentEvents[207] = 'ChangedAllowSelect';
    TuDocumentEvents[208] = 'ChangedAllowMove';
    TuDocumentEvents[209] = 'ChangedAllowCopy';
    TuDocumentEvents[210] = 'ChangedAllowResize';
    TuDocumentEvents[211] = 'ChangedAllowReshape';
    TuDocumentEvents[212] = 'ChangedAllowDelete';
    TuDocumentEvents[213] = 'ChangedAllowInsert';
    TuDocumentEvents[214] = 'ChangedAllowLink';
    TuDocumentEvents[215] = 'ChangedAllowEdit';
    TuDocumentEvents[220] = 'AllArranged';
    TuDocumentEvents[221] = 'ChangedUserFlags';
    TuDocumentEvents[222] = 'ChangedUserObject';
    TuDocumentEvents[223] = 'ChangedLinksLayer';
    TuDocumentEvents[224] = 'ChangedMaintainsPartID';
    TuDocumentEvents[225] = 'ChangedValidCycle';
    TuDocumentEvents[226] = 'ChangedLastPartID';
    TuDocumentEvents[227] = 'ChangedWorldScale';
    TuDocumentEvents[228] = 'ChangedRoutingTime';
    //public static readonly ChangedInitializing = 241;
    TuDocumentEvents[901] = 'ChangedObject';
    return TuDocumentEvents;
}(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__.TuObjectEvents));



/***/ }),

/***/ "./src/TuDocument/TuDocumentValidCycle.ts":
/*!************************************************!*\
  !*** ./src/TuDocument/TuDocumentValidCycle.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuDocumentValidCycle": () => (/* binding */ TuDocumentValidCycle)
/* harmony export */ });
var TuDocumentValidCycle;
(function (TuDocumentValidCycle) {
    TuDocumentValidCycle[TuDocumentValidCycle["All"] = 0] = "All";
    TuDocumentValidCycle[TuDocumentValidCycle["NotDirected"] = 1] = "NotDirected";
    TuDocumentValidCycle[TuDocumentValidCycle["NotDirectedFast"] = 2] = "NotDirectedFast";
    TuDocumentValidCycle[TuDocumentValidCycle["NotUndirected"] = 3] = "NotUndirected";
    TuDocumentValidCycle[TuDocumentValidCycle["DestinationTree"] = 4] = "DestinationTree";
    TuDocumentValidCycle[TuDocumentValidCycle["SourceTree"] = 5] = "SourceTree";
})(TuDocumentValidCycle || (TuDocumentValidCycle = {}));


/***/ }),

/***/ "./src/TuDocument/TuPositionArray.ts":
/*!*******************************************!*\
  !*** ./src/TuDocument/TuPositionArray.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPositionArray": () => (/* binding */ TuPositionArray)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);

var UNOCCUPIED = 2147483647;
var MAX = 2147483644;
var STEP = 4;
var OCCUPIED = 0;
var SHIFT = 2;
var MASK = 3;
var RIGHT = 0;
var DOWN = 90;
var LEFT = 180;
var UP = 270;
var TuPositionArray = /** @class */ (function () {
    function TuPositionArray() {
        this.myInvalid = true;
        this.myMinX = 1;
        this.myMinY = 1;
        this.myMaxX = -1;
        this.myMaxY = -1;
        this.myCellX = 8;
        this.myCellY = 8;
        this.mySmallMargin = 22;
        this.myLargeMargin = 111;
    }
    Object.defineProperty(TuPositionArray.prototype, "Abort", {
        get: function () {
            return this.myAbort;
        },
        set: function (value) {
            this.myAbort = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPositionArray.prototype, "Bounds", {
        get: function () {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle({ x: this.myMinX, y: this.myMinY, width: this.myMaxX - this.myMinX, height: this.myMaxY - this.myMinY });
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPositionArray.prototype, "CellSize", {
        get: function () {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize({ width: this.myCellX, height: this.myCellY });
        },
        set: function (value) {
            if (value.Width > 0 && value.Height > 0 && (value.Width !== this.myCellX || value.Height !== this.myCellY)) {
                this.myCellX = value.Width;
                this.myCellY = value.Height;
                this.initialize(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle({ x: this.myMinX, y: this.myMinY, width: this.myMaxX - this.myMinX, height: this.myMaxY - this.myMinY }));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPositionArray.prototype, "Invalid", {
        get: function () {
            return this.myInvalid;
        },
        set: function (value) {
            this.myInvalid = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPositionArray.prototype, "LargeMargin", {
        get: function () {
            return this.myLargeMargin;
        },
        set: function (value) {
            this.myLargeMargin = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPositionArray.prototype, "SmallMargin", {
        get: function () {
            return this.mySmallMargin;
        },
        set: function (value) {
            this.mySmallMargin = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPositionArray.prototype, "WholeDocument", {
        get: function () {
            return this.myWholeDocument;
        },
        set: function (value) {
            this.myWholeDocument = value;
        },
        enumerable: false,
        configurable: true
    });
    TuPositionArray.prototype.breakIn = function (x1, y1, x2, y2, inc, vert, lowx, hix, lowy, hiy) {
        var int32 = x2;
        var int321 = y2;
        var int322 = this.myArray[int32][int321];
        while (this.isBarrier(int322) && int32 > lowx && int32 < hix && int321 > lowy && int321 < hiy) {
            if (!vert) {
                int32 = int32 + inc;
            }
            else {
                int321 = int321 + inc;
            }
            int322 = this.myArray[int32][int321];
            if (Math.abs((int32 - x1)) > 1 || Math.abs((int321 - y1)) > 1) {
                continue;
            }
            this.Abort = true;
            return;
        }
        int32 = x2;
        int321 = y2;
        int322 = this.myArray[int32][int321];
        this.myArray[int32][int321] = UNOCCUPIED;
        while (this.isBarrier(int322) && int32 > lowx && int32 < hix && int321 > lowy && int321 < hiy) {
            if (!vert) {
                int32 = int32 + inc;
            }
            else {
                int321 = int321 + inc;
            }
            int322 = this.myArray[int32][int321];
            this.myArray[int32][int321] = UNOCCUPIED;
        }
    };
    TuPositionArray.prototype.breakOut = function (x1, y1, x2, y2, inc, vert, lowx, hix, lowy, hiy) {
        var int32 = x1;
        var int321 = y1;
        var int322 = this.myArray[int32][int321];
        while (this.isBarrier(int322) && int32 > lowx && int32 < hix && int321 > lowy && int321 < hiy) {
            if (!vert) {
                int32 = int32 + inc;
            }
            else {
                int321 = int321 + inc;
            }
            int322 = this.myArray[int32][int321];
            if (Math.abs((int32 - x2)) > 1 || Math.abs((int321 - y2)) > 1) {
                continue;
            }
            this.Abort = true;
            return OCCUPIED;
        }
        int32 = x1;
        int321 = y1;
        int322 = this.myArray[int32][int321];
        var int323 = 7;
        this.myArray[int32][int321] = int323;
        while (this.isBarrier(int322) && int32 > lowx && int32 < hix && int321 > lowy && int321 < hiy) {
            if (!vert) {
                int32 = int32 + inc;
            }
            else {
                int321 = int321 + inc;
            }
            int322 = this.myArray[int32][int321];
            this.myArray[int32][int321] = int323;
            int323 = int323 + STEP;
        }
        if (vert) {
            return int321;
        }
        return int32;
    };
    TuPositionArray.prototype.clearAllUnoccupied = function () {
        if (this.myArray == null) {
            return;
        }
        for (var i = 0; i <= this.myUpperBoundX; i++) {
            for (var j = 0; j <= this.myUpperBoundY; j++) {
                if (this.myArray[i][j] >= STEP) {
                    this.myArray[i][j] = this.myArray[i][j] | MAX;
                }
            }
        }
    };
    TuPositionArray.prototype.getDist = function (x, y) {
        if (!this.inBounds(x, y)) {
            return OCCUPIED;
        }
        x = x - this.myMinX;
        x = x / this.myCellX;
        y = y - this.myMinY;
        y = y / this.myCellY;
        var int32 = x;
        var int321 = y;
        return this.myArray[int32][int321] >> SHIFT;
    };
    TuPositionArray.prototype.inBounds = function (x, y) {
        if (this.myMinX > x || x > this.myMaxX || this.myMinY > y) {
            return false;
        }
        return y <= this.myMaxY;
    };
    TuPositionArray.prototype.initialize = function (rect) {
        if (rect.Width <= 0 || rect.Height <= 0) {
            return;
        }
        var x = rect.X;
        var y = rect.Y;
        var single = rect.X + rect.Width;
        var y1 = rect.Y + rect.Height;
        this.myMinX = Math.floor(((x - this.myCellX) / this.myCellX)) * this.myCellX;
        this.myMinY = Math.floor(((y - this.myCellY) / this.myCellY)) * this.myCellY;
        this.myMaxX = Math.ceil(((single + 2 * this.myCellX) / this.myCellX)) * this.myCellX;
        this.myMaxY = Math.ceil(((y1 + 2 * this.myCellY) / this.myCellY)) * this.myCellY;
        var int32 = 1 + Math.ceil(((this.myMaxX - this.myMinX) / this.myCellX));
        var int321 = 1 + Math.ceil(((this.myMaxY - this.myMinY) / this.myCellY));
        if (this.myArray == null || this.myUpperBoundX < (int32 - 1) || this.myUpperBoundY < (int321 - 1)) {
            this.myArray = [];
            for (var i = 0; i < int32; i++) {
                this.myArray[i] = [];
            }
            this.myUpperBoundX = int32 - 1;
            this.myUpperBoundY = int321 - 1;
        }
        this.setAll(UNOCCUPIED);
    };
    TuPositionArray.prototype.isBarrier = function (v) {
        return (v & MASK) === 0;
    };
    TuPositionArray.prototype.isOccupied = function (x, y) {
        return this.getDist(x, y) === 0;
    };
    TuPositionArray.prototype.isUnoccupied = function (x, y, w, h) {
        if (x > this.myMaxX) {
            return true;
        }
        if (x + w < this.myMinX) {
            return true;
        }
        if (y > this.myMaxY) {
            return true;
        }
        if (y + h < this.myMinY) {
            return true;
        }
        var int32 = ((x - this.myMinX) / this.myCellX);
        var int321 = ((y - this.myMinY) / this.myCellY);
        var int322 = ((Math.max(0, w) / this.myCellX)) + 1;
        var int323 = ((Math.max(0, h) / this.myCellY)) + 1;
        if (int32 < 0) {
            int322 = (int322 + int32);
            int32 = 0;
        }
        if (int321 < 0) {
            int323 = (int323 + int321);
            int321 = 0;
        }
        if (int322 < 0) {
            return true;
        }
        if (int323 < 0) {
            return true;
        }
        var int324 = Math.min(((int32 + int322) - 1), this.myUpperBoundX);
        var int325 = Math.min(((int321 + int323) - 1), this.myUpperBoundY);
        for (var i = int32; i <= int324; i++) {
            for (var j = int321; j <= int325; j++) {
                if (this.myArray[i][j] === 0) {
                    return false;
                }
            }
        }
        return true;
    };
    TuPositionArray.prototype.propagate = function (p1, fromDir, p2, toDir, bounds) {
        if (this.myArray == null) {
            return;
        }
        this.Abort = false;
        var x = p1.X;
        var y = p1.Y;
        if (!this.inBounds(x, y)) {
            return;
        }
        x = x - this.myMinX;
        x = x / this.myCellX;
        y = y - this.myMinY;
        y = y / this.myCellY;
        var single = p2.X;
        var y1 = p2.Y;
        if (!this.inBounds(single, y1)) {
            return;
        }
        single = single - this.myMinX;
        single = single / this.myCellX;
        y1 = y1 - this.myMinY;
        y1 = y1 / this.myCellY;
        if (Math.abs(x - single) <= 1 && Math.abs(y - y1) <= 1) {
            this.Abort = true;
            return;
        }
        var x1 = bounds.X;
        var single1 = bounds.Y;
        var x2 = bounds.X + bounds.Width;
        var y2 = bounds.Y + bounds.Height;
        x1 = (x1 - this.myMinX) / this.myCellX;
        single1 = (single1 - this.myMinY) / this.myCellY;
        x2 = (x2 - this.myMinX) / this.myCellX;
        y2 = (y2 - this.myMinY) / this.myCellY;
        var int32 = Math.max(0, Math.min(this.myUpperBoundX, x1));
        var int321 = Math.min(this.myUpperBoundX, Math.max(0, x2));
        var int322 = Math.max(0, Math.min(this.myUpperBoundY, single1));
        var int323 = Math.min(this.myUpperBoundY, Math.max(0, y2));
        var int324 = x;
        var int325 = y;
        var int326 = single;
        var int327 = y1;
        var int328 = int324;
        var int329 = int325;
        var int3210 = (fromDir === RIGHT || fromDir === DOWN ? 1 : -1);
        var flag = (fromDir === DOWN ? true : fromDir === UP);
        if (!flag) {
            int328 = this.breakOut(int324, int325, int326, int327, int3210, flag, int32, int321, int322, int323);
        }
        else {
            int329 = this.breakOut(int324, int325, int326, int327, int3210, flag, int32, int321, int322, int323);
        }
        if (this.Abort) {
            return;
        }
        this.breakIn(int324, int325, int326, int327, (toDir === RIGHT || toDir === DOWN ? 1 : -1), (toDir === DOWN ? true : toDir === UP), int32, int321, int322, int323);
        if (this.Abort) {
            return;
        }
        this.spread(int328, int329, 1, false, int32, int321, int322, int323);
        this.spread(int328, int329, -1, false, int32, int321, int322, int323);
        this.spread(int328, int329, 1, true, int32, int321, int322, int323);
        this.spread(int328, int329, -1, true, int32, int321, int322, int323);
    };
    TuPositionArray.prototype.ray = function (x, y, inc, vert, lowx, hix, lowy, hiy) {
        var int32 = this.myArray[x][y] & -4;
        if (int32 >= 4 && int32 < MAX) {
            if (!vert) {
                x = (x + inc);
            }
            else {
                y = (y + inc);
            }
            int32 = (int32 + 4);
            while (lowx <= x && x <= hix && lowy <= y && y <= hiy) {
                var int321 = this.myArray[x][y];
                if (int32 >= (int321 & -4)) {
                    break;
                }
                this.myArray[x][y] = int32 | int321 & 3;
                int32 = (int32 + 4);
                if (!vert) {
                    x = (x + inc);
                }
                else {
                    y = (y + inc);
                }
            }
        }
        if (vert) {
            return y;
        }
        return x;
    };
    TuPositionArray.prototype.setAll = function (v) {
        if (this.myArray == null) {
            return;
        }
        for (var i = 0; i <= this.myUpperBoundX; i++) {
            for (var j = 0; j <= this.myUpperBoundY; j++) {
                this.myArray[i][j] = v;
            }
        }
    };
    TuPositionArray.prototype.setOccupied = function (x, y) {
        if (!this.inBounds(x, y)) {
            return;
        }
        x = x - this.myMinX;
        x = x / this.myCellX;
        y = y - this.myMinY;
        y = y / this.myCellY;
        var int32 = x;
        var int321 = y;
        this.myArray[int32][int321] = 0;
    };
    TuPositionArray.prototype.spread = function (x, y, inc, vert, lowx, hix, lowy, hiy) {
        if (x < lowx || x > hix || y < lowy || y > hiy) {
            return;
        }
        var int32 = this.ray(x, y, inc, vert, lowx, hix, lowy, hiy);
        if (vert) {
            if (inc > 0) {
                for (var i = (y + inc); i < int32; i = (i + inc)) {
                    this.spread(x, i, 1, !vert, lowx, hix, lowy, hiy);
                    this.spread(x, i, -1, !vert, lowx, hix, lowy, hiy);
                }
                return;
            }
            for (var j = (y + inc); j > int32; j = (j + inc)) {
                this.spread(x, j, 1, !vert, lowx, hix, lowy, hiy);
                this.spread(x, j, -1, !vert, lowx, hix, lowy, hiy);
            }
            return;
        }
        if (inc > 0) {
            for (var k = (x + inc); k < int32; k = (k + inc)) {
                this.spread(k, y, 1, !vert, lowx, hix, lowy, hiy);
                this.spread(k, y, -1, !vert, lowx, hix, lowy, hiy);
            }
            return;
        }
        for (var l = (x + inc); l > int32; l = (l + inc)) {
            this.spread(l, y, 1, !vert, lowx, hix, lowy, hiy);
            this.spread(l, y, -1, !vert, lowx, hix, lowy, hiy);
        }
    };
    TuPositionArray.VERT = 1;
    TuPositionArray.HORIZ = 2;
    TuPositionArray.START = 4;
    TuPositionArray.StartDistance = 1;
    TuPositionArray.StepDistance = 1;
    TuPositionArray.MaxDistance = 536870911;
    return TuPositionArray;
}());



/***/ }),

/***/ "./src/TuDocument/TuRoutingTime.ts":
/*!*****************************************!*\
  !*** ./src/TuDocument/TuRoutingTime.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuRoutingTime": () => (/* binding */ TuRoutingTime)
/* harmony export */ });
var TuRoutingTime;
(function (TuRoutingTime) {
    TuRoutingTime[TuRoutingTime["Immediate"] = 0] = "Immediate";
    TuRoutingTime[TuRoutingTime["Delayed"] = 1] = "Delayed";
    TuRoutingTime[TuRoutingTime["AfterNodesDragged"] = 3] = "AfterNodesDragged";
    TuRoutingTime[TuRoutingTime["AfterLinksDragged"] = 5] = "AfterLinksDragged";
    TuRoutingTime[TuRoutingTime["AfterNodesAndLinksDragged"] = 7] = "AfterNodesAndLinksDragged";
})(TuRoutingTime || (TuRoutingTime = {}));


/***/ }),

/***/ "./src/TuDocument/TuUndoManagerCompoundEdit.ts":
/*!*****************************************************!*\
  !*** ./src/TuDocument/TuUndoManagerCompoundEdit.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuUndoManagerCompoundEdit": () => (/* binding */ TuUndoManagerCompoundEdit)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuUndoManagerCompoundEdit = /** @class */ (function () {
    function TuUndoManagerCompoundEdit() {
        this.myEdits = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        this.myIsComplete = false;
        this.myName = '';
    }
    Object.defineProperty(TuUndoManagerCompoundEdit.prototype, "AllEdits", {
        get: function () {
            return this.getAllEdits();
        },
        enumerable: false,
        configurable: true
    });
    TuUndoManagerCompoundEdit.prototype.getAllEdits = function () {
        return this.myEdits;
    };
    Object.defineProperty(TuUndoManagerCompoundEdit.prototype, "IsComplete", {
        get: function () {
            return this.getIsComplete();
        },
        set: function (value) {
            this.setIsComplete(value);
        },
        enumerable: false,
        configurable: true
    });
    TuUndoManagerCompoundEdit.prototype.getIsComplete = function () {
        return this.myIsComplete;
    };
    TuUndoManagerCompoundEdit.prototype.setIsComplete = function (value) {
        if (value) {
            this.myIsComplete = value;
        }
    };
    Object.defineProperty(TuUndoManagerCompoundEdit.prototype, "PresentationName", {
        get: function () {
            return this.getPresentationName();
        },
        set: function (value) {
            this.setPresentationName(value);
        },
        enumerable: false,
        configurable: true
    });
    TuUndoManagerCompoundEdit.prototype.getPresentationName = function () {
        return this.myName;
    };
    TuUndoManagerCompoundEdit.prototype.setPresentationName = function (value) {
        this.myName = value;
    };
    TuUndoManagerCompoundEdit.prototype.addEdit = function (edit) {
        if (!this.IsComplete) {
            this.myEdits.Add(edit);
        }
    };
    TuUndoManagerCompoundEdit.prototype.CanRedo = function () {
        return this.IsComplete;
    };
    TuUndoManagerCompoundEdit.prototype.CanUndo = function () {
        return this.IsComplete;
    };
    TuUndoManagerCompoundEdit.prototype.Clear = function () {
        for (var i = this.myEdits.Count - 1; i >= 0; i--) {
            this.myEdits[i].Clear();
        }
        this.myEdits.Clear();
    };
    TuUndoManagerCompoundEdit.prototype.Redo = function () {
        if (this.CanRedo()) {
            for (var i = 0; i <= this.myEdits.Count - 1; i++) {
                this.myEdits[i].Redo();
            }
        }
    };
    TuUndoManagerCompoundEdit.prototype.Undo = function () {
        if (this.CanUndo()) {
            for (var i = this.myEdits.Count - 1; i >= 0; i--) {
                this.myEdits[i].Undo();
            }
        }
    };
    TuUndoManagerCompoundEdit = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuUndoManagerCompoundEdit,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuUndoManagerCompoundEdit
            ]
        })
    ], TuUndoManagerCompoundEdit);
    return TuUndoManagerCompoundEdit;
}());



/***/ }),

/***/ "./src/TuDragImage.ts":
/*!****************************!*\
  !*** ./src/TuDragImage.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuDragImage": () => (/* binding */ TuDragImage)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ "./src/types.ts");
/* harmony import */ var _TuImage_TuImage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuImage/TuImage */ "./src/TuImage/TuImage.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_3__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TuDragImage = /** @class */ (function (_super) {
    __extends(TuDragImage, _super);
    function TuDragImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuDragImage.prototype.getLocation = function () {
        var left = this.Left;
        var offset = this.Offset;
        var width = left + offset.Width;
        var top = this.Top;
        offset = this.Offset;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(width, top + offset.Height);
    };
    TuDragImage.prototype.setLocation = function (value) {
        var x = value.X;
        var offset = this.Offset;
        var width = x - offset.Width;
        var y = value.Y;
        offset = this.Offset;
        this.Position = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(width, y - offset.Height);
    };
    Object.defineProperty(TuDragImage.prototype, "Offset", {
        get: function () {
            return this.myOffset;
        },
        set: function (value) {
            this.myOffset = value;
        },
        enumerable: false,
        configurable: true
    });
    TuDragImage = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuDragImage,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuDragImage
            ]
        })
    ], TuDragImage);
    return TuDragImage;
}(_TuImage_TuImage__WEBPACK_IMPORTED_MODULE_2__.TuImage));



/***/ }),

/***/ "./src/TuDragRectangle.ts":
/*!********************************!*\
  !*** ./src/TuDragRectangle.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuDragRectangle": () => (/* binding */ TuDragRectangle)
/* harmony export */ });
/* harmony import */ var _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuRectangle/TuRectangle */ "./src/TuRectangle/TuRectangle.tsx");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var TuDragRectangle = /** @class */ (function (_super) {
    __extends(TuDragRectangle, _super);
    function TuDragRectangle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TuDragRectangle.prototype, "Offset", {
        get: function () {
            return this.myOffset;
        },
        set: function (value) {
            this.myOffset = value;
        },
        enumerable: false,
        configurable: true
    });
    TuDragRectangle.prototype.getLocation = function () {
        var left = this.Left;
        var offset = this.Offset;
        var width = left + offset.Width;
        var top = this.Top;
        offset = this.Offset;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(width, top + offset.Height);
    };
    TuDragRectangle.prototype.setLocation = function (value) {
        var x = value.X;
        var offset = this.Offset;
        var width = x - offset.Width;
        var y = value.Y;
        offset = this.Offset;
        this.Position = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(width, y - offset.Height);
    };
    TuDragRectangle.prototype.getLocation$ = function () {
        var left = this.Left;
        var offset = this.Offset;
        var width = left + offset.Width;
        var top = this.Top;
        offset = this.Offset;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(width, top + offset.Height);
    };
    TuDragRectangle.prototype.setLocation$ = function (value) {
        var x = value.X;
        var offset = this.Offset;
        var width = x - offset.Width;
        var y = value.Y;
        offset = this.Offset;
        this.Position = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(width, y - offset.Height);
    };
    TuDragRectangle.prototype.getOffset = function () {
        return this.myOffset;
    };
    TuDragRectangle.prototype.setOffset = function (value) {
        this.myOffset = value;
    };
    return TuDragRectangle;
}(_TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_0__.TuRectangle));



/***/ }),

/***/ "./src/TuGrid/TuGrid.ts":
/*!******************************!*\
  !*** ./src/TuGrid/TuGrid.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuGrid": () => (/* binding */ TuGrid)
/* harmony export */ });
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuViewGridStyle */ "./src/TuGrid/TuViewGridStyle.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../TuView/TuViewSnapStyle */ "./src/TuView/TuViewSnapStyle.ts");
/* harmony import */ var _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TuGridEvents */ "./src/TuGrid/TuGridEvents.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../TuRectangle/TuRectangle */ "./src/TuRectangle/TuRectangle.tsx");
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../TuView/ViewRenderingMode */ "./src/TuView/ViewRenderingMode.ts");
/* harmony import */ var _TuGridSvgRenderer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./TuGridSvgRenderer */ "./src/TuGrid/TuGridSvgRenderer.tsx");
/* harmony import */ var _TuGridHtmlRenderer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./TuGridHtmlRenderer */ "./src/TuGrid/TuGridHtmlRenderer.tsx");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

















var flagOriginRelative = 1048576;
var flagSnapOpaque = 2097152;
var flagSnapDragWhole = 4194304;
var TuGrid = /** @class */ (function (_super) {
    __extends(TuGrid, _super);
    function TuGrid() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myPaintMinorScale = 0;
        return _this;
    }
    TuGrid_1 = TuGrid;
    Object.defineProperty(TuGrid.prototype, "CellColors", {
        //#region [Property] CellColors
        get: function () {
            return this.getCellColors();
        },
        set: function (value) {
            this.setCellColors(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getCellColors = function () {
        return this.myCellColors;
    };
    TuGrid.prototype.setCellColors = function (value) {
        var colorArray = this.myCellColors;
        if (value != null && !_tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Equals(colorArray, value)) {
            this.myCellColors = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Clone(value);
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedCellColors, 0, colorArray, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Clone(this.myCellColors), _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "CellSize", {
        //#endregion
        //#region [Property] CellSize
        get: function () {
            return this.getCellSize();
        },
        set: function (value) {
            this.setCellSize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getCellSize = function () {
        return this.myCellSize;
    };
    TuGrid.prototype.setCellSize = function (value) {
        var sizeF = this.myCellSize;
        if (!sizeF.Equals(value)) {
            if (value.Width <= 0 || value.Height <= 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("New CGSize value for TuGrid.CellSize must have positive dimensions");
            }
            this.myCellSize = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedCellSize, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(sizeF), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuGrid.prototype, "Extent", {
        //#endregion
        get: function () {
            return this.computeInfiniteBounds(this.Bounds.clone());
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuGrid.prototype, "IsUnbounded", {
        get: function () {
            return (this.UnboundedSpots.ID & 510) !== 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuGrid.prototype, "LineColor", {
        //#region [Property] LineColor
        get: function () {
            return this.getLineColor();
        },
        set: function (value) {
            this.setLineColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getLineColor = function () {
        return this.myLineColor;
    };
    TuGrid.prototype.setLineColor = function (value) {
        var color = this.myLineColor;
        if (!color.Equals(value)) {
            this.myLineColor = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineColor, 0, color, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "LineDashPattern", {
        //#endregion
        //#region [Property] LineDashPattern
        get: function () {
            return this.getLineDashPattern();
        },
        set: function (value) {
            this.setLineDashPattern(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getLineDashPattern = function () {
        return this.myMajorLineDashPattern;
    };
    TuGrid.prototype.setLineDashPattern = function (value) {
        var singleArray = this.myLineDashPattern;
        if (value != null && value.length >= 2 && !_tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Equals(singleArray, value)) {
            this.myLineDashPattern = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Clone(value);
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineDashPattern, 0, singleArray, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Clone(value), _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "LineDashStyle", {
        //#endregion
        //#region [Property] LineDashStyle
        get: function () {
            return this.getLineDashStyle();
        },
        set: function (value) {
            this.setLineDashStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getLineDashStyle = function () {
        return this.myLineDashStyle;
    };
    TuGrid.prototype.setLineDashStyle = function (value) {
        var dashStyle = this.myLineDashStyle;
        if (dashStyle !== value) {
            this.myLineDashStyle = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineDashStyle, dashStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "LineWidth", {
        //#endregion
        //#region [Property] LineWidth
        get: function () {
            return this.getLineWidth();
        },
        set: function (value) {
            this.setLineWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getLineWidth = function () {
        return this.myLineWidth;
    };
    TuGrid.prototype.setLineWidth = function (value) {
        var single = this.myLineWidth;
        if (single !== value) {
            this.myLineWidth = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineWidth, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuGrid.prototype, "MajorLineColor", {
        //#endregion
        //#region [Property] MajorLineColor
        get: function () {
            return this.getMajorLineColor();
        },
        set: function (value) {
            this.setMajorLineColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getMajorLineColor = function () {
        return this.myMajorLineColor;
    };
    TuGrid.prototype.setMajorLineColor = function (value) {
        var color = this.myMajorLineColor;
        if (!color.Equals(value)) {
            this.myMajorLineColor = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineColor, 0, color, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "MajorLineDashPattern", {
        //#endregion
        //#region [Property] MajorLineDashPattern
        get: function () {
            return this.getMajorLineDashPattern();
        },
        set: function (value) {
            this.setMajorLineDashPattern(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getMajorLineDashPattern = function () {
        return this.myMajorLineDashPattern;
    };
    TuGrid.prototype.setMajorLineDashPattern = function (value) {
        var singleArray = this.myMajorLineDashPattern;
        if (value != null && value.length >= 2 && !_tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Equals(singleArray, value)) {
            this.myMajorLineDashPattern = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Clone(value);
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineDashPattern, 0, singleArray, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Clone(value), _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "MajorLineDashStyle", {
        //#endregion
        //#region [Property] MajorLineDashStyle
        get: function () {
            return this.getMajorLineDashStyle();
        },
        set: function (value) {
            this.setMajorLineDashStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getMajorLineDashStyle = function () {
        return this.myMajorLineDashStyle;
    };
    TuGrid.prototype.setMajorLineDashStyle = function (value) {
        var dashStyle = this.myMajorLineDashStyle;
        if (dashStyle !== value) {
            this.myMajorLineDashStyle = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineDashStyle, dashStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "MajorLineFrequency", {
        //#endregion
        //#region [Property] MajorLineFrequency
        get: function () {
            return this.getMajorLineFrequency();
        },
        set: function (value) {
            this.setMajorLineFrequency(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getMajorLineFrequency = function () {
        return this.myMajorLineFrequency;
    };
    TuGrid.prototype.setMajorLineFrequency = function (value) {
        var size = this.myMajorLineFrequency;
        if (!size.Equals(value)) {
            this.myMajorLineFrequency = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineFrequency, 0, size, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "MajorLineWidth", {
        //#endregion
        //#region [Property] MajorLineWidth
        get: function () {
            return this.getMajorLineWidth();
        },
        set: function (value) {
            this.setMajorLineWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getMajorLineWidth = function () {
        return this.myMajorLineWidth;
    };
    TuGrid.prototype.setMajorLineWidth = function (value) {
        var single = this.myMajorLineWidth;
        if (single !== value) {
            this.myMajorLineWidth = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineWidth, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuGrid.prototype, "Origin", {
        //#endregion
        //#region [Property] Origin
        get: function () {
            return this.getOrigin();
        },
        set: function (value) {
            this.setOrigin(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getOrigin = function () {
        var x = this.myOrigin;
        if (this.OriginRelative) {
            x.X = x.X + this.Left;
            x.Y = x.Y + this.Top;
        }
        return x;
    };
    TuGrid.prototype.setOrigin = function (value) {
        var x = value;
        if (this.OriginRelative) {
            x.X = x.X - this.Left;
            x.Y = x.Y - this.Top;
        }
        var pointF = this.myOrigin;
        if (pointF.Equals(x)) {
            this.myOrigin = x;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedOrigin, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(pointF), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.MakeRect(x));
        }
    };
    Object.defineProperty(TuGrid.prototype, "OriginRelative", {
        //#endregion
        //#region [Property] OriginRelative
        get: function () {
            return this.getOriginRelative();
        },
        set: function (value) {
            this.setOriginRelative(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getOriginRelative = function () {
        return (this.InternalFlags & flagOriginRelative) != 0;
    };
    TuGrid.prototype.setOriginRelative = function (value) {
        var internalFlags = (this.InternalFlags & flagOriginRelative) != 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagOriginRelative;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagOriginRelative;
            }
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedOriginRelative, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "PaintMinorScale", {
        //#endregion
        //#region [Property] PaintMinorScale
        get: function () {
            return this.getPaintMinorScale();
        },
        set: function (value) {
            this.setPaintMinorScale(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getPaintMinorScale = function () {
        return this.myPaintMinorScale;
    };
    TuGrid.prototype.setPaintMinorScale = function (value) {
        var single = this.myPaintMinorScale;
        if (single !== value) {
            this.myPaintMinorScale = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedPaintMinorScale, 0, single, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "SnapCellSpot", {
        //#endregion
        //#region [Property] SnapCellSpot
        get: function () {
            return this.getSnapCellSpot();
        },
        set: function (value) {
            this.setSnapCellSpot(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getSnapCellSpot = function () {
        return this.mySnapCellSpot;
    };
    TuGrid.prototype.setSnapCellSpot = function (value) {
        var int32 = this.mySnapCellSpot;
        if (int32 !== value) {
            this.mySnapCellSpot = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapCellSpot, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "SnapDrag", {
        //#endregion
        //#region [Property] SnapDrag
        get: function () {
            return this.getSnapDrag();
        },
        set: function (value) {
            this.setSnapDrag(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getSnapDrag = function () {
        return this.mySnapDrag;
    };
    TuGrid.prototype.setSnapDrag = function (value) {
        var goViewSnapStyle = this.mySnapDrag;
        if (goViewSnapStyle != value) {
            this.mySnapDrag = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapDrag, goViewSnapStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "SnapDragWhole", {
        //#endregion
        //#region [Property] SnapDragWhole
        get: function () {
            return this.getSnapDragWhole();
        },
        set: function (value) {
            this.setSnapDragWhole(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getSnapDragWhole = function () {
        return (this.InternalFlags & flagSnapDragWhole) !== 0;
    };
    TuGrid.prototype.setSnapDragWhole = function (value) {
        var internalFlags = (this.InternalFlags & flagSnapDragWhole) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagSnapDragWhole;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagSnapDragWhole;
            }
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapDragWhole, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "SnapOpaque", {
        //#endregion
        //#region [Property] SnapOpaque
        get: function () {
            return this.getSnapOpaque();
        },
        set: function (value) {
            this.setSnapOpaque(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getSnapOpaque = function () {
        return (this.InternalFlags & flagSnapOpaque) !== 0;
    };
    TuGrid.prototype.setSnapOpaque = function (value) {
        var internalFlags = (this.InternalFlags & flagSnapOpaque) != 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagSnapOpaque;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagSnapOpaque;
            }
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapOpaque, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "SnapResize", {
        //#endregion
        //#region [Property] SnapResize
        get: function () {
            return this.getSnapResize();
        },
        set: function (value) {
            this.setSnapResize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getSnapResize = function () {
        return this.mySnapResize;
    };
    TuGrid.prototype.setSnapResize = function (value) {
        var goViewSnapStyle = this.mySnapResize;
        if (goViewSnapStyle !== value) {
            this.mySnapResize = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapResize, goViewSnapStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuGrid.prototype, "Style", {
        //#endregion
        //#region [Property] Style
        get: function () {
            return this.getStyle();
        },
        set: function (value) {
            this.setStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getStyle = function () {
        return this.myStyle;
    };
    TuGrid.prototype.setStyle = function (value) {
        var goViewGridStyle = this.myStyle;
        if (goViewGridStyle != value) {
            this.myStyle = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedStyle, goViewGridStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    TuGrid.prototype.style = function (value) { throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('Will Implement getter and setters'); };
    Object.defineProperty(TuGrid.prototype, "UnboundedSpots", {
        //#endregion
        //#region [Property] UnboundedSpots
        get: function () {
            return this.getUnboundedSpots();
        },
        set: function (value) {
            this.setUnboundedSpots(value);
        },
        enumerable: false,
        configurable: true
    });
    TuGrid.prototype.getUnboundedSpots = function () {
        return this.myUnboundedSpots;
    };
    TuGrid.prototype.setUnboundedSpots = function (value) {
        var int32 = this.myUnboundedSpots;
        if (int32 !== value) {
            this.myUnboundedSpots = value;
            this.Changed(_TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedUnboundedSpots, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
            if (this.Parent != null) {
                this.Parent.invalidatePaintBounds();
            }
            if (this.Document != null) {
                this.Document.InvalidateViews();
                return;
            }
            if (this.View != null) {
                this.View.updateView();
            }
        }
    };
    TuGrid.prototype.unboundedSpots = function (value) { throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('Will Implement getter and setters'); };
    //#endregion
    TuGrid.prototype.SetupControlDefaults = function () {
        _super.prototype.SetupControlDefaults.call(this);
        this.myStyle = _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.None;
        this.myOrigin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(0, 0);
        this.myCellSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(50, 50);
        this.myUnboundedSpots = _Spot__WEBPACK_IMPORTED_MODULE_5__.NoSpot;
        this.myLineColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.LightGray;
        this.myMajorLineColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Gray;
        this.myMajorLineFrequency = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(4, 4);
        this.myCellColors = TuGrid_1.DefaultCellColors;
        this.myLineWidth = 1;
        this.myLineDashStyle = _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.DashStyle.Solid;
        this.myLineDashPattern = TuGrid_1.DefaultLineDashPattern;
        this.myMajorLineWidth = 0;
        this.myMajorLineDashStyle = _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.DashStyle.Solid;
        this.myMajorLineDashPattern = TuGrid_1.DefaultMajorLineDashPattern;
        this.mySnapDrag = _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSnapStyle.None;
        this.mySnapResize = _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSnapStyle.None;
        this.mySnapCellSpot = _Spot__WEBPACK_IMPORTED_MODULE_5__.TopLeft;
        this.myPaintMinorScale = 0;
        // TODO: config nesnesini ayarla
        //super();
        /* if (config != null) {
            Object.assign(this, config);
        } */
        // TODO: InternalFlags düzeltilecek.
        this.InternalFlags = this.InternalFlags | 7340032;
        this.Size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(100, 100);
        this.Pen = null;
        this.Brush = null;
    };
    TuGrid.prototype.canSnapPoint = function (p, obj, view) {
        if (!this.CanView()) {
            return false;
        }
        if (view != null) {
            if (obj === this || _super.prototype.isChildOf.call(this, obj)) {
                return false;
            }
            switch (!(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(view.Tool, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolResizing)) ? this.SnapDrag : this.SnapResize) {
                case _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSnapStyle.None:
                    {
                        return false;
                    }
                case _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSnapStyle.Jump:
                    {
                        if (!view.Selection.Contains(this)) {
                            break;
                        }
                        return false;
                    }
                case _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSnapStyle.After:
                    {
                        if (view.LastInput.InputState === _TuInputState__WEBPACK_IMPORTED_MODULE_12__.TuInputState.Finish) {
                            if (!view.Selection.Contains(this)) {
                                break;
                            }
                            return false;
                        }
                        return false;
                    }
                default:
                    {
                        if (!view.Selection.Contains(this)) {
                            break;
                        }
                        return false;
                    }
            }
        }
        var rectangleF = this.computeInfiniteBounds(this.Bounds.clone());
        if (view == null || !_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(view.Tool, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolResizing) && !_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(view.Tool, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolDragging)) {
            return _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.ContainsRect(rectangleF, p);
        }
        return _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.ContainsRect(rectangleF, view.LastInput.DocPoint);
    };
    TuGrid.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedStyle:
                {
                    this.Style = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedOrigin:
                {
                    this.Origin = e.getPoint(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedOriginRelative:
                {
                    this.OriginRelative = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedCellSize:
                {
                    this.CellSize = e.getSize(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineColor:
                {
                    this.LineColor = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineWidth:
                {
                    this.LineWidth = e.getFloat(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineDashStyle:
                {
                    this.LineDashStyle = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapDrag:
                {
                    this.SnapDrag = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapResize:
                {
                    this.SnapResize = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedCellColors:
                {
                    this.CellColors = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedUnboundedSpots:
                {
                    this.UnboundedSpots = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapDragWhole:
                {
                    this.SnapDragWhole = e.getValue(undo);
                    return;
                }
            case 1813:
                {
                    _super.prototype.ChangeValue.call(this, e, undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapOpaque:
                {
                    this.SnapOpaque = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedSnapCellSpot:
                {
                    this.SnapCellSpot = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineColor:
                {
                    this.MajorLineColor = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineWidth:
                {
                    this.MajorLineWidth = e.getFloat(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineDashStyle:
                {
                    this.MajorLineDashStyle = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineFrequency:
                {
                    this.MajorLineFrequency = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedLineDashPattern:
                {
                    this.LineDashPattern = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedMajorLineDashPattern:
                {
                    this.MajorLineDashPattern = e.getValue(undo);
                    return;
                }
            case _TuGridEvents__WEBPACK_IMPORTED_MODULE_8__.TuGridEvents.ChangedPaintMinorScale:
                {
                    this.PaintMinorScale = e.getValue(undo);
                    return;
                }
            default:
                {
                    _super.prototype.ChangeValue.call(this, e, undo);
                    return;
                }
        }
    };
    TuGrid.prototype.computeFiniteBounds = function (infRect, viewRect) {
        var rectangleF = { value: viewRect };
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.InflateRect(rectangleF, 100, 100);
        return _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.IntersectionRect(infRect, rectangleF.value);
    };
    TuGrid.prototype.computeInfiniteBounds = function (rect) {
        if (!this.IsUnbounded) {
            return rect;
        }
        var single = 9.999E+07;
        var unboundedSpots = this.UnboundedSpots;
        if ((unboundedSpots.ID & 274) !== 0) {
            rect.X = rect.X + rect.Width - single;
            rect.Width = single;
        }
        if ((unboundedSpots.ID & 38) !== 0) {
            rect.Y = rect.Y + rect.Height - single;
            rect.Height = single;
        }
        if ((unboundedSpots.ID & 76) !== 0) {
            rect.Width = rect.Width + single;
        }
        if ((unboundedSpots.ID & 152) !== 0) {
            rect.Height = rect.Height + single;
        }
        return rect;
    };
    TuGrid.prototype.drawGridCrosses = function (g, view, cross, clipRect) {
        var flag;
        var width = this.CellSize.Width;
        var height = this.CellSize.Height;
        var lineColor = this.LineColor;
        var majorLineColor = this.MajorLineColor;
        var pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.Pen(lineColor, this.LineWidth);
        var pen1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.Pen(majorLineColor, this.MajorLineWidth);
        var x = clipRect.X - width;
        var y = clipRect.Y - height;
        var single = clipRect.X + clipRect.Width + width;
        var y1 = clipRect.Y + clipRect.Height + height;
        var pointF = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y), 0, 0);
        var pointF1 = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y1), 0, 0);
        var int32 = this.MajorLineFrequency.Width;
        var height1 = this.MajorLineFrequency.Height;
        if (int32 > 0 && height1 > 0) {
            var x1 = pointF.X;
            var origin_1 = this.Origin;
            var int321 = (~~Math.floor(((x1 - origin_1.X) / width))) % int32;
            var single1 = pointF.Y;
            origin_1 = this.Origin;
            var int322 = (~~Math.floor(((single1 - origin_1.Y) / height))) % height1;
            if (int321 < 0) {
                int321 = (int321 + int32);
            }
            if (int322 < 0) {
                int322 = (int322 + height1);
            }
            var int323 = int322;
            for (var i = pointF.X; i < pointF1.X; i = i + width) {
                for (var j = pointF.Y; j < pointF1.Y; j = j + height) {
                    var pen2 = pen;
                    if (int321 === 0 && int322 === 0) {
                        pen2 = pen1;
                    }
                    if (view.DocScale > this.myPaintMinorScale) {
                        flag = true;
                    }
                    else {
                        flag = (int321 !== 0 ? false : int322 === 0);
                    }
                    var flag1 = flag;
                    if (cross.Height > 0 && flag1) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen2, i, j - cross.Height / 2, i, j + cross.Height / 2);
                    }
                    if (cross.Width > 0 && flag1) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen2, i - cross.Width / 2, j, i + cross.Width / 2, j);
                    }
                    int322++;
                    if (int322 >= height1) {
                        int322 = 0;
                    }
                }
                int322 = int323;
                int321++;
                if (int321 >= int32) {
                    int321 = 0;
                }
            }
        }
        else if (view.DocScale > this.myPaintMinorScale) {
            for (var k = pointF.X; k < pointF1.X; k = k + width) {
                for (var l = pointF.Y; l < pointF1.Y; l = l + height) {
                    if (cross.Height > 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen, k, l - cross.Height / 2, k, l + cross.Height / 2);
                    }
                    if (cross.Width > 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen, k - cross.Width / 2, l, k + cross.Width / 2, l);
                    }
                }
            }
        }
        pen.Dispose();
        pen1.Dispose();
    };
    TuGrid.prototype.drawGridDots = function (g, view, clipRect) {
        var width = this.CellSize.Width;
        var height = this.CellSize.Height;
        var lineColor = this.LineColor;
        var majorLineColor = this.MajorLineColor;
        var lineWidth = this.LineWidth;
        var pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.Pen(lineColor, lineWidth);
        var pen1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.Pen(majorLineColor, this.MajorLineWidth);
        var x = clipRect.X - width;
        var y = clipRect.Y - height;
        var single = clipRect.X + clipRect.Width + width;
        var y1 = clipRect.Y + clipRect.Height + height;
        var pointF = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y), 0, 0);
        var pointF1 = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y1), 0, 0);
        if (lineWidth <= 0 && view != null) {
            lineWidth = 1 / view.DocScale;
        }
        var int32 = this.MajorLineFrequency.Width;
        var height1 = this.MajorLineFrequency.Height;
        if (int32 > 0 && height1 > 0) {
            var x1 = pointF.X;
            var origin_2 = this.Origin;
            var int321 = (~~Math.floor(((x1 - origin_2.X) / width))) % int32;
            var single1 = pointF.Y;
            origin_2 = this.Origin;
            var int322 = (~~Math.floor(((single1 - origin_2.Y) / height))) % height1;
            if (int321 < 0) {
                int321 = int321 + int32;
            }
            if (int322 < 0) {
                int322 = int322 + height1;
            }
            var int323 = int322;
            for (var i = pointF.X; i < pointF1.X; i = i + width) {
                for (var j = pointF.Y; j < pointF1.Y; j = j + height) {
                    var pen2 = pen;
                    if (int321 === 0 && int322 === 0) {
                        pen2 = pen1;
                    }
                    if (view.DocScale > this.myPaintMinorScale || int321 === 0 && int322 === 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen2, i - lineWidth / 2, j, i + lineWidth / 2, j);
                    }
                    int322++;
                    if (int322 >= height1) {
                        int322 = 0;
                    }
                }
                int322 = int323;
                int321++;
                if (int321 >= int32) {
                    int321 = 0;
                }
            }
        }
        else if (view.DocScale > this.myPaintMinorScale) {
            for (var k = pointF.X; k < pointF1.X; k = k + width) {
                for (var l = pointF.Y; l < pointF1.Y; l = l + height) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen, k - lineWidth / 2, l, k + lineWidth / 2, l);
                }
            }
        }
        pen.Dispose();
        pen1.Dispose();
    };
    TuGrid.prototype.drawGridLines = function (g, view, clipRect) {
        var origin;
        var width = this.CellSize.Width;
        var height = this.CellSize.Height;
        var lineColor = this.LineColor;
        var majorLineColor = this.MajorLineColor;
        var pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.Pen(lineColor, this.LineWidth);
        if (this.LineDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.DashStyle.Custom) {
            pen.DashPattern = this.LineDashPattern;
        }
        pen.DashStyle = this.LineDashStyle;
        var majorLineDashPattern = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.Pen(majorLineColor, this.MajorLineWidth);
        if (this.MajorLineDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.DashStyle.Custom) {
            majorLineDashPattern.DashPattern = this.MajorLineDashPattern;
        }
        majorLineDashPattern.DashStyle = this.MajorLineDashStyle;
        if (pen.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.DashStyle.Solid || majorLineDashPattern.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.DashStyle.Solid) {
            clipRect = _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.UnionRect(clipRect, view.DocPosition);
        }
        var x = clipRect.X - width;
        var y = clipRect.Y - height;
        var single = clipRect.X + clipRect.Width + width;
        var y1 = clipRect.Y + clipRect.Height + height;
        var pointF = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y), 0, 0);
        var pointF1 = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y1), 0, 0);
        if (this.Style !== _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.HorizontalLine) {
            var int32 = this.MajorLineFrequency.Width;
            if (int32 > 0) {
                var x1 = pointF.X;
                origin = this.Origin;
                var int321 = (Math.floor(((x1 - origin.X) / width))) % int32;
                if (int321 < 0) {
                    int321 = int321 + int32;
                }
                for (var i = pointF.X; i < pointF1.X; i = i + width) {
                    var pen1 = pen;
                    if (int321 === 0) {
                        pen1 = majorLineDashPattern;
                    }
                    if (view.DocScale > this.myPaintMinorScale || int321 == 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen1, i, pointF.Y, i, pointF1.Y);
                    }
                    int321++;
                    if (int321 >= int32) {
                        int321 = 0;
                    }
                }
            }
            else if (view.DocScale > this.myPaintMinorScale) {
                for (var j = pointF.X; j < pointF1.X; j = j + width) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen, j, pointF.Y, j, pointF1.Y);
                }
            }
        }
        if (this.Style !== _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.VerticalLine) {
            var height1 = this.MajorLineFrequency.Height;
            if (height1 > 0) {
                var single1 = pointF.Y;
                origin = this.Origin;
                var int322 = (Math.floor(((single1 - origin.Y) / height))) % height1;
                if (int322 < 0) {
                    int322 = int322 + height1;
                }
                for (var k = pointF.Y; k < pointF1.Y; k = k + height) {
                    var pen2 = pen;
                    if (int322 === 0) {
                        pen2 = majorLineDashPattern;
                    }
                    if (view.DocScale > this.myPaintMinorScale || int322 == 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen2, pointF.X, k, pointF1.X, k);
                    }
                    int322++;
                    if (int322 >= height1) {
                        int322 = 0;
                    }
                }
            }
            else if (view.DocScale > this.myPaintMinorScale) {
                for (var l = pointF.Y; l < pointF1.Y; l = l + height) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawLine(g, view, pen, pointF.X, l, pointF1.X, l);
                }
            }
        }
        pen.Dispose();
        majorLineDashPattern.Dispose();
    };
    TuGrid.prototype.ExpandPaintBounds = function (rect, view) {
        var rectangleF = this.computeInfiniteBounds(rect);
        var width = { value: rectangleF };
        if (view != null) {
            width.value = this.computeFiniteBounds(rectangleF, view.DocExtent);
        }
        var single = Math.max(this.PenWidth, 1);
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.InflateRect(width, single, single);
        if (this.Shadowed) {
            var shadowOffset = this.GetShadowOffset(view);
            if (shadowOffset.Width >= 0) {
                width.value.Width = width.value.Width + shadowOffset.Width;
            }
            else {
                width.value.X = width.value.X + shadowOffset.Width;
                width.value.Width = width.value.Width - shadowOffset.Width;
            }
            if (shadowOffset.Height >= 0) {
                width.value.Height = width.value.Height + shadowOffset.Height;
            }
            else {
                width.value.Y = width.value.Y + shadowOffset.Height;
                width.value.Height = width.value.Height - shadowOffset.Height;
            }
        }
        return width.value;
    };
    TuGrid.prototype.fillGrid = function (g, view, clipRect) {
        var cellColors = this.CellColors;
        var upperBound = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.GetUpperBound(cellColors, 0) + 1;
        var int32 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.GetUpperBound(cellColors, 1) + 1;
        if (upperBound > 0 && int32 > 0 && (upperBound !== 1 || int32 !== 1 || !cellColors[0][0].Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Empty))) {
            var width = this.CellSize.Width;
            var height = this.CellSize.Height;
            var x = clipRect.X - width;
            var y = clipRect.Y - height;
            var single = clipRect.X + clipRect.Width + width;
            var y1 = clipRect.Y + clipRect.Height + height;
            var pointF = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y), 0, 0);
            var pointF1 = this.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y1), 0, 0);
            var x1 = pointF.X;
            var origin_3 = this.Origin;
            var int321 = (~~Math.floor(((x1 - origin_3.X) / width))) % upperBound;
            var single1 = pointF.Y;
            origin_3 = this.Origin;
            var int322 = (Math.floor(((single1 - origin_3.Y) / height))) % int32;
            if (int321 < 0) {
                int321 = (int321 + upperBound);
            }
            if (int322 < 0) {
                int322 = int322 + int32;
            }
            var int323 = int321;
            var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_6__.SolidBrush(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.White);
            for (var i = pointF.Y; i < pointF1.Y; i = i + height) {
                for (var j = pointF.X; j < pointF1.X; j = j + width) {
                    var color = cellColors[int321][int322];
                    if (!color.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Empty)) {
                        solidBrush.Color = color;
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawRectangle(g, view, undefined, solidBrush, j, i, width, height);
                    }
                    int321++;
                    if (int321 >= upperBound) {
                        int321 = 0;
                    }
                }
                int321 = int323;
                int322++;
                if (int322 >= int32) {
                    int322 = 0;
                }
            }
            solidBrush.Dispose();
        }
    };
    TuGrid.prototype.findNearestGridPoint = function (p, obj) {
        var single = 0;
        var single1 = 0;
        var single2 = 0;
        var single3 = 0;
        if (obj != null) {
            var location_1 = obj.Location;
            single = Math.max(0, location_1.X - obj.Left);
            single1 = Math.max(0, obj.Right - location_1.X);
            single2 = Math.max(0, location_1.Y - obj.Top);
            single3 = Math.max(0, obj.Bottom - location_1.Y);
        }
        var cellSize = this.CellSize;
        var rectangleSpotLocation = this.GetRectangleSpotLocation(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle(0, 0, cellSize.Width, cellSize.Height), this.SnapCellSpot);
        var x = this.findNearestInfiniteGridPoint(p, rectangleSpotLocation.X, rectangleSpotLocation.Y);
        var rectangleF = this.computeInfiniteBounds(this.Bounds.clone());
        if (x.X - single < rectangleF.Left) {
            x.X = x.X + cellSize.Width * (~~Math.ceil(((rectangleF.Left - (x.X - single)) / cellSize.Width)));
        }
        if (x.X + single1 > rectangleF.Right) {
            x.X = x.X - cellSize.Width * ((~~Math.ceil(((x.X + single1 - rectangleF.Right) / cellSize.Width))));
        }
        if (single1 > 0 && x.X - single < rectangleF.Left) {
            x.X = x.X + cellSize.Width * ((~~Math.ceil(((rectangleF.Left - (x.X - single)) / cellSize.Width))));
        }
        if (x.Y - single2 < rectangleF.Top) {
            x.Y = x.Y + cellSize.Height * ((~~Math.ceil(((rectangleF.Top - (x.Y - single2)) / cellSize.Height))));
        }
        if (x.Y + single3 > rectangleF.Bottom) {
            x.Y = x.Y - cellSize.Height * ((~~Math.ceil(((x.Y + single3 - rectangleF.Bottom) / cellSize.Height))));
        }
        if (single3 > 0 && x.Y - single2 < rectangleF.Top) {
            x.Y = x.Y + cellSize.Height * ((~~Math.ceil(((rectangleF.Top - (x.Y - single2)) / cellSize.Height))));
        }
        return x;
    };
    TuGrid.prototype.findNearestInfiniteGridPoint = function (p, offx, offy) {
        var x = p.X;
        var y = p.Y;
        var origin = this.Origin;
        var single = origin.X + offx;
        var y1 = origin.Y + offy;
        var cellSize = this.CellSize;
        var width = cellSize.Width;
        var height = cellSize.Height;
        var single1 = Math.floor(((x - single) / width)) * width + single;
        var single2 = Math.floor(((y - y1) / height)) * height + y1;
        var single3 = single1;
        if (single1 + width - x < width / 2) {
            single3 = single1 + width;
        }
        var single4 = single2;
        if (single2 + height - y < height / 2) {
            single4 = single2 + height;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single3, single4);
    };
    TuGrid.prototype.GetShadowBrush = function (view) {
        var parent = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(this.Parent, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuSheet);
        if (parent != null && parent.Paper == this) {
            return parent.GetShadowBrush(view);
        }
        return _super.prototype.GetShadowBrush.call(this, view);
    };
    TuGrid.prototype.CreateElements = function (param) {
        var view = param;
        var result = [];
        if (view.RenderingMode === _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_14__.ViewRenderingMode.Svg) {
            return _TuGridSvgRenderer__WEBPACK_IMPORTED_MODULE_15__.TuGridSvgRenderer.Apply(view, this);
        }
        else if (view.RenderingMode === _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_14__.ViewRenderingMode.Html) {
            return _TuGridHtmlRenderer__WEBPACK_IMPORTED_MODULE_16__.TuGridHtmlRenderer.Apply(view, this);
        }
    };
    TuGrid.prototype.Paint = function (g, view) {
        var clipBounds = view.ClientRectangle; //g.ClipBounds;
        var rectangleF = this.computeInfiniteBounds(this.Bounds.clone());
        var rectangleF1 = this.computeFiniteBounds(rectangleF, view.DocExtent);
        var brush = this.Brush;
        if (this.Shadowed && brush != null) {
            var shadowOffset = this.GetShadowOffset(view);
            var width = shadowOffset.Width;
            var height = shadowOffset.Height;
            if (shadowOffset.Width !== 0 || shadowOffset.Height !== 0) {
                var x = rectangleF1.X;
                var y = rectangleF1.Y;
                var single = rectangleF1.X + rectangleF1.Width;
                var y1 = rectangleF1.Y + rectangleF1.Height;
                var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y);
                var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y);
                var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y1);
                var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y1);
                var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x + width, y + height);
                var pointF5 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single + width, y + height);
                var pointF6 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single + width, y1 + height);
                var pointF7 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x + width, y1 + height);
                var shadowBrush = this.GetShadowBrush(view);
                if (width > 0) {
                    if (height > 0) {
                        var pointFArray = view.allocTempPointArray(6);
                        pointFArray[0] = pointF5;
                        pointFArray[1] = pointF6;
                        pointFArray[2] = pointF7;
                        pointFArray[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x + width, y1);
                        pointFArray[4] = pointF2;
                        pointFArray[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y + height);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawPolygon(g, view, undefined, shadowBrush, pointFArray);
                        view.freeTempPointArray(pointFArray);
                    }
                    else if (height >= 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawRectangle(g, view, null, shadowBrush, pointF1.X, pointF1.Y, width, rectangleF1.Height);
                    }
                    else {
                        var pointFArray1 = view.allocTempPointArray(6);
                        pointFArray1[0] = pointF4;
                        pointFArray1[1] = pointF5;
                        pointFArray1[2] = pointF6;
                        pointFArray1[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single, y1 + height);
                        pointFArray1[4] = pointF1;
                        pointFArray1[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x + width, y);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawPolygon(g, view, undefined, shadowBrush, pointFArray1);
                        view.freeTempPointArray(pointFArray1);
                    }
                }
                else if (width < 0) {
                    if (height > 0) {
                        var pointFArray2 = view.allocTempPointArray(6);
                        pointFArray2[0] = pointF6;
                        pointFArray2[1] = pointF7;
                        pointFArray2[2] = pointF4;
                        pointFArray2[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y + height);
                        pointFArray2[4] = pointF3;
                        pointFArray2[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single + width, y1);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawPolygon(g, view, undefined, shadowBrush, pointFArray2);
                        view.freeTempPointArray(pointFArray2);
                    }
                    else if (height >= 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawRectangle(g, view, undefined, shadowBrush, pointF4.X, pointF4.Y, -width, rectangleF1.Height);
                    }
                    else {
                        var pointFArray3 = view.allocTempPointArray(6);
                        pointFArray3[0] = pointF7;
                        pointFArray3[1] = pointF4;
                        pointFArray3[2] = pointF5;
                        pointFArray3[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(single + width, y);
                        pointFArray3[4] = pointF;
                        pointFArray3[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint(x, y1 + height);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawPolygon(g, view, undefined, shadowBrush, pointFArray3);
                        view.freeTempPointArray(pointFArray3);
                    }
                }
                else if (height > 0) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawRectangle(g, view, undefined, shadowBrush, pointF3.X, pointF3.Y, rectangleF1.Width, height);
                }
                else if (height < 0) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawRectangle(g, view, undefined, shadowBrush, pointF4.X, pointF4.Y, rectangleF1.Width, -height);
                }
            }
        }
        if (brush != null) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawRectangle(g, view, undefined, brush, rectangleF1.X, rectangleF1.Y, rectangleF1.Width, rectangleF1.Height);
        }
        var rectangleF2 = _GeomUtilities__WEBPACK_IMPORTED_MODULE_10__.GeomUtilities.IntersectionRect(rectangleF1, clipBounds);
        if (rectangleF2.Width > 0 && rectangleF2.Height > 0) {
            var clip = g.Clip;
            // TODO: clip kontrol edilecek, alternatif aranacak.
            //g.intersectClip(rectangleF2);
            this.fillGrid(g, view, rectangleF2);
            switch (this.Style) {
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.None:
                    {
                        g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.Dot:
                    {
                        this.drawGridDots(g, view, rectangleF2);
                        g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.Cross:
                    {
                        this.drawGridCrosses(g, view, new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(6, 6), rectangleF2);
                        g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.Line:
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.HorizontalLine:
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewGridStyle.VerticalLine:
                    {
                        this.drawGridLines(g, view, rectangleF2);
                        g.Clip = clip;
                        break;
                    }
                default:
                    {
                        g.Clip = clip;
                        break;
                    }
            }
        }
        if (this.Pen != null) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_0__.TuShape.DrawRectangle(g, view, this.Pen, undefined, rectangleF1.X, rectangleF1.Y, rectangleF1.Width, rectangleF1.Height);
        }
    };
    TuGrid.prototype.snapPoint = function (p, obj, view) {
        if (obj != null && view != null && this.SnapDragWhole && _tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(view.Tool, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolDragging)) {
            return this.findNearestGridPoint(p, obj);
        }
        return this.findNearestGridPoint(p, undefined);
    };
    var TuGrid_1;
    TuGrid.flagOriginRelative = 1048576;
    TuGrid.flagSnapOpaque = 2097152;
    TuGrid.flagSnapDragWhole = 4194304;
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myOrigin", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myCellSize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myUnboundedSpots", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myLineColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myMajorLineColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myMajorLineFrequency", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myCellColors", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myLineWidth", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myLineDashStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myLineDashPattern", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myMajorLineWidth", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myMajorLineDashStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myMajorLineDashPattern", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "mySnapDrag", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "mySnapResize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "mySnapCellSpot", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuGrid.prototype, "myPaintMinorScale", void 0);
    TuGrid = TuGrid_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuGrid,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuGrid,
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuDragSnapper
            ]
        })
    ], TuGrid);
    return TuGrid;
}(_TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_11__.TuRectangle));

(function staticConstructor() {
    TuGrid.DefaultCellColors = [[], []];
    TuGrid.DefaultLineDashPattern = [4, 4];
    TuGrid.DefaultMajorLineDashPattern = [4, 4];
})();


/***/ }),

/***/ "./src/TuGrid/TuGridEvents.ts":
/*!************************************!*\
  !*** ./src/TuGrid/TuGridEvents.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuGridEvents": () => (/* binding */ TuGridEvents)
/* harmony export */ });
/* harmony import */ var _TuShape_TuShapeEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuShape/TuShapeEvents */ "./src/TuShape/TuShapeEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuGridEvents = /** @class */ (function (_super) {
    __extends(TuGridEvents, _super);
    function TuGridEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuGridEvents.ChangedStyle = 1801;
    TuGridEvents.ChangedOrigin = 1802;
    TuGridEvents.ChangedOriginRelative = 1803;
    TuGridEvents.ChangedCellSize = 1804;
    TuGridEvents.ChangedLineColor = 1805;
    TuGridEvents.ChangedLineWidth = 1806;
    TuGridEvents.ChangedLineDashStyle = 1807;
    TuGridEvents.ChangedSnapDrag = 1808;
    TuGridEvents.ChangedSnapResize = 1809;
    TuGridEvents.ChangedCellColors = 1810;
    TuGridEvents.ChangedUnboundedSpots = 1811;
    TuGridEvents.ChangedSnapDragWhole = 1812;
    TuGridEvents.ChangedSnapOpaque = 1814;
    TuGridEvents.ChangedSnapCellSpot = 1815;
    TuGridEvents.ChangedMajorLineColor = 1816;
    TuGridEvents.ChangedMajorLineWidth = 1817;
    TuGridEvents.ChangedMajorLineDashStyle = 1818;
    TuGridEvents.ChangedMajorLineFrequency = 1819;
    TuGridEvents.ChangedLineDashPattern = 1820;
    TuGridEvents.ChangedMajorLineDashPattern = 1821;
    TuGridEvents.ChangedPaintMinorScale = 1822;
    TuGridEvents[1801] = 'ChangedStyle';
    TuGridEvents[1802] = 'ChangedOrigin';
    TuGridEvents[1803] = 'ChangedOriginRelative';
    TuGridEvents[1804] = 'ChangedCellSize';
    TuGridEvents[1805] = 'ChangedLineColor';
    TuGridEvents[1806] = 'ChangedLineWidth';
    TuGridEvents[1807] = 'ChangedLineDashStyle';
    TuGridEvents[1808] = 'ChangedSnapDrag';
    TuGridEvents[1809] = 'ChangedSnapResize';
    TuGridEvents[1810] = 'ChangedCellColors';
    TuGridEvents[1811] = 'ChangedUnboundedSpots';
    TuGridEvents[1812] = 'ChangedSnapDragWhole';
    TuGridEvents[1814] = 'ChangedSnapOpaque';
    TuGridEvents[1815] = 'ChangedSnapCellSpot';
    TuGridEvents[1816] = 'ChangedMajorLineColor';
    TuGridEvents[1817] = 'ChangedMajorLineWidth';
    TuGridEvents[1818] = 'ChangedMajorLineDashStyle';
    TuGridEvents[1819] = 'ChangedMajorLineFrequency';
    TuGridEvents[1820] = 'ChangedLineDashPattern';
    TuGridEvents[1821] = 'ChangedMajorLineDashPattern';
    TuGridEvents[1822] = 'ChangedPaintMinorScale';
    return TuGridEvents;
}(_TuShape_TuShapeEvents__WEBPACK_IMPORTED_MODULE_0__.TuShapeEvents));



/***/ }),

/***/ "./src/TuGrid/TuGridHtmlRenderer.tsx":
/*!*******************************************!*\
  !*** ./src/TuGrid/TuGridHtmlRenderer.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuGridHtmlRenderer": () => (/* binding */ TuGridHtmlRenderer)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TuViewGridStyle */ "./src/TuGrid/TuViewGridStyle.ts");







var TuGridHtmlRenderer = /** @class */ (function () {
    function TuGridHtmlRenderer() {
    }
    TuGridHtmlRenderer.drawGridLines = function (result, grid, view, clipRect) {
        var origin;
        var width = grid.CellSize.Width;
        var height = grid.CellSize.Height;
        var lineColor = grid.LineColor;
        var majorLineColor = grid.MajorLineColor;
        var pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pen(lineColor, grid.LineWidth);
        if (grid.LineDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Custom) {
            pen.DashPattern = grid.LineDashPattern;
        }
        pen.DashStyle = grid.LineDashStyle;
        var majorLineDashPattern = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pen(majorLineColor, grid.MajorLineWidth);
        if (grid.MajorLineDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Custom) {
            majorLineDashPattern.DashPattern = grid.MajorLineDashPattern;
        }
        majorLineDashPattern.DashStyle = grid.MajorLineDashStyle;
        if (pen.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Solid || majorLineDashPattern.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Solid) {
            clipRect = _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.UnionRect(clipRect, view.DocPosition);
        }
        var x = clipRect.X - width;
        var y = clipRect.Y - height;
        var single = clipRect.X + clipRect.Width + width;
        var y1 = clipRect.Y + clipRect.Height + height;
        var pointF = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y), 0, 0);
        var pointF1 = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1), 0, 0);
        if (grid.Style !== _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.HorizontalLine) {
            var int32 = grid.MajorLineFrequency.Width;
            if (int32 > 0) {
                var x1 = pointF.X;
                origin = grid.Origin;
                var int321 = (Math.floor(((x1 - origin.X) / width))) % int32;
                if (int321 < 0) {
                    int321 = int321 + int32;
                }
                for (var i = pointF.X; i < pointF1.X; i = i + width) {
                    var pen1 = pen;
                    if (int321 === 0) {
                        pen1 = majorLineDashPattern;
                    }
                    if (view.DocScale > grid.myPaintMinorScale || int321 == 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlLine(result, view, pen1, i, pointF.Y, i, pointF1.Y);
                    }
                    int321++;
                    if (int321 >= int32) {
                        int321 = 0;
                    }
                }
            }
            else if (view.DocScale > grid.myPaintMinorScale) {
                for (var j = pointF.X; j < pointF1.X; j = j + width) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlLine(result, view, pen, j, pointF.Y, j, pointF1.Y);
                }
            }
        }
        if (grid.Style !== _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.VerticalLine) {
            var height1 = grid.MajorLineFrequency.Height;
            if (height1 > 0) {
                var single1 = pointF.Y;
                origin = grid.Origin;
                var int322 = (Math.floor(((single1 - origin.Y) / height))) % height1;
                if (int322 < 0) {
                    int322 = int322 + height1;
                }
                for (var k = pointF.Y; k < pointF1.Y; k = k + height) {
                    var pen2 = pen;
                    if (int322 === 0) {
                        pen2 = majorLineDashPattern;
                    }
                    if (view.DocScale > grid.myPaintMinorScale || int322 == 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlLine(result, view, pen2, pointF.X, k, pointF1.X, k);
                    }
                    int322++;
                    if (int322 >= height1) {
                        int322 = 0;
                    }
                }
            }
            else if (view.DocScale > grid.myPaintMinorScale) {
                for (var l = pointF.Y; l < pointF1.Y; l = l + height) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlLine(result, view, pen, pointF.X, l, pointF1.X, l);
                }
            }
        }
        pen.Dispose();
        majorLineDashPattern.Dispose();
    };
    TuGridHtmlRenderer.fillGrid = function (result, grid, view, clipRect) {
        var cellColors = grid.CellColors;
        var upperBound = _tuval_core__WEBPACK_IMPORTED_MODULE_2__.TArray.GetUpperBound(cellColors, 0) + 1;
        var int32 = _tuval_core__WEBPACK_IMPORTED_MODULE_2__.TArray.GetUpperBound(cellColors, 1) + 1;
        if (upperBound > 0 && int32 > 0 && (upperBound !== 1 || int32 !== 1 || !cellColors[0][0].Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Empty))) {
            var width = grid.CellSize.Width;
            var height = grid.CellSize.Height;
            var x = clipRect.X - width;
            var y = clipRect.Y - height;
            var single = clipRect.X + clipRect.Width + width;
            var y1 = clipRect.Y + clipRect.Height + height;
            var pointF = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y), 0, 0);
            var pointF1 = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1), 0, 0);
            var x1 = pointF.X;
            var origin_1 = grid.Origin;
            var int321 = (~~Math.floor(((x1 - origin_1.X) / width))) % upperBound;
            var single1 = pointF.Y;
            origin_1 = grid.Origin;
            var int322 = (Math.floor(((single1 - origin_1.Y) / height))) % int32;
            if (int321 < 0) {
                int321 = (int321 + upperBound);
            }
            if (int322 < 0) {
                int322 = int322 + int32;
            }
            var int323 = int321;
            var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.SolidBrush(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.White);
            for (var i = pointF.Y; i < pointF1.Y; i = i + height) {
                for (var j = pointF.X; j < pointF1.X; j = j + width) {
                    var color = cellColors[int321][int322];
                    if (!color.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Empty)) {
                        solidBrush.Color = color;
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlRectangle(result, view, undefined, solidBrush, j, i, width, height);
                    }
                    int321++;
                    if (int321 >= upperBound) {
                        int321 = 0;
                    }
                }
                int321 = int323;
                int322++;
                if (int322 >= int32) {
                    int322 = 0;
                }
            }
            solidBrush.Dispose();
        }
    };
    TuGridHtmlRenderer.Apply = function (view, grid) {
        var result = [];
        var clipBounds = view.ClientRectangle; //g.ClipBounds;
        var rectangleF = grid.computeInfiniteBounds(grid.Bounds.clone());
        var rectangleF1 = grid.computeFiniteBounds(rectangleF, view.DocExtent);
        var brush = grid.Brush;
        if (grid.Shadowed && brush != null) {
            var shadowOffset = grid.GetShadowOffset(view);
            var width = shadowOffset.Width;
            var height = shadowOffset.Height;
            if (shadowOffset.Width !== 0 || shadowOffset.Height !== 0) {
                var x = rectangleF1.X;
                var y = rectangleF1.Y;
                var single = rectangleF1.X + rectangleF1.Width;
                var y1 = rectangleF1.Y + rectangleF1.Height;
                var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y);
                var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y);
                var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1);
                var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y1);
                var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y + height);
                var pointF5 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y + height);
                var pointF6 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y1 + height);
                var pointF7 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y1 + height);
                var shadowBrush = grid.GetShadowBrush(view);
                if (width > 0) {
                    if (height > 0) {
                        var pointFArray = view.allocTempPointArray(6);
                        pointFArray[0] = pointF5;
                        pointFArray[1] = pointF6;
                        pointFArray[2] = pointF7;
                        pointFArray[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y1);
                        pointFArray[4] = pointF2;
                        pointFArray[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y + height);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlPolygon(result, view, undefined, shadowBrush, pointFArray);
                        view.freeTempPointArray(pointFArray);
                    }
                    else if (height >= 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlRectangle(result, view, null, shadowBrush, pointF1.X, pointF1.Y, width, rectangleF1.Height);
                    }
                    else {
                        var pointFArray1 = view.allocTempPointArray(6);
                        pointFArray1[0] = pointF4;
                        pointFArray1[1] = pointF5;
                        pointFArray1[2] = pointF6;
                        pointFArray1[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1 + height);
                        pointFArray1[4] = pointF1;
                        pointFArray1[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlPolygon(result, view, undefined, shadowBrush, pointFArray1);
                        view.freeTempPointArray(pointFArray1);
                    }
                }
                else if (width < 0) {
                    if (height > 0) {
                        var pointFArray2 = view.allocTempPointArray(6);
                        pointFArray2[0] = pointF6;
                        pointFArray2[1] = pointF7;
                        pointFArray2[2] = pointF4;
                        pointFArray2[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y + height);
                        pointFArray2[4] = pointF3;
                        pointFArray2[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y1);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlPolygon(result, view, undefined, shadowBrush, pointFArray2);
                        view.freeTempPointArray(pointFArray2);
                    }
                    else if (height >= 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlRectangle(result, view, undefined, shadowBrush, pointF4.X, pointF4.Y, -width, rectangleF1.Height);
                    }
                    else {
                        var pointFArray3 = view.allocTempPointArray(6);
                        pointFArray3[0] = pointF7;
                        pointFArray3[1] = pointF4;
                        pointFArray3[2] = pointF5;
                        pointFArray3[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y);
                        pointFArray3[4] = pointF;
                        pointFArray3[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y1 + height);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlPolygon(result, view, undefined, shadowBrush, pointFArray3);
                        view.freeTempPointArray(pointFArray3);
                    }
                }
                else if (height > 0) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlRectangle(result, view, undefined, shadowBrush, pointF3.X, pointF3.Y, rectangleF1.Width, height);
                }
                else if (height < 0) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlRectangle(result, view, undefined, shadowBrush, pointF4.X, pointF4.Y, rectangleF1.Width, -height);
                }
            }
        }
        if (brush != null) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawSvgRectangle(result, view, undefined, brush, rectangleF1.X, rectangleF1.Y, rectangleF1.Width, rectangleF1.Height);
        }
        var rectangleF2 = _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.IntersectionRect(rectangleF1, clipBounds);
        if (rectangleF2.Width > 0 && rectangleF2.Height > 0) {
            //const clip: Region = g.Clip;
            // TODO: clip kontrol edilecek, alternatif aranacak.
            //g.intersectClip(rectangleF2);
            TuGridHtmlRenderer.fillGrid(result, grid, view, rectangleF2);
            switch (grid.Style) {
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.None:
                    {
                        //g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.Dot:
                    {
                        // grid.drawGridDots(g, view, rectangleF2);
                        // g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.Cross:
                    {
                        // grid.drawGridCrosses(g, view, new CGSize(6, 6), rectangleF2);
                        // g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.Line:
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.HorizontalLine:
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_6__.TuViewGridStyle.VerticalLine:
                    {
                        TuGridHtmlRenderer.drawGridLines(result, grid, view, rectangleF2);
                        //g.Clip = clip;
                        break;
                    }
                default:
                    {
                        //g.Clip = clip;
                        break;
                    }
            }
        }
        if (grid.Pen != null) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_4__.TuShape.DrawHtmlRectangle(result, view, grid.Pen, undefined, rectangleF1.X, rectangleF1.Y, rectangleF1.Width, rectangleF1.Height);
        }
        return (_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Teact.createElement("div", { class: 'TuGrid' }, result));
    };
    return TuGridHtmlRenderer;
}());



/***/ }),

/***/ "./src/TuGrid/TuGridSvgRenderer.tsx":
/*!******************************************!*\
  !*** ./src/TuGrid/TuGridSvgRenderer.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuGridSvgRenderer": () => (/* binding */ TuGridSvgRenderer)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuViewGridStyle */ "./src/TuGrid/TuViewGridStyle.ts");






var TuGridSvgRenderer = /** @class */ (function () {
    function TuGridSvgRenderer() {
    }
    TuGridSvgRenderer.drawGridLines = function (result, grid, view, clipRect) {
        var origin;
        var width = grid.CellSize.Width;
        var height = grid.CellSize.Height;
        var lineColor = grid.LineColor;
        var majorLineColor = grid.MajorLineColor;
        var pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pen(lineColor, grid.LineWidth);
        if (grid.LineDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Custom) {
            pen.DashPattern = grid.LineDashPattern;
        }
        pen.DashStyle = grid.LineDashStyle;
        var majorLineDashPattern = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pen(majorLineColor, grid.MajorLineWidth);
        if (grid.MajorLineDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Custom) {
            majorLineDashPattern.DashPattern = grid.MajorLineDashPattern;
        }
        majorLineDashPattern.DashStyle = grid.MajorLineDashStyle;
        if (pen.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Solid || majorLineDashPattern.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Solid) {
            clipRect = _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.UnionRect(clipRect, view.DocPosition);
        }
        var x = clipRect.X - width;
        var y = clipRect.Y - height;
        var single = clipRect.X + clipRect.Width + width;
        var y1 = clipRect.Y + clipRect.Height + height;
        var pointF = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y), 0, 0);
        var pointF1 = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1), 0, 0);
        if (grid.Style !== _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.HorizontalLine) {
            var int32 = grid.MajorLineFrequency.Width;
            if (int32 > 0) {
                var x1 = pointF.X;
                origin = grid.Origin;
                var int321 = (Math.floor(((x1 - origin.X) / width))) % int32;
                if (int321 < 0) {
                    int321 = int321 + int32;
                }
                for (var i = pointF.X; i < pointF1.X; i = i + width) {
                    var pen1 = pen;
                    if (int321 === 0) {
                        pen1 = majorLineDashPattern;
                    }
                    if (view.DocScale > grid.myPaintMinorScale || int321 == 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgLine(result, view, pen1, i, pointF.Y, i, pointF1.Y);
                    }
                    int321++;
                    if (int321 >= int32) {
                        int321 = 0;
                    }
                }
            }
            else if (view.DocScale > grid.myPaintMinorScale) {
                for (var j = pointF.X; j < pointF1.X; j = j + width) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgLine(result, view, pen, j, pointF.Y, j, pointF1.Y);
                }
            }
        }
        if (grid.Style !== _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.VerticalLine) {
            var height1 = grid.MajorLineFrequency.Height;
            if (height1 > 0) {
                var single1 = pointF.Y;
                origin = grid.Origin;
                var int322 = (Math.floor(((single1 - origin.Y) / height))) % height1;
                if (int322 < 0) {
                    int322 = int322 + height1;
                }
                for (var k = pointF.Y; k < pointF1.Y; k = k + height) {
                    var pen2 = pen;
                    if (int322 === 0) {
                        pen2 = majorLineDashPattern;
                    }
                    if (view.DocScale > grid.myPaintMinorScale || int322 == 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgLine(result, view, pen2, pointF.X, k, pointF1.X, k);
                    }
                    int322++;
                    if (int322 >= height1) {
                        int322 = 0;
                    }
                }
            }
            else if (view.DocScale > grid.myPaintMinorScale) {
                for (var l = pointF.Y; l < pointF1.Y; l = l + height) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgLine(result, view, pen, pointF.X, l, pointF1.X, l);
                }
            }
        }
        pen.Dispose();
        majorLineDashPattern.Dispose();
    };
    TuGridSvgRenderer.fillGrid = function (result, grid, view, clipRect) {
        var cellColors = grid.CellColors;
        var upperBound = _tuval_core__WEBPACK_IMPORTED_MODULE_2__.TArray.GetUpperBound(cellColors, 0) + 1;
        var int32 = _tuval_core__WEBPACK_IMPORTED_MODULE_2__.TArray.GetUpperBound(cellColors, 1) + 1;
        if (upperBound > 0 && int32 > 0 && (upperBound !== 1 || int32 !== 1 || !cellColors[0][0].Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Empty))) {
            var width = grid.CellSize.Width;
            var height = grid.CellSize.Height;
            var x = clipRect.X - width;
            var y = clipRect.Y - height;
            var single = clipRect.X + clipRect.Width + width;
            var y1 = clipRect.Y + clipRect.Height + height;
            var pointF = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y), 0, 0);
            var pointF1 = grid.findNearestInfiniteGridPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1), 0, 0);
            var x1 = pointF.X;
            var origin_1 = grid.Origin;
            var int321 = (~~Math.floor(((x1 - origin_1.X) / width))) % upperBound;
            var single1 = pointF.Y;
            origin_1 = grid.Origin;
            var int322 = (Math.floor(((single1 - origin_1.Y) / height))) % int32;
            if (int321 < 0) {
                int321 = (int321 + upperBound);
            }
            if (int322 < 0) {
                int322 = int322 + int32;
            }
            var int323 = int321;
            var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.SolidBrush(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.White);
            for (var i = pointF.Y; i < pointF1.Y; i = i + height) {
                for (var j = pointF.X; j < pointF1.X; j = j + width) {
                    var color = cellColors[int321][int322];
                    if (!color.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Empty)) {
                        solidBrush.Color = color;
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgRectangle(result, view, undefined, solidBrush, j, i, width, height);
                    }
                    int321++;
                    if (int321 >= upperBound) {
                        int321 = 0;
                    }
                }
                int321 = int323;
                int322++;
                if (int322 >= int32) {
                    int322 = 0;
                }
            }
            solidBrush.Dispose();
        }
    };
    TuGridSvgRenderer.Apply = function (view, grid) {
        var result = [];
        var clipBounds = view.ClientRectangle; //g.ClipBounds;
        var rectangleF = grid.computeInfiniteBounds(grid.Bounds.clone());
        var rectangleF1 = grid.computeFiniteBounds(rectangleF, view.DocExtent);
        var brush = grid.Brush;
        if (grid.Shadowed && brush != null) {
            var shadowOffset = grid.GetShadowOffset(view);
            var width = shadowOffset.Width;
            var height = shadowOffset.Height;
            if (shadowOffset.Width !== 0 || shadowOffset.Height !== 0) {
                var x = rectangleF1.X;
                var y = rectangleF1.Y;
                var single = rectangleF1.X + rectangleF1.Width;
                var y1 = rectangleF1.Y + rectangleF1.Height;
                var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y);
                var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y);
                var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1);
                var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y1);
                var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y + height);
                var pointF5 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y + height);
                var pointF6 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y1 + height);
                var pointF7 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y1 + height);
                var shadowBrush = grid.GetShadowBrush(view);
                if (width > 0) {
                    if (height > 0) {
                        var pointFArray = view.allocTempPointArray(6);
                        pointFArray[0] = pointF5;
                        pointFArray[1] = pointF6;
                        pointFArray[2] = pointF7;
                        pointFArray[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y1);
                        pointFArray[4] = pointF2;
                        pointFArray[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y + height);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgPolygon(result, view, undefined, shadowBrush, pointFArray);
                        view.freeTempPointArray(pointFArray);
                    }
                    else if (height >= 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgRectangle(result, view, null, shadowBrush, pointF1.X, pointF1.Y, width, rectangleF1.Height);
                    }
                    else {
                        var pointFArray1 = view.allocTempPointArray(6);
                        pointFArray1[0] = pointF4;
                        pointFArray1[1] = pointF5;
                        pointFArray1[2] = pointF6;
                        pointFArray1[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single, y1 + height);
                        pointFArray1[4] = pointF1;
                        pointFArray1[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x + width, y);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgPolygon(result, view, undefined, shadowBrush, pointFArray1);
                        view.freeTempPointArray(pointFArray1);
                    }
                }
                else if (width < 0) {
                    if (height > 0) {
                        var pointFArray2 = view.allocTempPointArray(6);
                        pointFArray2[0] = pointF6;
                        pointFArray2[1] = pointF7;
                        pointFArray2[2] = pointF4;
                        pointFArray2[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y + height);
                        pointFArray2[4] = pointF3;
                        pointFArray2[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y1);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgPolygon(result, view, undefined, shadowBrush, pointFArray2);
                        view.freeTempPointArray(pointFArray2);
                    }
                    else if (height >= 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgRectangle(result, view, undefined, shadowBrush, pointF4.X, pointF4.Y, -width, rectangleF1.Height);
                    }
                    else {
                        var pointFArray3 = view.allocTempPointArray(6);
                        pointFArray3[0] = pointF7;
                        pointFArray3[1] = pointF4;
                        pointFArray3[2] = pointF5;
                        pointFArray3[3] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(single + width, y);
                        pointFArray3[4] = pointF;
                        pointFArray3[5] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint(x, y1 + height);
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgPolygon(result, view, undefined, shadowBrush, pointFArray3);
                        view.freeTempPointArray(pointFArray3);
                    }
                }
                else if (height > 0) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgRectangle(result, view, undefined, shadowBrush, pointF3.X, pointF3.Y, rectangleF1.Width, height);
                }
                else if (height < 0) {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgRectangle(result, view, undefined, shadowBrush, pointF4.X, pointF4.Y, rectangleF1.Width, -height);
                }
            }
        }
        if (brush != null) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgRectangle(result, view, undefined, brush, rectangleF1.X, rectangleF1.Y, rectangleF1.Width, rectangleF1.Height);
        }
        var rectangleF2 = _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.IntersectionRect(rectangleF1, clipBounds);
        if (rectangleF2.Width > 0 && rectangleF2.Height > 0) {
            //const clip: Region = g.Clip;
            // TODO: clip kontrol edilecek, alternatif aranacak.
            //g.intersectClip(rectangleF2);
            TuGridSvgRenderer.fillGrid(result, grid, view, rectangleF2);
            switch (grid.Style) {
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.None:
                    {
                        //g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.Dot:
                    {
                        // grid.drawGridDots(g, view, rectangleF2);
                        // g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.Cross:
                    {
                        // grid.drawGridCrosses(g, view, new CGSize(6, 6), rectangleF2);
                        // g.Clip = clip;
                        break;
                    }
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.Line:
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.HorizontalLine:
                case _TuViewGridStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewGridStyle.VerticalLine:
                    {
                        TuGridSvgRenderer.drawGridLines(result, grid, view, rectangleF2);
                        //g.Clip = clip;
                        break;
                    }
                default:
                    {
                        //g.Clip = clip;
                        break;
                    }
            }
        }
        if (grid.Pen != null) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_3__.TuShape.DrawSvgRectangle(result, view, grid.Pen, undefined, rectangleF1.X, rectangleF1.Y, rectangleF1.Width, rectangleF1.Height);
        }
        return result;
    };
    return TuGridSvgRenderer;
}());



/***/ }),

/***/ "./src/TuGrid/TuViewGridStyle.ts":
/*!***************************************!*\
  !*** ./src/TuGrid/TuViewGridStyle.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewGridStyle": () => (/* binding */ TuViewGridStyle)
/* harmony export */ });
var TuViewGridStyle;
(function (TuViewGridStyle) {
    TuViewGridStyle[TuViewGridStyle["None"] = 0] = "None";
    TuViewGridStyle[TuViewGridStyle["Dot"] = 1] = "Dot";
    TuViewGridStyle[TuViewGridStyle["Cross"] = 2] = "Cross";
    TuViewGridStyle[TuViewGridStyle["Line"] = 3] = "Line";
    TuViewGridStyle[TuViewGridStyle["HorizontalLine"] = 4] = "HorizontalLine";
    TuViewGridStyle[TuViewGridStyle["VerticalLine"] = 5] = "VerticalLine";
})(TuViewGridStyle || (TuViewGridStyle = {}));


/***/ }),

/***/ "./src/TuGroup/TuGroup.tsx":
/*!*********************************!*\
  !*** ./src/TuGroup/TuGroup.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuGroup": () => (/* binding */ TuGroup)
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _TuGroupEnumerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TuGroupEnumerator */ "./src/TuGroup/TuGroupEnumerator.ts");
/* harmony import */ var _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuGroupEvents */ "./src/TuGroup/TuGroupEvents.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
/* harmony import */ var _TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuLayer/TuLayer */ "./src/TuLayer/TuLayer.tsx");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










var flagInvalidPaintBounds = 1048576;
var flagPickableBackground = 2097152;
var TuGroup = /** @class */ (function (_super) {
    __extends(TuGroup, _super);
    function TuGroup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myObjects = new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.List();
        return _this;
    }
    TuGroup_1 = TuGroup;
    Object.defineProperty(TuGroup.prototype, "Backwards", {
        get: function () {
            return new _TuGroupEnumerator__WEBPACK_IMPORTED_MODULE_4__.TuGroupEnumerator(this.myObjects, false);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuGroup.prototype, "ChildNames", {
        get: function () {
            return this.myNames;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuGroup.prototype, "Count", {
        get: function () {
            return this.getCount();
        },
        enumerable: false,
        configurable: true
    });
    TuGroup.prototype.getCount = function () {
        return this.myObjects.Count;
    };
    Object.defineProperty(TuGroup.prototype, "First", {
        get: function () {
            if (this.myObjects.Count === 0) {
                return null;
            }
            return this.myObjects.Get(0);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuGroup.prototype, "IsEmpty", {
        get: function () {
            return this.getIsEmpty();
        },
        enumerable: false,
        configurable: true
    });
    TuGroup.prototype.getIsEmpty = function () {
        return this.Count === 0;
    };
    Object.defineProperty(TuGroup.prototype, "IsReadOnly", {
        get: function () {
            return this.getIsReadOnly();
        },
        enumerable: false,
        configurable: true
    });
    TuGroup.prototype.getIsReadOnly = function () {
        return false;
    };
    TuGroup.prototype.get = function (indexOrName) {
        if (typeof indexOrName === 'number') {
            return this.myObjects.Get(indexOrName);
        }
        else if (typeof indexOrName === 'string') {
            return this.findChild(indexOrName);
        }
    };
    TuGroup.prototype.set = function (indexOrName, value) {
        if (typeof indexOrName === 'number') {
            if (this.myObjects.Get(indexOrName) !== value && value != null) {
                var goObject = value;
                if (goObject.Parent != this) {
                    this.replaceAt(indexOrName, goObject, false);
                }
            }
        }
        else if (typeof indexOrName === 'string') {
            this.addChildName(indexOrName, value);
        }
    };
    Object.defineProperty(TuGroup.prototype, "Last", {
        get: function () {
            var count = this.myObjects.Count;
            if (count === 0) {
                return null;
            }
            return this.myObjects.Get(count - 1);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuGroup.prototype, "PickableBackground", {
        //#region [Property] PickableBackground
        get: function () {
            return this.getPickableBackground();
        },
        set: function (value) {
            this.setPickableBackground(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuGroup.prototype.getPickableBackground = function () {
        return (this.InternalFlags & flagPickableBackground) != 0;
    };
    /**
    * @hidden
    */
    TuGroup.prototype.setPickableBackground = function (value) {
        var internalFlags = (this.InternalFlags & flagPickableBackground) != 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagPickableBackground;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagPickableBackground;
            }
            this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.ChangedPickableBackground, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect);
        }
    };
    //#endregion
    TuGroup.prototype.Add = function (obj) {
        if (obj == null) {
            return;
        }
        if (obj === this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot add a group to itself");
        }
        var parent = obj.Parent;
        if (parent != null) {
            if (parent !== this) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot move an object from one group to another without first removing it from its parent.");
            }
            return;
        }
        if (obj.Layer != null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot add an object to a group when it is already part of a document or view.");
        }
        this.insertAt(this.myObjects.Count, obj, false);
        return this;
    };
    TuGroup.prototype.addChildName = function (name, child) {
        if (name == null) {
            return;
        }
        if (child == null) {
            return;
        }
        if (name.length === 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Name must not be an empty string", "name");
        }
        if (child.Parent !== this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("To be named, the object must be a child of this GoGroup", "child");
        }
        var goObject = this.findChild(name);
        if (goObject != null && goObject !== child) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.InvalidOperationException(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat("Child name already in use: ", name));
        }
        var str = this.findName(child);
        if (str != null && str.length > 0 && str !== name) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.InvalidOperationException(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat("Child object cannot be named: '", name, "' because it already has a different name: '", str, "'"));
        }
        this.addChildNameInternal(name, child, str, goObject);
    };
    TuGroup.prototype.addChildNameInternal = function (name, child, oldname, oldchild) {
        if (this.myNames == null) {
            this.myNames = new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.Dictionary();
        }
        if (oldchild == null) {
            this.myNames.Set(name, child);
        }
        if (oldname == null || oldname.length == 0) {
            this.myNames.Set(child, name);
        }
        this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.AddedChildName, 0, name, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect, 0, child, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect);
    };
    TuGroup.prototype.AddCollection = function (coll, reparentLinks) {
        var _this = this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(coll, function (goObject) {
            if (!_this.isChildOf(goObject) && _this !== goObject) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot add a group to itself or to one of its own children.");
        });
        var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_7__.TuCollection();
        goCollections.AddRange(coll);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(goCollections, function (goCollection) {
            if (goCollection.Parent == _this || goCollection.Layer == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            TuGroup_1.SetAllNoClear(goCollection, true);
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(goCollections, function (goCollection1) {
            if (goCollection1.Parent == _this) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            goCollection1.Remove();
            _this.Add(goCollection1);
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(goCollections, function (goObject1) {
            TuGroup_1.SetAllNoClear(goObject1, false);
        });
        if (reparentLinks && this.IsInDocument) {
            TuGroup_1._ReparentAllLinksToSubGraphs(goCollections, true, this.Document.LinksLayer);
        }
        return goCollections;
    };
    TuGroup._ReparentAllLinksToSubGraphs = function (coll, behind, layer) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('ReparentAllLinksToSubGraphs static method must implemented by TuSubGraphBase.');
    };
    TuGroup.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.InsertedObject:
                {
                    var newInt = e.NewInt;
                    var newValue = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(e.NewValue, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject);
                    if (!undo) {
                        if (newInt < 0) {
                            newInt = this.myObjects.Count;
                        }
                        if (this.myObjects.IndexOf(newValue) < 0) {
                            this.insertAt(newInt, newValue, true);
                        }
                    }
                    else {
                        if (newInt < 0) {
                            newInt = this.myObjects.IndexOf(newValue);
                        }
                        if (newInt >= 0) {
                            this.removeAt(newInt, newValue, true);
                            return;
                        }
                    }
                    return;
                }
            case _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.RemovedObject:
                {
                    var oldInt = e.OldInt;
                    var oldValue = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(e.OldValue, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject);
                    if (!undo) {
                        if (oldInt < 0) {
                            oldInt = this.myObjects.IndexOf(oldValue);
                        }
                        if (oldInt >= 0) {
                            this.removeAt(oldInt, oldValue, true);
                        }
                    }
                    else {
                        if (oldInt < 0) {
                            oldInt = this.myObjects.Count;
                        }
                        if (this.myObjects.IndexOf(oldValue) < 0) {
                            this.insertAt(oldInt, oldValue, true);
                            return;
                        }
                    }
                    return;
                }
            case _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.ChangedZOrder:
                {
                    var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(e.OldValue, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject);
                    var int32 = e.OldInt;
                    var newInt1 = e.NewInt;
                    this.myObjects.Remove(goObject);
                    if (undo) {
                        this.moveTo(int32, goObject, newInt1);
                        return;
                    }
                    this.moveTo(newInt1, goObject, int32);
                    return;
                }
            case _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.ReplacedObject:
                {
                    var oldValue1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(e.OldValue, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject);
                    var newValue1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(e.NewValue, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject);
                    var oldInt1 = e.OldInt;
                    if (undo) {
                        this.replaceAt(oldInt1, oldValue1, true);
                        return;
                    }
                    this.replaceAt(oldInt1, newValue1, true);
                    return;
                }
            case _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.ChangedPickableBackground:
                {
                    this.PickableBackground = e.getValue(undo);
                    return;
                }
            case _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.AddedChildName:
                {
                    var str = e.OldValue;
                    var goObject1 = e.NewValue;
                    if (undo) {
                        this.removeChildNameInternal(str);
                        return;
                    }
                    this.addChildNameInternal(str, goObject1, this.findName(goObject1), this.findChild(str));
                    return;
                }
            case _TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.RemovedChildName:
                {
                    var str1 = e.OldValue;
                    var newValue2 = e.NewValue;
                    if (!undo) {
                        this.removeChildNameInternal(str1);
                        return;
                    }
                    this.addChildNameInternal(str1, newValue2, this.findName(newValue2), this.findChild(str1));
                    return;
                }
        }
        _super.prototype.ChangeValue.call(this, e, undo);
    };
    TuGroup.prototype.Clear = function () {
        for (var i = this.myObjects.Count; i > 0; i = Math.min(i, this.myObjects.Count)) {
            var goObjects = this.myObjects;
            var int32 = i - 1;
            i = int32;
            this.Remove(goObjects[int32]);
        }
        return 1;
    };
    TuGroup.prototype.ComputeBounds = function () {
        var bounds = this.Bounds;
        var flag = false;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.GetEnumerator(), function (enumerator) {
            if (flag) {
                bounds = _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.UnionRect(bounds, enumerator.Bounds);
            }
            else {
                bounds = enumerator.Bounds;
                flag = true;
            }
        });
        return bounds;
    };
    TuGroup.prototype.computePaintBounds = function (view) {
        this.InternalFlags = this.InternalFlags & ~flagInvalidPaintBounds;
        var bounds = this.Bounds;
        var x = bounds.X;
        var y = bounds.Y;
        var width = x + bounds.Width;
        var height = y + bounds.Height;
        var flag = (view != null ? view.IsPrinting : false);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.GetEnumerator(), function (enumerator) {
            if ((flag ? !enumerator.Printable : !enumerator.Visible)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            var rectangleF = enumerator.Bounds.clone();
            rectangleF = enumerator.ExpandPaintBounds(rectangleF, view);
            x = Math.min(x, rectangleF.X);
            y = Math.min(y, rectangleF.Y);
            width = Math.max(width, rectangleF.X + rectangleF.Width);
            height = Math.max(height, rectangleF.Y + rectangleF.Height);
        });
        if (view != null) {
            this.myPaintBoundsShadowOffset = this.GetShadowOffset(view);
        }
        this.myLeft = bounds.X - x;
        this.myTop = bounds.Y - y;
        this.myRight = width - (bounds.X + bounds.Width);
        this.myBottom = height - (bounds.Y + bounds.Height);
    };
    TuGroup.prototype.Contains = function (obj) {
        if (obj == null) {
            return false;
        }
        return obj.Parent == this;
    };
    TuGroup.prototype.ContainsPoint = function (p) {
        var flag;
        if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.ContainsRect(this.Bounds, p)) {
            return false;
        }
        var enumerator = this.GetEnumerator().GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (!current.Visible || !current.ContainsPoint(p)) {
                    continue;
                }
                flag = true;
                return flag;
            }
            return false;
        }
        finally {
            enumerator.Dispose();
        }
        return flag;
    };
    TuGroup.prototype.ToArray = function () {
        return this.myObjects.ToArray();
    };
    TuGroup.prototype.CopyArray = function () {
        return this.myObjects.ToArray();
    };
    TuGroup.prototype.copyChildren = function (newgroup, env) {
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.GetEnumerator(), function (enumerator) {
            newgroup.Add(env.copy(enumerator));
        });
    };
    TuGroup.prototype.CopyObject = function (env) {
        var goObjects = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(_super.prototype.CopyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuGroup);
        if (goObjects != null) {
            goObjects.myObjects = new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.List();
            goObjects.myNames = null;
            var initializing = goObjects.Initializing;
            goObjects.Initializing = true;
            this.copyChildren(goObjects, env);
            goObjects.Initializing = initializing;
            goObjects.InvalidBounds = true;
            if (this.myNames != null) {
                goObjects.myNames = new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.Dictionary();
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.myNames, function (myName) {
                    var key = myName.key;
                    var value = myName.value;
                    if (!(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(key, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject))) {
                        if (!(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(value, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject))) {
                            return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
                        }
                        var item = env.Get(value);
                        goObjects.myNames.Set(key, item);
                    }
                    else {
                        var goObject = env.Get(key);
                        goObjects.myNames.Set(goObject, value);
                    }
                });
            }
        }
        return goObjects;
    };
    TuGroup.prototype.CopyTo = function (array, index) {
        return this.myObjects.CopyTo(array, index);
    };
    TuGroup.prototype.ExpandPaintBounds = function (rect, view) {
        if ((this.InternalFlags & flagInvalidPaintBounds) !== 0 || view == null || this.myPaintBoundsShadowOffset != this.GetShadowOffset(view)) {
            this.computePaintBounds(view);
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(rect.X - this.myLeft, rect.Y - this.myTop, rect.Width + this.myLeft + this.myRight, rect.Height + this.myTop + this.myBottom);
    };
    TuGroup.prototype.findChild = function (name) {
        var obj = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        if (name == null || this.myNames == null) {
            return null;
        }
        if (!this.myNames.TryGetValue(name, obj)) {
            return null;
        }
        return obj.value;
    };
    TuGroup.prototype.findName = function (child) {
        var obj = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        if (child == null || this.myNames == null) {
            return '';
        }
        if (!this.myNames.TryGetValue(child, obj)) {
            return '';
        }
        return obj.value;
    };
    TuGroup.prototype.GetEnumerator = function () {
        return new _TuGroupEnumerator__WEBPACK_IMPORTED_MODULE_4__.TuGroupEnumerator(this.myObjects, true);
    };
    TuGroup.prototype.GetNearestIntersectionPoint = function (p1, p2, result) {
        var pointF = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        var single = 1E+21;
        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.GetEnumerator(), function (enumerator) {
            if (!enumerator.Visible || !enumerator.GetNearestIntersectionPoint(p1, p2, pointF)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            var x = (pointF.value.X - p1.X) * (pointF.value.X - p1.X) + (pointF.value.Y - p1.Y) * (pointF.value.Y - p1.Y);
            if (x >= single) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            single = x;
            pointF1 = pointF.value;
        });
        result.value = pointF1;
        return single < 1E+21;
    };
    TuGroup.prototype.indexOf = function (obj) {
        return this.myObjects.IndexOf(obj);
    };
    TuGroup.prototype.insert = function (index, obj) {
        if (index == this.Count) {
            this.insertAfter(null, obj);
            return;
        }
        this.insertBefore(this.myObjects.Get(index), obj);
    };
    TuGroup.prototype.insertAfter = function (child, newobj) {
        if (newobj == null) {
            return;
        }
        if (child != null && child.Parent != this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot insert an object into a group after a child that is not a member of the group.");
        }
        var parent = newobj.Parent;
        if (parent == null) {
            if (newobj.Layer != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot add an object to a group when it is already part of a document or view.");
            }
            this.insertAt(((child == null ? (this.myObjects.Count - 1) : this.myObjects.IndexOf(child)) + 1), newobj, false);
            return;
        }
        if (parent != this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot move an object from one group to another without first removing it from its parent.");
        }
        var int32 = (child == null ? (this.myObjects.Count - 1) : this.myObjects.IndexOf(child));
        var int321 = this.myObjects.IndexOf(newobj);
        if ((int32 + 1) !== int321 && int32 !== int321) {
            this.myObjects.RemoveAt(int321);
            if (int32 > int321) {
                int32--;
            }
            this.moveTo((int32 + 1), newobj, int321);
        }
    };
    TuGroup.prototype.insertBefore = function (child, newobj) {
        if (newobj == null) {
            return;
        }
        if (child != null && child.Parent != this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot insert an object into a group before (behind) a child that is not a member of the group.");
        }
        var parent = newobj.Parent;
        if (parent == null) {
            if (newobj.Layer != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot add an object to a group when it is already part of a document or view.");
            }
            this.insertAt((child == null ? 0 : this.myObjects.IndexOf(child)), newobj, false);
            return;
        }
        if (parent != this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot move an object from one group to another without first removing it from its parent.");
        }
        var int32 = (child == null ? 0 : this.myObjects.IndexOf(child));
        var int321 = this.myObjects.IndexOf(newobj);
        if ((int32 - 1) !== int321 && int32 !== int321) {
            this.myObjects.RemoveAt(int321);
            if (int32 > int321) {
                int32--;
            }
            this.moveTo(int32, newobj, int321);
        }
    };
    /* internal */ TuGroup.prototype.invalidatePaintBounds = function () {
        if ((this.InternalFlags & flagInvalidPaintBounds) == 0) {
            this.InternalFlags = this.InternalFlags | flagInvalidPaintBounds;
            var parent_1 = this.Parent;
            if (parent_1 != null) {
                parent_1.invalidatePaintBounds();
            }
        }
    };
    TuGroup.prototype.insertAt = function (idx, obj, undoing) {
        var bounds = obj.Bounds;
        if (!undoing || this.myObjects.IndexOf(obj) < 0) {
            if (idx < 0 || idx > this.myObjects.Count) {
                idx = this.myObjects.Count;
            }
            this.myObjects.Insert(idx, obj);
        }
        obj.setParent(this, undoing);
        this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.InsertedObject, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect, idx, obj, bounds);
        if (!undoing) {
            this.layoutChildren(obj);
            this.InvalidBounds = true;
            var rectangleF = this.Bounds;
        }
    };
    TuGroup.prototype.layoutChildren = function (childchanged) {
    };
    TuGroup.prototype.moveChildren = function (old) {
        var left = this.Left - old.X;
        var top = this.Top - old.Y;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.GetEnumerator(), function (enumerator) {
            var bounds = enumerator.Bounds;
            enumerator.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(bounds.X + left, bounds.Y + top, bounds.Width, bounds.Height);
        });
    };
    TuGroup.prototype.moveTo = function (newidx, obj, oldidx) {
        var bounds = obj.Bounds;
        this.myObjects.Insert(newidx, obj);
        this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.ChangedZOrder, oldidx, obj, bounds, newidx, obj, bounds);
    };
    TuGroup.prototype.OnBoundsChanged = function (old) {
        _super.prototype.OnBoundsChanged.call(this, old);
        var size = this.Size;
        if (old.Width == size.Width && old.Height == size.Height) {
            this.moveChildren(old);
            return;
        }
        this.rescaleChildren(old);
        this.layoutChildren(undefined);
        this.InvalidBounds = true;
    };
    /* internal */ /* virtual */ TuGroup.prototype.onChildBoundsChanged = function (child, old) {
        this.layoutChildren(child);
        this.InvalidBounds = true;
    };
    TuGroup.prototype.Paint = function (g, view) {
        var isPrinting = view.IsPrinting;
        var clipBounds = g.ClipBounds;
        var flag = _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.ContainsRect(clipBounds, this.Bounds);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.GetEnumerator(), function (enumerator) {
            if ((isPrinting ? !enumerator.CanPrint() : !enumerator.CanView())) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            var flag1 = flag;
            if (!flag1) {
                var rectangleF = enumerator.ExpandPaintBounds(enumerator.Bounds.clone(), view);
                flag1 = _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.IntersectsRect(rectangleF, clipBounds);
            }
            if (!flag1) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            enumerator.Paint(g, view);
        });
    };
    TuGroup.prototype.Pick = function (p, selectableOnly) {
        var goObject;
        if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.ContainsRect(this.Bounds, p)) {
            return undefined;
        }
        if (!this.CanView()) {
            return undefined;
        }
        var enumerator = this.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var goObject1 = enumerator.Current.Pick(p, selectableOnly);
                if (goObject1 == null) {
                    continue;
                }
                goObject = goObject1;
                return goObject;
            }
            if (this.PickableBackground) {
                if (!selectableOnly) {
                    return this;
                }
                if (this.CanSelect()) {
                    return this;
                }
                for (var i = this.Parent; i != null; i = i.Parent) {
                    if (i.CanSelect()) {
                        return i;
                    }
                }
            }
            return undefined;
        }
        finally {
            enumerator.Dispose();
        }
        return goObject;
    };
    TuGroup.prototype.pickObjects = function (p, selectableOnly, coll, max) {
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_7__.TuCollection();
        }
        if (coll.Count >= max) {
            return coll;
        }
        if (!this.CanView()) {
            return coll;
        }
        var goObject = this.Pick(p, selectableOnly);
        if (goObject != null) {
            coll.Add(goObject);
        }
        return coll;
    };
    TuGroup.prototype.Remove = function (obj) {
        if (obj == null) {
            return false;
        }
        var parent = obj.Parent;
        if (parent == null) {
            return false;
        }
        if (parent !== this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot remove an object from a group if it doesn't belong to that group.");
        }
        var int32 = this.myObjects.IndexOf(obj);
        if (int32 < 0) {
            return false;
        }
        this.removeAtInternal(int32, obj, false);
        return true;
    };
    TuGroup.prototype.removeAtInternal = function (index, obj, undoing) {
        try {
            try {
                obj.setBeingRemoved(true);
                if (!undoing) {
                    this.myObjects.RemoveAt(index);
                }
                else {
                    var int32 = this.myObjects.IndexOf(obj);
                    if (int32 >= 0) {
                        if (index < 0 || index >= this.myObjects.Count) {
                            index = int32;
                        }
                        this.myObjects.RemoveAt(index);
                    }
                }
                var bounds = obj.Bounds;
                this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.RemovedObject, index, obj, bounds, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect);
                if (!undoing) {
                    this.removeChildName(obj);
                    this.layoutChildren(obj);
                    this.InvalidBounds = true;
                    var rectangleF = this.Bounds;
                }
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat("GoGroup.Remove: ", exception.toString()));
                throw exception;
            }
        }
        finally {
            obj.setParent(undefined, undoing);
            obj.setBeingRemoved(false);
        }
    };
    TuGroup.prototype.removeAt = function (index) {
        this.Remove(this.myObjects.Get(index));
    };
    TuGroup.prototype.removeChildName = function (child) {
        if (typeof child === 'string') {
            if (name == null || this.myNames == null) {
                return;
            }
            this.removeChildNameInternal(child);
        }
        else if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(child, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject)) {
            var flag = void 0;
            if (child == null || this.myNames == null) {
                return;
            }
            var str = this.findName(child);
            flag = (str == null ? false : str.length > 0);
            if (flag) {
                this.myNames.Remove(str);
            }
            var flag1 = this.myNames.ContainsKey(child);
            if (flag1) {
                this.myNames.Remove(child);
            }
            if (flag || flag1) {
                this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.RemovedChildName, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect, 0, child, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect);
            }
        }
    };
    TuGroup.prototype.removeChildNameInternal = function (name) {
        var goObject = this.findChild(name);
        if (goObject != null) {
            this.myNames.Remove(goObject);
        }
        var flag = this.myNames.ContainsKey(name);
        if (flag) {
            this.myNames.Remove(name);
        }
        if (goObject != null || flag) {
            this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.RemovedChildName, 0, name, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect, 0, goObject, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect);
        }
    };
    TuGroup.prototype.replaceAt = function (index, newobj, undoing) {
        var item = this.myObjects.Get(index);
        item.setBeingRemoved(true);
        item.setParent(undefined, undoing);
        item.setBeingRemoved(false);
        this.myObjects.Set(index, newobj);
        var bounds = newobj.Bounds;
        newobj.setParent(this, undoing);
        this.Changed(_TuGroupEvents__WEBPACK_IMPORTED_MODULE_5__.TuGroupEvents.ReplacedObject, index, item, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect, index, newobj, _Globals__WEBPACK_IMPORTED_MODULE_6__.NullRect);
        if (!undoing) {
            var str = this.findName(item);
            if (str != null && str.length > 0) {
                this.removeChildName(item);
                this.addChildName(str, newobj);
            }
            this.layoutChildren(newobj);
            this.InvalidBounds = true;
            var rectangleF = this.Bounds;
        }
    };
    TuGroup.prototype.rescaleChildren = function (old) {
        if (old.Width <= 0 || old.Height <= 0) {
            return;
        }
        var bounds = this.Bounds;
        var width = bounds.Width / old.Width;
        var height = bounds.Height / old.Height;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.GetEnumerator(), function (enumerator) {
            if (!enumerator.AutoRescales) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            var rectangleF = enumerator.Bounds;
            var x = bounds.X + (rectangleF.X - old.X) * width;
            var y = bounds.Y + (rectangleF.Y - old.Y) * height;
            var single = rectangleF.Width * width;
            var height1 = rectangleF.Height * height;
            enumerator.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(x, y, single, height1);
        });
    };
    /* internal */ TuGroup.SetAllNoClear = function (obj, b) {
        var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuPort);
        if (goPort != null) {
            goPort.NoClearLinks = b;
            return;
        }
        var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuLink);
        if (goLink != null) {
            goLink.NoClearPorts = b;
            return;
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuGroup);
        if (goGroups != null) {
            var goBalloon = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuBalloon);
            if (goBalloon != null) {
                goBalloon.NoClearAnchors = b;
            }
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(goGroups, function (goObject) {
                TuGroup_1.SetAllNoClear(goObject, b);
            });
        }
    };
    TuGroup.prototype.importEntries = function (entries) {
        return 0;
    };
    var TuGroup_1;
    TuGroup = TuGroup_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuGroup,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuGroup,
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuObject,
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.ITuCollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.ICollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuGroup);
    return TuGroup;
}(_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_3__.TuObject));

_TuLayer_TuLayer__WEBPACK_IMPORTED_MODULE_8__.TuLayer.SetAllNoClear = TuGroup.SetAllNoClear;


/***/ }),

/***/ "./src/TuGroup/TuGroupEnumerator.ts":
/*!******************************************!*\
  !*** ./src/TuGroup/TuGroupEnumerator.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuGroupEnumerator": () => (/* binding */ TuGroupEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuGroupEnumerator = /** @class */ (function () {
    /* internal */ function TuGroupEnumerator(a, forward) {
        this.myForward = false;
        this.myIndex = 0;
        this.myArray = a;
        this.myForward = forward;
        this.myIndex = -1;
        this.Reset();
    }
    Object.defineProperty(TuGroupEnumerator.prototype, "Current", {
        /// <summary>
        ///  Gets the current object in the group.
        /// </summary>
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("TuGroup.TuGroupEnumerator is not at a valid position for the List");
            }
            return this.myArray.Get(this.myIndex);
        },
        enumerable: false,
        configurable: true
    });
    TuGroupEnumerator.prototype.TryMoveNext = function (out) {
        throw new Error("Method not implemented.");
    };
    TuGroupEnumerator.prototype.End = function () {
        throw new Error("Method not implemented.");
    };
    TuGroupEnumerator.prototype.NextValue = function (value) {
        throw new Error("Method not implemented.");
    };
    TuGroupEnumerator.prototype.Next = function (value) {
        throw new Error("Method not implemented.");
    };
    TuGroupEnumerator.prototype.Dispose = function () {
    };
    TuGroupEnumerator.prototype.GetEnumerator = function () {
        var goGroupEnumerators = this;
        goGroupEnumerators.Reset();
        return goGroupEnumerators;
    };
    TuGroupEnumerator.prototype.MoveNext = function () {
        if (!this.myForward) {
            if ((this.myIndex - 1) < 0) {
                return false;
            }
            this.myIndex = (this.myIndex - 1);
            return true;
        }
        if ((this.myIndex + 1) >= this.myArray.Count) {
            return false;
        }
        this.myIndex = (this.myIndex + 1);
        return true;
    };
    TuGroupEnumerator.prototype.Reset = function () {
        if (this.myForward) {
            this.myIndex = -1;
            return;
        }
        this.myIndex = this.myArray.Count;
    };
    TuGroupEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroupEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroupEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuGroupEnumerator);
    return TuGroupEnumerator;
}());



/***/ }),

/***/ "./src/TuGroup/TuGroupEvents.ts":
/*!**************************************!*\
  !*** ./src/TuGroup/TuGroupEvents.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuGroupEvents": () => (/* binding */ TuGroupEvents)
/* harmony export */ });
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuObjectEvents */ "./src/TuObjectEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuGroupEvents = /** @class */ (function (_super) {
    __extends(TuGroupEvents, _super);
    function TuGroupEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuGroupEvents.InsertedObject = 1051;
    TuGroupEvents.RemovedObject = 1052;
    TuGroupEvents.ChangedZOrder = 1053;
    TuGroupEvents.ReplacedObject = 1054;
    TuGroupEvents.ChangedPickableBackground = 1055;
    TuGroupEvents.AddedChildName = 1056;
    TuGroupEvents.RemovedChildName = 1057;
    TuGroupEvents[1051] = 'InsertedObject';
    TuGroupEvents[1052] = 'RemovedObject';
    TuGroupEvents[1053] = 'ChangedZOrder';
    TuGroupEvents[1054] = 'ReplacedObject';
    TuGroupEvents[1055] = 'ChangedPickableBackground';
    TuGroupEvents[1056] = 'AddedChildName';
    TuGroupEvents[1057] = 'RemovedChildName';
    return TuGroupEvents;
}(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__.TuObjectEvents));



/***/ }),

/***/ "./src/TuHandle/Renderers/HtmlRenderer.ts":
/*!************************************************!*\
  !*** ./src/TuHandle/Renderers/HtmlRenderer.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HtmlRenderer": () => (/* binding */ HtmlRenderer)
/* harmony export */ });
/* harmony import */ var _Xml_TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Xml/TuHtmlRenderer */ "./src/Xml/TuHtmlRenderer.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _TuHandleStyle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TuHandleStyle */ "./src/TuHandle/TuHandleStyle.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var HtmlRenderer = /** @class */ (function (_super) {
    __extends(HtmlRenderer, _super);
    function HtmlRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HtmlRenderer.prototype.DecideCache = function () {
        this.InvalidateCache();
    };
    HtmlRenderer.prototype.GenerateElement = function (view, obj) {
        this.WriteStartElement('TuHandle');
        return true;
    };
    HtmlRenderer.prototype.GenerateAttributes = function (view, obj) {
    };
    HtmlRenderer.prototype.GenerateBody = function (view, handle) {
        var bounds = handle.Bounds.clone();
        if (handle.Style === _TuHandleStyle__WEBPACK_IMPORTED_MODULE_2__.TuHandleStyle.None) {
            return;
        }
        else if (handle.Style === _TuHandleStyle__WEBPACK_IMPORTED_MODULE_2__.TuHandleStyle.Rectangle) {
            this.WriteRectangle(handle.Pen, handle.Brush, bounds, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(0, 0));
        }
        else if (handle.Style === _TuHandleStyle__WEBPACK_IMPORTED_MODULE_2__.TuHandleStyle.Ellipse) {
            this.WriteEllipse(handle.Pen, handle.Brush, bounds);
        }
    };
    HtmlRenderer.prototype.GenerateElementFinish = function (view, obj) {
        this.WriteEndElement();
    };
    return HtmlRenderer;
}(_Xml_TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_0__.TuHtmlRenderer));



/***/ }),

/***/ "./src/TuHandle/TuHandle.ts":
/*!**********************************!*\
  !*** ./src/TuHandle/TuHandle.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuHandle": () => (/* binding */ TuHandle)
/* harmony export */ });
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Globals */ "./src/Globals.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TuHandleStyle */ "./src/TuHandle/TuHandleStyle.ts");
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _Renderers_HtmlRenderer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Renderers/HtmlRenderer */ "./src/TuHandle/Renderers/HtmlRenderer.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};












var TuHandle = /** @class */ (function (_super) {
    __extends(TuHandle, _super);
    function TuHandle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuHandle_1 = TuHandle;
    Object.defineProperty(TuHandle.prototype, "CursorName", {
        //#region [Property] CursorName
        get: function () {
            return this.myCursorName;
        },
        set: function (value) {
            this.myCursorName = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuHandle.prototype, "TuObject", {
        //#endregion
        //#region [Property] TuObject
        get: function () {
            return this.getTuObject();
        },
        enumerable: false,
        configurable: true
    });
    TuHandle.prototype.getTuObject = function () {
        return this;
    };
    Object.defineProperty(TuHandle.prototype, "HandledObject", {
        //#endregion
        //#region [Property] HandledObject
        get: function () {
            if (this.SelectedObject == null) {
                return undefined;
            }
            return this.SelectedObject.SelectionObject;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuHandle.prototype, "HandleID", {
        //#endregion
        //#region [Property] HandleID
        get: function () {
            return this.myHandleID;
        },
        set: function (value) {
            this.myHandleID = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuHandle.prototype, "SelectedObject", {
        //#endregion
        //#region [Property] SelectedObject
        get: function () {
            return this.mySelectedObject;
        },
        set: function (value) {
            this.mySelectedObject = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuHandle.prototype, "SelectionObject", {
        //#endregion
        //#region [Property] SelectionObject
        get: function () {
            return undefined;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuHandle.prototype, "Style", {
        //#endregion
        //#region [Property] Style
        get: function () {
            return this.myStyle;
        },
        set: function (value) {
            this.myStyle = value;
        },
        enumerable: false,
        configurable: true
    });
    //#endregion
    TuHandle.prototype.setBounds = function (value) {
        //console.log('TuHandle : ' + value);
        _super.prototype.setBounds.call(this, value);
    };
    TuHandle.prototype.SetupControlDefaults = function () {
        _super.prototype.SetupControlDefaults.call(this);
        this.HtmlRenderer = new _Renderers_HtmlRenderer__WEBPACK_IMPORTED_MODULE_11__.HtmlRenderer();
        this.myHandleID = -1;
        this.myStyle = _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.Ellipse;
        this.Size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(0, 0);
    };
    TuHandle.prototype.AddSelectionHandles = function (sel, selectedObj) {
    };
    TuHandle.prototype.computeTrianglePoints = function (v) {
        var bounds = this.Bounds.clone();
        switch (this.Style) {
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleTopLeft:
                {
                    v[0].X = bounds.X + bounds.Width / 2;
                    v[0].Y = bounds.Y + bounds.Height;
                    v[1].X = bounds.X;
                    v[1].Y = bounds.Y;
                    v[2].X = bounds.X + bounds.Width;
                    v[2].Y = bounds.Y + bounds.Height / 2;
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleTopRight:
                {
                    v[0].X = bounds.X;
                    v[0].Y = bounds.Y + bounds.Height / 2;
                    v[1].X = bounds.X + bounds.Width;
                    v[1].Y = bounds.Y;
                    v[2].X = bounds.X + bounds.Width / 2;
                    v[2].Y = bounds.Y + bounds.Height;
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleBottomRight:
                {
                    v[0].X = bounds.X + bounds.Width / 2;
                    v[0].Y = bounds.Y;
                    v[1].X = bounds.X + bounds.Width;
                    v[1].Y = bounds.Y + bounds.Height;
                    v[2].X = bounds.X;
                    v[2].Y = bounds.Y + bounds.Height / 2;
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleBottomLeft:
                {
                    v[0].X = bounds.X + bounds.Width;
                    v[0].Y = bounds.Y + bounds.Height / 2;
                    v[1].X = bounds.X;
                    v[1].Y = bounds.Y + bounds.Height;
                    v[2].X = bounds.X + bounds.Width / 2;
                    v[2].Y = bounds.Y;
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleTop:
                {
                    v[0].X = bounds.X;
                    v[0].Y = bounds.Y + bounds.Height;
                    v[1].X = bounds.X + bounds.Width / 2;
                    v[1].Y = bounds.Y;
                    v[2].X = bounds.X + bounds.Width;
                    v[2].Y = bounds.Y + bounds.Height;
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleRight:
                {
                    v[0].X = bounds.X;
                    v[0].Y = bounds.Y;
                    v[1].X = bounds.X + bounds.Width;
                    v[1].Y = bounds.Y + bounds.Height / 2;
                    v[2].X = bounds.X;
                    v[2].Y = bounds.Y + bounds.Height;
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleBottom:
                {
                    v[0].X = bounds.X + bounds.Width;
                    v[0].Y = bounds.Y;
                    v[1].X = bounds.X + bounds.Width / 2;
                    v[1].Y = bounds.Y + bounds.Height;
                    v[2].X = bounds.X;
                    v[2].Y = bounds.Y;
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleLeft:
                {
                    v[0].X = bounds.X + bounds.Width;
                    v[0].Y = bounds.Y + bounds.Height;
                    v[1].X = bounds.X;
                    v[1].Y = bounds.Y + bounds.Height / 2;
                    v[2].X = bounds.X + bounds.Width;
                    v[2].Y = bounds.Y;
                    return;
                }
            default:
                {
                    return;
                }
        }
    };
    TuHandle.prototype.containsPoint = function (p) {
        var bounds = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.New.Out(this.Bounds.clone());
        var penWidth = this.PenWidth;
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.InflateRect(bounds, penWidth / 2, penWidth / 2);
        if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.ContainsRect(bounds.value, p)) {
            return false;
        }
        if (this.HandleID !== 0) {
            return true;
        }
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.InflateRect(bounds, -penWidth, -penWidth);
        return !_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.ContainsRect(bounds.value, p);
    };
    TuHandle.prototype.copyObject = function (env) {
        return undefined;
    };
    TuHandle.prototype.GetCursorName = function (view) {
        var handledObject = this.HandledObject;
        if (handledObject == null || view != null && !view.CanResizeObjects() || !handledObject.CanResize() && !handledObject.CanReshape()) {
            return undefined;
        }
        return this.CursorName || TuHandle_1.GetCursorNameForHandleID(new _Spot__WEBPACK_IMPORTED_MODULE_5__.Spot(-1, -1, this.HandleID));
    };
    /* internal */ TuHandle.GetCursorNameForHandleID = function (id) {
        if (id.ID <= 64) {
            if (id.ID > 16) {
                if (id.ID == 32) {
                    return "n-resize";
                }
                if (id.ID == 64) {
                    return "e-resize";
                }
            }
            else {
                switch (id.ID) {
                    case 0:
                        {
                            return null;
                        }
                    case 1:
                        {
                            return "move";
                        }
                    case 2:
                        {
                            return "nw-resize";
                        }
                    case 3:
                    case 5:
                    case 6:
                    case 7:
                        {
                            break;
                        }
                    case 4:
                        {
                            return "ne-resize";
                        }
                    case 8:
                        {
                            return "se-resize";
                        }
                    default:
                        {
                            if (id.ID == 16) {
                                return "sw-resize";
                            }
                            break;
                        }
                }
            }
        }
        else if (id.ID > 256) {
            if (id.ID == 1024) {
                return "hand";
            }
            if (id.ID == 1025) {
                return "hand";
            }
        }
        else {
            if (id.ID == 128) {
                return "s-resize";
            }
            if (id.ID == 256) {
                return "w-resize";
            }
        }
        return "move";
    };
    TuHandle.prototype.makePath = function () {
        var graphicsPath = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.GraphicsPath(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.FillMode.Winding);
        var bounds = this.Bounds.clone();
        switch (this.Style) {
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.None:
                {
                    graphicsPath.addLine(bounds.X, bounds.Y, bounds.X, bounds.Y);
                    break;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.Ellipse:
                {
                    graphicsPath.addEllipse(bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    break;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.Diamond:
                {
                    var x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint[4];
                    x[0].X = bounds.X + bounds.Width / 2;
                    x[0].Y = bounds.Y;
                    x[1].X = bounds.X + bounds.Width;
                    x[1].Y = bounds.Y + bounds.Height / 2;
                    x[2].X = x[0].X;
                    x[2].Y = bounds.Y + bounds.Height;
                    x[3].X = bounds.X;
                    x[3].Y = x[1].Y;
                    graphicsPath.addPolygon(x);
                    break;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleTopLeft:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleTopRight:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleBottomRight:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleBottomLeft:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleTop:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleRight:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleBottom:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleLeft:
                {
                    var pointFArray = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.initArray)(3, function () { return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(); });
                    this.computeTrianglePoints(pointFArray);
                    graphicsPath.addPolygon(pointFArray);
                    break;
                }
            default:
                {
                    graphicsPath.addRectangle(bounds);
                    break;
                }
        }
        return graphicsPath;
    };
    TuHandle.prototype.Paint = function (g, view) {
        var bounds = this.Bounds.clone();
        switch (this.Style) {
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.None:
                {
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.Ellipse:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_8__.TuShape.DrawEllipse(g, view, this.Pen, this.Brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.Diamond:
                {
                    var x = view.allocTempPointArray(4);
                    x[0].X = bounds.X + bounds.Width / 2;
                    x[0].Y = bounds.Y;
                    x[1].X = bounds.X + bounds.Width;
                    x[1].Y = bounds.Y + bounds.Height / 2;
                    x[2].X = x[0].X;
                    x[2].Y = bounds.Y + bounds.Height;
                    x[3].X = bounds.X;
                    x[3].Y = x[1].Y;
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_8__.TuShape.DrawPolygon(g, view, this.Pen, this.Brush, x);
                    view.freeTempPointArray(x);
                    return;
                }
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleTopLeft:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleTopRight:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleBottomRight:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleBottomLeft:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleTop:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleRight:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleBottom:
            case _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.TriangleMiddleLeft:
                {
                    var pointFArray = view.allocTempPointArray(3);
                    this.computeTrianglePoints(pointFArray);
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_8__.TuShape.DrawPolygon(g, view, this.Pen, this.Brush, pointFArray);
                    view.freeTempPointArray(pointFArray);
                    return;
                }
            default:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_8__.TuShape.DrawRectangle(g, view, this.Pen, this.Brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    return;
                }
        }
    };
    var TuHandle_1;
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_10__.State)()
    ], TuHandle.prototype, "myHandleID", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_10__.State)()
    ], TuHandle.prototype, "mySelectedObject", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_10__.State)()
    ], TuHandle.prototype, "myStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_10__.State)()
    ], TuHandle.prototype, "myCursorName", void 0);
    TuHandle = TuHandle_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_6__.Types.TuHandle,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_6__.Types.TuHandle,
                _types__WEBPACK_IMPORTED_MODULE_6__.Types.ITuHandle
            ]
        })
    ], TuHandle);
    return TuHandle;
}(_TuShape_TuShape__WEBPACK_IMPORTED_MODULE_8__.TuShape));

_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_9__.TuObject.prototype.CreateBoundingHandle = function () {
    var goHandle = new TuHandle();
    var bounds = { value: this.Bounds.clone() };
    var sizeF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(1, 1);
    var document = this.Document;
    if (document != null) {
        var worldScale = document.WorldScale;
        sizeF.Width = sizeF.Width / worldScale.Width;
        sizeF.Height = sizeF.Height / worldScale.Height;
    }
    _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.InflateRect(bounds, sizeF.Width, sizeF.Height);
    goHandle.Bounds = bounds.value;
    return goHandle;
};
_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_9__.TuObject.prototype.CreateResizeHandle = function (handleid) {
    return new TuHandle();
};
_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_9__.TuObject.prototype.MakeDiamondResizeHandle = function (handle, spot) {
    var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(handle.TuObject, _types__WEBPACK_IMPORTED_MODULE_6__.Types.TuHandle);
    if (goObject != null) {
        goObject.Style = _TuHandleStyle__WEBPACK_IMPORTED_MODULE_7__.TuHandleStyle.Diamond;
        if (!_tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(goObject.SelectedObject, _types__WEBPACK_IMPORTED_MODULE_6__.Types.ITuLink)) {
            goObject.Brush = _Globals__WEBPACK_IMPORTED_MODULE_0__.Brushes_Yellow;
        }
        var bounds = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.New.Out(goObject.Bounds.clone());
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.InflateRect(bounds, bounds.value.Width / 6, bounds.value.Height / 6);
        goObject.Bounds = bounds.value;
        goObject.CursorName = TuHandle.GetCursorNameForHandleID(spot);
    }
};


/***/ }),

/***/ "./src/TuHandle/TuHandleStyle.ts":
/*!***************************************!*\
  !*** ./src/TuHandle/TuHandleStyle.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuHandleStyle": () => (/* binding */ TuHandleStyle)
/* harmony export */ });
var TuHandleStyle;
(function (TuHandleStyle) {
    TuHandleStyle[TuHandleStyle["None"] = 0] = "None";
    TuHandleStyle[TuHandleStyle["Rectangle"] = 1] = "Rectangle";
    TuHandleStyle[TuHandleStyle["Ellipse"] = 2] = "Ellipse";
    TuHandleStyle[TuHandleStyle["Diamond"] = 3] = "Diamond";
    TuHandleStyle[TuHandleStyle["TriangleTopLeft"] = 10] = "TriangleTopLeft";
    TuHandleStyle[TuHandleStyle["TriangleTopRight"] = 11] = "TriangleTopRight";
    TuHandleStyle[TuHandleStyle["TriangleBottomRight"] = 12] = "TriangleBottomRight";
    TuHandleStyle[TuHandleStyle["TriangleBottomLeft"] = 13] = "TriangleBottomLeft";
    TuHandleStyle[TuHandleStyle["TriangleMiddleTop"] = 14] = "TriangleMiddleTop";
    TuHandleStyle[TuHandleStyle["TriangleMiddleRight"] = 15] = "TriangleMiddleRight";
    TuHandleStyle[TuHandleStyle["TriangleMiddleBottom"] = 16] = "TriangleMiddleBottom";
    TuHandleStyle[TuHandleStyle["TriangleMiddleLeft"] = 17] = "TriangleMiddleLeft";
})(TuHandleStyle || (TuHandleStyle = {}));


/***/ }),

/***/ "./src/TuImage/TuImage.ts":
/*!********************************!*\
  !*** ./src/TuImage/TuImage.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuImage": () => (/* binding */ TuImage)
/* harmony export */ });
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TuImageEvents */ "./src/TuImage/TuImageEvents.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuImageInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuImageInfo */ "./src/TuImage/TuImageInfo.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};









var flagAutoResizes = 1048576;
var flagThrowsExceptions = 2097152;
var flagExceptionTraced = 4194304;
var flagNameIsUri = 8388608;
var TuImage = /** @class */ (function (_super) {
    __extends(TuImage, _super);
    function TuImage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myAlignment = _Spot__WEBPACK_IMPORTED_MODULE_6__.TopLeft;
        _this.myResourceManager = TuImage_1.DefaultResourceManager;
        _this.myImageList = TuImage_1.DefaultImageList;
        _this.myIndex = -1;
        return _this;
    }
    TuImage_1 = TuImage;
    Object.defineProperty(TuImage.prototype, "Alignment", {
        //#region [Property] Alignment
        get: function () {
            return this.getAlignment();
        },
        set: function (value) {
            this.setAlignment(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getAlignment = function () {
        return this.myAlignment;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setAlignment = function (value) {
        var int32 = this.myAlignment;
        if (int32 !== value) {
            this.myAlignment = value;
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedAlignment, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuImage.prototype, "AutoResizes", {
        //#endregion
        //#region [Property] AutoResizes
        get: function () {
            return this.getAutoResizes();
        },
        set: function (value) {
            this.setAutoResizes(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getAutoResizes = function () {
        return (this.InternalFlags & flagAutoResizes) !== 0;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setAutoResizes = function (value) {
        var internalFlags = (this.InternalFlags & flagAutoResizes) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagAutoResizes;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagAutoResizes;
            }
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedAutoResizes, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuImage, "DefaultImageList", {
        //#endregion
        //#region [Property] AutoResizes
        get: function () {
            return TuImage_1.myDefaultImageList;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuImage.prototype, "DefaultImageList", {
        set: function (value) {
            TuImage_1.myDefaultImageList = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuImage, "DefaultResourceManager", {
        //#endregion
        //#region [Property] DefaultResourceManager
        get: function () {
            return TuImage_1.myDefaultResourceManager;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuImage.prototype, "DefaultResourceManager", {
        set: function (value) {
            TuImage_1.myDefaultResourceManager = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuImage.prototype, "Image", {
        //#endregion
        //#region [Property] Image
        get: function () {
            return this.getImage();
        },
        set: function (value) {
            this.setImage(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getImage = function () {
        if (this.myImage == null) {
            this.myImage = this.loadImage();
        }
        return this.myImage;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setImage = function (value) {
        if (this.myImage == null) {
            this.myImage = this.loadImage();
        }
        var image = this.myImage;
        if (image != value) {
            this.myImage = value;
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedImage, 0, image, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSize();
        }
    };
    Object.defineProperty(TuImage.prototype, "ImageList", {
        //#endregion
        //#region [Property] ImageList
        get: function () {
            return this.getImageList();
        },
        set: function (value) {
            this.setImageList(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getImageList = function () {
        return this.myImageList;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setImageList = function (value) {
        var imageList = this.myImageList;
        if (imageList !== value) {
            this.myImageList = value;
            this.resetImage();
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedImageList, 0, imageList, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSize();
        }
    };
    Object.defineProperty(TuImage.prototype, "Index", {
        //#endregion
        //#region [Property] Index
        get: function () {
            return this.getIndex();
        },
        set: function (value) {
            this.setIndex(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getIndex = function () {
        return this.myIndex;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setIndex = function (value) {
        var int32 = this.myIndex;
        if (int32 !== value) {
            this.myIndex = value;
            this.resetImage();
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedIndex, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSize();
        }
    };
    //#endregion
    //#region [Property] Location
    /**
     * @hidden
     */
    TuImage.prototype.getLocation = function () {
        return this.GetSpotLocation(this.Alignment);
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setLocation = function (value) {
        this.setSpotLocation(this.Alignment, value);
    };
    Object.defineProperty(TuImage.prototype, "Name", {
        //#endregion
        //#region [Property] Name
        get: function () {
            return this.getName();
        },
        set: function (value) {
            this.setName(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getName = function () {
        return this.myName;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setName = function (value) {
        var str = this.myName;
        if (str != value) {
            this.myName = value;
            this.resetImage();
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedName, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSize();
        }
        return this;
    };
    Object.defineProperty(TuImage.prototype, "NameIsUri", {
        //#endregion
        //#region [Property] NameIsUri
        get: function () {
            return this.getNameIsUri();
        },
        set: function (value) {
            this.setNameIsUri(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getNameIsUri = function () {
        return (this.InternalFlags & flagNameIsUri) != 0;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setNameIsUri = function (value) {
        var internalFlags = (this.InternalFlags & flagNameIsUri) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagNameIsUri;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagNameIsUri;
            }
            this.resetImage();
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedNameIsUri, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSize();
        }
    };
    Object.defineProperty(TuImage.prototype, "ResourceManager", {
        //#endregion
        //#region [Property] ResourceManager
        get: function () {
            return this.getResourceManager();
        },
        set: function (value) {
            this.setResourceManager(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getResourceManager = function () {
        return this.myResourceManager;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setResourceManager = function (value) {
        var resourceManager = this.myResourceManager;
        if (resourceManager !== value) {
            this.myResourceManager = value;
            this.resetImage();
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedResourceManager, 0, resourceManager, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSize();
        }
    };
    Object.defineProperty(TuImage.prototype, "ThrowsExceptions", {
        //#endregion
        //#region [Property] ThrowsExceptions
        get: function () {
            return this.getThrowsExceptions();
        },
        set: function (value) {
            this.setThrowsExceptions(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuImage.prototype.getThrowsExceptions = function () {
        return (this.InternalFlags & flagThrowsExceptions) !== 0;
    };
    /**
     * @hidden
     * @param style
     */
    TuImage.prototype.setThrowsExceptions = function (value) {
        var internalFlags = (this.InternalFlags & flagThrowsExceptions) != 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagThrowsExceptions;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagThrowsExceptions;
            }
            this.Changed(_TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedThrowsExceptions, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    //#endregion
    TuImage.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedImage:
                {
                    this.Image = e.getValue(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedResourceManager:
                {
                    this.ResourceManager = e.getValue(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedName:
                {
                    this.Name = e.getValue(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedAlignment:
                {
                    this.Alignment = e.getValue(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedAutoResizes:
                {
                    this.AutoResizes = e.getValue(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedImageList:
                {
                    this.ImageList = e.getValue(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedIndex:
                {
                    this.Index = e.getInt(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedThrowsExceptions:
                {
                    this.ThrowsExceptions = e.getValue(undo);
                    return;
                }
            case _TuImageEvents__WEBPACK_IMPORTED_MODULE_1__.TuImageEvents.ChangedNameIsUri:
                {
                    this.NameIsUri = e.getValue(undo);
                    return;
                }
        }
        _super.prototype.ChangeValue.call(this, e, undo);
    };
    TuImage.CleanInfos = function () {
        var int32 = TuImage_1.myCounter;
        TuImage_1.myCounter = int32 + 1;
        if (int32 < 100) {
            return TuImage_1.myImages.Count;
        }
        TuImage_1.myCounter = 0;
        var goImageInfos = new _tuval_core__WEBPACK_IMPORTED_MODULE_4__.List();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.foreach)(TuImage_1.myImages, function (myImage) {
            if (myImage.value) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_4__.CONTINUE;
            }
            goImageInfos.Add(myImage.key);
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.foreach)(goImageInfos, function (goImageInfo) {
            TuImage_1.myImages.Remove(goImageInfo);
        });
        return TuImage_1.myImages.Count;
    };
    TuImage.clearCachedImage = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var path = args[0];
            TuImage_1.myInfo.Source = undefined;
            TuImage_1.myInfo.Index = 0;
            TuImage_1.myInfo.Name = path;
            // TuImage.myInfo.Culture = CultureInfo.InvariantCulture;
            TuImage_1.myImages.Remove(TuImage_1.myInfo);
        }
        else if (args.length === 2) {
            var resmgr_1 = args[0];
            var name_1 = args[1];
            if (resmgr_1 == null) {
                return;
            }
            if (name_1 == null) {
                var goImageInfos_1 = new _tuval_core__WEBPACK_IMPORTED_MODULE_4__.List();
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.foreach)(TuImage_1.myImages, function (myImage) {
                    var key = myImage.key;
                    if (key.Source !== resmgr_1) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_4__.CONTINUE;
                    }
                    goImageInfos_1.Add(key);
                });
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.foreach)(goImageInfos_1, function (goImageInfo) {
                    TuImage_1.myImages.Remove(goImageInfo);
                });
            }
            else {
                TuImage_1.myInfo.Source = resmgr_1;
                TuImage_1.myInfo.Index = 0;
                TuImage_1.myInfo.Name = name_1;
                TuImage_1.myImages.Remove(TuImage_1.myInfo);
            }
        }
    };
    TuImage.clearCachedImages = function () {
        TuImage_1.myImages.Clear();
    };
    TuImage.convertIconToImage = function (icon) {
        return icon.toBitmap();
    };
    TuImage.prototype.convertObjectToImage = function (obj) {
        if (obj == null) {
            return undefined;
        }
        var image = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(obj, _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CoreGraphicTypes.CGImage);
        if (image != null) {
            return image;
        }
        var icon = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(obj, _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.GraphicTypes.Icon);
        if (icon != null) {
            return TuImage_1.ConvertIconToImage(icon);
        }
        var numArray = obj;
        if (numArray == null) {
            return undefined;
        }
        return _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGImage.FromStream(new _tuval_core__WEBPACK_IMPORTED_MODULE_4__.MemoryStream(numArray));
    };
    TuImage.ConvertIconToImage = function (icon) {
        return icon.toBitmap();
    };
    TuImage.prototype.ExpandPaintBounds = function (rect, view) {
        rect = rect.clone();
        if (this.Shadowed) {
            var shadowOffset = this.GetShadowOffset(view);
            if (shadowOffset.Width >= 0) {
                rect.Width = rect.Width + shadowOffset.Width;
            }
            else {
                rect.X = rect.X + shadowOffset.Width;
                rect.Width = rect.Width - shadowOffset.Width;
            }
            if (shadowOffset.Height >= 0) {
                rect.Height = rect.Height + shadowOffset.Height;
            }
            else {
                rect.Y = rect.Y + shadowOffset.Height;
                rect.Height = rect.Height - shadowOffset.Height;
            }
        }
        return rect;
    };
    TuImage.FindCachedImage = function (src, idx, name) {
        var weakReference = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.New.Out();
        var image;
        TuImage_1.myInfo.Source = src;
        TuImage_1.myInfo.Index = idx;
        TuImage_1.myInfo.Name = name;
        TuImage_1.myImages.TryGetValue(TuImage_1.myInfo, weakReference);
        if (weakReference != null) {
            var target = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(weakReference.value, _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CoreGraphicTypes.CGImage);
            if (target != null) {
                image = target;
                return image;
            }
        }
        image = undefined;
        return image;
    };
    TuImage.prototype.loadImage = function () {
        var index = this.Index;
        if (index >= 0) {
            var item = undefined;
            var imageList = this.ImageList;
            if (imageList != null) {
                item = TuImage_1.FindCachedImage(imageList, index, undefined);
                if (item != null) {
                    return item;
                }
            }
            var defaultImageList = TuImage_1.DefaultImageList;
            if (defaultImageList != null && defaultImageList != imageList) {
                item = TuImage_1.FindCachedImage(defaultImageList, index, undefined);
                if (item != null) {
                    return item;
                }
            }
            if (imageList != null && index < imageList.Images.Count) {
                item = imageList.Images[index];
            }
            if (item != null) {
                TuImage_1.SaveCachedImage(imageList, index, undefined, item);
                return item;
            }
            if (defaultImageList != null && defaultImageList != imageList && index < defaultImageList.Images.Count) {
                item = defaultImageList.Images[index];
            }
            if (item != null) {
                TuImage_1.SaveCachedImage(defaultImageList, index, undefined, item);
                return item;
            }
            if (item != null) {
                return item;
            }
        }
        var name = this.Name;
        if (name != null && name != "") {
            var image = undefined;
            var resourceManager = this.ResourceManager;
            if (resourceManager != null) {
                image = TuImage_1.FindCachedImage(resourceManager, 0, name);
                if (image != null) {
                    return image;
                }
            }
            var defaultResourceManager = TuImage_1.DefaultResourceManager;
            if (defaultResourceManager != null && defaultResourceManager !== resourceManager) {
                image = TuImage_1.FindCachedImage(defaultResourceManager, 0, name);
                if (image != null) {
                    return image;
                }
            }
            image = TuImage_1.FindCachedImage(undefined, 0, name);
            if (image != null) {
                return image;
            }
            if (resourceManager != null) {
                try {
                    var obj = resourceManager.getObject(name);
                    image = this.convertObjectToImage(obj);
                }
                catch (missingManifestResourceException) {
                    console.error(missingManifestResourceException);
                }
            }
            if (image != null) {
                TuImage_1.SaveCachedImage(resourceManager, 0, name, image);
                return image;
            }
            if (defaultResourceManager != null && defaultResourceManager !== resourceManager) {
                try {
                    var obj1 = defaultResourceManager.getObject(name);
                    image = this.convertObjectToImage(obj1);
                }
                catch (missingManifestResourceException1) {
                    console.error(missingManifestResourceException1);
                }
            }
            if (image != null) {
                TuImage_1.SaveCachedImage(defaultResourceManager, 0, name, image);
                return image;
            }
            try {
                if (!this.NameIsUri) {
                    image = _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.Image.FromFile(name);
                }
                else {
                    /* WebClient webClient = new WebClient();
                    Stream stream = webClient.OpenRead(name);
                    image = System.Drawing.Image.FromStream(stream);
                    stream.Close();
                    webClient.Dispose(); */
                }
                //base.InternalFlags = base.InternalFlags & -4194305;
            }
            catch (exception1) {
                console.error(exception1);
                if (this.ThrowsExceptions) {
                    throw new Error('Hata');
                }
            }
            if (image != null) {
                TuImage_1.SaveCachedImage(undefined, 0, name, image);
                return image;
            }
        }
        return undefined;
    };
    TuImage.prototype.Paint = function (g, view) {
        var bounds = this.Bounds;
        var image = this.Image;
        var index = this.Index;
        if (image == null && index >= 0) {
            var imageList = view.ImageList;
            if (imageList != null && index < imageList.Images.Count) {
                image = imageList.Images[index];
            }
        }
        if (image != null) {
            try {
                if (this.Shadowed) {
                    var shadowOffset = this.GetShadowOffset(view);
                    var colorMatrix = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.ColorMatrix();
                    colorMatrix.Matrix00 = 0;
                    colorMatrix.Matrix11 = 0;
                    colorMatrix.Matrix22 = 0;
                    var shadowBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(this.GetShadowBrush(view), _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.GraphicTypes.SolidBrush);
                    if (shadowBrush == null) {
                        colorMatrix.Matrix30 = 0.5;
                        colorMatrix.Matrix31 = 0.5;
                        colorMatrix.Matrix32 = 0.5;
                        colorMatrix.Matrix33 = 0.5;
                    }
                    else {
                        var color = shadowBrush.Color;
                        colorMatrix.Matrix30 = color.R / 255;
                        colorMatrix.Matrix31 = color.G / 255;
                        colorMatrix.Matrix32 = color.B / 255;
                        colorMatrix.Matrix33 = color.A / 255;
                    }
                    var imageAttribute = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.ImageAttributes();
                    imageAttribute.setColorMatrix(colorMatrix);
                    var rectangle = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle((~~(bounds.X + shadowOffset.Width)), (~~(bounds.Y + shadowOffset.Height)), (~~bounds.Width), (~~bounds.Height));
                    var width = image.Size.Width;
                    var size = image.Size;
                    g.DrawImage(image, rectangle, 0, 0, width, size.Height, _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.GraphicsUnit.Pixel, imageAttribute);
                }
                g.DrawImage(image, bounds);
            }
            catch (exception1) {
                console.error(exception1);
                /* Exception exception = exception1;
                if ((base.InternalFlags & 4194304) == 0) {
                    base.InternalFlags = base.InternalFlags | 4194304;
                    GoObject.Trace(string.Concat("GoImage.Paint: ", exception.ToString()));
                }
                if (this.ThrowsExceptions) {
                    throw;
                } */
            }
        }
    };
    TuImage.prototype.resetImage = function () {
        this.myImage = undefined;
    };
    TuImage.SaveCachedImage = function (src, idx, name, img) {
        TuImage_1.myInfo.Source = src;
        TuImage_1.myInfo.Index = idx;
        TuImage_1.myInfo.Name = name;
        TuImage_1.myImages.Set(new _TuImageInfo__WEBPACK_IMPORTED_MODULE_5__.TuImageInfo(TuImage_1.myInfo), img);
        TuImage_1.CleanInfos();
    };
    TuImage.prototype.setSizeKeepingLocation = function (s) {
        var bounds = this.Bounds;
        bounds.Width = s.Width;
        bounds.Height = s.Height;
        var location = this.Location;
        var rectangleF = this.setRectangleSpotLocation(bounds, this.Alignment, location);
        this.Bounds = rectangleF;
    };
    TuImage.prototype.unloadImage = function () {
        this.resetImage();
        _super.prototype.InvalidateViews.call(this);
    };
    TuImage.prototype.updateSize = function () {
        if (this.Initializing) {
            return;
        }
        if (this.AutoResizes) {
            try {
                this.updateSize2();
            }
            catch (invalidOperationException) {
                console.error(invalidOperationException);
            }
        }
    };
    TuImage.prototype.updateSize2 = function () {
        var image = this.Image;
        if (image != null) {
            var size = this.Size;
            var sizeF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(image.Size.Width, image.Size.Height);
            if (size.NotEquals(sizeF)) {
                this.setSizeKeepingLocation(sizeF);
            }
        }
    };
    var TuImage_1;
    TuImage = TuImage_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuImage,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuImage
            ]
        })
    ], TuImage);
    return TuImage;
}(_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_8__.TuObject));

(function staticContructor() {
    TuImage.myInfo = new _TuImageInfo__WEBPACK_IMPORTED_MODULE_5__.TuImageInfo();
    TuImage.myImages = new _tuval_core__WEBPACK_IMPORTED_MODULE_4__.Dictionary();
})();


/***/ }),

/***/ "./src/TuImage/TuImageEvents.ts":
/*!**************************************!*\
  !*** ./src/TuImage/TuImageEvents.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuImageEvents": () => (/* binding */ TuImageEvents)
/* harmony export */ });
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../TuObjectEvents */ "./src/TuObjectEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuImageEvents = /** @class */ (function (_super) {
    __extends(TuImageEvents, _super);
    function TuImageEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuImageEvents.ChangedImage = 1601;
    TuImageEvents.ChangedResourceManager = 1602;
    TuImageEvents.ChangedName = 1603;
    TuImageEvents.ChangedAlignment = 1604;
    TuImageEvents.ChangedAutoResizes = 1605;
    TuImageEvents.ChangedImageList = 1606;
    TuImageEvents.ChangedIndex = 1607;
    TuImageEvents.ChangedThrowsExceptions = 1608;
    TuImageEvents.ChangedNameIsUri = 1609;
    TuImageEvents[1601] = 'ChangedImage';
    TuImageEvents[1602] = 'ChangedResourceManager';
    TuImageEvents[1603] = 'ChangedName';
    TuImageEvents[1604] = 'ChangedAlignment';
    TuImageEvents[1605] = 'ChangedAutoResizes';
    TuImageEvents[1606] = 'ChangedImageList';
    TuImageEvents[1607] = 'ChangedIndex';
    TuImageEvents[1608] = 'ChangedThrowsExceptions';
    TuImageEvents[1609] = 'ChangedNameIsUri';
    return TuImageEvents;
}(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__.TuObjectEvents));



/***/ }),

/***/ "./src/TuImage/TuImageInfo.ts":
/*!************************************!*\
  !*** ./src/TuImage/TuImageInfo.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuImageInfo": () => (/* binding */ TuImageInfo)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");


var TuImageInfo = /** @class */ (function () {
    function TuImageInfo(other) {
        this.Index = 0;
        if (other != null) {
            this.Source = other.Source;
            this.Index = other.Index;
            this.Name = other.Name;
            this.Culture = other.Culture;
        }
    }
    TuImageInfo.prototype.equals = function (obj) {
        var goImageInfo = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuImageInfo);
        if (goImageInfo == null) {
            return false;
        }
        if (this.Source !== goImageInfo.Source || this.Index !== goImageInfo.Index || !(this.Name === goImageInfo.Name)) {
            return false;
        }
        return this.Culture === goImageInfo.Culture;
    };
    return TuImageInfo;
}());



/***/ }),

/***/ "./src/TuInputEventArgs.ts":
/*!*********************************!*\
  !*** ./src/TuInputEventArgs.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuInputEventArgs": () => (/* binding */ TuInputEventArgs)
/* harmony export */ });
/* harmony import */ var _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Forms/MouseButtons */ "./src/Forms/MouseButtons.ts");
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _Forms_Keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Forms/Keys */ "./src/Forms/Keys.ts");



var TuInputEventArgs = /** @class */ (function () {
    function TuInputEventArgs(evt) {
        this.myInputState = _TuInputState__WEBPACK_IMPORTED_MODULE_1__.TuInputState.Start;
        if (evt) {
            this.myStagePoint = evt.getStagePoint();
            this.myDocPoint = evt.getDocPoint();
            this.myButtons = evt.getButtons();
            this.myModifiers = evt.getModifiers();
            this.myKey = evt.getKey();
            this.myMouseEventArgs = evt.getMouseEventArgs();
            this.myDragEventArgs = evt.getDragEventArgs();
            this.myKeyEventArgs = evt.getKeyEventArgs();
            this.myDoubleClick = evt.getDoubleClick();
            this.myDelta = evt.getDelta();
            this.myInputState = evt.getInputState();
        }
    }
    Object.defineProperty(TuInputEventArgs.prototype, "Alt", {
        get: function () {
            return this.getAlt();
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getAlt = function () {
        return (this.myModifiers & _Forms_Keys__WEBPACK_IMPORTED_MODULE_2__.Keys.Alt) === _Forms_Keys__WEBPACK_IMPORTED_MODULE_2__.Keys.Alt;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "Buttons", {
        get: function () {
            return this.getButtons();
        },
        set: function (value) {
            this.setButtons(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getButtons = function () {
        return this.myButtons;
    };
    TuInputEventArgs.prototype.setButtons = function (value) {
        this.myButtons = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "Control", {
        get: function () {
            return this.getControl();
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getControl = function () {
        return (this.myModifiers & _Forms_Keys__WEBPACK_IMPORTED_MODULE_2__.Keys.Control) === _Forms_Keys__WEBPACK_IMPORTED_MODULE_2__.Keys.Control;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "Delta", {
        get: function () {
            return this.getDelta();
        },
        set: function (value) {
            this.setDelta(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getDelta = function () {
        return this.myDelta;
    };
    TuInputEventArgs.prototype.setDelta = function (value) {
        this.myDelta = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "DocPoint", {
        get: function () {
            return this.getDocPoint();
        },
        set: function (value) {
            this.setDocPoint(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getDocPoint = function () {
        return this.myDocPoint;
    };
    TuInputEventArgs.prototype.setDocPoint = function (value) {
        this.myDocPoint = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "DoubleClick", {
        get: function () {
            return this.getDoubleClick();
        },
        set: function (value) {
            this.setDoubleClick(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getDoubleClick = function () {
        return this.myDoubleClick;
    };
    TuInputEventArgs.prototype.setDoubleClick = function (value) {
        this.myDoubleClick = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "DragEventArgs", {
        get: function () {
            return this.getDragEventArgs();
        },
        set: function (value) {
            this.setDragEventArgs(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getDragEventArgs = function () {
        return this.myDragEventArgs;
    };
    TuInputEventArgs.prototype.setDragEventArgs = function (value) {
        this.myDragEventArgs = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "InputState", {
        get: function () {
            return this.getInputState();
        },
        set: function (value) {
            this.setInputState(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getInputState = function () {
        return this.myInputState;
    };
    TuInputEventArgs.prototype.setInputState = function (value) {
        this.myInputState = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "IsContextButton", {
        get: function () {
            return this.isContextButton();
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.isContextButton = function () {
        return this.myButtons === _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_0__.MouseButtons.Right;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "Key", {
        get: function () {
            return this.getKey();
        },
        set: function (value) {
            this.setKey(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getKey = function () {
        return this.myKey;
    };
    TuInputEventArgs.prototype.setKey = function (value) {
        this.myKey = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "KeyEventArgs", {
        get: function () {
            return this.getKeyEventArgs();
        },
        set: function (value) {
            this.setKeyEventArgs(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getKeyEventArgs = function () {
        return this.myKeyEventArgs;
    };
    TuInputEventArgs.prototype.setKeyEventArgs = function (value) {
        this.myKeyEventArgs = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "Modifiers", {
        get: function () {
            return this.getModifiers();
        },
        set: function (value) {
            this.setModifiers(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getModifiers = function () {
        return this.myModifiers;
    };
    TuInputEventArgs.prototype.setModifiers = function (value) {
        this.myModifiers = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "MouseEventArgs", {
        get: function () {
            return this.getMouseEventArgs();
        },
        set: function (value) {
            this.setMouseEventArgs(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getMouseEventArgs = function () {
        return this.myMouseEventArgs;
    };
    TuInputEventArgs.prototype.setMouseEventArgs = function (value) {
        this.myMouseEventArgs = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "Shift", {
        get: function () {
            return this.getShift();
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getShift = function () {
        return (this.myModifiers & _Forms_Keys__WEBPACK_IMPORTED_MODULE_2__.Keys.Shift) === _Forms_Keys__WEBPACK_IMPORTED_MODULE_2__.Keys.Shift;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "StagePoint", {
        get: function () {
            return this.getStagePoint();
        },
        set: function (value) {
            this.setStagePoint(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getStagePoint = function () {
        return this.myStagePoint;
    };
    TuInputEventArgs.prototype.setStagePoint = function (value) {
        this.myStagePoint = value;
    };
    Object.defineProperty(TuInputEventArgs.prototype, "ViewPoint", {
        get: function () {
            return this.getViewPoint();
        },
        set: function (value) {
            this.setViewPoint(value);
        },
        enumerable: false,
        configurable: true
    });
    TuInputEventArgs.prototype.getViewPoint = function () {
        return this.myViewPoint;
    };
    TuInputEventArgs.prototype.setViewPoint = function (value) {
        this.myViewPoint = value;
    };
    return TuInputEventArgs;
}());



/***/ }),

/***/ "./src/TuInputState.ts":
/*!*****************************!*\
  !*** ./src/TuInputState.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuInputState": () => (/* binding */ TuInputState)
/* harmony export */ });
var TuInputState;
(function (TuInputState) {
    TuInputState[TuInputState["Cancel"] = 0] = "Cancel";
    TuInputState[TuInputState["Start"] = 1] = "Start";
    TuInputState[TuInputState["Continue"] = 2] = "Continue";
    TuInputState[TuInputState["Finish"] = 3] = "Finish";
})(TuInputState || (TuInputState = {}));


/***/ }),

/***/ "./src/TuInvalidateCollection.ts":
/*!***************************************!*\
  !*** ./src/TuInvalidateCollection.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuInvalidateCollection": () => (/* binding */ TuInvalidateCollection)
/* harmony export */ });
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var TuInvalidateCollection = /** @class */ (function (_super) {
    __extends(TuInvalidateCollection, _super);
    function TuInvalidateCollection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuInvalidateCollection.prototype.getInvalidateRectangle = function () {
        var unionRect;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this, function (rect) {
            if (unionRect == null) {
                unionRect = rect;
            }
            else {
                unionRect = _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.UnionRect(unionRect, rect);
            }
        });
        this.Clear();
        return unionRect;
    };
    Object.defineProperty(TuInvalidateCollection.prototype, "IsEmpty", {
        get: function () {
            return this.Count === 0;
        },
        enumerable: false,
        configurable: true
    });
    return TuInvalidateCollection;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.List));



/***/ }),

/***/ "./src/TuLayer/TuLayer.tsx":
/*!*********************************!*\
  !*** ./src/TuLayer/TuLayer.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPickInRectangleStyle": () => (/* binding */ TuPickInRectangleStyle),
/* harmony export */   "TuLayer": () => (/* binding */ TuLayer)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuLayerEvents */ "./src/TuLayer/TuLayerEvents.ts");
/* harmony import */ var _TuLayerEnumerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TuLayerEnumerator */ "./src/TuLayer/TuLayerEnumerator.ts");
/* harmony import */ var _TuLayerCache__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuLayerCache */ "./src/TuLayer/TuLayerCache.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _ZComparer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ZComparer */ "./src/TuLayer/ZComparer.ts");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TuDocument/TuDocument */ "./src/TuDocument/TuDocument.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};












var TuPickInRectangleStyle;
(function (TuPickInRectangleStyle) {
    TuPickInRectangleStyle[TuPickInRectangleStyle["AnyContained"] = 1] = "AnyContained";
    TuPickInRectangleStyle[TuPickInRectangleStyle["AnyIntersectsBounds"] = 2] = "AnyIntersectsBounds";
    TuPickInRectangleStyle[TuPickInRectangleStyle["SelectableOnlyContained"] = 257] = "SelectableOnlyContained";
    TuPickInRectangleStyle[TuPickInRectangleStyle["SelectableOnlyIntersectsBounds"] = 258] = "SelectableOnlyIntersectsBounds";
})(TuPickInRectangleStyle || (TuPickInRectangleStyle = {}));
var TuLayer = /** @class */ (function (_super) {
    __extends(TuLayer, _super);
    function TuLayer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuLayer_1 = TuLayer;
    TuLayer.prototype.SetupControlDefaults = function () {
        this.myIsInDocument = false;
        this.myObjects = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        this.myAllowView = true;
        this.myAllowPrint = true;
        this.myAllowSelect = true;
        this.myAllowMove = true;
        this.myAllowCopy = true;
        this.myAllowResize = true;
        this.myAllowReshape = true;
        this.myAllowDelete = true;
        this.myAllowInsert = true;
        this.myAllowLink = true;
        this.myAllowEdit = true;
        this.myCachedPickPoint = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint.Empty;
        this.myValidIndices = false;
        this.myLayerCollectionIndex = -1;
    };
    Object.defineProperty(TuLayer.prototype, "AllowCopy", {
        //#region [Property] AllowCopy
        get: function () {
            return this.GetAllowCopy();
        },
        set: function (value) {
            this.SetAllowCopy(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowCopy = function () {
        return this.myAllowCopy;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowCopy = function (value) {
        var flag = this.myAllowCopy;
        if (flag !== value) {
            this.myAllowCopy = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowCopy, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowDelete", {
        //#endregion
        //#region [Property] AllowDelete
        get: function () {
            return this.GetAllowDelete();
        },
        set: function (value) {
            this.SetAllowDelete(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowDelete = function () {
        return this.myAllowDelete;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowDelete = function (value) {
        var flag = this.myAllowDelete;
        if (flag !== value) {
            this.myAllowDelete = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowDelete, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowEdit", {
        //#endregion
        //#region [Property] AllowEdit
        get: function () {
            return this.GetAllowEdit();
        },
        set: function (value) {
            this.SetAllowEdit(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowEdit = function () {
        return this.myAllowEdit;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowEdit = function (value) {
        var flag = this.myAllowEdit;
        if (flag !== value) {
            this.myAllowEdit = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowEdit, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowInsert", {
        //#endregion
        //#region [Property] AllowInsert
        get: function () {
            return this.GetAllowInsert();
        },
        set: function (value) {
            this.SetAllowInsert(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowInsert = function () {
        return this.myAllowInsert;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowInsert = function (value) {
        var flag = this.myAllowInsert;
        if (flag !== value) {
            this.myAllowInsert = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowInsert, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowLink", {
        //#endregion
        //#region [Property] AllowLink
        get: function () {
            return this.GetAllowLink();
        },
        set: function (value) {
            this.SetAllowLink(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowLink = function () {
        return this.myAllowLink;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowLink = function (value) {
        var flag = this.myAllowLink;
        if (flag !== value) {
            this.myAllowLink = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowLink, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowMove", {
        //#endregion
        //#region [Property] AllowMove
        get: function () {
            return this.GetAllowMove();
        },
        set: function (value) {
            this.SetAllowMove(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowMove = function () {
        return this.myAllowMove;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowMove = function (value) {
        var flag = this.myAllowMove;
        if (flag !== value) {
            this.myAllowMove = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowMove, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowPrint", {
        //#endregion
        //#region [Property] AllowPrint
        get: function () {
            return this.GetAllowPrint();
        },
        set: function (value) {
            this.SetAllowPrint(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowPrint = function () {
        return this.myAllowPrint;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowPrint = function (value) {
        var flag = this.myAllowPrint;
        if (flag !== value) {
            this.myAllowPrint = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowPrint, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowReshape", {
        //#endregion
        //#region [Property] AllowReshape
        get: function () {
            return this.GetAllowReshape();
        },
        set: function (value) {
            this.SetAllowReshape(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowReshape = function () {
        return this.myAllowReshape;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowReshape = function (value) {
        var flag = this.myAllowReshape;
        if (flag !== value) {
            this.myAllowReshape = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowReshape, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowResize", {
        //#endregion
        //#region [Property] AllowResize
        get: function () {
            return this.GetAllowResize();
        },
        set: function (value) {
            this.SetAllowResize(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowResize = function () {
        return this.myAllowResize;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowResize = function (value) {
        var flag = this.myAllowResize;
        if (flag !== value) {
            this.myAllowResize = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowResize, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowSelect", {
        //#endregion
        //#region [Property] AllowSelect
        get: function () {
            return this.GetAllowSelect();
        },
        set: function (value) {
            this.SetAllowSelect(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowSelect = function () {
        return this.myAllowSelect;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowSelect = function (value) {
        var flag = this.myAllowSelect;
        if (flag !== value) {
            this.myAllowSelect = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowSelect, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "AllowView", {
        //#endregion
        //#region [Property] AllowView
        get: function () {
            return this.GetAllowView();
        },
        set: function (value) {
            this.SetAllowView(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetAllowView = function () {
        return this.myAllowView;
    };
    /**
    * @hidden
    */
    TuLayer.prototype.SetAllowView = function (value) {
        var flag = this.myAllowView;
        if (flag != value) {
            this.myAllowView = value;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedAllowView, 0, this, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
    };
    Object.defineProperty(TuLayer.prototype, "Backwards", {
        //#endregion
        //#region [Property] Backwards
        get: function () {
            return this.GetBackwards();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayer.prototype.GetBackwards = function () {
        return new _TuLayerEnumerator__WEBPACK_IMPORTED_MODULE_4__.TuLayerEnumerator(this.myObjects, false);
    };
    Object.defineProperty(TuLayer.prototype, "Caches", {
        //#endregion
        //#region [Property] Caches
        get: function () {
            if (this.myCaches == null) {
                this.myCaches = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
            }
            return this.myCaches;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "Count", {
        //#endregion
        //#region [Property] Count
        get: function () {
            return this.myObjects.Count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "Document", {
        //#endregion
        //#region [Property] Document
        get: function () {
            return this.myDocument;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "Identifier", {
        //#endregion
        //#region [Property] Identifier
        get: function () {
            return this.myIdentifier;
        },
        set: function (value) {
            var obj = this.myIdentifier;
            if (obj != value) {
                this.myIdentifier = value;
                this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedIdentifier, 0, this, 0, obj, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "IsEmpty", {
        //#endregion
        //#region [Property] IsEmpty
        get: function () {
            return this.myObjects.Count === 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "IsInDocument", {
        //#endregion
        //#region [Property] IsInDocument
        get: function () {
            return this.myIsInDocument;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "IsInView", {
        //#endregion
        //#region [Property] IsInView
        get: function () {
            return !this.myIsInDocument;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "IsReadOnly", {
        //#endregion
        //#region [Property] IsReadOnly
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "LayerCollectionContainer", {
        //#endregion
        //#region [Property] LayerCollectionContainer
        get: function () {
            return this.myLayerCollectionContainer;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "LayerCollectionIndex", {
        //#endregion
        //#region [Property] LayerCollectionIndex
        get: function () {
            return this.myLayerCollectionIndex;
        },
        set: function (value) {
            this.myLayerCollectionIndex = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayer.prototype, "View", {
        //#endregion
        //#region [Property] View
        get: function () {
            return this.myView;
        },
        enumerable: false,
        configurable: true
    });
    //#endregion
    TuLayer.prototype.Add = function (obj) {
        if (obj == null) {
            return;
        }
        if (obj.Layer == null) {
            if (obj.Parent != null) {
                obj.Parent.Remove(obj);
            }
            this.AddToLayer(obj, false);
        }
        else {
            if (obj.Layer.LayerCollectionContainer !== this.LayerCollectionContainer) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("Cannot add an object to a layer when it is already part of a different document's or view's layer.");
            }
            if (obj.Parent != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("Cannot add an object to a layer when it is part of a group.");
            }
            var layer = obj.Layer;
            if (layer != this) {
                this.ChangeLayer(obj, layer, false);
                return;
            }
        }
    };
    TuLayer.SetAllNoClear = function (obj, b) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('setAllNoClear static method must implemented by TuGroup.');
    };
    TuLayer.ReparentAllLinksToSubGraphs = function (coll, behind, layer) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('ReparentAllLinksToSubGraphs static method must implemented by TuSubGraphBase.');
    };
    TuLayer.prototype.AddCollection = function (coll, reparentLinks) {
        var _this = this;
        var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection({
            internalChecksForDuplicates: false
        });
        goCollections.AddRange(coll);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections, function (goCollection) {
            if (goCollection.Layer == _this && goCollection.IsTopLevel || goCollection.Layer == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            TuLayer_1.SetAllNoClear(goCollection, true);
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections, function (goObject) {
            if (goObject.Layer === _this && goObject.IsTopLevel) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            goObject.Remove();
            _this.Add(goObject);
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections, function (goCollection1) {
            TuLayer_1.SetAllNoClear(goCollection1, false);
        });
        if (reparentLinks && this.IsInDocument) {
            TuLayer_1.ReparentAllLinksToSubGraphs(goCollections, true, this.Document.LinksLayer);
        }
        return goCollections;
    };
    TuLayer.prototype.AddToLayer = function (obj, undoing) {
        obj.LayerIndex = this.myObjects.Count;
        this.myObjects.Add(obj);
        obj.setLayer(this, obj, undoing);
        this.InsertIntoCaches(obj);
        var bounds = obj.Bounds;
        this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.InsertedObject, 0, obj, 0, null, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect, 0, this, bounds);
    };
    TuLayer.prototype.cacheWanted = function (view) {
        if (!this.IsInDocument || !_TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_10__.TuDocument.myCaching) {
            return false;
        }
        return !view.IsPrinting;
    };
    TuLayer.prototype.CanCopyObjects = function () {
        if (!this.AllowCopy) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanCopyObjects();
    };
    TuLayer.prototype.CanDeleteObjects = function () {
        if (!this.AllowDelete) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanDeleteObjects();
    };
    TuLayer.prototype.CanEditObjects = function () {
        if (!this.AllowEdit) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanEditObjects();
    };
    TuLayer.prototype.CanInsertObjects = function () {
        if (!this.AllowInsert) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanInsertObjects();
    };
    TuLayer.prototype.CanLinkObjects = function () {
        if (!this.AllowLink) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanLinkObjects();
    };
    TuLayer.prototype.CanMoveObjects = function () {
        if (!this.AllowMove) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanMoveObjects();
    };
    TuLayer.prototype.CanPrintObjects = function () {
        return this.AllowPrint;
    };
    TuLayer.prototype.CanReshapeObjects = function () {
        if (!this.AllowReshape) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanReshapeObjects();
    };
    TuLayer.prototype.CanResizeObjects = function () {
        if (!this.AllowResize) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanResizeObjects();
    };
    TuLayer.prototype.CanSelectObjects = function () {
        if (!this.AllowSelect) {
            return false;
        }
        if (!this.IsInDocument) {
            return true;
        }
        return this.LayerCollectionContainer.CanSelectObjects();
    };
    TuLayer.prototype.CanViewObjects = function () {
        return this.AllowView;
    };
    TuLayer.prototype.ChangeLayer = function (obj, oldLayer, undoing) {
        oldLayer.removeFromCaches(obj);
        var int32 = _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection.FastRemove(oldLayer.myObjects, obj);
        if (int32 < oldLayer.myObjects.Count) {
            oldLayer.resetIndices();
        }
        obj.LayerIndex = this.myObjects.Count;
        this.myObjects.Add(obj);
        obj.setLayer(this, obj, undoing);
        this.InsertIntoCaches(obj);
        var bounds = obj.Bounds;
        this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedObjectLayer, 0, obj, int32, oldLayer, bounds, -1, this, bounds);
    };
    TuLayer.prototype.Clear = function () {
        for (var i = this.myObjects.Count; i > 0; i = Math.min(i, this.myObjects.Count)) {
            var goObjects = this.myObjects;
            var int32 = (i - 1);
            i = int32;
            return this.Remove(goObjects[int32]);
        }
    };
    TuLayer.prototype.Contains = function (obj) {
        if (obj == null) {
            return false;
        }
        return obj.Layer === this;
    };
    TuLayer.prototype.CopyArray = function () {
        return this.myObjects.ToArray();
    };
    /// <summary>
    /// Copy references to all of the objects in this collection into an array.
    /// </summary>
    /// <param name="array"></param>
    /// <param name="index"></param>
    TuLayer.prototype.CopyTo = function (array, index) {
        return this.myObjects.CopyTo(array, index);
    };
    TuLayer.prototype.FindCache = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(args[0], _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuView)) {
            var view = args[0];
            var goLayerCache = void 0;
            var enumerator = this.Caches.GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var current = enumerator.Current;
                    if (current.View !== view) {
                        continue;
                    }
                    goLayerCache = current;
                    return goLayerCache;
                }
                return undefined;
            }
            finally {
                enumerator.Dispose();
            }
            return goLayerCache;
        }
        else if (args[0] instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle) {
            var r_1 = args[0];
            var goLayerCache_1 = undefined;
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Caches, function (cach) {
                if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.ContainsRect(cach.Rect, r_1) || goLayerCache_1 != null && cach.Objects.Count >= goLayerCache_1.Objects.Count) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                goLayerCache_1 = cach;
            });
            return goLayerCache_1;
        }
        else if (args[0] instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint) {
            var p_1 = args[0];
            var goLayerCache_2 = undefined;
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Caches, function (cach) {
                if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.ContainsRect(cach.Rect, p_1) || goLayerCache_2 != null && cach.Objects.Count >= goLayerCache_2.Objects.Count) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                goLayerCache_2 = cach;
            });
            return goLayerCache_2;
        }
    };
    TuLayer.prototype.GetEnumerator = function () {
        return new _TuLayerEnumerator__WEBPACK_IMPORTED_MODULE_4__.TuLayerEnumerator(this.myObjects, true);
    };
    TuLayer.prototype.IndexOf = function (obj) {
        if (obj.Layer !== this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("TuObject doesn't belong to TuLayer");
        }
        if (this.myValidIndices) {
            return obj.LayerIndex;
        }
        return this.myObjects.IndexOf(obj);
    };
    TuLayer.prototype.InitializeIndices = function () {
        if (!this.myValidIndices) {
            this.myValidIndices = true;
            for (var i = 0; i < this.myObjects.Count; i++) {
                this.myObjects[i].LayerIndex = i;
            }
        }
    };
    TuLayer.prototype.insertIntoCache1 = function (cache, obj) {
        var _this = this;
        var goDragSnapper = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuDragSnapper);
        if (goDragSnapper != null && !cache.Snappers.Contains(goDragSnapper)) {
            cache.Snappers.Add(goDragSnapper);
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                _this.insertIntoCache1(cache, enumerator);
            });
        }
    };
    /* internal */ TuLayer.prototype.InsertIntoCaches = function (obj) {
        var _this = this;
        this.resetPickCache();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Caches, function (cach) {
            var rectangleF = obj.ExpandPaintBounds(obj.Bounds.clone(), cach.View);
            if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(cach.Rect, rectangleF)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            cach.Objects.Add(obj);
            _this.insertIntoCache1(cach, obj);
            _this.InitializeIndices();
            cach.Snappers.Sort(TuLayer_1.myZComparer);
        });
    };
    /* internal */ TuLayer.prototype.Init = function (lcc) {
        this.myLayerCollectionContainer = lcc;
        this.myIsInDocument = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(lcc, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuDocument);
        this.myDocument = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(lcc, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuDocument);
        this.myView = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(lcc, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuView);
    };
    TuLayer.prototype.MoveAfter = function (dest, moving) {
        if (moving == null) {
            return;
        }
        if (this.Count === 0) {
            return;
        }
        var count = -1;
        if (dest != null) {
            dest = dest.TopLevelObject;
            count = this.IndexOf(dest);
            if (count < 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("MoveAfter destination object must be in the TuLayer");
            }
        }
        else {
            dest = this.myObjects[this.Count - 1];
            count = this.Count - 1;
            if (dest === moving) {
                return;
            }
        }
        if (moving.Parent != null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("Cannot change Z-order of a child object; call TuGroup.InsertAfter instead");
        }
        var int32 = this.IndexOf(moving);
        if (int32 < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("MoveAfter object to be moved must be in the GoLayer");
        }
        if ((count + 1) !== int32 && count !== int32) {
            if (count > int32) {
                count--;
            }
            this.MoveInLayer((count + 1), moving, int32, false);
        }
    };
    TuLayer.prototype.MoveBefore = function (dest, moving) {
        if (moving == null) {
            return;
        }
        if (this.Count === 0) {
            return;
        }
        var int32 = -1;
        if (dest != null) {
            dest = dest.TopLevelObject;
            int32 = this.IndexOf(dest);
            if (int32 < 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("MoveBefore destination object must be in the TuLayer");
            }
        }
        else {
            dest = this.myObjects[0];
            int32 = 0;
            if (dest == moving) {
                return;
            }
        }
        if (moving.Parent != null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("Cannot change Z-order of a child object; call GoGroup.InsertBefore instead");
        }
        var int321 = this.IndexOf(moving);
        if (int321 < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("MoveBefore object to be moved must be in the GoLayer");
        }
        if ((int32 - 1) !== int321 && int32 !== int321) {
            if (int32 > int321) {
                int32--;
            }
            this.MoveInLayer(int32, moving, int321, false);
        }
    };
    /* internal */ TuLayer.prototype.MoveInLayer = function (newidx, obj, oldidx, undoing) {
        this.MoveInLayerInternal(newidx, obj, oldidx);
        var bounds = obj.Bounds;
        this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.ChangedObjectZOrder, 0, obj, oldidx, obj, bounds, newidx, obj, bounds);
    };
    /* internal */ TuLayer.prototype.MoveInLayerInternal = function (newidx, obj, oldidx) {
        if (oldidx >= 0 && oldidx < this.myObjects.Count && newidx >= 0 && newidx < this.myObjects.Count) {
            this.myObjects.RemoveAt(oldidx);
            this.myObjects.Insert(newidx, obj);
            this.resetIndices();
            this.ResetCaches();
        }
    };
    TuLayer.prototype.NextObject = function (obj, relativeZorder) {
        if (obj == null) {
            return null;
        }
        var int32 = this.IndexOf(obj.TopLevelObject);
        if (int32 < 0) {
            return null;
        }
        int32 = (int32 + relativeZorder);
        if (int32 < 0 || int32 >= this.Count) {
            return null;
        }
        return this.myObjects[int32];
    };
    TuLayer.prototype.renderObjects = function (view, clipRect) {
        var isPrinting = view.IsPrinting;
        if ((isPrinting ? !this.CanPrintObjects() : !this.CanViewObjects())) {
            return;
        }
        var result = [];
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject1) {
            if ((isPrinting ? !goObject1.CanPrint() : !goObject1.CanView()) ||
                !_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(goObject1.ExpandPaintBounds(goObject1.Bounds.clone(), view), clipRect)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            /*  const renderer = view.myRenderers.Find((item: TuXmlTransformer<any>) => item.TransformerType === goObject1.GetType());
             if (renderer != null) {
                 result.push(renderer.Render(goObject1));
             } else { */
            result.push(goObject1.CreateMainElement(view));
            //}
        });
        return result;
    };
    TuLayer.prototype.CreateElements = function (params) {
        var view = params.view;
        var clipRect = params.clipRect;
        return this.renderObjects(view, clipRect);
    };
    TuLayer.prototype.Paint = function (g, view, clipRect) {
        var _this = this;
        var isPrinting = view.IsPrinting;
        if ((isPrinting ? !this.CanPrintObjects() : !this.CanViewObjects())) {
            return;
        }
        var docExtent = view.DocExtent;
        var goLayerCache = this.FindCache(view);
        if (goLayerCache == null || !(goLayerCache.Rect.isEqual(docExtent))) {
            if (this.cacheWanted(view)) {
                if (goLayerCache != null) {
                    goLayerCache.reset();
                }
                else {
                    goLayerCache = new _TuLayerCache__WEBPACK_IMPORTED_MODULE_5__.TuLayerCache(view);
                    this.Caches.Add(goLayerCache);
                }
                goLayerCache.Rect = docExtent;
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject) {
                    var bounds = goObject.ExpandPaintBounds(goObject.Bounds.clone(), view);
                    if ((isPrinting ? goObject.CanPrint() : goObject.CanView()) && _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(bounds.clone(), clipRect)) {
                        goObject.Paint(g, view);
                    }
                    if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(bounds.clone(), docExtent)) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    goLayerCache.Objects.Add(goObject);
                    _this.insertIntoCache1(goLayerCache, goObject);
                });
                this.InitializeIndices();
                goLayerCache.Snappers.Sort(TuLayer_1.myZComparer);
                return;
            }
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this, function (goObject1) {
                if ((isPrinting ? !goObject1.CanPrint() : !goObject1.CanView()) ||
                    !_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(goObject1.ExpandPaintBounds(goObject1.Bounds.clone(), view), clipRect)) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                goObject1.Paint(g, view);
            });
        }
        else {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goLayerCache.Objects, function (object) {
                if ((isPrinting ? !object.CanPrint() : !object.CanView()) || !_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(object.ExpandPaintBounds(object.Bounds.clone(), view), clipRect)) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                object.Paint(g, view);
            });
        }
    };
    TuLayer.prototype.PickObject = function (p, selectableOnly) {
        var goObject;
        if (!this.CanViewObjects()) {
            return null;
        }
        if (selectableOnly && !this.CanSelectObjects()) {
            return null;
        }
        if (this.myCachedPickPoint.Equals(p) && this.myCachedPick && this.myCachedPickSelectable === selectableOnly) {
            return this.myCachedPickObject;
        }
        var goLayerCache = this.FindCache(p);
        if (goLayerCache == null) {
            var enumerator = this.Backwards.GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var goObject1 = enumerator.Current.Pick(p, selectableOnly);
                    if (goObject1 == null) {
                        continue;
                    }
                    this.myCachedPick = true;
                    this.myCachedPickPoint = p;
                    this.myCachedPickSelectable = selectableOnly;
                    this.myCachedPickObject = goObject1;
                    goObject = goObject1;
                    return goObject;
                }
                this.myCachedPick = true;
                this.myCachedPickPoint = p;
                this.myCachedPickSelectable = selectableOnly;
                this.myCachedPickObject = null;
                return null;
            }
            finally {
                enumerator.Dispose();
            }
            return goObject;
        }
        else {
            var objects = goLayerCache.Objects;
            for (var i = (objects.Count - 1); i >= 0; i--) {
                var goObject2 = objects.Get(i).Pick(p, selectableOnly);
                if (goObject2 != null) {
                    this.myCachedPick = true;
                    this.myCachedPickPoint = p;
                    this.myCachedPickSelectable = selectableOnly;
                    this.myCachedPickObject = goObject2;
                    return goObject2;
                }
            }
        }
        this.myCachedPick = true;
        this.myCachedPickPoint = p;
        this.myCachedPickSelectable = selectableOnly;
        this.myCachedPickObject = null;
        return null;
    };
    TuLayer.prototype.PickObjects = function (p, selectableOnly, coll, max) {
        var goCollections;
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection({
                internalChecksForDuplicates: false
            });
        }
        if (coll.Count >= max) {
            return coll;
        }
        if (!this.CanViewObjects()) {
            return coll;
        }
        if (selectableOnly && !this.CanSelectObjects()) {
            return coll;
        }
        var goLayerCache = this.FindCache(p);
        if (goLayerCache == null) {
            var enumerator = this.Backwards.GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var current = enumerator.Current;
                    var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(current, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroup);
                    if (goGroups == null) {
                        var goObject = current.Pick(p, selectableOnly);
                        if (goObject == null) {
                            continue;
                        }
                        coll.Add(goObject);
                        if (coll.Count < max) {
                            continue;
                        }
                        goCollections = coll;
                        return goCollections;
                    }
                    else {
                        goGroups.pickObjects(p, selectableOnly, coll, max);
                    }
                }
                return coll;
            }
            finally {
                enumerator.Dispose();
            }
            return goCollections;
        }
        else {
            var objects = goLayerCache.Objects;
            for (var i = (objects.Count - 1); i >= 0; i--) {
                var item = objects[i];
                var goGroups1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(item, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroup);
                if (goGroups1 == null) {
                    var goObject1 = item.Pick(p, selectableOnly);
                    if (goObject1 != null) {
                        coll.Add(goObject1);
                        if (coll.Count >= max) {
                            return coll;
                        }
                    }
                }
                else {
                    goGroups1.pickObjects(p, selectableOnly, coll, max);
                }
            }
        }
        return coll;
    };
    TuLayer.prototype.PickObjectsInRectangle = function (rect, pickstyle, coll, max) {
        var goCollections;
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection({
                internalChecksForDuplicates: false
            });
        }
        if (coll.Count >= max) {
            return coll;
        }
        if (!this.CanViewObjects()) {
            return coll;
        }
        if ((TuPickInRectangleStyle.AnyIntersectsBounds & pickstyle) !== 0 && !this.CanSelectObjects()) {
            return coll;
        }
        var goLayerCache = this.FindCache(rect);
        if (goLayerCache == null) {
            var enumerator = this.GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    this.PickObjectsInRectangleInternal(enumerator.Current, rect, pickstyle, coll, max);
                    if (coll.Count < max) {
                        continue;
                    }
                    goCollections = coll;
                    return goCollections;
                }
                return coll;
            }
            finally {
                enumerator.Dispose();
            }
            return goCollections;
        }
        else {
            var objects = goLayerCache.Objects;
            var count = objects.Count;
            for (var i = 0; i < count; i++) {
                var item = objects[i];
                this.PickObjectsInRectangleInternal(item, rect, pickstyle, coll, max);
                if (coll.Count >= max) {
                    return coll;
                }
            }
        }
        return coll;
    };
    TuLayer.prototype.PickObjectsInRectangleInternal = function (obj, rect, pickstyle, coll, max) {
        var _this = this;
        if (coll.Count >= max) {
            return;
        }
        if (!obj.CanView()) {
            return;
        }
        if ((pickstyle < TuPickInRectangleStyle.SelectableOnlyContained) || obj.CanSelect()) {
            var selectionObject = obj.SelectionObject || obj;
            if ((pickstyle & TuPickInRectangleStyle.AnyContained) !== 0) {
                if (selectionObject.ContainedByRectangle(rect)) {
                    coll.Add(obj);
                    return;
                }
            }
            else if ((pickstyle & TuPickInRectangleStyle.AnyIntersectsBounds) !== 0 && _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(selectionObject.Bounds, rect)) {
                coll.Add(obj);
                return;
            }
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                _this.PickObjectsInRectangleInternal(enumerator, rect, pickstyle, coll, max);
            });
        }
    };
    TuLayer.prototype.Remove = function (obj) {
        if (obj == null) {
            return false;
        }
        var layer = obj.Layer;
        if (layer == null) {
            return false;
        }
        if (layer !== this) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("Cannot remove an object from a layer if it does not belong to that layer.");
        }
        var parent = obj.Parent;
        if (parent == null) {
            this.removeFromLayer(obj, false);
        }
        else {
            parent.Remove(obj);
        }
        return true;
    };
    TuLayer.prototype.removeFromCache1 = function (cache, obj) {
        var _this = this;
        var goStroke = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuStroke);
        if (goStroke != null) {
            _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection.FastRemove(cache.Strokes, goStroke);
        }
        var goDragSnapper = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuDragSnapper);
        if (goDragSnapper != null) {
            _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection.FastRemove(cache.Snappers, goDragSnapper);
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                _this.removeFromCache1(cache, enumerator);
            });
        }
    };
    /* internal */ TuLayer.prototype.removeFromCaches = function (obj) {
        var _this = this;
        this.resetPickCache();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Caches, function (cach) {
            var rectangleF = obj.ExpandPaintBounds(obj.Bounds.clone(), cach.View);
            if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(cach.Rect, rectangleF)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection.FastRemove(cach.Objects, obj);
            _this.removeFromCache1(cach, obj);
        });
    };
    /* internal */ TuLayer.prototype.removeFromLayer = function (obj, undoing) {
        try {
            obj.setBeingRemoved(true);
            this.removeFromCaches(obj);
            var int32 = _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection.FastRemove(this.myObjects, obj);
            if (int32 < this.myObjects.Count) {
                this.resetIndices();
            }
            var bounds = obj.Bounds;
            this.LayerCollectionContainer.RaiseChanged(_TuLayerEvents__WEBPACK_IMPORTED_MODULE_3__.TuLayerEvents.RemovedObject, 0, obj, int32, this, bounds, 0, null, _Globals__WEBPACK_IMPORTED_MODULE_11__.NullRect);
        }
        finally {
            obj.setLayer(undefined, obj, undoing);
            obj.setBeingRemoved(false);
        }
    };
    /* internal */ TuLayer.prototype.ResetCaches = function () {
        this.myCaches = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        this.resetPickCache();
    };
    TuLayer.prototype.resetIndices = function () {
        this.myValidIndices = false;
    };
    /* internal */ TuLayer.prototype.resetPickCache = function () {
        this.myCachedPick = false;
        this.myCachedPickObject = null;
    };
    TuLayer.prototype.SetModifiable = function (b) {
        this.AllowMove = b;
        this.AllowResize = b;
        this.AllowReshape = b;
        this.AllowDelete = b;
        this.AllowInsert = b;
        this.AllowLink = b;
        this.AllowEdit = b;
    };
    /* internal */ TuLayer.prototype.updateCaches = function (obj, evt) {
        var _this = this;
        this.resetPickCache();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Caches, function (cach) {
            var oldRect = evt.OldRect;
            oldRect = obj.ExpandPaintBounds(oldRect, cach.View);
            var newRect = evt.NewRect;
            newRect = obj.ExpandPaintBounds(newRect.clone(), cach.View);
            if (!(!_GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(cach.Rect, oldRect) && _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.IntersectsRect(cach.Rect, newRect))) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            if (!cach.Objects.Contains(obj)) {
                cach.Objects.Add(obj);
            }
            _this.insertIntoCache1(cach, obj);
            _this.InitializeIndices();
            cach.Snappers.Sort(TuLayer_1.myZComparer);
        });
    };
    TuLayer.prototype.importEntries = function (entries) {
        return 0;
    };
    TuLayer.prototype.ToArray = function () {
        return this.myObjects.ToArray();
    };
    TuLayer.prototype.RemoveAt = function (index) {
    };
    var TuLayer_1;
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myLayerCollectionContainer", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myIsInDocument", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myDocument", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myView", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myObjects", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowView", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowPrint", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowSelect", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowMove", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowCopy", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowResize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowReshape", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowDelete", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowInsert", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowLink", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myAllowEdit", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myIdentifier", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myCaches", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myCachedPick", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myCachedPickSelectable", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myCachedPickPoint", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myCachedPickObject", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myValidIndices", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.State)()
    ], TuLayer.prototype, "myLayerCollectionIndex", void 0);
    TuLayer = TuLayer_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayer,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayer,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuCollection,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.ICollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuLayer);
    return TuLayer;
}(_tuval_forms__WEBPACK_IMPORTED_MODULE_9__.TComponent));

(function constructor() {
    TuLayer.myZComparer = new _ZComparer__WEBPACK_IMPORTED_MODULE_8__.ZComparer();
})();


/***/ }),

/***/ "./src/TuLayer/TuLayerCache.ts":
/*!*************************************!*\
  !*** ./src/TuLayer/TuLayerCache.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLayerCache": () => (/* binding */ TuLayerCache)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuLayerCache = /** @class */ (function () {
    function TuLayerCache(view) {
        this.myView = view;
        this.myObjects = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        this.myStrokes = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        this.mySnappers = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
    }
    Object.defineProperty(TuLayerCache.prototype, "Objects", {
        get: function () {
            return this.myObjects;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCache.prototype, "Rect", {
        get: function () {
            return this.myRect;
        },
        set: function (value) {
            this.myRect = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCache.prototype, "Snappers", {
        get: function () {
            return this.mySnappers;
        },
        set: function (value) {
            this.mySnappers = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCache.prototype, "Strokes", {
        get: function () {
            return this.myStrokes;
        },
        set: function (value) {
            this.myStrokes = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCache.prototype, "View", {
        get: function () {
            return this.myView;
        },
        enumerable: false,
        configurable: true
    });
    TuLayerCache.prototype.reset = function () {
        this.myObjects.Clear();
        this.myStrokes.Clear();
        this.mySnappers.Clear();
        this.myRect = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(0, 0, 0, 0);
    };
    TuLayerCache = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLayerCache,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLayerCache
            ]
        })
    ], TuLayerCache);
    return TuLayerCache;
}());



/***/ }),

/***/ "./src/TuLayer/TuLayerCollection.ts":
/*!******************************************!*\
  !*** ./src/TuLayer/TuLayerCollection.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLayerCollectionEvents": () => (/* binding */ TuLayerCollectionEvents),
/* harmony export */   "TuLayerCollection": () => (/* binding */ TuLayerCollection)
/* harmony export */ });
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Globals */ "./src/Globals.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuLayer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuLayer */ "./src/TuLayer/TuLayer.tsx");
/* harmony import */ var _TuLayerCollectionEnumerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TuLayerCollectionEnumerator */ "./src/TuLayer/TuLayerCollectionEnumerator.ts");
/* harmony import */ var _TuLayerCollectionObjectEnumerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuLayerCollectionObjectEnumerator */ "./src/TuLayer/TuLayerCollectionObjectEnumerator.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







var TuLayerCollectionEvents = /** @class */ (function () {
    function TuLayerCollectionEvents() {
    }
    TuLayerCollectionEvents.InsertedLayer = 801;
    TuLayerCollectionEvents.RemovedLayer = 802;
    TuLayerCollectionEvents.MovedLayer = 803;
    TuLayerCollectionEvents.ChangedDefault = 804;
    TuLayerCollectionEvents[801] = 'InsertedLayer';
    TuLayerCollectionEvents[802] = 'RemovedLayer';
    TuLayerCollectionEvents[803] = 'MovedLayer';
    TuLayerCollectionEvents[804] = 'ChangedDefault';
    return TuLayerCollectionEvents;
}());

var ZOrderComparer = /** @class */ (function () {
    function ZOrderComparer(layers) {
        this.myLayers = layers;
    }
    ZOrderComparer.prototype.aFirst = function (obj, a, b) {
        var int32;
        if (obj === a) {
            return -1;
        }
        if (obj === b) {
            return 1;
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuGroup);
        if (goGroups != null) {
            var enumerator = goGroups.GetEnumerator().GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var int321 = this.aFirst(enumerator.Current, a, b);
                    if (int321 === 0) {
                        continue;
                    }
                    int32 = int321;
                    return int32;
                }
                return 0;
            }
            finally {
                enumerator.Dispose();
            }
            return int32;
        }
        return 0;
    };
    ZOrderComparer.prototype.Compare = function (a, b) {
        if (a === null || b === null || a === b) {
            return 0;
        }
        if (a.Layer !== b.Layer) {
            var int32 = this.myLayers.IndexOf(a.Layer);
            var int321 = this.myLayers.IndexOf(b.Layer);
            if (int32 < int321) {
                return -1;
            }
            if (int32 > int321) {
                return 1;
            }
        }
        if (a.Layer == null) {
            return 0;
        }
        var layer = a.Layer;
        var int322 = layer.IndexOf(a.TopLevelObject);
        var int323 = layer.IndexOf(b.TopLevelObject);
        if (int322 < int323) {
            return -1;
        }
        if (int322 > int323) {
            return 1;
        }
        return this.aFirst(a.TopLevelObject, a, b);
    };
    return ZOrderComparer;
}());
var TuLayerCollection = /** @class */ (function () {
    function TuLayerCollection() {
        this.myLayers = new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.List();
    }
    Object.defineProperty(TuLayerCollection.prototype, "Backwards", {
        //#region [Property] Backwards
        get: function () {
            return this.GetBackwards();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayerCollection.prototype.GetBackwards = function () {
        return new _TuLayerCollectionEnumerator__WEBPACK_IMPORTED_MODULE_4__.TuLayerCollectionEnumerator(this.myLayers, false);
    };
    Object.defineProperty(TuLayerCollection.prototype, "Bottom", {
        //#endregion
        //#region [Property] Bottom
        get: function () {
            return this.GetBottom();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayerCollection.prototype.GetBottom = function () {
        return this.myLayers.Get(0);
    };
    Object.defineProperty(TuLayerCollection.prototype, "Count", {
        //#endregion
        //#region [Property] Count
        get: function () {
            return this.GetCount();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayerCollection.prototype.GetCount = function () {
        return this.myLayers.Count;
    };
    Object.defineProperty(TuLayerCollection.prototype, "Default", {
        //#endregion
        //#region [Property] Default
        get: function () {
            return this.GetDefault();
        },
        set: function (value) {
            this.SetDefault(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayerCollection.prototype.GetDefault = function () {
        return this.myDefaultLayer;
    };
    /**
    * @hidden
    */
    TuLayerCollection.prototype.SetDefault = function (value) {
        var goLayers = this.myDefaultLayer;
        if (goLayers !== value) {
            if (value == null || value.LayerCollectionContainer !== this.LayerCollectionContainer) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("The new TuLayerCollection.Default layer must belong to the same document or view.");
            }
            this.myDefaultLayer = value;
            this.LayerCollectionContainer.RaiseChanged(TuLayerCollectionEvents.ChangedDefault, 0, null, 0, goLayers, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuLayerCollection.prototype, "Document", {
        //#endregion
        //#region [Property] Document
        get: function () {
            return this.GetDocument();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuLayerCollection.prototype.GetDocument = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(this.myLayerCollectionContainer, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuDocument);
    };
    Object.defineProperty(TuLayerCollection.prototype, "IsInDocument", {
        //#endregion
        //#region [Property] IsInDocument
        get: function () {
            return this.myIsInDocument;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCollection.prototype, "IsReadOnly", {
        //#endregion
        //#region [Property] IsReadOnly
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCollection.prototype, "LayerCollectionContainer", {
        //#endregion
        //#region [Property] LayerCollectionContainer
        get: function () {
            return this.myLayerCollectionContainer;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCollection.prototype, "Top", {
        //#endregion
        //#region [Property] Top
        get: function () {
            return this.myLayers.Get(this.Count - 1);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLayerCollection.prototype, "View", {
        //#endregion
        //#region [Property] View
        get: function () {
            return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(this.myLayerCollectionContainer, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuView);
        },
        enumerable: false,
        configurable: true
    });
    //#endregion
    TuLayerCollection.prototype.Add = function (layer) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.InvalidOperationException("TuLayerCollection.Add");
    };
    TuLayerCollection.prototype.Clear = function () {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.InvalidOperationException("TuLayerCollection.Clear");
    };
    TuLayerCollection.prototype.Contains = function (layer) {
        return this.IndexOf(layer) >= 0;
    };
    TuLayerCollection.prototype.CopyArray = function () {
        return this.myLayers.ToArray();
    };
    TuLayerCollection.prototype.CopyTo = function (array, index) {
        return this.myLayers.CopyTo(array, index);
    };
    TuLayerCollection.prototype.createNewLayerAfter = function (dest) {
        if (dest != null && this.IndexOf(dest) < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot create a new layer after a layer that is not in this layer collection.");
        }
        var goLayers = new _TuLayer__WEBPACK_IMPORTED_MODULE_3__.TuLayer();
        goLayers.Init(this.LayerCollectionContainer);
        this.InsertAfter(dest, goLayers);
        goLayers.Identifier = this.findUniqueIdentifier();
        return goLayers;
    };
    TuLayerCollection.prototype.CreateNewLayerBefore = function (dest) {
        if (dest != null && this.IndexOf(dest) < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot create a new layer before a layer that is not in this layer collection.");
        }
        var goLayers = new _TuLayer__WEBPACK_IMPORTED_MODULE_3__.TuLayer();
        goLayers.Init(this.LayerCollectionContainer);
        this.InsertBefore(dest, goLayers);
        goLayers.Identifier = this.findUniqueIdentifier();
        return goLayers;
    };
    TuLayerCollection.prototype.Find = function (identifier) {
        var goLayers;
        if (identifier == null) {
            return null;
        }
        var enumerator = this.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                var _identifier = current.Identifier;
                if (identifier == null || _identifier !== identifier /* !identifier.equals(identifier) */) {
                    continue;
                }
                goLayers = current;
                return goLayers;
            }
            return null;
        }
        finally {
            enumerator.Dispose();
        }
        return goLayers;
    };
    TuLayerCollection.prototype.findUniqueIdentifier = function () {
        var count = this.Count;
        while (this.Find(count) != null) {
            count++;
        }
        return count;
    };
    TuLayerCollection.prototype.getComparer = function () {
        if (this.myComparer == null) {
            this.myComparer = new ZOrderComparer(this);
        }
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this, function (goLayers) {
            goLayers.InitializeIndices();
        });
        return this.myComparer;
    };
    TuLayerCollection.prototype.GetEnumerator = function () {
        return new _TuLayerCollectionEnumerator__WEBPACK_IMPORTED_MODULE_4__.TuLayerCollectionEnumerator(this.myLayers, true);
    };
    TuLayerCollection.prototype.GetObjectEnumerator = function (forward) {
        return new _TuLayerCollectionObjectEnumerator__WEBPACK_IMPORTED_MODULE_5__.TuLayerCollectionObjectEnumerator(this.myLayers, forward);
    };
    TuLayerCollection.prototype.IndexOf = function (layer) {
        if (this.IsInDocument) {
            return layer.LayerCollectionIndex;
        }
        if (layer.IsInView) {
            return layer.LayerCollectionIndex;
        }
        return this.myLayers.IndexOf(layer);
    };
    TuLayerCollection.prototype.InsertAfter = function (dest, newlayer) {
        if (dest == null) {
            dest = this.Top;
        }
        var int32 = this.IndexOf(dest);
        if (int32 >= 0) {
            this.myLayers.Insert(int32 + 1, newlayer);
            this.updateLayerIndices();
            this.LayerCollectionContainer.RaiseChanged(801, 1, newlayer, int32, dest, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, int32 + 1, newlayer, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    TuLayerCollection.prototype.InsertBefore = function (dest, newlayer) {
        if (dest == null) {
            dest = this.Bottom;
        }
        var int32 = this.IndexOf(dest);
        if (int32 >= 0) {
            this.myLayers.Insert(int32, newlayer);
            this.updateLayerIndices();
            this.LayerCollectionContainer.RaiseChanged(TuLayerCollectionEvents.InsertedLayer, 0, newlayer, int32, dest, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, int32, newlayer, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    TuLayerCollection.prototype.InsertDocumentLayerAfter = function (dest, doclayer) {
        if (this.IndexOf(doclayer) >= 0) {
            this.MoveAfter(dest, doclayer);
            return;
        }
        if (dest != null && this.IndexOf(dest) < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot insert a document layer after a layer that is not in this layer collection.");
        }
        var view = this.View;
        if (view == null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot insert a layer into a document layer collection.");
        }
        if (doclayer == null || !doclayer.IsInDocument || view.Document !== doclayer.Document) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Layer to be inserted into a view layer collection must be a document layer in the view's document.");
        }
        this.InsertAfter(dest, doclayer);
    };
    TuLayerCollection.prototype.InsertDocumentLayerBefore = function (dest, doclayer) {
        if (this.IndexOf(doclayer) >= 0) {
            this.MoveBefore(dest, doclayer);
            return;
        }
        if (dest != null && this.IndexOf(dest) < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot insert a document layer before a layer that is not in this layer collection.");
        }
        var view = this.View;
        if (view == null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Cannot insert a layer into a document layer collection.");
        }
        if (doclayer == null || !doclayer.IsInDocument || view.Document != doclayer.Document) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("Layer to be inserted into a view layer collection must be a document layer in the view's document.");
        }
        this.InsertBefore(dest, doclayer);
    };
    TuLayerCollection.prototype.init = function (lcc) {
        this.myLayerCollectionContainer = lcc;
        this.myIsInDocument = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(this.myLayerCollectionContainer, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuDocument);
        this.myDefaultLayer = new _TuLayer__WEBPACK_IMPORTED_MODULE_3__.TuLayer();
        this.myDefaultLayer.Init(this.myLayerCollectionContainer);
        this.myLayers.Add(this.myDefaultLayer);
        this.updateLayerIndices();
        this.myDefaultLayer.Identifier = 0;
    };
    TuLayerCollection.prototype.LayerAt = function (i) {
        return this.myLayers.Get(i);
    };
    TuLayerCollection.prototype.MoveAfter = function (dest, moving) {
        if (moving == null) {
            return;
        }
        if (this.Count <= 1) {
            return;
        }
        var count = -1;
        if (dest != null) {
            count = this.IndexOf(dest);
            if (count < 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("MoveAfter destination layer must be in the GoLayerCollection");
            }
        }
        else {
            dest = this.Top;
            count = this.Count - 1;
            if (dest == moving) {
                return;
            }
        }
        var int32 = this.IndexOf(moving);
        if (int32 < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("MoveAfter layer to be moved must be in the GoLayerCollection");
        }
        if ((count + 1) !== int32 && count !== int32) {
            if (count > int32) {
                count--;
            }
            this.MoveInCollection((count + 1), moving, int32, false);
        }
    };
    TuLayerCollection.prototype.MoveBefore = function (dest, moving) {
        if (moving == null) {
            return;
        }
        if (this.Count <= 1) {
            return;
        }
        var int32 = -1;
        if (dest != null) {
            int32 = this.IndexOf(dest);
            if (int32 < 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("MoveBefore destination layer must be in the TuLayerCollection");
            }
        }
        else {
            dest = this.Bottom;
            int32 = 0;
            if (dest == moving) {
                return;
            }
        }
        var int321 = this.IndexOf(moving);
        if (int321 < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentException("MoveBefore layer to be moved must be in the GoLayerCollection");
        }
        if ((int32 - 1) !== int321 && int32 !== int321) {
            if (int32 > int321) {
                int32--;
            }
            this.MoveInCollection(int32, moving, int321, false);
        }
    };
    TuLayerCollection.prototype.MoveInCollection = function (newidx, moving, oldidx, undoing) {
        if (oldidx >= 0 && oldidx < this.myLayers.Count && newidx >= 0 && newidx < this.myLayers.Count) {
            this.myLayers.RemoveAt(oldidx);
            this.myLayers.Insert(newidx, moving);
            this.updateLayerIndices();
        }
        this.LayerCollectionContainer.RaiseChanged(TuLayerCollectionEvents.MovedLayer, 0, this, oldidx, moving, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, newidx, moving, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
    };
    TuLayerCollection.prototype.NextLayer = function (layer, relativeZorder) {
        if (layer == null) {
            return null;
        }
        var int32 = this.IndexOf(layer);
        if (int32 < 0) {
            return null;
        }
        int32 = (int32 + relativeZorder);
        if (int32 < 0 || int32 >= this.Count) {
            return null;
        }
        return this.myLayers.Get(int32);
    };
    TuLayerCollection.prototype.Remove = function (layer) {
        var _this = this;
        var item;
        if (layer == null) {
            return false;
        }
        var int32 = this.IndexOf(layer);
        if (int32 < 0) {
            return false;
        }
        var layerCollectionContainer = layer.LayerCollectionContainer === this.LayerCollectionContainer;
        if (layerCollectionContainer) {
            layer.Clear();
        }
        var goLayers = null;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.myLayers, function (myLayer) {
            if (myLayer === layer || myLayer.LayerCollectionContainer !== _this.LayerCollectionContainer) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            goLayers = myLayer;
            if (goLayers == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.BREAK;
            }
            item = null;
            if ((int32 + 1) < _this.myLayers.Count) {
                item = _this.myLayers.Get(int32 + 1);
            }
            if (layerCollectionContainer) {
                layer.LayerCollectionIndex = -1;
            }
            _this.myLayers.RemoveAt(int32);
            _this.updateLayerIndices();
            try {
                _this.LayerCollectionContainer.RaiseChanged(TuLayerCollectionEvents.RemovedLayer, 0, layer, 0, item, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, null, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
            }
            finally {
                if (layer === _this.Default) {
                    _this.Default = goLayers;
                }
            }
            return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.BREAK;
        });
        if (goLayers == null) {
            return false;
        }
        item = null;
        if ((int32 + 1) < this.myLayers.Count) {
            item = this.myLayers.Get(int32 + 1);
        }
        if (layerCollectionContainer) {
            layer.LayerCollectionIndex = -1;
        }
        this.myLayers.RemoveAt(int32);
        this.updateLayerIndices();
        try {
            this.LayerCollectionContainer.RaiseChanged(TuLayerCollectionEvents.RemovedLayer, 0, layer, 0, item, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, null, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
        finally {
            if (layer === this.Default) {
                this.Default = goLayers;
            }
        }
        return true;
    };
    TuLayerCollection.prototype.SortByZOrder = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args[0] instanceof _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection) {
            var c = args[0];
            if (c.IsEmpty) {
                return;
            }
            c.Sort(this.getComparer());
        }
        else {
            var a = args[0];
            if (a.length <= 1) {
                return;
            }
            var comparer = this.getComparer();
            _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Sort(a, 0, a.length, comparer);
        }
    };
    TuLayerCollection.prototype.updateLayerIndices = function () {
        for (var i = 0; i < this.myLayers.Count; i++) {
            var item = this.myLayers.Get(i);
            if (this.IsInDocument) {
                item.LayerCollectionIndex = i;
            }
            else if (item.IsInView) {
                item.LayerCollectionIndex = i;
            }
        }
    };
    TuLayerCollection.prototype.importEntries = function (entries) {
        return 0;
    };
    TuLayerCollection.prototype.toArray = function () {
        return undefined;
    };
    TuLayerCollection.prototype.removeAt = function (index) {
    };
    TuLayerCollection = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLayerCollection,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLayerCollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.ICollection,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuLayerCollection);
    return TuLayerCollection;
}());



/***/ }),

/***/ "./src/TuLayer/TuLayerCollectionEnumerator.ts":
/*!****************************************************!*\
  !*** ./src/TuLayer/TuLayerCollectionEnumerator.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLayerCollectionEnumerator": () => (/* binding */ TuLayerCollectionEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuLayerCollectionEnumerator = /** @class */ (function (_super) {
    __extends(TuLayerCollectionEnumerator, _super);
    function TuLayerCollectionEnumerator(a, forward) {
        var _this = _super.call(this) || this;
        _this.isEndless = false;
        _this.myArray = a;
        _this.myForward = forward;
        _this.myIndex = -1;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuLayerCollectionEnumerator.prototype, "Current", {
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("TuLayerCollection.GoLayerCollectionEnumerator is not at a valid position for the List");
            }
            return this.myArray.Get(this.myIndex);
        },
        enumerable: false,
        configurable: true
    });
    TuLayerCollectionEnumerator.prototype.GetEnumerator = function () {
        var goLayerCollectionEnumerators = this;
        goLayerCollectionEnumerators.Reset();
        return goLayerCollectionEnumerators;
    };
    TuLayerCollectionEnumerator.prototype.MoveNext = function () {
        if (!this.myForward) {
            if ((this.myIndex - 1) < 0) {
                return false;
            }
            this.myIndex = (this.myIndex - 1);
            return true;
        }
        if ((this.myIndex + 1) >= this.myArray.Count) {
            return false;
        }
        this.myIndex = (this.myIndex + 1);
        return true;
    };
    TuLayerCollectionEnumerator.prototype.Reset = function () {
        if (this.myForward) {
            this.myIndex = -1;
            return;
        }
        this.myIndex = this.myArray.Count;
    };
    TuLayerCollectionEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('tryMoveNext not implemented in LayerCollectionEnumerator');
    };
    TuLayerCollectionEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('end not implemented in LayerCollectionEnumerator');
    };
    TuLayerCollectionEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('nextValue not implemented in LayerCollectionEnumerator');
    };
    TuLayerCollectionEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('next not implemented in LayerCollectionEnumerator');
    };
    TuLayerCollectionEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('return not implemented in LayerCollectionEnumerator');
    };
    TuLayerCollectionEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('throw not implemented in LayerCollectionEnumerator');
    };
    TuLayerCollectionEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayerCollectionEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayerCollectionEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Disposable.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuLayerCollectionEnumerator);
    return TuLayerCollectionEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));



/***/ }),

/***/ "./src/TuLayer/TuLayerCollectionObjectEnumerator.ts":
/*!**********************************************************!*\
  !*** ./src/TuLayer/TuLayerCollectionObjectEnumerator.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLayerCollectionObjectEnumerator": () => (/* binding */ TuLayerCollectionObjectEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuLayerEnumerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuLayerEnumerator */ "./src/TuLayer/TuLayerEnumerator.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuLayerCollectionObjectEnumerator = /** @class */ (function (_super) {
    __extends(TuLayerCollectionObjectEnumerator, _super);
    function TuLayerCollectionObjectEnumerator(a, forward) {
        var _this = _super.call(this) || this;
        _this.isEndless = false;
        _this.myArray = a;
        _this.myForward = forward;
        _this.myIndex = -1;
        _this.myEnumerator = _TuLayerEnumerator__WEBPACK_IMPORTED_MODULE_2__.TuLayerEnumerator.Empty;
        _this.myEnumeratorValid = false;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuLayerCollectionObjectEnumerator.prototype, "Current", {
        get: function () {
            if (!this.myEnumeratorValid) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("TuLayerCollectionObjectEnumerator is not at a valid position for the List of Layers");
            }
            return this.myEnumerator.Current;
        },
        enumerable: false,
        configurable: true
    });
    TuLayerCollectionObjectEnumerator.prototype.GetEnumerator = function () {
        var goLayerCollectionObjectEnumerators = this;
        goLayerCollectionObjectEnumerators.Reset();
        return goLayerCollectionObjectEnumerators;
    };
    TuLayerCollectionObjectEnumerator.prototype.MoveNext = function () {
        if (this.myEnumeratorValid) {
            if (this.myEnumerator.MoveNext()) {
                return true;
            }
            this.myEnumeratorValid = false;
        }
        if (!this.myForward) {
            while ((this.myIndex - 1) >= 0) {
                this.myIndex = this.myIndex - 1;
                this.myEnumerator = this.myArray[this.myIndex].Backwards;
                this.myEnumeratorValid = true;
                if (!this.myEnumerator.MoveNext()) {
                    continue;
                }
                return true;
            }
            return false;
        }
        while ((this.myIndex + 1) < this.myArray.Count) {
            this.myIndex = (this.myIndex + 1);
            var ıtem = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.myArray[this.myIndex], _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayer);
            this.myEnumerator = ıtem.GetEnumerator();
            this.myEnumeratorValid = true;
            if (!this.myEnumerator.MoveNext()) {
                continue;
            }
            return true;
        }
        return false;
    };
    /// <summary>
    /// Reset the enumerator to its original position.
    /// </summary>
    TuLayerCollectionObjectEnumerator.prototype.Reset = function () {
        if (!this.myForward) {
            this.myIndex = this.myArray.Count;
        }
        else {
            this.myIndex = -1;
        }
        this.myEnumeratorValid = false;
    };
    TuLayerCollectionObjectEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('tryMoveNext not implemented in LayerCollectionObjectEnumerator');
    };
    TuLayerCollectionObjectEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('end not implemented in LayerCollectionObjectEnumerator');
    };
    TuLayerCollectionObjectEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('nextValue not implemented in LayerCollectionObjectEnumerator');
    };
    TuLayerCollectionObjectEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('next not implemented in LayerCollectionObjectEnumerator');
    };
    TuLayerCollectionObjectEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('return not implemented in LayerCollectionObjectEnumerator');
    };
    TuLayerCollectionObjectEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('throw not implemented in LayerCollectionObjectEnumerator');
    };
    TuLayerCollectionObjectEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayerCollectionObjectEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayerCollectionObjectEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Disposable.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuLayerCollectionObjectEnumerator);
    return TuLayerCollectionObjectEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));



/***/ }),

/***/ "./src/TuLayer/TuLayerEnumerator.ts":
/*!******************************************!*\
  !*** ./src/TuLayer/TuLayerEnumerator.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLayerEnumerator": () => (/* binding */ TuLayerEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuLayerEnumerator = /** @class */ (function (_super) {
    __extends(TuLayerEnumerator, _super);
    function TuLayerEnumerator(a, forward) {
        var _this = _super.call(this) || this;
        _this.isEndless = false;
        _this.myArray = a;
        _this.myForward = forward;
        _this.myIndex = -1;
        _this.Reset();
        return _this;
    }
    TuLayerEnumerator.prototype.End = function () {
        throw new Error('Method not implemented.');
    };
    TuLayerEnumerator.prototype.NextValue = function (value) {
        throw new Error('Method not implemented.');
    };
    TuLayerEnumerator.prototype.Next = function (value) {
        throw new Error('Method not implemented.');
    };
    Object.defineProperty(TuLayerEnumerator.prototype, "Current", {
        /**
         * Gets the current object in the layer.
         */
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("LayerEnumerator is not at a valid position for the List");
            }
            return this.myArray.Get(this.myIndex);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Gets an enumerator for iterating over the GoObjects in this layer.
     */
    TuLayerEnumerator.prototype.GetEnumerator = function () {
        var layerEnumerators = this;
        layerEnumerators.Reset();
        return layerEnumerators;
    };
    TuLayerEnumerator.prototype.MoveNext = function () {
        if (!this.myForward) {
            if (this.myIndex - 1 < 0) {
                return false;
            }
            this.myIndex = this.myIndex - 1;
            return true;
        }
        if (this.myIndex + 1 >= this.myArray.Count) {
            return false;
        }
        this.myIndex = this.myIndex + 1;
        return true;
    };
    TuLayerEnumerator.prototype.Reset = function () {
        if (this.myForward) {
            this.myIndex = -1;
            return;
        }
        this.myIndex = this.myArray.Count;
    };
    TuLayerEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('tryMoveNext not implemented in PortFilteredLinkEnumerator');
    };
    TuLayerEnumerator.prototype.end = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('end not implemented in PortFilteredLinkEnumerator');
    };
    TuLayerEnumerator.prototype.nextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('nextValue not implemented in PortFilteredLinkEnumerator');
    };
    TuLayerEnumerator.prototype.next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('next not implemented in PortFilteredLinkEnumerator');
    };
    TuLayerEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('return not implemented in PortFilteredLinkEnumerator');
    };
    TuLayerEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('throw not implemented in PortFilteredLinkEnumerator');
    };
    TuLayerEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayerEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuLayerEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Disposable.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuLayerEnumerator);
    return TuLayerEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));



/***/ }),

/***/ "./src/TuLayer/TuLayerEvents.ts":
/*!**************************************!*\
  !*** ./src/TuLayer/TuLayerEvents.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLayerEvents": () => (/* binding */ TuLayerEvents)
/* harmony export */ });
var TuLayerEvents = /** @class */ (function () {
    function TuLayerEvents() {
    }
    TuLayerEvents.ChangedObject = 901;
    TuLayerEvents.InsertedObject = 902;
    TuLayerEvents.RemovedObject = 903;
    TuLayerEvents.ChangedObjectLayer = 904;
    TuLayerEvents.ChangedObjectZOrder = 905;
    TuLayerEvents.ChangedAllowView = 910;
    TuLayerEvents.ChangedAllowSelect = 911;
    TuLayerEvents.ChangedAllowMove = 912;
    TuLayerEvents.ChangedAllowCopy = 913;
    TuLayerEvents.ChangedAllowResize = 914;
    TuLayerEvents.ChangedAllowReshape = 915;
    TuLayerEvents.ChangedAllowDelete = 916;
    TuLayerEvents.ChangedAllowInsert = 917;
    TuLayerEvents.ChangedAllowLink = 918;
    TuLayerEvents.ChangedAllowEdit = 919;
    TuLayerEvents.ChangedAllowPrint = 920;
    TuLayerEvents.ChangedIdentifier = 930;
    TuLayerEvents[901] = 'ChangedObject';
    TuLayerEvents[902] = 'InsertedObject';
    TuLayerEvents[903] = 'RemovedObject';
    TuLayerEvents[904] = 'ChangedObjectLayer';
    TuLayerEvents[905] = 'ChangedObjectZOrder';
    TuLayerEvents[910] = 'ChangedAllowView';
    TuLayerEvents[911] = 'ChangedAllowSelect';
    TuLayerEvents[912] = 'ChangedAllowMove';
    TuLayerEvents[913] = 'ChangedAllowCopy';
    TuLayerEvents[914] = 'ChangedAllowResize';
    TuLayerEvents[915] = 'ChangedAllowReshape';
    TuLayerEvents[916] = 'ChangedAllowDelete';
    TuLayerEvents[917] = 'ChangedAllowInsert';
    TuLayerEvents[918] = 'ChangedAllowLink';
    TuLayerEvents[919] = 'ChangedAllowEdit';
    TuLayerEvents[920] = 'ChangedAllowPrint';
    TuLayerEvents[930] = 'ChangedIdentifier';
    return TuLayerEvents;
}());

var AllEvents = {};
Object.assign(AllEvents, TuLayerEvents);


/***/ }),

/***/ "./src/TuLayer/ZComparer.ts":
/*!**********************************!*\
  !*** ./src/TuLayer/ZComparer.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ZComparer": () => (/* binding */ ZComparer)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");


var ZComparer = /** @class */ (function () {
    function ZComparer() {
    }
    ZComparer.prototype.aFirst = function (obj, a, b) {
        var int32;
        if (obj === a) {
            return -1;
        }
        if (obj === b) {
            return 1;
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuGroup);
        if (goGroups != null) {
            var enumerator = goGroups.GetEnumerator().GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var int321 = this.aFirst(enumerator.Current, a, b);
                    if (int321 === 0) {
                        continue;
                    }
                    int32 = int321;
                    return int32;
                }
                return 0;
            }
            finally {
                enumerator.Dispose();
            }
            return int32;
        }
        return 0;
    };
    ZComparer.prototype.Compare = function (x, y) {
        if (x == null || y == null || x === y) {
            return 0;
        }
        var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(x, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuObject);
        var goObject1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(y, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuObject);
        var layer = goObject.Layer;
        var topLevelObject = goObject.TopLevelObject;
        var int32 = layer.IndexOf(topLevelObject);
        var int321 = layer.IndexOf(goObject1.TopLevelObject);
        if (int32 < int321) {
            return -1;
        }
        if (int32 > int321) {
            return 1;
        }
        return this.aFirst(topLevelObject, goObject, goObject1);
    };
    return ZComparer;
}());



/***/ }),

/***/ "./src/TuLink/TuLink.ts":
/*!******************************!*\
  !*** ./src/TuLink/TuLink.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLink": () => (/* binding */ TuLink)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _TuStroke_TuStroke__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuStroke/TuStroke */ "./src/TuStroke/TuStroke.ts");
/* harmony import */ var _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuLinkAdjustingStyle */ "./src/TuLink/TuLinkAdjustingStyle.ts");
/* harmony import */ var _TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TuLinkEvents */ "./src/TuLink/TuLinkEvents.ts");
/* harmony import */ var _TuHandle_TuHandle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../TuHandle/TuHandle */ "./src/TuHandle/TuHandle.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuHandle_TuHandleStyle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../TuHandle/TuHandleStyle */ "./src/TuHandle/TuHandleStyle.ts");
/* harmony import */ var _TuDocument_TuPositionArray__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TuDocument/TuPositionArray */ "./src/TuDocument/TuPositionArray.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuStroke_TuStrokeStyle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuStroke/TuStrokeStyle */ "./src/TuStroke/TuStrokeStyle.ts");
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _TuPort_TuPortStyle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../TuPort/TuPortStyle */ "./src/TuPort/TuPortStyle.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();















var RelinkableFromHandle = 1024;
var RelinkableToHandle = 1025;
var flagNoClearPorts = 16777216;
var flagLinkAvoidsNodes = 33554432;
var flagLinkOrtho = 67108864;
var flagRelinkable = 134217728;
var flagDraggableOrthogonalSegments = 268435456;
var RIGHT = 0;
var DOWN = 90;
var LEFT = 180;
var UP = 270;
var TuLink = /** @class */ (function (_super) {
    __extends(TuLink, _super);
    //#endregion
    function TuLink() {
        var _this = _super.call(this) || this;
        _this.myPartID = -1;
        _this.myAbstractLink = _this;
        _this.InternalFlags = _this.InternalFlags & -5;
        _this.InternalFlags = _this.InternalFlags | 134217728;
        return _this;
    }
    Object.defineProperty(TuLink.prototype, "AbstractLink", {
        //#region [Property] AbstractLink
        get: function () {
            return this.getAbstractLink();
        },
        set: function (value) {
            this.setAbstractLink(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getAbstractLink = function () {
        return this.myAbstractLink;
    };
    TuLink.prototype.setAbstractLink = function (value) {
        var goLink = this.myAbstractLink;
        if (goLink !== value && value != null) {
            var fromPort = this.FromPort;
            if (fromPort != null) {
                fromPort.removeLink(goLink);
            }
            var toPort = this.ToPort;
            if (toPort != null) {
                toPort.removeLink(goLink);
            }
            this.myAbstractLink = value;
            if (fromPort != null) {
                fromPort.addDestinationLink(value);
            }
            if (toPort != null) {
                toPort.addSourceLink(value);
            }
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedAbstractLink, 0, goLink, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    Object.defineProperty(TuLink.prototype, "AdjustingStyle", {
        //#endregion
        //#region [Property] AdjustingStyle
        get: function () {
            return this.getAdjustingStyle();
        },
        set: function (value) {
            this.setAdjustingStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getAdjustingStyle = function () {
        return this.myAdjustingStyle;
    };
    TuLink.prototype.setAdjustingStyle = function (value) {
        var goLinkAdjustingStyle = this.myAdjustingStyle;
        if (goLinkAdjustingStyle !== value) {
            this.myAdjustingStyle = value;
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedAdjustingStyle, goLinkAdjustingStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    Object.defineProperty(TuLink.prototype, "AvoidsNodes", {
        //#endregion
        //#region [Property] AvoidsNodes
        get: function () {
            return this.getAvoidsNodes();
        },
        set: function (value) {
            this.setAvoidsNodes(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getAvoidsNodes = function () {
        return (this.InternalFlags & flagLinkAvoidsNodes) !== 0;
    };
    TuLink.prototype.setAvoidsNodes = function (value) {
        var internalFlags = (this.InternalFlags & flagLinkAvoidsNodes) != 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagLinkAvoidsNodes;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagLinkAvoidsNodes;
            }
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedAvoidsNodes, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
            if (!this.Initializing) {
                this.portsOnLinkChanged(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedAvoidsNodes, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
                if (value) {
                    this.clearPoints();
                    this.updateRoute();
                }
            }
        }
    };
    Object.defineProperty(TuLink.prototype, "DraggableOrthogonalSegments", {
        //#endregion
        //#region [Property] DraggableOrthogonalSegments
        get: function () {
            return this.getDraggableOrthogonalSegments();
        },
        set: function (value) {
            this.setDraggableOrthogonalSegments(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getDraggableOrthogonalSegments = function () {
        return (this.InternalFlags & flagDraggableOrthogonalSegments) !== 0;
    };
    TuLink.prototype.setDraggableOrthogonalSegments = function (value) {
        var internalFlags = (this.InternalFlags & flagDraggableOrthogonalSegments) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagDraggableOrthogonalSegments;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagDraggableOrthogonalSegments;
            }
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedDraggableOrthogonalSegments, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    //#endregion
    //#region [Property] FirstPickIndex
    TuLink.prototype.getFirstPickIndex = function () {
        var fromPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.FromPort, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuPort);
        if (fromPort == null) {
            return 0;
        }
        if (this.PointsCount <= 2) {
            return 0;
        }
        if (fromPort.FromSpot === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && !this.Orthogonal) {
            return 0;
        }
        return 1;
    };
    Object.defineProperty(TuLink.prototype, "FromNode", {
        //#endregion
        //#region [Property] FromNode
        get: function () {
            return this.getFromNode();
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getFromNode = function () {
        var fromPort = this.FromPort;
        if (fromPort == null) {
            return undefined;
        }
        return fromPort.Node;
    };
    Object.defineProperty(TuLink.prototype, "FromPort", {
        //#endregion
        //#region [Property] FromPort
        get: function () {
            return this.getFromPort();
        },
        set: function (value) {
            this.setFromPort(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getFromPort = function () {
        return this.myFromPort;
    };
    TuLink.prototype.setFromPort = function (value) {
        var goPort = this.myFromPort;
        if (goPort !== value) {
            var abstractLink = this.AbstractLink;
            if (goPort != null && abstractLink.ToPort !== goPort) {
                goPort.removeLink(abstractLink);
            }
            this.myFromPort = value;
            if (value != null) {
                value.addDestinationLink(abstractLink);
            }
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedFromPort, 0, goPort, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
            if (!this.Initializing) {
                abstractLink.onPortChanged(value, _TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedFromPort, 0, goPort, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
            }
        }
    };
    Object.defineProperty(TuLink.prototype, "TuObject", {
        //#endregion
        //#region [Property] TuObject
        get: function () {
            return this;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuLink.prototype, "IsSelfLoop", {
        //#endregion
        //#region [Property] IsSelfLoop
        get: function () {
            return this.getIsSelfLoop();
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getIsSelfLoop = function () {
        if (this.FromPort !== this.ToPort) {
            return false;
        }
        return this.FromPort != null;
    };
    //#endregion
    //#region [Property] LastPickIndex
    TuLink.prototype.getLastPickIndex = function () {
        var pointsCount = this.PointsCount;
        if (pointsCount === 0) {
            return 0;
        }
        var toPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.ToPort, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuPort);
        if (toPort == null) {
            return pointsCount - 1;
        }
        if (pointsCount <= 2) {
            return pointsCount - 1;
        }
        if (toPort.ToSpot === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && !this.Orthogonal) {
            return pointsCount - 1;
        }
        return pointsCount - 2;
    };
    Object.defineProperty(TuLink.prototype, "NoClearPorts", {
        //#endregion
        //#region [Property] NoClearPorts
        /* internal */ get: function () {
            return this.getNoClearPorts();
        },
        /* internal */ set: function (value) {
            this.setNoClearPorts(value);
        },
        enumerable: false,
        configurable: true
    });
    /* internal */ /*virtual*/ TuLink.prototype.getNoClearPorts = function () {
        return (this.InternalFlags & flagNoClearPorts) !== 0;
    };
    /* internal */ /*virtual*/ TuLink.prototype.setNoClearPorts = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagNoClearPorts;
            return;
        }
        this.InternalFlags = this.InternalFlags & ~flagNoClearPorts;
    };
    Object.defineProperty(TuLink.prototype, "Orthogonal", {
        //#endregion
        //#region [Property] Orthogonal
        get: function () {
            return this.getOrthogonal();
        },
        set: function (value) {
            this.setOrthogonal(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getOrthogonal = function () {
        return (this.InternalFlags & flagLinkOrtho) !== 0;
    };
    TuLink.prototype.setOrthogonal = function (value) {
        var internalFlags = (this.InternalFlags & flagLinkOrtho) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagLinkOrtho;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagLinkOrtho;
            }
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedOrthogonal, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
            if (!this.Initializing) {
                this.portsOnLinkChanged(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedOrthogonal, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
                if (value) {
                    this.clearPoints();
                    this.updateRoute();
                }
            }
        }
    };
    Object.defineProperty(TuLink.prototype, "PartID", {
        //#endregion
        //#region [Property] PartID
        get: function () {
            return this.getPartID();
        },
        set: function (value) {
            this.setPartID(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getPartID = function () {
        return this.myPartID;
    };
    TuLink.prototype.setPartID = function (value) {
        var int32 = this.myPartID;
        if (int32 !== value) {
            this.myPartID = value;
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedPartID, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    Object.defineProperty(TuLink.prototype, "Relinkable", {
        //#endregion
        //#region [Property] Relinkable
        get: function () {
            return this.getRelinkable();
        },
        set: function (value) {
            this.setRelinkable(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getRelinkable = function () {
        return (this.InternalFlags & flagRelinkable) !== 0;
    };
    TuLink.prototype.setRelinkable = function (value) {
        var internalFlags = (this.InternalFlags & flagRelinkable) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagRelinkable;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagRelinkable;
            }
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedRelinkable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    Object.defineProperty(TuLink.prototype, "Style", {
        //#endregion
        //#region [Property] Style
        get: function () {
            return this.getStyle();
        },
        set: function (value) {
            this.setStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getStyle = function () {
        if (this.IsSelfLoop && !this.Orthogonal) {
            return _TuStroke_TuStrokeStyle__WEBPACK_IMPORTED_MODULE_12__.TuStrokeStyle.Bezier;
        }
        return _super.prototype.getStyle.call(this);
    };
    TuLink.prototype.setStyle = function (value) {
        _super.prototype.setStyle.call(this, value);
    };
    Object.defineProperty(TuLink.prototype, "ToNode", {
        //#endregion
        //#region [Property] ToNode
        get: function () {
            return this.getToNode();
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getToNode = function () {
        var toPort = this.ToPort;
        if (toPort == null) {
            return undefined;
        }
        return toPort.Node;
    };
    Object.defineProperty(TuLink.prototype, "ToolTipText", {
        //#endregion
        //#region [Property] ToolTipText
        get: function () {
            return this.getToolTipText();
        },
        set: function (value) {
            this.setToolTipText(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getToolTipText = function () {
        return this.myToolTipText;
    };
    TuLink.prototype.setToolTipText = function (value) {
        var str = this.myToolTipText;
        if (str !== value) {
            this.myToolTipText = value;
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedToolTipText, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    Object.defineProperty(TuLink.prototype, "ToPort", {
        //#endregion
        //#region [Property] ToPort
        get: function () {
            return this.getToPort();
        },
        set: function (value) {
            this.setToPort(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getToPort = function () {
        return this.myToPort;
    };
    TuLink.prototype.setToPort = function (value) {
        var goPort = this.myToPort;
        if (goPort !== value) {
            var abstractLink = this.AbstractLink;
            if (goPort != null && abstractLink.FromPort !== goPort) {
                goPort.removeLink(abstractLink);
            }
            this.myToPort = value;
            if (value != null) {
                value.addSourceLink(abstractLink);
            }
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedToPort, 0, goPort, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
            if (!this.Initializing) {
                abstractLink.onPortChanged(value, _TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedToPort, 0, goPort, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
            }
        }
    };
    Object.defineProperty(TuLink.prototype, "UserFlags", {
        //#endregion
        //#region [Property] UserFlags
        get: function () {
            return this.getUserFlags();
        },
        set: function (value) {
            this.setUserFlags(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getUserFlags = function () {
        return this.myUserFlags;
    };
    TuLink.prototype.setUserFlags = function (value) {
        var int32 = this.myUserFlags;
        if (int32 !== value) {
            this.myUserFlags = value;
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedLinkUserFlags, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    Object.defineProperty(TuLink.prototype, "UserObject", {
        //#endregion
        //#region [Property] UserObject
        get: function () {
            return this.getUserObject();
        },
        set: function (value) {
            this.setUserObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuLink.prototype.getUserObject = function () {
        return this.myUserObject;
    };
    TuLink.prototype.setUserObject = function (value) {
        var obj = this.myUserObject;
        if (obj !== value) {
            this.myUserObject = value;
            this.Changed(_TuLinkEvents__WEBPACK_IMPORTED_MODULE_6__.TuLinkEvents.ChangedLinkUserObject, 0, obj, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_2__.NullRect);
        }
    };
    TuLink.prototype.addOrthoPoints = function (startFrom, fromDir, endTo, toDir) {
        var bounds = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.New.Out();
        var rectangleF = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.New.Out();
        var pointF;
        var x;
        if (-45 <= fromDir && fromDir < 45) {
            fromDir = 0;
        }
        else if (45 <= fromDir && fromDir < 135) {
            fromDir = 90;
        }
        else if (135 > fromDir || fromDir >= 225) {
            fromDir = 270;
        }
        else {
            fromDir = 180;
        }
        if (-45 <= toDir && toDir < 45) {
            toDir = 0;
        }
        else if (45 <= toDir && toDir < 135) {
            toDir = 90;
        }
        else if (135 > toDir || toDir >= 225) {
            toDir = 270;
        }
        else {
            toDir = 180;
        }
        var pointF1 = startFrom;
        var pointF2 = endTo;
        var penWidth = this.PenWidth + 1;
        var goObject = this.FromPort.TuObject;
        var node = this.FromPort.Node;
        if (node == null || node.TuObject == null) {
            bounds.value = (goObject.Parent == null ? goObject.Bounds : goObject.Parent.Bounds);
        }
        else {
            bounds.value = node.TuObject.Bounds;
        }
        var single = penWidth;
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.InflateRect(bounds, single, single);
        bounds.value = _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.UnionRect(bounds.value, startFrom);
        var goObject1 = this.ToPort.TuObject;
        var goNode = this.ToPort.Node;
        if (goNode == null || goNode.TuObject == null) {
            rectangleF.value = (goObject1.Parent == null ? goObject1.Bounds : goObject1.Parent.Bounds);
        }
        else {
            rectangleF.value = goNode.TuObject.Bounds;
        }
        var single1 = penWidth;
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.InflateRect(rectangleF, single1, single1);
        rectangleF.value = _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.UnionRect(rectangleF.value, endTo);
        if (this.AvoidsNodes && this.Document != null) {
            var positions = this.Document.getPositions();
            var rectangleF1 = { value: _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.UnionRect(bounds.value, rectangleF.value) };
            var cellSize = positions.CellSize;
            var width = cellSize.Width * 2;
            cellSize = positions.CellSize;
            _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.InflateRect(rectangleF1, width, cellSize.Height * 2);
            positions.propagate(startFrom, fromDir, endTo, toDir, rectangleF1.value);
            var dist = positions.getDist(endTo.X, endTo.Y);
            if (!positions.Abort && dist === _TuDocument_TuPositionArray__WEBPACK_IMPORTED_MODULE_10__.TuPositionArray.MaxDistance) {
                positions.clearAllUnoccupied();
                var smallMargin = positions.SmallMargin;
                cellSize = positions.CellSize;
                var width1 = cellSize.Width * smallMargin;
                cellSize = positions.CellSize;
                _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.InflateRect(rectangleF1, width1, cellSize.Height * smallMargin);
                positions.propagate(startFrom, fromDir, endTo, toDir, rectangleF1.value);
                dist = positions.getDist(endTo.X, endTo.Y);
            }
            if (!positions.Abort && dist === _TuDocument_TuPositionArray__WEBPACK_IMPORTED_MODULE_10__.TuPositionArray.MaxDistance) {
                positions.clearAllUnoccupied();
                var largeMargin = positions.LargeMargin;
                cellSize = positions.CellSize;
                var width2 = cellSize.Width * largeMargin;
                cellSize = positions.CellSize;
                _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.InflateRect(rectangleF1, width2, cellSize.Height * largeMargin);
                positions.propagate(startFrom, fromDir, endTo, toDir, rectangleF1.value);
                dist = positions.getDist(endTo.X, endTo.Y);
            }
            if (!positions.Abort && dist === _TuDocument_TuPositionArray__WEBPACK_IMPORTED_MODULE_10__.TuPositionArray.MaxDistance && positions.WholeDocument) {
                positions.clearAllUnoccupied();
                positions.propagate(startFrom, fromDir, endTo, toDir, positions.Bounds);
                dist = positions.getDist(endTo.X, endTo.Y);
            }
            if (!positions.Abort && dist < _TuDocument_TuPositionArray__WEBPACK_IMPORTED_MODULE_10__.TuPositionArray.MaxDistance && !positions.isOccupied(endTo.X, endTo.Y)) {
                this.traversePositions(positions, endTo.X, endTo.Y, toDir, true);
                var point = this.getPoint(2);
                if (this.PointsCount < 4) {
                    if (fromDir === 0 || fromDir === 180) {
                        point.X = startFrom.X;
                        point.Y = endTo.Y;
                    }
                    else {
                        point.X = endTo.X;
                        point.Y = startFrom.Y;
                    }
                    this.setPoint(2, point);
                    this.insertPoint(3, point);
                    return;
                }
                var point1 = this.getPoint(3);
                if (fromDir === 0 || fromDir === 180) {
                    if (_super.prototype.IsApprox.call(this, point.X, point1.X)) {
                        var single2 = (fromDir === 0 ? Math.max(point.X, startFrom.X) : Math.min(point.X, startFrom.X));
                        this.setPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(single2, startFrom.Y));
                        this.setPoint(3, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(single2, point1.Y));
                        return;
                    }
                    if (!_super.prototype.IsApprox.call(this, point.Y, point1.Y)) {
                        this.setPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(startFrom.X, point.Y));
                        return;
                    }
                    if (Math.abs(startFrom.Y - point.Y) <= positions.CellSize.Height / 2) {
                        this.setPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, startFrom.Y));
                        this.setPoint(3, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point1.X, startFrom.Y));
                    }
                    this.insertPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, startFrom.Y));
                    return;
                }
                if (fromDir === 90 || fromDir === 270) {
                    if (_super.prototype.IsApprox.call(this, point.Y, point1.Y)) {
                        var single3 = (fromDir === 90 ? Math.max(point.Y, startFrom.Y) : Math.min(point.Y, startFrom.Y));
                        this.setPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(startFrom.X, single3));
                        this.setPoint(3, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point1.X, single3));
                        return;
                    }
                    if (_super.prototype.IsApprox.call(this, point.X, point1.X)) {
                        if (Math.abs(startFrom.X - point.X) <= positions.CellSize.Width / 2) {
                            this.setPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(startFrom.X, point.Y));
                            this.setPoint(3, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(startFrom.X, point1.Y));
                        }
                        this.insertPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(startFrom.X, point.Y));
                        return;
                    }
                    this.setPoint(2, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, startFrom.Y));
                }
                return;
            }
        }
        if (fromDir === 0) {
            if (pointF2.X > pointF1.X || toDir === 270 && pointF2.Y < pointF1.Y && rectangleF.value.Right > pointF1.X || toDir === 90 &&
                pointF2.Y > pointF1.Y && rectangleF.value.Right > pointF1.X) {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, pointF1.Y);
                x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, (pointF1.Y + pointF2.Y) / 2);
                if (toDir === 180) {
                    pointF.X = this.getMidOrthoPosition(pointF1.X, pointF2.X, false);
                    x.X = pointF.X;
                    x.Y = pointF2.Y;
                }
                else if (toDir === 270 && pointF2.Y < pointF1.Y || toDir === 90 && pointF2.Y > pointF1.Y) {
                    if (pointF1.X < rectangleF.value.Left) {
                        pointF.X = this.getMidOrthoPosition(pointF1.X, rectangleF.value.Left, false);
                    }
                    else if (pointF1.X >= rectangleF.value.Right || (toDir !== 270 || pointF1.Y >= rectangleF.value.Top) &&
                        (toDir !== 90 || pointF1.Y <= rectangleF.value.Bottom)) {
                        pointF.X = rectangleF.value.Right;
                    }
                    else {
                        pointF.X = this.getMidOrthoPosition(pointF1.X, pointF2.X, false);
                    }
                    x.X = pointF.X;
                    x.Y = pointF2.Y;
                }
                else if (toDir === 0 && pointF1.X < rectangleF.value.Left && pointF1.Y > rectangleF.value.Top && pointF1.Y < rectangleF.value.Bottom) {
                    pointF.X = pointF1.X;
                    if (pointF1.Y >= pointF2.Y) {
                        pointF.Y = Math.max(pointF2.Y, rectangleF.value.Bottom);
                    }
                    else {
                        pointF.Y = Math.min(pointF2.Y, rectangleF.value.Top);
                    }
                    x.Y = pointF.Y;
                }
            }
            else {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, pointF2.Y);
                x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint((pointF1.X + pointF2.X) / 2, pointF2.Y);
                if (toDir === 180 || toDir === 90 && pointF2.Y < bounds.value.Top || toDir === 270 && pointF2.Y > bounds.value.Bottom) {
                    if (toDir === 180 && (_GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(rectangleF.value, pointF1) || _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(bounds.value, pointF2))) {
                        pointF.Y = this.getMidOrthoPosition(pointF1.Y, pointF2.Y, true);
                    }
                    else if (pointF2.Y < pointF1.Y && (toDir === 180 || toDir === 90)) {
                        pointF.Y = this.getMidOrthoPosition(bounds.value.Top, Math.max(pointF2.Y, rectangleF.value.Bottom), true);
                    }
                    else if (pointF2.Y > pointF1.Y && (toDir === 180 || toDir === 270)) {
                        pointF.Y = this.getMidOrthoPosition(bounds.value.Bottom, Math.min(pointF2.Y, rectangleF.value.Top), true);
                    }
                    x.X = pointF2.X;
                    x.Y = pointF.Y;
                }
                if (pointF.Y > bounds.value.Top && pointF.Y < bounds.value.Bottom) {
                    if ((pointF2.X < bounds.value.Left || pointF2.X > pointF1.X) && (pointF1.X > rectangleF.value.Right || pointF1.X < pointF2.X)) {
                        if (toDir === 270 || (toDir === 0 || toDir === 180) && pointF2.Y < pointF1.Y) {
                            pointF.Y = Math.min(pointF2.Y, (toDir === 0 ? bounds.value.Top : Math.min(bounds.value.Top, rectangleF.value.Top)));
                        }
                        else {
                            pointF.Y = Math.max(pointF2.Y, (toDir === 0 ? bounds.value.Bottom : Math.max(bounds.value.Bottom, rectangleF.value.Bottom)));
                        }
                        x.X = pointF2.X;
                        x.Y = pointF.Y;
                    }
                    else if (toDir === 90 || toDir === 270) {
                        pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(Math.max((pointF1.X + pointF2.X) / 2, pointF1.X), pointF1.Y);
                        x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF.X, pointF2.Y);
                    }
                }
            }
        }
        else if (fromDir === 180) {
            if (pointF2.X < pointF1.X || toDir === 270 && pointF2.Y < pointF1.Y && rectangleF.value.Left < pointF1.X || toDir === 90 &&
                pointF2.Y > pointF1.Y && rectangleF.value.Left < pointF1.X) {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, pointF1.Y);
                x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, (pointF1.Y + pointF2.Y) / 2);
                if (toDir === 0) {
                    pointF.X = this.getMidOrthoPosition(pointF1.X, pointF2.X, false);
                    x.X = pointF.X;
                    x.Y = pointF2.Y;
                }
                else if (toDir === 270 && pointF2.Y < pointF1.Y || toDir === 90 && pointF2.Y > pointF1.Y) {
                    if (pointF1.X > rectangleF.value.Right) {
                        pointF.X = this.getMidOrthoPosition(pointF1.X, rectangleF.value.Right, false);
                    }
                    else if (pointF1.X <= rectangleF.value.Left || (toDir !== 270 || pointF1.Y >= rectangleF.value.Top) &&
                        (toDir !== 90 || pointF1.Y <= rectangleF.value.Bottom)) {
                        pointF.X = rectangleF.value.Left;
                    }
                    else {
                        pointF.X = this.getMidOrthoPosition(pointF1.X, pointF2.X, false);
                    }
                    x.X = pointF.X;
                    x.Y = pointF2.Y;
                }
                else if (toDir === 180 && pointF1.X > rectangleF.value.Right && pointF1.Y > rectangleF.value.Top && pointF1.Y < rectangleF.value.Bottom) {
                    pointF.X = pointF1.X;
                    if (pointF1.Y >= pointF2.Y) {
                        pointF.Y = Math.max(pointF2.Y, rectangleF.value.Bottom);
                    }
                    else {
                        pointF.Y = Math.min(pointF2.Y, rectangleF.value.Top);
                    }
                    x.Y = pointF.Y;
                }
            }
            else {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, pointF2.Y);
                x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint((pointF1.X + pointF2.X) / 2, pointF2.Y);
                if (toDir === 0 || toDir === 90 && pointF2.Y < bounds.value.Top || toDir === 270 && pointF2.Y > bounds.value.Bottom) {
                    if (toDir === 0 && (_GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(rectangleF.value, pointF1) || _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(bounds.value, pointF2))) {
                        pointF.Y = this.getMidOrthoPosition(pointF1.Y, pointF2.Y, true);
                    }
                    else if (pointF2.Y < pointF1.Y && (toDir === 0 || toDir === 90)) {
                        pointF.Y = this.getMidOrthoPosition(bounds.value.Top, Math.max(pointF2.Y, rectangleF.value.Bottom), true);
                    }
                    else if (pointF2.Y > pointF1.Y && (toDir === 0 || toDir === 270)) {
                        pointF.Y = this.getMidOrthoPosition(bounds.value.Bottom, Math.min(pointF2.Y, rectangleF.value.Top), true);
                    }
                    x.X = pointF2.X;
                    x.Y = pointF.Y;
                }
                if (pointF.Y > bounds.value.Top && pointF.Y < bounds.value.Bottom) {
                    if ((pointF2.X > bounds.value.Right || pointF2.X < pointF1.X) && (pointF1.X < rectangleF.value.Left || pointF1.X > pointF2.X)) {
                        if (toDir === 270 || (toDir === 0 || toDir === 180) && pointF2.Y < pointF1.Y) {
                            pointF.Y = Math.min(pointF2.Y, (toDir === 180 ? bounds.value.Top : Math.min(bounds.value.Top, rectangleF.value.Top)));
                        }
                        else {
                            pointF.Y = Math.max(pointF2.Y, (toDir === 180 ? bounds.value.Bottom : Math.max(bounds.value.Bottom, rectangleF.value.Bottom)));
                        }
                        x.X = pointF2.X;
                        x.Y = pointF.Y;
                    }
                    else if (toDir === 90 || toDir === 270) {
                        pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(Math.min((pointF1.X + pointF2.X) / 2, pointF1.X), pointF1.Y);
                        x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF.X, pointF2.Y);
                    }
                }
            }
        }
        else if (fromDir === 90) {
            if (pointF2.Y > pointF1.Y || toDir === 180 && pointF2.X < pointF1.X && rectangleF.value.Bottom > pointF1.Y || toDir === 0 && pointF2.X > pointF1.X && rectangleF.value.Bottom > pointF1.Y) {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, pointF2.Y);
                x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint((pointF1.X + pointF2.X) / 2, pointF2.Y);
                if (toDir === 270) {
                    pointF.Y = this.getMidOrthoPosition(pointF1.Y, pointF2.Y, true);
                    x.X = pointF2.X;
                    x.Y = pointF.Y;
                }
                else if (toDir === 180 && pointF2.X < pointF1.X || toDir === 0 && pointF2.X > pointF1.X) {
                    if (pointF1.Y < rectangleF.value.Top) {
                        pointF.Y = this.getMidOrthoPosition(pointF1.Y, rectangleF.value.Top, true);
                    }
                    else if (pointF1.Y >= rectangleF.value.Bottom || (toDir !== 180 || pointF1.X >= rectangleF.value.Left) && (toDir !== 0 || pointF1.X <= rectangleF.value.Right)) {
                        pointF.Y = rectangleF.value.Bottom;
                    }
                    else {
                        pointF.Y = this.getMidOrthoPosition(pointF1.Y, pointF2.Y, true);
                    }
                    x.X = pointF2.X;
                    x.Y = pointF.Y;
                }
                else if (toDir === 90 && pointF1.Y < rectangleF.value.Top && pointF1.X > rectangleF.value.Left && pointF1.X < rectangleF.value.Right) {
                    if (pointF1.X >= pointF2.X) {
                        pointF.X = Math.max(pointF2.X, rectangleF.value.Right);
                    }
                    else {
                        pointF.X = Math.min(pointF2.X, rectangleF.value.Left);
                    }
                    pointF.Y = pointF1.Y;
                    x.X = pointF.X;
                }
            }
            else {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, pointF1.Y);
                x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, (pointF1.Y + pointF2.Y) / 2);
                if (toDir === 270 || toDir === 0 && pointF2.X < bounds.value.Left || toDir === 180 && pointF2.X > bounds.value.Right) {
                    if (toDir === 270 && (_GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(rectangleF.value, pointF1) || _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(bounds.value, pointF2))) {
                        pointF.X = this.getMidOrthoPosition(pointF1.X, pointF2.X, false);
                    }
                    else if (pointF2.X < pointF1.X && (toDir === 270 || toDir === 0)) {
                        pointF.X = this.getMidOrthoPosition(bounds.value.Left, Math.max(pointF2.X, rectangleF.value.Right), false);
                    }
                    else if (pointF2.X > pointF1.X && (toDir === 270 || toDir === 180)) {
                        pointF.X = this.getMidOrthoPosition(bounds.value.Right, Math.min(pointF2.X, rectangleF.value.Left), false);
                    }
                    x.X = pointF.X;
                    x.Y = pointF2.Y;
                }
                if (pointF.X > bounds.value.Left && pointF.X < bounds.value.Right) {
                    if ((pointF2.Y < bounds.value.Top || pointF2.Y > pointF1.Y) && (pointF1.Y > rectangleF.value.Bottom || pointF1.Y < pointF2.Y)) {
                        if (toDir === 180 || (toDir === 90 || toDir === 270) && pointF2.X < pointF1.X) {
                            pointF.X = Math.min(pointF2.X, (toDir === 90 ? bounds.value.Left : Math.min(bounds.value.Left, rectangleF.value.Left)));
                        }
                        else {
                            pointF.X = Math.max(pointF2.X, (toDir === 90 ? bounds.value.Right : Math.max(bounds.value.Right, rectangleF.value.Right)));
                        }
                        x.X = pointF.X;
                        x.Y = pointF2.Y;
                    }
                    else if (toDir === 0 || toDir === 180) {
                        pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, Math.max((pointF1.Y + pointF2.Y) / 2, pointF1.Y));
                        x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, pointF.Y);
                    }
                }
            }
        }
        else if (pointF2.Y < pointF1.Y || toDir === 180 && pointF2.X < pointF1.X && rectangleF.value.Top < pointF1.Y || toDir === 0 && pointF2.X > pointF1.X && rectangleF.value.Top < pointF1.Y) {
            pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, pointF2.Y);
            x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint((pointF1.X + pointF2.X) / 2, pointF2.Y);
            if (toDir === 90) {
                pointF.Y = this.getMidOrthoPosition(pointF1.Y, pointF2.Y, true);
                x.X = pointF2.X;
                x.Y = pointF.Y;
            }
            else if (toDir === 180 && pointF2.X < pointF1.X || toDir === 0 && pointF2.X >= pointF1.X) {
                if (pointF1.Y > rectangleF.value.Bottom) {
                    pointF.Y = this.getMidOrthoPosition(pointF1.Y, rectangleF.value.Bottom, true);
                }
                else if (pointF1.Y <= rectangleF.value.Top || (toDir !== 180 || pointF1.X >= rectangleF.value.Left) && (toDir !== 0 || pointF1.X <= rectangleF.value.Right)) {
                    pointF.Y = rectangleF.value.Top;
                }
                else {
                    pointF.Y = this.getMidOrthoPosition(pointF1.Y, pointF2.Y, true);
                }
                x.X = pointF2.X;
                x.Y = pointF.Y;
            }
            else if (toDir === 270 && pointF1.Y > rectangleF.value.Bottom && pointF1.X > rectangleF.value.Left && pointF1.X < rectangleF.value.Right) {
                if (pointF1.X >= pointF2.X) {
                    pointF.X = Math.max(pointF2.X, rectangleF.value.Right);
                }
                else {
                    pointF.X = Math.min(pointF2.X, rectangleF.value.Left);
                }
                pointF.Y = pointF1.Y;
                x.X = pointF.X;
            }
        }
        else {
            pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, pointF1.Y);
            x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, (pointF1.Y + pointF2.Y) / 2);
            if (toDir === 90 || toDir === 0 && pointF2.X < bounds.value.Left || toDir === 180 && pointF2.X > bounds.value.Right) {
                if (toDir === 90 && (_GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(rectangleF.value, pointF1) || _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.ContainsRect(bounds.value, pointF2))) {
                    pointF.X = this.getMidOrthoPosition(pointF1.X, pointF2.X, false);
                }
                else if (pointF2.X < pointF1.X && (toDir === 90 || toDir === 0)) {
                    pointF.X = this.getMidOrthoPosition(bounds.value.Left, Math.max(pointF2.X, rectangleF.value.Right), false);
                }
                else if (pointF2.X > pointF1.X && (toDir === 90 || toDir === 180)) {
                    pointF.X = this.getMidOrthoPosition(bounds.value.Right, Math.min(pointF2.X, rectangleF.value.Left), false);
                }
                x.X = pointF.X;
                x.Y = pointF2.Y;
            }
            if (pointF.X > bounds.value.Left && pointF.X < bounds.value.Right) {
                if ((pointF2.Y > bounds.value.Bottom || pointF2.Y < pointF1.Y) && (pointF1.Y < rectangleF.value.Top || pointF1.Y > pointF2.Y)) {
                    if (toDir === 180 || (toDir === 90 || toDir === 270) && pointF2.X < pointF1.X) {
                        pointF.X = Math.min(pointF2.X, (toDir === 270 ? bounds.value.Left : Math.min(bounds.value.Left, rectangleF.value.Left)));
                    }
                    else {
                        pointF.X = Math.max(pointF2.X, (toDir === 270 ? bounds.value.Right : Math.max(bounds.value.Right, rectangleF.value.Right)));
                    }
                    x.X = pointF.X;
                    x.Y = pointF2.Y;
                }
                else if (toDir === 0 || toDir === 180) {
                    pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, Math.min((pointF1.Y + pointF2.Y) / 2, pointF1.Y));
                    x = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF2.X, pointF.Y);
                }
            }
        }
        this.addPoint(pointF);
        this.addPoint(x);
    };
    TuLink.prototype.AddSelectionHandles = function (sel, selectedObj) {
        var int32;
        var view = sel.View;
        var flag = (view == null ? true : view.CanResizeObjects());
        var flag1 = (view == null ? true : view.CanReshapeObjects());
        if (this.HighlightWhenSelected || !this.CanResize() || !flag) {
            _super.prototype.AddSelectionHandles.call(this, sel, selectedObj);
            return;
        }
        sel.removeHandles(this);
        if (this.PointsCount == 0) {
            return;
        }
        var firstPickIndex = this.FirstPickIndex;
        var lastPickIndex = this.LastPickIndex;
        var flag2 = this.CanReshape() && flag1;
        var relinkable = this.Relinkable;
        var point = this.getPoint(firstPickIndex);
        int32 = (!relinkable ? 0 : 1024);
        var int321 = int32;
        var goHandle = sel.createResizeHandle(this, selectedObj, point, int321, int321 !== 0);
        if (int32 === 1024) {
            _super.prototype.MakeDiamondResizeHandle.call(this, goHandle, _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot);
        }
        point = this.getPoint(lastPickIndex);
        int32 = (!relinkable ? 0 : 1025);
        var int322 = int32;
        goHandle = sel.createResizeHandle(this, selectedObj, point, int322, int322 !== 0);
        if (int32 === 1025) {
            _super.prototype.MakeDiamondResizeHandle.call(this, goHandle, _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot);
        }
        for (var i = (firstPickIndex + 1); i <= (lastPickIndex - 1); i = (i + 1)) {
            point = this.getPoint(i);
            int32 = 8192 + i;
            if (!flag2) {
                int32 = 0;
            }
            else if (this.Orthogonal) {
                if (this.PointsCount < 6) {
                    int32 = 0;
                }
                else if (i === (firstPickIndex + 1) && this.FromPort != null) {
                    var pointF = this.getPoint(firstPickIndex);
                    if (_super.prototype.IsApprox.call(this, pointF.Y, point.Y) && !_super.prototype.IsApprox.call(this, pointF.X, point.X)) {
                        int32 = 256;
                    }
                    else if (_super.prototype.IsApprox.call(this, pointF.X, point.X) && !_super.prototype.IsApprox.call(this, pointF.Y, point.Y)) {
                        int32 = 32;
                    }
                    else if (_super.prototype.IsApprox.call(this, pointF.X, point.X) && _super.prototype.IsApprox.call(this, pointF.Y, point.Y) && (firstPickIndex + 2) <= lastPickIndex) {
                        var point1 = this.getPoint(firstPickIndex + 2);
                        if (_super.prototype.IsApprox.call(this, point1.Y, point.Y) && !_super.prototype.IsApprox.call(this, point1.X, point.X)) {
                            int32 = 32;
                        }
                        else if (_super.prototype.IsApprox.call(this, point1.X, point.X) && !_super.prototype.IsApprox.call(this, point1.Y, point.Y)) {
                            int32 = 256;
                        }
                    }
                }
                else if (i == (lastPickIndex - 1) && this.ToPort != null) {
                    var pointF1 = this.getPoint(lastPickIndex);
                    if (_super.prototype.IsApprox.call(this, point.Y, pointF1.Y) && !_super.prototype.IsApprox.call(this, point.X, pointF1.X)) {
                        int32 = 64;
                    }
                    else if (_super.prototype.IsApprox.call(this, point.X, pointF1.X) && !_super.prototype.IsApprox.call(this, point.Y, pointF1.Y)) {
                        int32 = 128;
                    }
                    else if (_super.prototype.IsApprox.call(this, pointF1.X, point.X) && _super.prototype.IsApprox.call(this, pointF1.Y, point.Y) && (lastPickIndex - 2) >= firstPickIndex) {
                        var point2 = this.getPoint(lastPickIndex - 2);
                        if (_super.prototype.IsApprox.call(this, point2.Y, point.Y) && !_super.prototype.IsApprox.call(this, point2.X, point.X)) {
                            int32 = 128;
                        }
                        else if (_super.prototype.IsApprox.call(this, point2.X, point.X) && !_super.prototype.IsApprox.call(this, point2.Y, point.Y)) {
                            int32 = 64;
                        }
                    }
                }
            }
            var int323 = int32;
            sel.createResizeHandle(this, selectedObj, point, int323, int323 !== 0);
            if ((int32 > 8192 || i == (firstPickIndex + 1) && int32 !== 0) && this.Orthogonal && this.DraggableOrthogonalSegments) {
                var pointF2 = point;
                var point3 = this.getPoint(i + 1);
                var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(Math.min(pointF2.X, point3.X), Math.min(pointF2.Y, point3.Y));
                var rectangleF = { value: new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(pointF3.X, pointF3.Y, Math.max(pointF2.X, point3.X) - pointF3.X, Math.max(pointF2.Y, point3.Y) - pointF3.Y) };
                var width = 3;
                var height = 3;
                if (view != null) {
                    var resizeHandleSize = view.ResizeHandleSize;
                    var single = resizeHandleSize.Width / 2;
                    resizeHandleSize = view.WorldScale;
                    width = single / resizeHandleSize.Width;
                    resizeHandleSize = view.ResizeHandleSize;
                    var height1 = resizeHandleSize.Height / 2;
                    resizeHandleSize = view.WorldScale;
                    height = height1 / resizeHandleSize.Height;
                }
                var goHandle1 = undefined;
                var flag3 = _super.prototype.IsApprox.call(this, rectangleF.value.Width, 0);
                if (!flag3) {
                    if (Math.abs(pointF2.X - point3.X) > width * 2) {
                        goHandle1 = new _TuHandle_TuHandle__WEBPACK_IMPORTED_MODULE_7__.TuHandle();
                    }
                    _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.InflateRect(rectangleF, -width, height);
                }
                else {
                    if (Math.abs(pointF2.Y - point3.Y) > height * 2) {
                        goHandle1 = new _TuHandle_TuHandle__WEBPACK_IMPORTED_MODULE_7__.TuHandle();
                    }
                    _GeomUtilities__WEBPACK_IMPORTED_MODULE_8__.GeomUtilities.InflateRect(rectangleF, width, -height);
                }
                if (goHandle1 != null) {
                    goHandle1.Style = _TuHandle_TuHandleStyle__WEBPACK_IMPORTED_MODULE_9__.TuHandleStyle.None;
                    if (int32 <= 8192) {
                        goHandle1.HandleID = (8192 + i) + 1000000;
                    }
                    else {
                        goHandle1.HandleID = int32 + 1000000;
                    }
                    goHandle1.SelectedObject = selectedObj;
                    goHandle1.Bounds = rectangleF.value;
                    if (!flag3) {
                        goHandle1.CursorName = "row-resize";
                    }
                    else {
                        goHandle1.CursorName = "col-resize";
                    }
                    sel.addHandle(this, goHandle1);
                }
            }
        }
    };
    TuLink.prototype.adjustPoints = function (startIndex, newFromPoint, endIndex, newToPoint) {
        var adjustingStyle = this.AdjustingStyle;
        if (this.Orthogonal) {
            if (adjustingStyle === _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.Scale) {
                return false;
            }
            if (adjustingStyle === _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.Stretch) {
                adjustingStyle = _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.End;
            }
        }
        switch (adjustingStyle) {
            case _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.Scale:
                {
                    return this.rescalePoints(startIndex, newFromPoint, endIndex, newToPoint);
                }
            case _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.Stretch:
                {
                    return this.stretchPoints(startIndex, newFromPoint, endIndex, newToPoint);
                }
            case _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.End:
                {
                    return this.modifyEndPoints(startIndex, newFromPoint, endIndex, newToPoint);
                }
        }
        return false;
    };
    TuLink.prototype.calculateBezierNoSpot = function (fromObj, from, toObj, to) {
        this.clearPoints();
        var center = { value: fromObj.Center };
        var toLinkPoint = { value: toObj.Center };
        if (from != null) {
            center.value = from.getFromLinkPoint(this.AbstractLink);
        }
        else if (!fromObj.GetNearestIntersectionPoint(toLinkPoint.value, center.value, center)) {
            center.value = fromObj.Center;
        }
        if (to != null) {
            toLinkPoint.value = to.getToLinkPoint(this.AbstractLink);
        }
        else if (!toObj.GetNearestIntersectionPoint(center.value, toLinkPoint.value, toLinkPoint)) {
            toLinkPoint.value = toObj.Center;
        }
        var x = toLinkPoint.value.X - center.value.X;
        var y = toLinkPoint.value.Y - center.value.Y;
        var curviness = this.Curviness;
        var single = Math.abs(curviness);
        if (curviness < 0) {
            single = -single;
        }
        var single1 = 0;
        var single2 = 0;
        var x1 = center.value.X + x / 3;
        var y1 = center.value.Y + y / 3;
        var single3 = x1;
        var single4 = y1;
        if (!_super.prototype.IsApprox.call(this, y, 0)) {
            single1 = -x / y;
            var single5 = single;
            var single6 = single1;
            single2 = Math.sqrt((single5 * single5 / (single6 * single6 + 1)));
            if (curviness < 0) {
                single2 = -single2;
            }
            single3 = ((y < 0 ? -1 : 1)) * single2 + x1;
            single4 = single1 * (single3 - x1) + y1;
        }
        else if (x <= 0) {
            single4 += single;
        }
        else {
            single4 -= single;
        }
        x1 = center.value.X + 2 * x / 3;
        y1 = center.value.Y + 2 * y / 3;
        var single7 = x1;
        var single8 = y1;
        if (!_super.prototype.IsApprox.call(this, y, 0)) {
            single7 = ((y < 0 ? -1 : 1)) * single2 + x1;
            single8 = single1 * (single7 - x1) + y1;
        }
        else if (x <= 0) {
            single8 += single;
        }
        else {
            single8 -= single;
        }
        this.addPoint(center.value);
        _super.prototype.addPoint.call(this, single3, single4);
        _super.prototype.addPoint.call(this, single7, single8);
        this.addPoint(toLinkPoint.value);
        this.setPoint(0, from.getFromLinkPoint(this.AbstractLink));
        this.setPoint(3, to.getToLinkPoint(this.AbstractLink));
    };
    TuLink.prototype.calculateLineNoSpot = function (fromObj, from, toObj, to) {
        this.clearPoints();
        var center = { value: fromObj.Center };
        var toLinkPoint = { value: toObj.Center };
        if (from != null) {
            center.value = from.getFromLinkPoint(this.AbstractLink);
        }
        else if (!fromObj.GetNearestIntersectionPoint(toLinkPoint.value, center.value, center)) {
            center.value = fromObj.Center;
        }
        if (to != null) {
            toLinkPoint.value = to.getToLinkPoint(this.AbstractLink);
        }
        else if (!toObj.GetNearestIntersectionPoint(center.value, toLinkPoint.value, toLinkPoint)) {
            toLinkPoint.value = toObj.Center;
        }
        this.addPoint(center.value);
        this.addPoint(toLinkPoint.value);
    };
    TuLink.prototype.calculateRoute = function () {
        this.calculateStroke();
    };
    TuLink.prototype.calculateStroke = function () {
        var obj;
        var fromPort = this.FromPort;
        var toPort = this.ToPort;
        if (fromPort == null || toPort == null) {
            return;
        }
        var goObject = fromPort.TuObject;
        var goObject1 = toPort.TuObject;
        if (goObject == null || goObject1 == null) {
            return;
        }
        var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuPort);
        var goPort1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject1, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuPort);
        var pointsCount = this.PointsCount;
        var int32 = (goPort != null ? goPort.FromSpot : _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot);
        var int321 = (goPort1 != null ? goPort1.ToSpot : _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot);
        var isSelfLoop = this.IsSelfLoop;
        var orthogonal = this.Orthogonal;
        var style = this.Style === _TuStroke_TuStrokeStyle__WEBPACK_IMPORTED_MODULE_12__.TuStrokeStyle.Bezier;
        var adjustingStyle = this.AdjustingStyle === _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.Calculate;
        var curviness = this.Curviness;
        var suspendsUpdates = this.SuspendsUpdates;
        var initializing = this.Initializing;
        if (!suspendsUpdates) {
            this.Changing(1204);
        }
        this.SuspendsUpdates = true;
        this.Initializing = true;
        if (goPort == null || goPort1 == null || !orthogonal && int32 === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && int321 === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && !isSelfLoop) {
            var flag = false;
            if (!adjustingStyle && pointsCount >= 3) {
                var center = { value: goObject.Center };
                var toLinkPoint = { value: goObject1.Center };
                if (goPort != null) {
                    center.value = goPort.getFromLinkPoint(this.AbstractLink);
                }
                else if (!goObject.GetNearestIntersectionPoint(toLinkPoint.value, center.value, center)) {
                    center.value = goObject.Center;
                }
                if (goPort1 != null) {
                    toLinkPoint.value = goPort1.getToLinkPoint(this.AbstractLink);
                }
                else if (!goObject1.GetNearestIntersectionPoint(center.value, toLinkPoint.value, toLinkPoint)) {
                    toLinkPoint.value = goObject1.Center;
                }
                flag = this.adjustPoints(0, center.value, pointsCount - 1, toLinkPoint.value);
            }
            if (!flag) {
                if (!style) {
                    this.calculateLineNoSpot(goObject, goPort, goObject1, goPort1);
                }
                else {
                    this.calculateBezierNoSpot(goObject, goPort, goObject1, goPort1);
                }
            }
        }
        else {
            if (adjustingStyle) {
                if ((!orthogonal ? false : this.AvoidsNodes) || isSelfLoop) {
                    this.clearPoints();
                }
            }
            var fromLinkPoint = goPort.getFromLinkPoint(this.AbstractLink);
            var single = 0;
            var single1 = 0;
            var fromLinkDir = 0;
            if ((orthogonal ? true : int32 !== _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot) || isSelfLoop) {
                var fromEndSegmentLength = goPort.getFromEndSegmentLength(this.AbstractLink);
                fromLinkDir = goPort.getFromLinkDir(this.AbstractLink);
                if (isSelfLoop) {
                    fromLinkDir = fromLinkDir - ((orthogonal ? 90 : 30));
                    if (curviness < 0) {
                        fromLinkDir -= 180;
                    }
                    if (fromLinkDir < 0) {
                        fromLinkDir += 360;
                    }
                }
                if (style) {
                    fromEndSegmentLength += 15;
                }
                if (isSelfLoop) {
                    fromEndSegmentLength += Math.abs(curviness);
                }
                if (fromLinkDir === 0) {
                    single = fromEndSegmentLength;
                }
                else if (fromLinkDir === 90) {
                    single1 = fromEndSegmentLength;
                }
                else if (fromLinkDir === 180) {
                    single = -fromEndSegmentLength;
                }
                else if (fromLinkDir !== 270) {
                    single = fromEndSegmentLength * Math.cos(fromLinkDir * 3.14159265358979 / 180);
                    single1 = fromEndSegmentLength * Math.sin(fromLinkDir * 3.14159265358979 / 180);
                }
                else {
                    single1 = -fromEndSegmentLength;
                }
                if (int32 === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && isSelfLoop) {
                    fromLinkPoint = goPort.getLinkPointFromPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(fromLinkPoint.X + single * 1000, fromLinkPoint.Y + single1 * 1000));
                }
            }
            var linkPointFromPoint = goPort1.getToLinkPoint(this.AbstractLink);
            var single2 = 0;
            var single3 = 0;
            var toLinkDir = 0;
            if ((orthogonal ? true : int321 !== _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot) || isSelfLoop) {
                var toEndSegmentLength = goPort1.getToEndSegmentLength(this.AbstractLink);
                toLinkDir = goPort1.getToLinkDir(this.AbstractLink);
                if (isSelfLoop) {
                    var single4 = toLinkDir;
                    if (orthogonal) {
                        obj = null;
                    }
                    else {
                        obj = 30;
                    }
                    toLinkDir = single4 + obj;
                    if (curviness < 0) {
                        toLinkDir += 180;
                    }
                    if (toLinkDir > 360) {
                        toLinkDir -= 360;
                    }
                }
                if (style) {
                    toEndSegmentLength += 15;
                }
                if (isSelfLoop) {
                    toEndSegmentLength += Math.abs(curviness);
                }
                if (toLinkDir === 0) {
                    single2 = toEndSegmentLength;
                }
                else if (toLinkDir === 90) {
                    single3 = toEndSegmentLength;
                }
                else if (toLinkDir === 180) {
                    single2 = -toEndSegmentLength;
                }
                else if (toLinkDir !== 270) {
                    single2 = toEndSegmentLength * Math.cos(toLinkDir * 3.14159265358979 / 180);
                    single3 = toEndSegmentLength * Math.sin(toLinkDir * 3.14159265358979 / 180);
                }
                else {
                    single3 = -toEndSegmentLength;
                }
                if (int321 === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && isSelfLoop) {
                    linkPointFromPoint = goPort1.getLinkPointFromPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(linkPointFromPoint.X + single2 * 1000, linkPointFromPoint.Y + single3 * 1000));
                }
            }
            var pointF = fromLinkPoint;
            if ((orthogonal ? true : int32 !== _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot) || isSelfLoop) {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(fromLinkPoint.X + single, fromLinkPoint.Y + single1);
            }
            var pointF1 = linkPointFromPoint;
            if ((orthogonal ? true : int321 !== _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot) || isSelfLoop) {
                pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(linkPointFromPoint.X + single2, linkPointFromPoint.Y + single3);
            }
            if (!adjustingStyle && !orthogonal && int32 === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && pointsCount > 3 && this.adjustPoints(0, fromLinkPoint, pointsCount - 2, pointF1)) {
                this.setPoint(pointsCount - 1, linkPointFromPoint);
            }
            else if (!adjustingStyle && !orthogonal && int321 === _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot && pointsCount > 3 && this.adjustPoints(1, pointF, pointsCount - 1, linkPointFromPoint)) {
                this.setPoint(0, fromLinkPoint);
            }
            else if (!adjustingStyle && !orthogonal && pointsCount > 4 && this.adjustPoints(1, pointF, pointsCount - 2, pointF1)) {
                this.setPoint(0, fromLinkPoint);
                this.setPoint(pointsCount - 1, linkPointFromPoint);
            }
            else if (!(!adjustingStyle && orthogonal) || pointsCount < 6 || this.AvoidsNodes || !this.adjustPoints(1, pointF, pointsCount - 2, pointF1)) {
                this.clearPoints();
                this.addPoint(fromLinkPoint);
                if ((orthogonal ? true : int32 !== _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot) || isSelfLoop) {
                    this.addPoint(pointF);
                }
                if (orthogonal) {
                    this.addOrthoPoints(pointF, fromLinkDir, pointF1, toLinkDir);
                }
                if ((orthogonal ? true : int321 !== _Spot__WEBPACK_IMPORTED_MODULE_3__.NoSpot) || isSelfLoop) {
                    this.addPoint(pointF1);
                }
                this.addPoint(linkPointFromPoint);
            }
            else {
                this.setPoint(0, fromLinkPoint);
                this.setPoint(pointsCount - 1, linkPointFromPoint);
            }
        }
        this.InvalidBounds = true;
        this.Initializing = initializing;
        this.SuspendsUpdates = suspendsUpdates;
        if (!suspendsUpdates) {
            var bounds = this.Bounds;
            this.Changed(1204, 0, undefined, bounds, 0, undefined, bounds);
        }
    };
    TuLink.prototype.Changed = function (subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
        if (this.SuspendsUpdates) {
            return;
        }
        _super.prototype.Changed.call(this, subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
        if (subhint === 1203 || subhint === 1201 || subhint === 1202 || subhint === 1204 || subhint === 1206 || subhint === 1205) {
            this.AbstractLink.onPortChanged(undefined, subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
            this.portsOnLinkChanged(subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
        }
    };
    TuLink.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case 1300:
                {
                    this.UserFlags = e.getInt(undo);
                    return;
                }
            case 1301:
                {
                    this.UserObject = e.getValue(undo);
                    return;
                }
            case 1302:
                {
                    this.FromPort = e.getValue(undo);
                    return;
                }
            case 1303:
                {
                    this.ToPort = e.getValue(undo);
                    return;
                }
            case 1304:
                {
                    this.Orthogonal = e.getValue(undo);
                    return;
                }
            case 1305:
                {
                    this.Relinkable = e.getValue(undo);
                    return;
                }
            case 1306:
                {
                    this.AbstractLink = e.getValue(undo);
                    return;
                }
            case 1307:
                {
                    this.AvoidsNodes = e.getValue(undo);
                    return;
                }
            case 1308:
                {
                    _super.prototype.ChangeValue.call(this, e, undo);
                    return;
                }
            case 1309:
                {
                    this.PartID = e.getInt(undo);
                    return;
                }
            case 1310:
                {
                    this.AdjustingStyle = e.getInt(undo);
                    return;
                }
            case 1311:
                {
                    this.ToolTipText = e.getValue(undo);
                    return;
                }
            case 1312:
                {
                    this.DraggableOrthogonalSegments = e.getValue(undo);
                    return;
                }
            default:
                {
                    _super.prototype.ChangeValue.call(this, e, undo);
                    return;
                }
        }
    };
    TuLink.prototype.copyObject = function (env) {
        var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(_super.prototype.copyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLink);
        if (goLink != null) {
            env.Delayeds.Add(this);
            goLink.myAbstractLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(env.copy(this.myAbstractLink.TuObject), _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink);
            goLink.myFromPort = undefined;
            goLink.myToPort = undefined;
            goLink.myPartID = -1;
        }
        return goLink;
    };
    TuLink.prototype.CopyObjectDelayed = function (env, newobj) {
        _super.prototype.CopyObjectDelayed.call(this, env, newobj);
        var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(newobj, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLink);
        if (goLink == null) {
            return;
        }
        var fromPort = this.FromPort;
        var toPort = this.ToPort;
        var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(env.Get(fromPort), _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuPort);
        var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(env.Get(toPort), _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuPort);
        var abstractLink = goLink.AbstractLink;
        if (abstractLink.TuObject.Movable || (fromPort == null || item != null) && (toPort == null || goPort != null)) {
            goLink.myFromPort = item;
            goLink.myToPort = goPort;
            if (item != null) {
                item.addDestinationLink(abstractLink);
            }
            if (goPort != null) {
                goPort.addSourceLink(abstractLink);
                return;
            }
        }
        else {
            abstractLink.TuObject.Remove();
        }
    };
    TuLink.prototype.DoResize = function (view, origRect, newPoint, whichHandle, evttype, min, max) {
        var point;
        if (this.ResizesRealtime || evttype === _TuInputState__WEBPACK_IMPORTED_MODULE_13__.TuInputState.Finish || evttype === _TuInputState__WEBPACK_IMPORTED_MODULE_13__.TuInputState.Cancel) {
            var firstPickIndex = this.FirstPickIndex + 1;
            var lastPickIndex = this.LastPickIndex - 1;
            if (whichHandle > 64) {
                if (whichHandle === 128) {
                    var int32 = lastPickIndex - 1;
                    point = this.getPoint(lastPickIndex - 2);
                    this.setPoint(int32, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, newPoint.Y));
                    point = this.getPoint(lastPickIndex + 1);
                    this.setPoint(lastPickIndex, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, newPoint.Y));
                    return;
                }
                if (whichHandle === 256) {
                    var x = newPoint.X;
                    point = this.getPoint(firstPickIndex - 1);
                    this.setPoint(firstPickIndex, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(x, point.Y));
                    var int321 = firstPickIndex + 1;
                    var single = newPoint.X;
                    point = this.getPoint(firstPickIndex + 2);
                    this.setPoint(int321, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(single, point.Y));
                    return;
                }
            }
            else {
                if (whichHandle === 32) {
                    point = this.getPoint(firstPickIndex - 1);
                    this.setPoint(firstPickIndex, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, newPoint.Y));
                    var int322 = firstPickIndex + 1;
                    point = this.getPoint(firstPickIndex + 2);
                    this.setPoint(int322, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, newPoint.Y));
                    return;
                }
                if (whichHandle === 64) {
                    var int323 = lastPickIndex - 1;
                    var x1 = newPoint.X;
                    point = this.getPoint(lastPickIndex - 2);
                    this.setPoint(int323, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(x1, point.Y));
                    var single1 = newPoint.X;
                    point = this.getPoint(lastPickIndex + 1);
                    this.setPoint(lastPickIndex, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(single1, point.Y));
                    return;
                }
            }
            var pointsCount = this.PointsCount;
            if (pointsCount >= 2 && whichHandle >= 8192) {
                var int324 = whichHandle - 8192;
                if (int324 <= 1000000) {
                    var pointF = this.getPoint(int324);
                    if (this.Orthogonal) {
                        var point1 = this.getPoint(int324 - 1);
                        var pointF1 = this.getPoint(int324 + 1);
                        if (_super.prototype.IsApprox.call(this, point1.X, pointF.X) && _super.prototype.IsApprox.call(this, pointF.Y, pointF1.Y)) {
                            this.setPoint(int324 - 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, point1.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, newPoint.Y));
                        }
                        else if (_super.prototype.IsApprox.call(this, point1.Y, pointF.Y) && _super.prototype.IsApprox.call(this, pointF.X, pointF1.X)) {
                            this.setPoint(int324 - 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point1.X, newPoint.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, pointF1.Y));
                        }
                        else if (_super.prototype.IsApprox.call(this, point1.X, pointF.X) && _super.prototype.IsApprox.call(this, pointF.X, pointF1.X)) {
                            this.setPoint(int324 - 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, point1.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, pointF1.Y));
                        }
                        else if (_super.prototype.IsApprox.call(this, point1.Y, pointF.Y) && _super.prototype.IsApprox.call(this, pointF.Y, pointF1.Y)) {
                            this.setPoint(int324 - 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point1.X, newPoint.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.X, newPoint.Y));
                        }
                    }
                    this.setPoint(int324, newPoint);
                }
                else {
                    int324 = int324 - 1000000;
                    var point2 = this.getPoint(int324);
                    if (this.Orthogonal) {
                        var pointF2 = this.getPoint(int324 - 1);
                        var point3 = this.getPoint(int324 + 1);
                        if (_super.prototype.IsApprox.call(this, pointF2.X, point2.X) && _super.prototype.IsApprox.call(this, point2.Y, point3.Y)) {
                            this.setPoint(int324, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point2.X, newPoint.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point3.X, newPoint.Y));
                        }
                        else if (_super.prototype.IsApprox.call(this, pointF2.Y, point2.Y) && _super.prototype.IsApprox.call(this, point2.X, point3.X)) {
                            this.setPoint(int324, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, point2.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, point3.Y));
                        }
                        else if (_super.prototype.IsApprox.call(this, pointF2.X, point2.X) && _super.prototype.IsApprox.call(this, point2.X, point3.X)) {
                            this.setPoint(int324, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point2.X, newPoint.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, point3.Y));
                        }
                        else if (_super.prototype.IsApprox.call(this, pointF2.Y, point2.Y) && _super.prototype.IsApprox.call(this, point2.Y, point3.Y)) {
                            this.setPoint(int324, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newPoint.X, point2.Y));
                            this.setPoint(int324 + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point3.X, newPoint.Y));
                        }
                    }
                }
                if (pointsCount >= 3) {
                    if (int324 === 1 && this.FromPort != null) {
                        var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.FromPort.TuObject, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuPort);
                        if (goObject != null) {
                            this.setPoint(0, goObject.getFromLinkPoint(this.AbstractLink));
                        }
                    }
                    if (int324 === (pointsCount - 2) && this.ToPort != null) {
                        var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.ToPort.TuObject, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuPort);
                        if (goPort != null) {
                            this.setPoint(pointsCount - 1, goPort.getToLinkPoint(this.AbstractLink));
                        }
                    }
                }
            }
        }
    };
    TuLink.prototype.getMidOrthoPosition = function (fromPosition, toPosition, vertical) {
        return (fromPosition + toPosition) / 2;
    };
    TuLink.prototype.getOtherNode = function (n) {
        return TuLink.GetOtherNode(this, n);
    };
    TuLink.GetOtherNode = function (l, n) {
        if (l.FromPort.Node === n) {
            return l.ToPort.Node;
        }
        if (l.ToPort.Node !== n) {
            return undefined;
        }
        return l.FromPort.Node;
    };
    TuLink.prototype.getOtherPort = function (p) {
        return TuLink.GetOtherPort(this, p);
    };
    TuLink.GetOtherPort = function (l, p) {
        if (l.FromPort === p) {
            return l.ToPort;
        }
        if (l.ToPort === p) {
            return l.FromPort;
        }
        var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(p, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
        if (goObject == null) {
            return undefined;
        }
        var center = goObject.Center;
        var fromPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(l.FromPort, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
        var toPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(l.ToPort, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
        var x = 0;
        var single = 0;
        if (fromPort != null) {
            var pointF = fromPort.Center;
            x = (pointF.X - center.X) * (pointF.X - center.X) + (pointF.Y - center.Y) * (pointF.Y - center.Y);
        }
        if (toPort != null) {
            var center1 = toPort.Center;
            single = (center1.X - center.X) * (center1.X - center.X) + (center1.Y - center.Y) * (center1.Y - center.Y);
        }
        if (single > x) {
            return l.ToPort;
        }
        if (x <= single) {
            return undefined;
        }
        return l.FromPort;
    };
    TuLink.prototype.GetToolTip = function (view) {
        return this.ToolTipText;
    };
    /* internal */ TuLink.isOrtho = function (link) {
        if (link == null) {
            return false;
        }
        var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(link, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLink);
        if (goLink != null) {
            return goLink.Orthogonal;
        }
        var goLabeledLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(link, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLabeledLink);
        if (goLabeledLink == null) {
            return false;
        }
        return goLabeledLink.Orthogonal;
    };
    TuLink.prototype.modifyEndPoints = function (startIndex, newFromPoint, endIndex, newToPoint) {
        if (this.Orthogonal) {
            var point = this.getPoint(startIndex + 1);
            var pointF = this.getPoint(startIndex + 2);
            if (_super.prototype.IsApprox.call(this, point.X, pointF.X) && !_super.prototype.IsApprox.call(this, point.Y, pointF.Y)) {
                this.setPoint(startIndex + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, newFromPoint.Y));
            }
            else if (_super.prototype.IsApprox.call(this, point.Y, pointF.Y)) {
                this.setPoint(startIndex + 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newFromPoint.X, point.Y));
            }
            point = this.getPoint(endIndex - 1);
            pointF = this.getPoint(endIndex - 2);
            if (_super.prototype.IsApprox.call(this, point.X, pointF.X) && !_super.prototype.IsApprox.call(this, point.Y, pointF.Y)) {
                this.setPoint(endIndex - 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(point.X, newToPoint.Y));
            }
            else if (_super.prototype.IsApprox.call(this, point.Y, pointF.Y)) {
                this.setPoint(endIndex - 1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(newToPoint.X, point.Y));
            }
        }
        this.setPoint(startIndex, newFromPoint);
        this.setPoint(endIndex, newToPoint);
        return true;
    };
    TuLink.prototype.OnLayerChanged = function (oldlayer, newlayer, mainObj) {
        _super.prototype.OnLayerChanged.call(this, oldlayer, newlayer, mainObj);
        if (newlayer == null && !this.NoClearPorts && (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(mainObj, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink) || !_super.prototype.isChildOf.call(this, mainObj))) {
            var abstractLink = this.AbstractLink;
            var fromPort = this.FromPort;
            if (fromPort != null) {
                fromPort.removeLink(abstractLink);
            }
            var toPort = this.ToPort;
            if (toPort != null) {
                toPort.removeLink(abstractLink);
                return;
            }
        }
        else if (newlayer != null) {
            var goLink = this.AbstractLink;
            var goPort = this.FromPort;
            if (goPort != null) {
                goPort.addDestinationLink(goLink);
            }
            var toPort1 = this.ToPort;
            if (toPort1 != null) {
                toPort1.addSourceLink(goLink);
            }
        }
    };
    TuLink.prototype.onPortChanged = function (port, subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
        if (port == null) {
            return;
        }
        if (subhint === 1302 || subhint === 1303) {
            if (oldVal !== newVal || this.AdjustingStyle === _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.Calculate || this.AdjustingStyle === _TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_5__.TuLinkAdjustingStyle.Scale && this.Orthogonal) {
                this.updateRoute();
            }
            this.portsOnLinkChanged(subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
            return;
        }
        if (subhint === 2211) {
            this.updateRoute();
            return;
        }
        if (subhint !== 1702) {
            var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(port.TuObject, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuPort);
            if (goObject != null && subhint === 1703 && goObject.Style === _TuPort_TuPortStyle__WEBPACK_IMPORTED_MODULE_14__.TuPortStyle.Object) {
                return;
            }
            if (goObject != null && goObject === this.FromPort && this.PointsCount > 0) {
                var fromLinkPoint = goObject.getFromLinkPoint(this.AbstractLink);
                var point = this.getPoint(0);
                if (!_super.prototype.IsApprox.call(this, fromLinkPoint.X, point.X) || !_super.prototype.IsApprox.call(this, fromLinkPoint.Y, point.Y)) {
                    this.updateRoute();
                    return;
                }
            }
            else if (goObject == null || goObject !== this.ToPort || this.PointsCount < 2) {
                this.updateRoute();
            }
            else {
                var toLinkPoint = goObject.getToLinkPoint(this.AbstractLink);
                var pointF = this.getPoint(this.PointsCount - 1);
                if (!_super.prototype.IsApprox.call(this, toLinkPoint.X, pointF.X) || !_super.prototype.IsApprox.call(this, toLinkPoint.Y, pointF.Y)) {
                    this.updateRoute();
                    return;
                }
            }
        }
    };
    TuLink.prototype.portsOnLinkChanged = function (subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
        if (this.FromPort != null) {
            this.FromPort.onLinkChanged(this, subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
        }
        if (this.ToPort != null) {
            this.ToPort.onLinkChanged(this, subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
        }
    };
    TuLink.prototype.rescalePoints = function (startIndex, newFromPoint, endIndex, newToPoint) {
        var num;
        var num1;
        var num2;
        var point = this.getPoint(startIndex);
        var pointF = this.getPoint(endIndex);
        if (point === newFromPoint && pointF === newToPoint) {
            return true;
        }
        var x = point.X;
        var y = point.Y;
        var x1 = pointF.X;
        var y1 = pointF.Y;
        var x2 = x1 - x;
        var y2 = y1 - y;
        var num3 = x2;
        var num4 = y2;
        var num5 = Math.sqrt(num3 * num3 + num4 * num4);
        if (_super.prototype.IsApprox.call(this, num5, 0)) {
            return true;
        }
        if (!_super.prototype.IsApprox.call(this, x2, 0)) {
            num = Math.atan(y2 / Math.abs(x2));
            if (x2 < 0) {
                num = 3.14159265358979 - num;
            }
        }
        else {
            num = (y2 >= 0 ? 1.5707963267949 : -1.5707963267949);
        }
        var x3 = newFromPoint.X;
        var y3 = newFromPoint.Y;
        var x4 = newToPoint.X;
        var y4 = newToPoint.Y;
        var num6 = x4 - x3;
        var num7 = y4 - y3;
        var num8 = num6;
        var num9 = num7;
        var num10 = Math.sqrt(num8 * num8 + num9 * num9);
        if (!_super.prototype.IsApprox.call(this, num6, 0)) {
            num1 = Math.atan(num7 / Math.abs(num6));
            if (num6 < 0) {
                num1 = 3.14159265358979 - num1;
            }
        }
        else {
            num1 = (num7 >= 0 ? 1.5707963267949 : -1.5707963267949);
        }
        var num11 = num10 / num5;
        var num12 = num1 - num;
        this.setPoint(startIndex, newFromPoint);
        for (var i = startIndex + 1; i < endIndex; i = i + 1) {
            var point1 = this.getPoint(i);
            x2 = point1.X - x;
            y2 = point1.Y - y;
            var num13 = x2;
            var num14 = y2;
            var num15 = Math.sqrt(num13 * num13 + num14 * num14);
            if (!_super.prototype.IsApprox.call(this, num15, 0)) {
                if (!_super.prototype.IsApprox.call(this, x2, 0)) {
                    num2 = Math.atan(y2 / Math.abs(x2));
                    if (x2 < 0) {
                        num2 = 3.14159265358979 - num2;
                    }
                }
                else {
                    num2 = (y2 >= 0 ? 1.5707963267949 : -1.5707963267949);
                }
                var num16 = num2 + num12;
                var num17 = num15 * num11;
                var num18 = x3 + num17 * Math.cos(num16);
                var num19 = y3 + num17 * Math.sin(num16);
                this.setPoint(i, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(num18, num19));
            }
        }
        this.setPoint(endIndex, newToPoint);
        return true;
    };
    TuLink.prototype.stretchPoints = function (startIndex, newFromPoint, endIndex, newToPoint) {
        var point = this.getPoint(startIndex);
        var pointF = this.getPoint(endIndex);
        if (point === newFromPoint && pointF === newToPoint) {
            return true;
        }
        var x = point.X;
        var y = point.Y;
        var num = pointF.X;
        var y1 = pointF.Y;
        var num1 = (num - x) * (num - x) + (y1 - y) * (y1 - y);
        var x1 = newFromPoint.X;
        var y2 = newFromPoint.Y;
        var x2 = newToPoint.X;
        var num2 = newToPoint.Y;
        var num3 = 0;
        var num4 = 1;
        num3 = (x2 - x1 == 0 ? 9000000000 : (num2 - y2) / (x2 - x1));
        if (num3 != 0) {
            var num5 = num3;
            num4 = Math.sqrt(1 + 1 / (num5 * num5));
        }
        this.setPoint(startIndex, newFromPoint);
        for (var i = (startIndex + 1); i < endIndex; i = (i + 1)) {
            var point1 = this.getPoint(i);
            var x3 = point1.X;
            var y3 = point1.Y;
            var num6 = 0.5;
            if (num1 !== 0) {
                num6 = ((x - x3) * (x - num) + (y - y3) * (y - y1)) / num1;
            }
            var num7 = x + num6 * (num - x);
            var num8 = y + num6 * (y1 - y);
            var num9 = Math.sqrt((x3 - num7) * (x3 - num7) + (y3 - num8) * (y3 - num8));
            if (y3 < num3 * (x3 - num7) + num8) {
                num9 = -num9;
            }
            if (num3 > 0) {
                num9 = -num9;
            }
            var num10 = x1 + num6 * (x2 - x1);
            var num11 = y2 + num6 * (num2 - y2);
            if (num3 === 0) {
                this.setPoint(i, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(num10, num11 + num9));
            }
            else {
                var num12 = num10 + num9 / num4;
                var num13 = num11 - (num12 - num10) / num3;
                this.setPoint(i, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(num12, num13));
            }
        }
        this.setPoint(endIndex, newToPoint);
        return true;
    };
    TuLink.prototype.traversePositions = function (positions, px, py, dir, first) {
        var cellSize = positions.CellSize;
        var dist = positions.getDist(px, py);
        var single = px;
        var single1 = py;
        var width = single;
        var height = single1;
        if (dir === 0) {
            width += cellSize.Width;
        }
        else if (dir === 90) {
            height += cellSize.Height;
        }
        else if (dir !== 180) {
            height -= cellSize.Height;
        }
        else {
            width -= cellSize.Width;
        }
        while (dist > 1 && positions.getDist(width, height) === dist - 1) {
            single = width;
            single1 = height;
            if (dir === 0) {
                width += cellSize.Width;
            }
            else if (dir === 90) {
                height += cellSize.Height;
            }
            else if (dir !== 180) {
                height -= cellSize.Height;
            }
            else {
                width -= cellSize.Width;
            }
            dist = dist - 1;
        }
        if (!first) {
            single = Math.floor((single / cellSize.Width)) * cellSize.Width + cellSize.Width / 2;
            single1 = Math.floor((single1 / cellSize.Height)) * cellSize.Height + cellSize.Height / 2;
        }
        else if (dist > 1) {
            if (dir === 180 || dir === 0) {
                single = Math.floor((single / cellSize.Width)) * cellSize.Width + cellSize.Width / 2;
            }
            else if (dir === 90 || dir === 270) {
                single1 = Math.floor((single1 / cellSize.Height)) * cellSize.Height + cellSize.Height / 2;
            }
        }
        if (dist > 1) {
            var single2 = dir;
            var width1 = single;
            var height1 = single1;
            if (dir === 0) {
                single2 = 90;
                height1 += cellSize.Height;
            }
            else if (dir === 90) {
                single2 = 180;
                width1 -= cellSize.Width;
            }
            else if (dir === 180) {
                single2 = 270;
                height1 -= cellSize.Height;
            }
            else if (dir === 270) {
                single2 = 0;
                width1 += cellSize.Width;
            }
            if (positions.getDist(width1, height1) !== (dist - 1)) {
                var width2 = single;
                var height2 = single1;
                if (dir === 0) {
                    single2 = 270;
                    height2 -= cellSize.Height;
                }
                else if (dir === 90) {
                    single2 = 0;
                    width2 += cellSize.Width;
                }
                else if (dir === 180) {
                    single2 = 90;
                    height2 += cellSize.Height;
                }
                else if (dir === 270) {
                    single2 = 180;
                    width2 -= cellSize.Width;
                }
                if (positions.getDist(width2, height2) === (dist - 1)) {
                    this.traversePositions(positions, width2, height2, single2, false);
                }
            }
            else {
                this.traversePositions(positions, width1, height1, single2, false);
            }
        }
        _super.prototype.addPoint.call(this, single, single1);
    };
    TuLink.prototype.unlink = function () {
        this.AbstractLink.TuObject.Remove();
    };
    TuLink.prototype.updateRoute = function () {
        var document = this.Document;
        if (document == null) {
            this.calculateRoute();
            return;
        }
        var abstractLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.AbstractLink, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuRoutable);
        if (abstractLink == null) {
            abstractLink = this;
        }
        document.UpdateRoute(abstractLink);
    };
    return TuLink;
}(_TuStroke_TuStroke__WEBPACK_IMPORTED_MODULE_4__.TuStroke));



/***/ }),

/***/ "./src/TuLink/TuLinkAdjustingStyle.ts":
/*!********************************************!*\
  !*** ./src/TuLink/TuLinkAdjustingStyle.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLinkAdjustingStyle": () => (/* binding */ TuLinkAdjustingStyle)
/* harmony export */ });
var TuLinkAdjustingStyle;
(function (TuLinkAdjustingStyle) {
    TuLinkAdjustingStyle[TuLinkAdjustingStyle["Calculate"] = 0] = "Calculate";
    TuLinkAdjustingStyle[TuLinkAdjustingStyle["Scale"] = 1] = "Scale";
    TuLinkAdjustingStyle[TuLinkAdjustingStyle["Stretch"] = 2] = "Stretch";
    TuLinkAdjustingStyle[TuLinkAdjustingStyle["End"] = 3] = "End";
})(TuLinkAdjustingStyle || (TuLinkAdjustingStyle = {}));


/***/ }),

/***/ "./src/TuLink/TuLinkEvents.ts":
/*!************************************!*\
  !*** ./src/TuLink/TuLinkEvents.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuLinkEvents": () => (/* binding */ TuLinkEvents)
/* harmony export */ });
/* harmony import */ var _TuStroke_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuStroke/TuStrokeEvents */ "./src/TuStroke/TuStrokeEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuLinkEvents = /** @class */ (function (_super) {
    __extends(TuLinkEvents, _super);
    function TuLinkEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuLinkEvents.RelinkableFromHandle = 1024;
    TuLinkEvents.RelinkableToHandle = 1025;
    TuLinkEvents.ChangedLinkUserFlags = 1300;
    TuLinkEvents.ChangedLinkUserObject = 1301;
    TuLinkEvents.ChangedFromPort = 1302;
    TuLinkEvents.ChangedToPort = 1303;
    TuLinkEvents.ChangedOrthogonal = 1304;
    TuLinkEvents.ChangedRelinkable = 1305;
    TuLinkEvents.ChangedAbstractLink = 1306;
    TuLinkEvents.ChangedAvoidsNodes = 1307;
    TuLinkEvents.ChangedPartID = 1309;
    TuLinkEvents.ChangedAdjustingStyle = 1310;
    TuLinkEvents.ChangedToolTipText = 1311;
    TuLinkEvents.ChangedDraggableOrthogonalSegments = 1312;
    TuLinkEvents[1024] = 'RelinkableFromHandle';
    TuLinkEvents[1025] = 'RelinkableToHandle';
    TuLinkEvents[1300] = 'ChangedLinkUserFlags';
    TuLinkEvents[1301] = 'ChangedLinkUserObject';
    TuLinkEvents[1302] = 'ChangedFromPort';
    TuLinkEvents[1303] = 'ChangedToPort';
    TuLinkEvents[1304] = 'ChangedOrthogonal';
    TuLinkEvents[1305] = 'ChangedRelinkable';
    TuLinkEvents[1306] = 'ChangedAbstractLink';
    TuLinkEvents[1307] = 'ChangedAvoidsNodes';
    TuLinkEvents[1309] = 'ChangedPartID';
    TuLinkEvents[1310] = 'ChangedAdjustingStyle';
    TuLinkEvents[1311] = 'ChangedToolTipText';
    TuLinkEvents[1312] = 'ChangedDraggableOrthogonalSegments';
    return TuLinkEvents;
}(_TuStroke_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_0__.TuStrokeEvents));



/***/ }),

/***/ "./src/TuNode/TuNode.ts":
/*!******************************!*\
  !*** ./src/TuNode/TuNode.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuNode": () => (/* binding */ TuNode)
/* harmony export */ });
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Globals */ "./src/Globals.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuNodeSearch */ "./src/TuNode/TuNodeSearch.ts");
/* harmony import */ var _TuNodeLinkEnumerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuNodeLinkEnumerator */ "./src/TuNode/TuNodeLinkEnumerator.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _TuGroup_TuGroup__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuGroup/TuGroup */ "./src/TuGroup/TuGroup.tsx");
/* harmony import */ var _TuNodeNodeEnumerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TuNodeNodeEnumerator */ "./src/TuNode/TuNodeNodeEnumerator.ts");
/* harmony import */ var _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuTool/TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./TuNodeEvents */ "./src/TuNode/TuNodeEvents.ts");
/* harmony import */ var _TuNodePortEnumerator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TuNodePortEnumerator */ "./src/TuNode/TuNodePortEnumerator.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};











var TuNode = /** @class */ (function (_super) {
    __extends(TuNode, _super);
    function TuNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.flagPropsOnSelObj = false;
        _this.myPartID = -1;
        return _this;
    }
    TuNode_1 = TuNode;
    Object.defineProperty(TuNode.prototype, "DestinationLinks", {
        //#region [Property] DestinationLinks
        get: function () {
            return this.getDestinationLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getDestinationLinks = function () {
        return this.getLinkEnumerator(_TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.LinksOut);
    };
    Object.defineProperty(TuNode.prototype, "Destinations", {
        //#endregion
        //#region [Property] Destinations
        get: function () {
            return this.getDestinations();
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getDestinations = function () {
        return this.getNodeEnumerator(_TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.NodesOut);
    };
    Object.defineProperty(TuNode.prototype, "TuObject", {
        //#endregion
        //#region [Property] NodeObject
        get: function () {
            return this.getNodeObject();
        },
        set: function (value) {
            this.setNodeObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getNodeObject = function () {
        return this;
    };
    TuNode.prototype.setNodeObject = function (value) {
        return this;
    };
    Object.defineProperty(TuNode.prototype, "Label", {
        //#endregion
        //#region [Property] Label
        get: function () {
            return this.getLabel();
        },
        set: function (value) {
            this.setLabel(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getLabel = function () {
        return TuNode_1.findLabel(this);
    };
    TuNode.prototype.setLabel = function (value) {
    };
    Object.defineProperty(TuNode.prototype, "Links", {
        //#endregion
        //#region [Property] Links
        get: function () {
            return this.getLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getLinks = function () {
        return this.getLinkEnumerator(_TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.LinksIn | _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.LinksOut);
    };
    //#endregion
    //#region [Property] Location
    TuNode.prototype.getLocation = function () {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            return this.Position;
        }
        return this.SelectionObject.Center;
    };
    TuNode.prototype.setLocation = function (value) {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            this.Position = value;
            return;
        }
        var sizeF = _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_8__.TuTool.SubtractPoints(this.SelectionObject.Center, this.Position);
        this.Position = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint({ x: value.X - sizeF.Width, y: value.Y - sizeF.Height });
    };
    Object.defineProperty(TuNode.prototype, "PartID", {
        //#endregion
        //#region [Property] PartID
        get: function () {
            return this.getPartID();
        },
        set: function (value) {
            this.setPartID(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getPartID = function () {
        return this.myPartID;
    };
    TuNode.prototype.setPartID = function (value) {
        var int32 = this.myPartID;
        if (int32 !== value) {
            this.myPartID = value;
            this.Changed(_TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedPartID, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
        return this;
    };
    Object.defineProperty(TuNode.prototype, "Ports", {
        //#endregion
        //#region [Property] Ports
        get: function () {
            return this.getPorts();
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getPorts = function () {
        return this.getPortEnumerator();
    };
    Object.defineProperty(TuNode.prototype, "Nodes", {
        //#endregion
        //#region [Property] Nodes
        get: function () {
            return this.getNodes();
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getNodes = function () {
        return this.getNodeEnumerator(_TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.NodesIn | _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.NodesOut);
    };
    Object.defineProperty(TuNode.prototype, "SourceLinks", {
        //#endregion
        //#region [Property] SourceLinks
        get: function () {
            return this.getSourceLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getSourceLinks = function () {
        return this.getLinkEnumerator(_TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.LinksIn);
    };
    Object.defineProperty(TuNode.prototype, "Sources", {
        //#endregion
        //#region [Property] Sources
        get: function () {
            return this.getSources();
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getSources = function () {
        return this.getNodeEnumerator(_TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.NodesIn);
    };
    Object.defineProperty(TuNode.prototype, "PropertiesDelegatedToSelectionObject", {
        //#endregion
        //#region [Property] PropertiesDelegatedToSelectionObject
        get: function () {
            return this.getPropertiesDelegatedToSelectionObject();
        },
        set: function (value) {
            this.setPropertiesDelegatedToSelectionObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getPropertiesDelegatedToSelectionObject = function () {
        return this.flagPropsOnSelObj;
    };
    TuNode.prototype.setPropertiesDelegatedToSelectionObject = function (value) {
        var internalFlags = this.flagPropsOnSelObj;
        if (internalFlags !== value) {
            this.flagPropsOnSelObj = value;
            this.Changed(_TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedPropertiesDelegatedToSelectionObject, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
        return this;
    };
    //#endregion
    //#region [Property] Reshapable
    TuNode.prototype.getReshapable = function () {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            return this.Reshapable;
        }
        return this.SelectionObject.Reshapable;
    };
    TuNode.prototype.setReshapable = function (value) {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject == this) {
            this.Reshapable = value;
            return;
        }
        this.SelectionObject.Reshapable = value;
        return this;
    };
    //#endregion
    //#region [Property] Resizable
    TuNode.prototype.getResizable = function () {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            return _super.prototype.getResizable.call(this);
        }
        return this.SelectionObject.Resizable;
    };
    TuNode.prototype.setResizable = function (value) {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            _super.prototype.setResizable.call(this, value);
            return;
        }
        this.SelectionObject.Resizable = value;
        return this;
    };
    //#endregion
    //#region [Property] ResizesRealtime
    TuNode.prototype.getResizesRealtime = function () {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            return this.ResizesRealtime;
        }
        return this.SelectionObject.ResizesRealtime;
    };
    TuNode.prototype.setResizesRealtime = function (value) {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            this.ResizesRealtime = value;
            return;
        }
        this.SelectionObject.ResizesRealtime = value;
        return this;
    };
    //#endregion
    //#region [Property] Shadowed
    TuNode.prototype.getShadowed = function () {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            return this.Shadowed;
        }
        return this.SelectionObject.Shadowed;
    };
    TuNode.prototype.setShadowed = function (value) {
        if (!this.PropertiesDelegatedToSelectionObject || this.SelectionObject === this) {
            this.Shadowed = value;
            return;
        }
        this.SelectionObject.Shadowed = value;
        return this;
    };
    Object.defineProperty(TuNode.prototype, "Text", {
        //#endregion
        //#region [Property] Text
        get: function () {
            return this.getText();
        },
        set: function (value) {
            this.setText(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getText = function () {
        var label = this.Label;
        if (label == null) {
            return '';
        }
        return label.Text;
    };
    TuNode.prototype.setText = function (value) {
        var label = this.Label;
        if (label != null) {
            label.Text = value;
        }
        return this;
    };
    Object.defineProperty(TuNode.prototype, "ToolTipText", {
        //#endregion
        //#region [Property] ToolTipText
        get: function () {
            return this.getToolTipText();
        },
        set: function (value) {
            this.setToolTipText(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getToolTipText = function () {
        return this.myToolTipText;
    };
    TuNode.prototype.setToolTipText = function (value) {
        var str = this.myToolTipText;
        if (str !== value) {
            this.myToolTipText = value;
            this.Changed(_TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedToolTipText, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
        return this;
    };
    Object.defineProperty(TuNode.prototype, "UserFlags", {
        //#endregion
        //#region [Property] UserFlags
        get: function () {
            return this.getUserFlags();
        },
        set: function (value) {
            this.setUserFlags(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getUserFlags = function () {
        return this.myUserFlags;
    };
    TuNode.prototype.setUserFlags = function (value) {
        var int32 = this.myUserFlags;
        if (int32 !== value) {
            this.myUserFlags = value;
            this.Changed(_TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedNodeUserFlags, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
        return this;
    };
    Object.defineProperty(TuNode.prototype, "UserObject", {
        //#endregion
        //#region [Property] UserObject
        get: function () {
            return this.getUserObject();
        },
        set: function (value) {
            this.setUserObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuNode.prototype.getUserObject = function () {
        return this.myUserObject;
    };
    TuNode.prototype.setUserObject = function (value) {
        var obj = this.myUserObject;
        if (obj !== value) {
            this.myUserObject = value;
            this.Changed(_TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedNodeUserObject, 0, obj, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
        return this;
    };
    //#endregion
    TuNode.prototype.getEventObject = function () {
        return _TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents;
    };
    TuNode.prototype._addItem = function (items, obj) {
        if (obj != null && !items.Contains(obj)) {
            items.Add(obj);
        }
    };
    TuNode.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case _TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedNodeUserFlags:
                {
                    this.UserFlags = e.getFloat(undo);
                    return;
                }
            case _TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedNodeUserObject:
                {
                    this.UserObject = e.getValue(undo);
                    return;
                }
            case _TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedToolTipText:
                {
                    this.ToolTipText = e.getValue(undo);
                    return;
                }
            case _TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedPropertiesDelegatedToSelectionObject:
                {
                    this.PropertiesDelegatedToSelectionObject = e.getValue(undo);
                    return;
                }
            case _TuNodeEvents__WEBPACK_IMPORTED_MODULE_9__.TuNodeEvents.ChangedPartID:
                {
                    this.PartID = e.getFloat(undo);
                    return;
                }
        }
        _super.prototype.ChangeValue.call(this, e, undo);
    };
    TuNode.prototype.considerLink = function (l, p, s, items) {
        var flag = (s & _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.NotSelf) === 0;
        if (l.FromPort === p && (flag || l.ToPort.TuObject == null || !l.ToPort.TuObject.isChildOf(this))) {
            if ((s & _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.LinksOut) !== 0) {
                this._addItem(items, l);
            }
            if ((s & _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.NodesOut) !== 0) {
                this._addItem(items, l.ToNode);
            }
        }
        if (l.ToPort === p && (flag || l.FromPort.TuObject == null || !l.FromPort.TuObject.isChildOf(this))) {
            if ((s & _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.LinksIn) !== 0) {
                this._addItem(items, l);
            }
            if ((s & _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.NodesIn) !== 0) {
                this._addItem(items, (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.convert)(l.FromNode));
            }
        }
    };
    TuNode.prototype.copyObject = function (env) {
        var goNode = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.as)(_super.prototype.CopyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuNode);
        if (goNode != null) {
            goNode.myPartID = -1;
        }
        return goNode;
    };
    TuNode.prototype.copyPropertiesFromSelectionObject = function (oldobj, newobj) {
        if (oldobj != null && newobj != null && oldobj === this.SelectionObject) {
            newobj.Center = oldobj.Center;
            newobj.Selectable = oldobj.Selectable;
            newobj.Resizable = oldobj.Resizable;
            newobj.Reshapable = oldobj.Reshapable;
            newobj.ResizesRealtime = oldobj.ResizesRealtime;
            newobj.Shadowed = oldobj.Shadowed;
        }
    };
    TuNode.prototype.DoBeginEdit = function (view) {
        if (this.Label != null) {
            this.Label.DoBeginEdit(view);
        }
    };
    TuNode.prototype.findAll = function (s) {
        var ts = new _tuval_core__WEBPACK_IMPORTED_MODULE_5__.List();
        this.findAllAux(this, s, ts);
        return ts;
    };
    TuNode.prototype.findAllAux = function (obj, s, items) {
        var _this = this;
        var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuPort);
        if (goPort != null) {
            if ((s & _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.Ports) !== 0) {
                this._addItem(items, (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.convert)(goPort));
            }
            var goPort1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.as)(goPort, _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuPort);
            if (goPort1 == null) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.foreach)(goPort.Links, function (link) {
                    _this.considerLink(link, goPort, s, items);
                });
            }
            else {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.foreach)(goPort1.Links, function (goLink) {
                    _this.considerLink(goLink, goPort, s, items);
                });
            }
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                _this.findAllAux(enumerator, s, items);
            });
        }
    };
    TuNode.findLabel = function (obj) {
        var goText;
        var goText1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuText);
        if (goText1 != null) {
            return goText1;
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuGroup);
        if (goGroups != null) {
            var enumerator = goGroups.GetEnumerator().GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var goText2 = TuNode_1.findLabel(enumerator.Current);
                    if (goText2 == null) {
                        continue;
                    }
                    goText = goText2;
                    return goText;
                }
                return undefined;
            }
            finally {
                enumerator.Dispose();
            }
            return goText;
        }
        return undefined;
    };
    TuNode.prototype.getLinkEnumerator = function (s) {
        return new _TuNodeLinkEnumerator__WEBPACK_IMPORTED_MODULE_3__.TuNodeLinkEnumerator(this, s);
    };
    TuNode.prototype.getNodeEnumerator = function (s) {
        return new _TuNodeNodeEnumerator__WEBPACK_IMPORTED_MODULE_7__.TuNodeNodeEnumerator(this, s);
    };
    TuNode.prototype.getPortEnumerator = function () {
        return new _TuNodePortEnumerator__WEBPACK_IMPORTED_MODULE_10__.TuNodePortEnumerator(this, _TuNodeSearch__WEBPACK_IMPORTED_MODULE_2__.TuNodeSearch.Ports);
    };
    TuNode.prototype.GetToolTip = function (view) {
        return this.ToolTipText;
    };
    TuNode.prototype.moveChildren = function (prevRect) {
        var thisBounds = this.Bounds.clone();
        var left = thisBounds.X - prevRect.X;
        var top = thisBounds.Y - prevRect.Y;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.foreach)(this, function (rectangleF) {
            if (!_tuval_core__WEBPACK_IMPORTED_MODULE_5__.is.typeof(rectangleF, _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuLink)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_5__.CONTINUE;
            }
            var bounds = rectangleF.Bounds.clone();
            rectangleF.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle({ x: bounds.X + left, y: bounds.Y + top, width: bounds.Width, height: bounds.Height });
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.foreach)(this, function (goObject) {
            if (_tuval_core__WEBPACK_IMPORTED_MODULE_5__.is.typeof(goObject, _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuLink)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_5__.CONTINUE;
            }
            var bounds1 = goObject.Bounds.clone();
            goObject.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle({ x: bounds1.X + left, y: bounds1.Y + top, width: bounds1.Width, height: bounds1.Height });
        });
    };
    TuNode.prototype.rescaleChildren = function (prevRect) {
        if (prevRect.Width <= 0 || prevRect.Height <= 0) {
            return;
        }
        var bounds = this.Bounds.clone();
        var width = bounds.Width / prevRect.Width;
        var height = bounds.Height / prevRect.Height;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.foreach)(this, function (rectangleF) {
            if (!_tuval_core__WEBPACK_IMPORTED_MODULE_5__.is.typeof(rectangleF, _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuLink) || !rectangleF.AutoRescales) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_5__.CONTINUE;
            }
            var bounds1 = rectangleF.Bounds.clone();
            var x = bounds.X + (bounds1.X - prevRect.X) * width;
            var y = bounds.Y + (bounds1.Y - prevRect.Y) * height;
            var single = bounds1.Width * width;
            var height1 = bounds1.Height * height;
            rectangleF.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle({ x: x, y: y, width: single, height: height1 });
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.foreach)(this, function (goObject) {
            if (_tuval_core__WEBPACK_IMPORTED_MODULE_5__.is.typeof(goObject, _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuLink) || !goObject.AutoRescales) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_5__.CONTINUE;
            }
            var rectangleF1 = goObject.Bounds.clone();
            var x1 = bounds.X + (rectangleF1.X - prevRect.X) * width;
            var y1 = bounds.Y + (rectangleF1.Y - prevRect.Y) * height;
            var width1 = rectangleF1.Width * width;
            var single1 = rectangleF1.Height * height;
            goObject.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle({ x: x1, y: y1, width: width1, height: single1 });
        });
    };
    var TuNode_1;
    TuNode = TuNode_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_5__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuNode,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuNode,
                _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuNode,
                _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuGraphPart,
                _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuLabeledNode,
                _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuLabeledPart,
                _types__WEBPACK_IMPORTED_MODULE_4__.Types.ITuIdentifiablePart
            ]
        })
    ], TuNode);
    return TuNode;
}(_TuGroup_TuGroup__WEBPACK_IMPORTED_MODULE_6__.TuGroup));



/***/ }),

/***/ "./src/TuNode/TuNodeEvents.ts":
/*!************************************!*\
  !*** ./src/TuNode/TuNodeEvents.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuNodeEvents": () => (/* binding */ TuNodeEvents)
/* harmony export */ });
/* harmony import */ var _TuGroup_TuGroupEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../TuGroup/TuGroupEvents */ "./src/TuGroup/TuGroupEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuNodeEvents = /** @class */ (function (_super) {
    __extends(TuNodeEvents, _super);
    function TuNodeEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuNodeEvents.ChangedNodeUserFlags = 2000;
    TuNodeEvents.ChangedNodeUserObject = 2001;
    TuNodeEvents.ChangedToolTipText = 2002;
    TuNodeEvents.ChangedPropertiesDelegatedToSelectionObject = 2003;
    TuNodeEvents.ChangedPartID = 2004;
    return TuNodeEvents;
}(_TuGroup_TuGroupEvents__WEBPACK_IMPORTED_MODULE_0__.TuGroupEvents));



/***/ }),

/***/ "./src/TuNode/TuNodeLinkEnumerator.ts":
/*!********************************************!*\
  !*** ./src/TuNode/TuNodeLinkEnumerator.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuNodeLinkEnumerator": () => (/* binding */ TuNodeLinkEnumerator)
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuNodeLinkEnumerator = /** @class */ (function (_super) {
    __extends(TuNodeLinkEnumerator, _super);
    function TuNodeLinkEnumerator(n, s) {
        var _this = _super.call(this) || this;
        _this.myIndex = 0;
        _this.isEndless = false;
        _this.myNode = n;
        _this.mySearch = s;
        _this.myArray = undefined;
        _this.myIndex = -1;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuNodeLinkEnumerator.prototype, "Count", {
        get: function () {
            return this.myArray.Count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodeLinkEnumerator.prototype, "Current", {
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.InvalidOperationException("TuNode.TuNodeLinkEnumerator is not at a valid position for the Collection");
            }
            return this.myArray[this.myIndex];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodeLinkEnumerator.prototype, "First", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return undefined;
            }
            return this.myArray[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodeLinkEnumerator.prototype, "Last", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return undefined;
            }
            return this.myArray[this.myArray.Count - 1];
        },
        enumerable: false,
        configurable: true
    });
    TuNodeLinkEnumerator.prototype.GetEnumerator = function () {
        return this;
    };
    TuNodeLinkEnumerator.prototype.MoveNext = function () {
        if (this.myIndex + 1 >= this.myArray.Count) {
            return false;
        }
        this.myIndex = this.myIndex + 1;
        return true;
    };
    TuNodeLinkEnumerator.prototype.Reset = function () {
        this.myArray = this.myNode.findAll(this.mySearch);
        this.myIndex = -1;
    };
    TuNodeLinkEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('tryMoveNext not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeLinkEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('end not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeLinkEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('nextValue not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeLinkEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('next not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeLinkEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('return not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeLinkEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('throw not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeLinkEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuNodeLinkEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuNodeLinkEnumerator,
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IEnumerable,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IIterator
            ]
        })
    ], TuNodeLinkEnumerator);
    return TuNodeLinkEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.DisposableBase));



/***/ }),

/***/ "./src/TuNode/TuNodeNodeEnumerator.ts":
/*!********************************************!*\
  !*** ./src/TuNode/TuNodeNodeEnumerator.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuNodeNodeEnumerator": () => (/* binding */ TuNodeNodeEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuNodeNodeEnumerator = /** @class */ (function (_super) {
    __extends(TuNodeNodeEnumerator, _super);
    function TuNodeNodeEnumerator(n, s) {
        var _this = _super.call(this) || this;
        _this.isEndless = false;
        _this.myNode = n;
        _this.mySearch = s;
        _this.myArray = undefined;
        _this.myIndex = -1;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuNodeNodeEnumerator.prototype, "Count", {
        get: function () {
            return this.myArray.Count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodeNodeEnumerator.prototype, "Current", {
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("TuNode.TuNodeNodeEnumerator is not at a valid position for the List");
            }
            return this.myArray[this.myIndex];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodeNodeEnumerator.prototype, "First", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return undefined;
            }
            return this.myArray[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodeNodeEnumerator.prototype, "Last", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return null;
            }
            return this.myArray[this.myArray.Count - 1];
        },
        enumerable: false,
        configurable: true
    });
    TuNodeNodeEnumerator.prototype.GetEnumerator = function () {
        return this;
    };
    TuNodeNodeEnumerator.prototype.MoveNext = function () {
        if (this.myIndex + 1 >= this.myArray.Count) {
            return false;
        }
        this.myIndex = this.myIndex + 1;
        return true;
    };
    TuNodeNodeEnumerator.prototype.Reset = function () {
        this.myArray = this.myNode.findAll(this.mySearch);
        this.myIndex = -1;
    };
    TuNodeNodeEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('tryMoveNext not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeNodeEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('end not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeNodeEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('nextValue not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeNodeEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('next not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeNodeEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('return not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeNodeEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('throw not implemented in PortFilteredLinkEnumerator');
    };
    TuNodeNodeEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuNodeNodeEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuNodeNodeEnumerator,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IIterator
            ]
        })
    ], TuNodeNodeEnumerator);
    return TuNodeNodeEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));



/***/ }),

/***/ "./src/TuNode/TuNodePortEnumerator.ts":
/*!********************************************!*\
  !*** ./src/TuNode/TuNodePortEnumerator.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuNodePortEnumerator": () => (/* binding */ TuNodePortEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuNodePortEnumerator = /** @class */ (function (_super) {
    __extends(TuNodePortEnumerator, _super);
    function TuNodePortEnumerator(n, s) {
        var _this = _super.call(this) || this;
        _this.isEndless = false;
        _this.myNode = n;
        _this.mySearch = s;
        _this.myArray = undefined;
        _this.myIndex = -1;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuNodePortEnumerator.prototype, "Count", {
        get: function () {
            return this.myArray.Count;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodePortEnumerator.prototype, "Current", {
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("TuNode.TuNodePortEnumerator is not at a valid position for the List");
            }
            return this.myArray[this.myIndex];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodePortEnumerator.prototype, "First", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return undefined;
            }
            return this.myArray[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuNodePortEnumerator.prototype, "Last", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return null;
            }
            return this.myArray[this.myArray.Count - 1];
        },
        enumerable: false,
        configurable: true
    });
    TuNodePortEnumerator.prototype.GetEnumerator = function () {
        return this;
    };
    TuNodePortEnumerator.prototype.MoveNext = function () {
        if (this.myIndex + 1 >= this.myArray.Count) {
            return false;
        }
        this.myIndex = this.myIndex + 1;
        return true;
    };
    TuNodePortEnumerator.prototype.Reset = function () {
        this.myArray = this.myNode.findAll(this.mySearch);
        this.myIndex = -1;
    };
    TuNodePortEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('tryMoveNext not implemented in PortFilteredLinkEnumerator');
    };
    TuNodePortEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('end not implemented in PortFilteredLinkEnumerator');
    };
    TuNodePortEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('nextValue not implemented in PortFilteredLinkEnumerator');
    };
    TuNodePortEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('next not implemented in PortFilteredLinkEnumerator');
    };
    TuNodePortEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('return not implemented in PortFilteredLinkEnumerator');
    };
    TuNodePortEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('throw not implemented in PortFilteredLinkEnumerator');
    };
    TuNodePortEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuNodePortEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuNodePortEnumerator,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IIterator
            ]
        })
    ], TuNodePortEnumerator);
    return TuNodePortEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));



/***/ }),

/***/ "./src/TuNode/TuNodeSearch.ts":
/*!************************************!*\
  !*** ./src/TuNode/TuNodeSearch.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuNodeSearch": () => (/* binding */ TuNodeSearch)
/* harmony export */ });
var TuNodeSearch;
(function (TuNodeSearch) {
    TuNodeSearch[TuNodeSearch["Ports"] = 1] = "Ports";
    TuNodeSearch[TuNodeSearch["LinksIn"] = 2] = "LinksIn";
    TuNodeSearch[TuNodeSearch["LinksOut"] = 4] = "LinksOut";
    TuNodeSearch[TuNodeSearch["NodesIn"] = 8] = "NodesIn";
    TuNodeSearch[TuNodeSearch["NodesOut"] = 16] = "NodesOut";
    TuNodeSearch[TuNodeSearch["NotSelf"] = 32] = "NotSelf";
})(TuNodeSearch || (TuNodeSearch = {}));


/***/ }),

/***/ "./src/TuObjectEnterLeaveEventArgs.ts":
/*!********************************************!*\
  !*** ./src/TuObjectEnterLeaveEventArgs.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuObjectEnterLeaveEventArgs": () => (/* binding */ TuObjectEnterLeaveEventArgs)
/* harmony export */ });
/* harmony import */ var _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuInputEventArgs */ "./src/TuInputEventArgs.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuObjectEnterLeaveEventArgs = /** @class */ (function (_super) {
    __extends(TuObjectEnterLeaveEventArgs, _super);
    function TuObjectEnterLeaveEventArgs(from, to, evt) {
        var _this = _super.call(this, evt) || this;
        _this.myFrom = from;
        _this.myTo = to;
        return _this;
    }
    Object.defineProperty(TuObjectEnterLeaveEventArgs.prototype, "From", {
        get: function () {
            return this.myFrom;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuObjectEnterLeaveEventArgs.prototype, "To", {
        get: function () {
            return this.myTo;
        },
        enumerable: false,
        configurable: true
    });
    return TuObjectEnterLeaveEventArgs;
}(_TuInputEventArgs__WEBPACK_IMPORTED_MODULE_0__.TuInputEventArgs));



/***/ }),

/***/ "./src/TuObjectEvents.ts":
/*!*******************************!*\
  !*** ./src/TuObjectEvents.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuObjectEvents": () => (/* binding */ TuObjectEvents)
/* harmony export */ });
var TuObjectEvents = /** @class */ (function () {
    function TuObjectEvents() {
    }
    TuObjectEvents.ChangedBounds = 1001;
    TuObjectEvents.ChangedVisible = 1003;
    TuObjectEvents.ChangedSelectable = 1004;
    TuObjectEvents.ChangedMovable = 1005;
    TuObjectEvents.ChangedCopyable = 1006;
    TuObjectEvents.ChangedResizable = 1007;
    TuObjectEvents.ChangedReshapable = 1008;
    TuObjectEvents.ChangedDeletable = 1009;
    TuObjectEvents.ChangedEditable = 1010;
    TuObjectEvents.ChangedAutoRescales = 1011;
    TuObjectEvents.ChangedResizesRealtime = 1012;
    TuObjectEvents.ChangedShadowed = 1013;
    TuObjectEvents.ChangedAddedObserver = 1014;
    TuObjectEvents.ChangedRemovedObserver = 1015;
    TuObjectEvents.ChangedDragsNode = 1016;
    TuObjectEvents.ChangedPrintable = 1017;
    TuObjectEvents.ChangedInitializing = 1041;
    TuObjectEvents[1001] = 'ChangedBounds';
    TuObjectEvents[1003] = 'ChangedVisible';
    TuObjectEvents[1004] = 'ChangedSelectable';
    TuObjectEvents[1005] = 'ChangedMovable';
    TuObjectEvents[1006] = 'ChangedCopyable';
    TuObjectEvents[1007] = 'ChangedResizable';
    TuObjectEvents[1008] = 'ChangedReshapable';
    TuObjectEvents[1009] = 'ChangedDeletable';
    TuObjectEvents[1010] = 'ChangedEditable';
    TuObjectEvents[1011] = 'ChangedAutoRescales';
    TuObjectEvents[1012] = 'ChangedResizesRealtime';
    TuObjectEvents[1013] = 'ChangedShadowed';
    TuObjectEvents[1014] = 'ChangedAddedObserver';
    TuObjectEvents[1015] = 'ChangedRemovedObserver';
    TuObjectEvents[1016] = 'ChangedDragsNode';
    TuObjectEvents[1017] = 'ChangedPrintable';
    TuObjectEvents[1041] = 'ChangedInitializing';
    return TuObjectEvents;
}());



/***/ }),

/***/ "./src/TuObject/TuObject.ts":
/*!**********************************!*\
  !*** ./src/TuObject/TuObject.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuObject": () => (/* binding */ TuObject)
/* harmony export */ });
/* harmony import */ var _Xml_TuObjectSvgRenderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../Xml/TuObjectSvgRenderer */ "./src/Xml/TuObjectSvgRenderer.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../Spot */ "./src/Spot.ts");
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuCopyDictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../TuCopyDictionary */ "./src/TuCopyDictionary.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../Globals */ "./src/Globals.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TuObjectEvents */ "./src/TuObjectEvents.ts");
/* harmony import */ var _TuCollection_TuCollectionEnumerator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../TuCollection/TuCollectionEnumerator */ "./src/TuCollection/TuCollectionEnumerator.ts");
/* harmony import */ var _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuView/ViewRenderingMode */ "./src/TuView/ViewRenderingMode.ts");
/* harmony import */ var _Xml_TuObjectHtmlRenderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../Xml/TuObjectHtmlRenderer */ "./src/Xml/TuObjectHtmlRenderer.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};














/* internal */ var flagVisible = 1;
/* internal */ var flagSelectable = 2;
/* internal */ var flagMovable = 4;
/* internal */ var flagCopyable = 8;
/* internal */ var flagResizable = 16;
/* internal */ var flagReshapable = 32;
/* internal */ var flagDeletable = 64;
/* internal */ var flagEditable = 128;
/* internal */ var flagAutoRescales = 256;
/* internal */ var flagResizesRealtime = 512;
/* internal */ var flagShadowed = 1024;
/* internal */ var flagDragsNode = 2048;
/* internal */ var flagSuspendsUpdates = 4096;
/* internal */ var flagSkipsUndoManager = 8192;
/* internal */ var flagSkipsBoundsChanged = 16384;
/* internal */ var flagInvalidBounds = 32768;
/* internal */ var flagBeingRemoved = 65536;
/* internal */ var flagInitializing = 131072;
/* internal */ var flagReserved1 = 262144;
/* internal */ var flagPrintable = 524288;
/* internal */ var flagObject1 = 1048576;
/* internal */ var flagObject2 = 2097152;
/* internal */ var flagObject3 = 4194304;
/* internal */ var flagObject4 = 8388608;
/* internal */ var flagObject5 = 16777216;
/* internal */ var flagObject6 = 33554432;
/* internal */ var flagObject7 = 67108864;
/* internal */ var flagObject8 = 134217728;
/* internal */ var flagObject9 = 268435456;
/* internal */ var flagObject10 = 536870912;
/* internal */ var flagObject11 = 1073741824;
var TuObject = /** @class */ (function (_super) {
    __extends(TuObject, _super);
    function TuObject() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuObject.prototype.SetupControlDefaults = function () {
        _super.prototype.SetupControlDefaults.call(this);
        this.mySvgRenderer = new _Xml_TuObjectSvgRenderer__WEBPACK_IMPORTED_MODULE_0__.TuObjectSvgRenderer();
        this.myHtmlRenderer = new _Xml_TuObjectHtmlRenderer__WEBPACK_IMPORTED_MODULE_13__.TuObjectHtmlRenderer();
        this.myBounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGRectangle(0, 0, 10, 10);
        this.myInternalFlags = 524671;
        this.my$BoundsChanged = new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.Event();
    };
    Object.defineProperty(TuObject.prototype, "SvgRenderer", {
        get: function () {
            return this.mySvgRenderer;
        },
        set: function (value) {
            this.mySvgRenderer = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuObject.prototype, "HtmlRenderer", {
        get: function () {
            return this.myHtmlRenderer;
        },
        set: function (value) {
            this.myHtmlRenderer = value;
        },
        enumerable: false,
        configurable: true
    });
    TuObject.prototype.CreateElements = function (param) {
        var view = param;
        /*    if (view.RenderingMode === ViewRenderingMode.Svg && this.myCachedSvgNode != null) {
               return this.myCachedSvgNode;
           } else if (view.RenderingMode === ViewRenderingMode.Html && this.myCachedHtmlNode != null) {
               const cloned = React.cloneElement(this.myCachedHtmlNode);
               return cloned;
           } */
        var result = [];
        if (view.RenderingMode === _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_12__.ViewRenderingMode.Svg) {
            if (this.SvgRenderer != null) {
                this.SvgRenderer.Render(result, view, this);
                this.myCachedSvgNode = result;
            }
            else {
                console.log('Renderer is null.');
            }
        }
        else if (view.RenderingMode === _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_12__.ViewRenderingMode.Html) {
            if (this.HtmlRenderer != null) {
                this.BeginUpdate();
                this.HtmlRenderer.Render(result, view, this);
                this.myCachedHtmlNode = result;
                this.EndUpdate();
            }
            else {
                console.log('HTML Renderer is null.');
            }
        }
        return result;
    };
    Object.defineProperty(TuObject.prototype, "AutoRescales", {
        //#region [Property] AutoRescales
        get: function () {
            return this.getAutoRescales();
        },
        set: function (value) {
            this.setAutoRescales(value);
        },
        enumerable: false,
        configurable: true
    });
    TuObject.prototype.getAutoRescales = function () {
        return (this.InternalFlags & flagAutoRescales) !== 0;
    };
    TuObject.prototype.setAutoRescales = function (value) {
        var internalFlags = (this.InternalFlags & flagAutoRescales) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & -257;
            }
            else {
                this.InternalFlags = this.InternalFlags | 256;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedAutoRescales, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "BeingRemoved", {
        //#endregion
        //#region [Property] BeingRemoved
        get: function () {
            return (this.InternalFlags & flagBeingRemoved) !== 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuObject.prototype, "Bottom", {
        //#endregion
        //#region [Property] Bottom
        get: function () {
            return this.getBottom();
        },
        set: function (value) {
            this.setBottom(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getBottom = function () {
        var bounds = this.Bounds.clone();
        return bounds.Y + bounds.Height;
    };
    /**
     * @hidden
     * @param value
     */
    TuObject.prototype.setBottom = function (value) {
        var bounds = this.Bounds.clone();
        bounds.Y = bounds.Y + (value - (bounds.Y + bounds.Height));
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "Bounds", {
        //#endregion
        //#region [Property] Bounds
        get: function () {
            return this.getBounds();
        },
        set: function (value) {
            this.setBounds(value);
        },
        enumerable: false,
        configurable: true
    });
    TuObject.prototype.getBounds = function () {
        if (this.InvalidBounds && !this.SkipsBoundsChanged) {
            this.InvalidBounds = false;
            this.SkipsBoundsChanged = true;
            this.Bounds = this.ComputeBounds();
            this.SkipsBoundsChanged = false;
        }
        return this.myBounds.clone();
    };
    TuObject.prototype.setBounds = function (value) {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_8__.is.typeof(this, _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuStroke)) {
            var a = '';
        }
        var rectangleF = this.myBounds.clone();
        if (value.Width >= 0 && value.Height >= 0 && !rectangleF.Equals(value)) {
            this.myBounds = value.clone();
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedBounds, 0, null, rectangleF, 0, null, value.clone());
            if (!this.SkipsBoundsChanged && !this.Initializing) {
                this.SkipsBoundsChanged = true;
                this.onBoundsChangedInternal(rectangleF.clone());
                if (this.InvalidBounds) {
                    this.InvalidBounds = false;
                    this.Bounds = this.ComputeBounds();
                }
            }
            this.SkipsBoundsChanged = false;
            var parent_1 = this.Parent;
            if (parent_1 != null) {
                parent_1.invalidatePaintBounds();
                if (!parent_1.SkipsBoundsChanged && !parent_1.Initializing && !this.Initializing) {
                    parent_1.SkipsBoundsChanged = true;
                    // TODO: Observable ekle
                    parent_1.onChildBoundsChanged(this, rectangleF);
                    if (parent_1.InvalidBounds) {
                        parent_1.InvalidBounds = false;
                        var goGroups = parent_1;
                        goGroups.Bounds = goGroups.computeBounds();
                    }
                    parent_1.SkipsBoundsChanged = false;
                }
            }
        }
    };
    Object.defineProperty(TuObject.prototype, "Center", {
        //#endregion
        //#region [Property] Center
        get: function () {
            return this.getCenter();
        },
        set: function (value) {
            this.setCenter(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getCenter = function () {
        var bounds = this.Bounds;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(bounds.X + bounds.Width / 2, bounds.Y + bounds.Height / 2);
    };
    /**
     * @hidden
     * @param value
     */
    TuObject.prototype.setCenter = function (value) {
        var bounds = this.Bounds;
        bounds.X = value.X - bounds.Width / 2;
        bounds.Y = value.Y - bounds.Height / 2;
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "Copyable", {
        //#endregion
        //#region [Property] Copyable
        get: function () {
            return this.getCopyable();
        },
        set: function (value) {
            this.setCopyable(value);
        },
        enumerable: false,
        configurable: true
    });
    TuObject.prototype.getCopyable = function () {
        return (this.InternalFlags & flagCopyable) !== 0;
    };
    TuObject.prototype.setCopyable = function (value) {
        var internalFlags = (this.InternalFlags & flagCopyable) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagCopyable;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagCopyable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedCopyable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Deletable", {
        //#endregion
        //#region [Property] Deletable
        get: function () {
            return this.getDeletable();
        },
        set: function (value) {
            this.setDeletable(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getDeletable = function () {
        return (this.InternalFlags & flagDeletable) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setDeletable = function (value) {
        var internalFlags = (this.InternalFlags & flagDeletable) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & -65;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagDeletable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedDeletable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Document", {
        //#endregion
        //#region [Property] Document
        get: function () {
            return this.getDocument();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getDocument = function () {
        var layer = this.Layer;
        if (!layer) {
            return undefined;
        }
        return layer.Document;
    };
    Object.defineProperty(TuObject.prototype, "DraggingObject", {
        //#endregion
        //#region [Property] Document
        get: function () {
            return this.getDraggingObject();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getDraggingObject = function () {
        if (this.DragsNode) {
            for (var i = this.Parent; i != null; i = i.Parent) {
                if (_tuval_core__WEBPACK_IMPORTED_MODULE_8__.is.typeof(i, _types__WEBPACK_IMPORTED_MODULE_9__.Types.ITuNode)) {
                    return i;
                }
                if (i.Parent == null) {
                    return i;
                }
            }
        }
        return this;
    };
    Object.defineProperty(TuObject.prototype, "DragsNode", {
        //#endregion
        //#region [Property] DragsNode
        get: function () {
            return this.getDragsNode();
        },
        set: function (value) {
            this.setDragsNode(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getDragsNode = function () {
        return (this.InternalFlags & flagDragsNode) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setDragsNode = function (value) {
        var internalFlags = (this.InternalFlags & flagDragsNode) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & -2049;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagDragsNode;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedDragsNode, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Editable", {
        //#endregion
        //#region [Property] Editable
        get: function () {
            return this.getEditable();
        },
        set: function (value) {
            this.setEditable(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getEditable = function () {
        return (this.InternalFlags & flagEditable) != 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setEditable = function (value) {
        var internalFlags = (this.InternalFlags & flagEditable) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & -129;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagEditable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedEditable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Editor", {
        //#endregion
        //#region [Property] Editor
        get: function () {
            return this.getEditor();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getEditor = function () {
        return undefined;
    };
    Object.defineProperty(TuObject.prototype, "Height", {
        //#endregion
        //#region [Property] Height
        get: function () {
            return this.getHeight();
        },
        set: function (value) {
            this.setHeight(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getHeight = function () {
        return this.Bounds.Height;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setHeight = function (value) {
        var bounds = this.Bounds;
        bounds.Height = value;
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "Initializing", {
        //#endregion
        //#region [Property] Initializing
        get: function () {
            return this.getInitializing();
        },
        set: function (value) {
            this.setInitializing(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getInitializing = function () {
        return (this.InternalFlags & flagInitializing) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setInitializing = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagInitializing;
            return;
        }
        this.InternalFlags = this.InternalFlags & -131073;
    };
    Object.defineProperty(TuObject.prototype, "InternalFlags", {
        //#endregion
        //#region [Property] InternalFlags
        get: function () {
            return this.myInternalFlags;
        },
        set: function (value) {
            this.myInternalFlags = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuObject.prototype, "InvalidBounds", {
        //#endregion
        //#region [Property] InvalidBounds
        get: function () {
            return this.getInvalidBounds();
        },
        set: function (value) {
            this.setInvalidBounds(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getInvalidBounds = function () {
        return (this.InternalFlags & flagInvalidBounds) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setInvalidBounds = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagInvalidBounds;
            return;
        }
        this.InternalFlags = this.InternalFlags & -32769;
    };
    Object.defineProperty(TuObject.prototype, "IsInDocument", {
        //#endregion
        //#region [Property] IsInDocument
        get: function () {
            return this.getIsInDocument();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getIsInDocument = function () {
        var layer = this.Layer;
        if (layer == null) {
            return false;
        }
        return layer.IsInDocument;
    };
    Object.defineProperty(TuObject.prototype, "IsInView", {
        //#endregion
        //#region [Property] IsInView
        get: function () {
            return this.getIsInView();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getIsInView = function () {
        var layer = this.Layer;
        if (layer == null) {
            return false;
        }
        return layer.IsInView;
    };
    Object.defineProperty(TuObject.prototype, "IsTopLevel", {
        //#endregion
        //#region [Property] IsTopLevel
        get: function () {
            return this.getIsInView();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getIsTopLevel = function () {
        return this.myParent == null;
    };
    Object.defineProperty(TuObject.prototype, "Layer", {
        //#endregion
        //#region [Property] Layer
        get: function () {
            return this.getLayer();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getLayer = function () {
        return this.myLayer;
    };
    Object.defineProperty(TuObject.prototype, "LayerIndex", {
        //#endregion
        //#region [Property] LayerIndex
        get: function () {
            return this.getLayerIndex();
        },
        set: function (value) {
            this.setLayerIndex(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getLayerIndex = function () {
        return this.myLayerIndex;
    };
    TuObject.prototype.setLayerIndex = function (value) {
        return this.myLayerIndex = value;
    };
    Object.defineProperty(TuObject.prototype, "Left", {
        //#endregion
        //#region [Property] Left
        get: function () {
            return this.getLeft();
        },
        set: function (value) {
            this.setLeft(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getLeft = function () {
        return this.Bounds.X;
    };
    /**
     * @hidden
     * @param value
     */
    TuObject.prototype.setLeft = function (value) {
        var bounds = this.Bounds.clone();
        bounds.X = value;
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "Location", {
        //#endregion
        //#region [Property] Location
        get: function () {
            return this.getLocation();
        },
        set: function (value) {
            this.setLocation(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getLocation = function () {
        return this.Position.clone();
    };
    /**
     * @hidden
     * @param value
     */
    TuObject.prototype.setLocation = function (value) {
        this.Position = value.clone();
    };
    Object.defineProperty(TuObject.prototype, "Movable", {
        //#endregion
        //#region [Property] Movable
        get: function () {
            return this.getMovable();
        },
        set: function (value) {
            this.setMovable(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getMovable = function () {
        return (this.InternalFlags & 4) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setMovable = function (value) {
        var internalFlags = (this.InternalFlags & flagMovable) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & -5;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagMovable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedMovable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Observers", {
        //#endregion
        //#region [Property] Observers
        get: function () {
            return this.getObservers();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getObservers = function () {
        if (this.myObservers == null) {
            return _TuCollection_TuCollectionEnumerator__WEBPACK_IMPORTED_MODULE_11__.TuCollectionEnumerator.Empty;
        }
        return this.myObservers.GetEnumerator();
    };
    Object.defineProperty(TuObject.prototype, "Parent", {
        //#endregion
        //#region [Property] Parent
        get: function () {
            return this.getParent();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getParent = function () {
        return this.myParent;
    };
    Object.defineProperty(TuObject.prototype, "ParentNode", {
        //#endregion
        //#region [Property] Parent
        get: function () {
            return this.getParentNode();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getParentNode = function () {
        // TODO: implement in the TuSubGraphBase
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.NotImplementedException('TuObject.getParentNode not implemented. TuSubGraphBase must implement this.');
    };
    Object.defineProperty(TuObject.prototype, "Position", {
        //#endregion
        //#region [Property] Position
        get: function () {
            return this.getPosition();
        },
        set: function (value) {
            this.setPosition(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getPosition = function () {
        var bounds = this.Bounds;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(bounds.X, bounds.Y);
    };
    /**
     * @hidden
     * @param value
     */
    TuObject.prototype.setPosition = function (value) {
        var bounds = this.Bounds;
        bounds.X = value.X;
        bounds.Y = value.Y;
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "Printable", {
        //#endregion
        //#region [Property] Printable
        get: function () {
            return this.getPrintable();
        },
        set: function (value) {
            this.setPrintable(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getPrintable = function () {
        return (this.InternalFlags & flagPrintable) != 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setPrintable = function (value) {
        var internalFlags = (this.InternalFlags & flagPrintable) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagPrintable;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagPrintable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedPrintable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Reshapable", {
        //#endregion
        //#region [Property] Reshapable
        get: function () {
            return this.getReshapable();
        },
        set: function (value) {
            this.setReshapable(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getReshapable = function () {
        return (this.InternalFlags & flagReshapable) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setReshapable = function (value) {
        var internalFlags = (this.InternalFlags & flagReshapable) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagReshapable;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagReshapable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedReshapable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Resizable", {
        //#endregion
        //#region [Property] Resizable
        get: function () {
            return this.getResizable();
        },
        set: function (value) {
            this.setResizable(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getResizable = function () {
        return (this.InternalFlags & flagResizable) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setResizable = function (value) {
        var internalFlags = (this.InternalFlags & flagResizable) != 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagResizable;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagResizable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedResizable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "ResizesRealtime", {
        //#endregion
        //#region [Property] ResizesRealtime
        get: function () {
            return this.getResizesRealtime();
        },
        set: function (value) {
            this.setResizesRealtime(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getResizesRealtime = function () {
        return (this.InternalFlags & flagResizesRealtime) != 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setResizesRealtime = function (value) {
        var internalFlags = (this.InternalFlags & flagResizesRealtime) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagResizesRealtime;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagResizesRealtime;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedResizesRealtime, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Right", {
        //#endregion
        //#region [Property] Right
        get: function () {
            return this.getRight();
        },
        set: function (value) {
            this.setRight(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getRight = function () {
        var bounds = this.Bounds.clone();
        return bounds.X + bounds.Width;
    };
    /**
     * @hidden
     * @param value
     */
    TuObject.prototype.setRight = function (value) {
        var bounds = this.Bounds.clone();
        bounds.X = bounds.X + (value - (bounds.X + bounds.Width));
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "Selectable", {
        //#endregion
        //#region [Property] Selectable
        get: function () {
            return this.getSelectable();
        },
        set: function (value) {
            this.setSelectable(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getSelectable = function () {
        return (this.InternalFlags & flagSelectable) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setSelectable = function (value) {
        var internalFlags = (this.InternalFlags & flagSelectable) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagSelectable;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagSelectable;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedSelectable, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "SelectionObject", {
        //#endregion
        //#region [Property] SelectionObject
        get: function () {
            return this.getSelectionObject();
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getSelectionObject = function () {
        return this;
    };
    Object.defineProperty(TuObject.prototype, "Shadowed", {
        //#endregion
        //#region [Property] Shadowed
        get: function () {
            return this.getShadowed();
        },
        set: function (value) {
            this.setShadowed(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getShadowed = function () {
        return (this.InternalFlags & flagShadowed) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setShadowed = function (value) {
        var internalFlags = (this.InternalFlags & flagShadowed) != 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagShadowed;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagShadowed;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedShadowed, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
            if (this.Parent != null) {
                this.Parent.invalidatePaintBounds();
            }
        }
    };
    Object.defineProperty(TuObject.prototype, "Size", {
        //#endregion
        //#region [Property] Size
        get: function () {
            return this.getSize();
        },
        set: function (value) {
            this.setSize(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getSize = function () {
        var bounds = this.Bounds;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGSize(bounds.Width, bounds.Height);
    };
    /**
    * @hidden
    */
    TuObject.prototype.setSize = function (value) {
        var bounds = this.Bounds;
        bounds.Width = value.Width;
        bounds.Height = value.Height;
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "SkipsBoundsChanged", {
        //#endregion
        //#region [Property] SkipsBoundsChanged
        get: function () {
            return this.getSkipsBoundsChanged();
        },
        set: function (value) {
            this.setSkipsBoundsChanged(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getSkipsBoundsChanged = function () {
        return (this.InternalFlags & flagSkipsBoundsChanged) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setSkipsBoundsChanged = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagSkipsBoundsChanged;
            return;
        }
        this.InternalFlags = this.InternalFlags & ~flagSkipsBoundsChanged;
    };
    Object.defineProperty(TuObject.prototype, "SkipsUndoManager", {
        //#endregion
        //#region [Property] SkipsUndoManager
        get: function () {
            return this.getSkipsUndoManager();
        },
        set: function (value) {
            this.setSkipsUndoManager(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getSkipsUndoManager = function () {
        return (this.InternalFlags & flagSkipsUndoManager) != 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setSkipsUndoManager = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagSkipsUndoManager;
            return;
        }
        this.InternalFlags = this.InternalFlags & ~flagSkipsUndoManager;
    };
    Object.defineProperty(TuObject.prototype, "SuspendsUpdates", {
        //#endregion
        //#region [Property] SuspendsUpdates
        get: function () {
            return this.getSuspendsUpdates();
        },
        set: function (value) {
            this.setSuspendsUpdates(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getSuspendsUpdates = function () {
        return (this.InternalFlags & flagSuspendsUpdates) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setSuspendsUpdates = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagSuspendsUpdates;
            return;
        }
        this.InternalFlags = this.InternalFlags & ~flagSuspendsUpdates;
    };
    Object.defineProperty(TuObject.prototype, "Top", {
        //#endregion
        //#region [Property] Top
        get: function () {
            return this.getTop();
        },
        set: function (value) {
            this.setTop(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getTop = function () {
        return this.Bounds.Y;
    };
    /**
     * @hidden
     * @param value
     */
    TuObject.prototype.setTop = function (value) {
        var bounds = this.Bounds.clone();
        bounds.Y = value;
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "TopLevelObject", {
        //#endregion
        //#region [Property] TopLevelObject
        get: function () {
            return this.getTopLevelObject();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getTopLevelObject = function () {
        var parent = this;
        while (parent.Parent != null) {
            parent = parent.Parent;
        }
        return parent;
    };
    Object.defineProperty(TuObject.prototype, "View", {
        //#endregion
        //#region [Property] View
        get: function () {
            return this.getView();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuObject.prototype.getView = function () {
        var layer = this.Layer;
        if (layer == null) {
            return null;
        }
        return layer.View;
    };
    Object.defineProperty(TuObject.prototype, "Visible", {
        //#endregion
        //#region [Property] Visible
        get: function () {
            return this.getVisible();
        },
        set: function (value) {
            this.setVisible(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getVisible = function () {
        return (this.InternalFlags & flagVisible) !== 0;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setVisible = function (value) {
        var internalFlags = (this.InternalFlags & flagVisible) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagVisible;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagVisible;
            }
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedVisible, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    Object.defineProperty(TuObject.prototype, "Width", {
        //#endregion
        //#region [Property] Width
        get: function () {
            return this.getWidth();
        },
        set: function (value) {
            this.setWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuObject.prototype.getWidth = function () {
        return this.Bounds.Width;
    };
    /**
    * @hidden
    */
    TuObject.prototype.setWidth = function (value) {
        var bounds = this.Bounds;
        bounds.Width = value;
        this.Bounds = bounds;
    };
    Object.defineProperty(TuObject.prototype, "BoundsChanged$", {
        //#endregion
        //#region [Property] BoundsChanged$
        get: function () {
            return this.getBoundsChanged$();
        },
        set: function (value) {
            this.setBoundsChanged$(value);
        },
        enumerable: false,
        configurable: true
    });
    TuObject.prototype.getBoundsChanged$ = function () {
        return this.my$BoundsChanged;
    };
    TuObject.prototype.setBoundsChanged$ = function (value) {
        this.my$BoundsChanged = value;
    };
    //#endregion
    TuObject.prototype.AddObserver = function (obj) {
        // TODO: implement in the TuCollection
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.NotImplementedException('TuObject.addObserver not implemented. TuCollection must implement this.');
    };
    TuObject.prototype.AddSelectionHandles = function (sel, selectedObj) {
        this.RemoveSelectionHandles(sel);
        var view = sel.View;
        var flag = (view == null ? true : view.CanResizeObjects());
        var flag1 = (view == null ? true : view.CanReshapeObjects());
        if (!this.CanResize() || !flag) {
            sel.createBoundingHandle(this, selectedObj);
            return;
        }
        var bounds = this.Bounds;
        var x = bounds.X;
        var single = bounds.X + bounds.Width / 2;
        var x1 = bounds.X + bounds.Width;
        var y = bounds.Y;
        var y1 = bounds.Y + bounds.Height / 2;
        var single1 = bounds.Y + bounds.Height;
        sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(x, y), 2, true);
        sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(x1, y), 4, true);
        sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(x1, single1), 8, true);
        sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(x, single1), 16, true);
        if (this.CanReshape() && flag1) {
            sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(single, y), 32, true);
            sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(x1, y1), 64, true);
            sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(single, single1), 128, true);
            sel.createResizeHandle(this, selectedObj, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(x, y1), 256, true);
        }
    };
    TuObject.prototype.CanCopy = function () {
        if (!this.Copyable) {
            return false;
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanCopyObjects();
    };
    TuObject.prototype.CanDelete = function () {
        if (!this.Deletable) {
            return false;
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanDeleteObjects();
    };
    TuObject.prototype.CanEdit = function () {
        if (!this.Editable) {
            return false;
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanEditObjects();
    };
    TuObject.prototype.canMove = function () {
        if (!this.Movable) {
            return false;
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanMoveObjects();
    };
    TuObject.prototype.CanPrint = function () {
        if (!this.Printable) {
            return false;
        }
        if (this.Parent != null) {
            return this.Parent.CanPrint();
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanPrintObjects();
    };
    TuObject.prototype.CanReshape = function () {
        if (!this.Reshapable) {
            return false;
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanReshapeObjects();
    };
    TuObject.prototype.CanResize = function () {
        if (!this.Resizable) {
            return false;
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanResizeObjects();
    };
    TuObject.prototype.CanSelect = function () {
        if (!this.Selectable) {
            return false;
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanSelectObjects();
    };
    TuObject.prototype.CanView = function () {
        if (!this.Visible) {
            return false;
        }
        if (this.Parent != null) {
            return this.Parent.CanView();
        }
        if (this.Layer == null) {
            return true;
        }
        return this.Layer.CanViewObjects();
    };
    TuObject.prototype.Changed = function (subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
        if (this.SuspendsUpdates) {
            return;
        }
        this.myCachedHtmlNode = null;
        this.myCachedSvgNode = null;
        if (this.InvalidBounds) {
            var bounds = this.Bounds;
        }
        var layer = this.Layer;
        if (layer != null) {
            var layerCollectionContainer = layer.LayerCollectionContainer;
            if (layerCollectionContainer != null) {
                layerCollectionContainer.RaiseChanged(901, subhint, this, oldI, oldVal, oldRect, newI, newVal, newRect);
            }
        }
        if (this.myObservers != null) {
            var goObjectArray = this.myObservers.CopyArray();
            for (var i = 0; i < goObjectArray.length; i++) {
                goObjectArray[i].OnObservedChanged(this, subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
            }
        }
    };
    TuObject.prototype.ChangeValue = function (e, undo) {
        var subHint = e.SubHint;
        switch (subHint) {
            case 1000:
                {
                    return;
                }
            case 1001:
                {
                    this.Bounds = e.getRect(undo);
                    return;
                }
            case 1002:
                {
                    subHint = e.SubHint;
                    throw new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.ArgumentException(_tuval_core__WEBPACK_IMPORTED_MODULE_8__.TString.Concat("Unknown TuChangedEventArgs.SubHint--override TuObject.ChangeValue to handle the case: ", subHint.toString()));
                }
            case 1003:
                {
                    this.Visible = e.getValue(undo);
                    return;
                }
            case 1004:
                {
                    this.Selectable = e.getValue(undo);
                    return;
                }
            case 1005:
                {
                    this.Movable = e.getValue(undo);
                    return;
                }
            case 1006:
                {
                    this.Copyable = e.getValue(undo);
                    return;
                }
            case 1007:
                {
                    this.Resizable = e.getValue(undo);
                    return;
                }
            case 1008:
                {
                    this.Reshapable = e.getValue(undo);
                    return;
                }
            case 1009:
                {
                    this.Deletable = e.getValue(undo);
                    return;
                }
            case 1010:
                {
                    this.Editable = e.getValue(undo);
                    return;
                }
            case 1011:
                {
                    this.AutoRescales = e.getValue(undo);
                    return;
                }
            case 1012:
                {
                    this.ResizesRealtime = e.getValue(undo);
                    return;
                }
            case 1013:
                {
                    this.Shadowed = e.getValue(undo);
                    return;
                }
            case 1014:
                {
                    var newValue = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.as)(e.NewValue, _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuObject);
                    if (undo) {
                        this.removeObserver(newValue);
                        return;
                    }
                    this.AddObserver(newValue);
                    return;
                }
            case 1015:
                {
                    var oldValue = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.as)(e.OldValue, _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuObject);
                    if (undo) {
                        this.AddObserver(oldValue);
                        return;
                    }
                    this.removeObserver(oldValue);
                    return;
                }
            case 1016:
                {
                    this.DragsNode = e.getValue(undo);
                    return;
                }
            case 1017:
                {
                    this.Printable = e.getValue(undo);
                    return;
                }
            default:
                {
                    if (subHint === 1041) {
                        this.Initializing = e.getValue(undo);
                        return;
                    }
                    subHint = e.SubHint;
                    throw new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.ArgumentException(_tuval_core__WEBPACK_IMPORTED_MODULE_8__.TString.Concat("Unknown TuChangedEventArgs.SubHint--override TuObject.ChangeValue to handle the case: ", subHint.toString()));
                }
        }
    };
    TuObject.prototype.Changing = function (subhint) {
        if (this.SuspendsUpdates) {
            return;
        }
        var document = this.Document;
        if (document != null) {
            document.RaiseChanging(901, subhint, this);
        }
    };
    TuObject.prototype.ComputeBounds = function () {
        return this.Bounds;
    };
    TuObject.prototype.ComputeMove = function (origLoc, newLoc) {
        return newLoc;
    };
    TuObject.prototype.ComputeResize = function (origRect, newPoint, handle, min, max, reshape) {
        var x = origRect.X;
        var y = origRect.Y;
        var single = origRect.X + origRect.Width;
        var y1 = origRect.Y + origRect.Height;
        var single1 = 1;
        if (!reshape) {
            var width = origRect.Width;
            var height = origRect.Height;
            if (width <= 0) {
                width = 1;
            }
            if (height <= 0) {
                height = 1;
            }
            single1 = height / width;
        }
        var rectangleF = origRect.clone();
        if (handle <= 16) {
            if (handle <= 4) {
                if (handle === 2) {
                    rectangleF.X = Math.max(newPoint.X, single - max.Width);
                    rectangleF.X = Math.min(rectangleF.X, single - min.Width);
                    rectangleF.Width = single - rectangleF.X;
                    if (rectangleF.Width <= 0) {
                        rectangleF.Width = 1;
                    }
                    rectangleF.Y = Math.max(newPoint.Y, y1 - max.Height);
                    rectangleF.Y = Math.min(rectangleF.Y, y1 - min.Height);
                    rectangleF.Height = y1 - rectangleF.Y;
                    if (rectangleF.Height <= 0) {
                        rectangleF.Height = 1;
                    }
                    if (!reshape) {
                        if (single1 >= rectangleF.Height / rectangleF.Width) {
                            rectangleF.Width = rectangleF.Height / single1;
                            rectangleF.X = single - rectangleF.Width;
                        }
                        else {
                            rectangleF.Height = single1 * rectangleF.Width;
                            rectangleF.Y = y1 - rectangleF.Height;
                        }
                    }
                }
                else if (handle === 4) {
                    rectangleF.Width = Math.min(newPoint.X - x, max.Width);
                    rectangleF.Width = Math.max(rectangleF.Width, min.Width);
                    rectangleF.Y = Math.max(newPoint.Y, y1 - max.Height);
                    rectangleF.Y = Math.min(rectangleF.Y, y1 - min.Height);
                    rectangleF.Height = y1 - rectangleF.Y;
                    if (rectangleF.Height <= 0) {
                        rectangleF.Height = 1;
                    }
                    if (!reshape) {
                        if (single1 >= rectangleF.Height / rectangleF.Width) {
                            rectangleF.Width = rectangleF.Height / single1;
                        }
                        else {
                            rectangleF.Height = single1 * rectangleF.Width;
                            rectangleF.Y = y1 - rectangleF.Height;
                        }
                    }
                }
            }
            else if (handle === 8) {
                rectangleF.Width = Math.min(newPoint.X - x, max.Width);
                rectangleF.Width = Math.max(rectangleF.Width, min.Width);
                rectangleF.Height = Math.min(newPoint.Y - y, max.Height);
                rectangleF.Height = Math.max(rectangleF.Height, min.Height);
                if (!reshape) {
                    if (single1 >= rectangleF.Height / rectangleF.Width) {
                        rectangleF.Width = rectangleF.Height / single1;
                    }
                    else {
                        rectangleF.Height = single1 * rectangleF.Width;
                    }
                }
            }
            else if (handle === 16) {
                rectangleF.X = Math.max(newPoint.X, single - max.Width);
                rectangleF.X = Math.min(rectangleF.X, single - min.Width);
                rectangleF.Width = single - rectangleF.X;
                if (rectangleF.Width <= 0) {
                    rectangleF.Width = 1;
                }
                rectangleF.Height = Math.min(newPoint.Y - y, max.Height);
                rectangleF.Height = Math.max(rectangleF.Height, min.Height);
                if (!reshape) {
                    if (single1 >= rectangleF.Height / rectangleF.Width) {
                        rectangleF.Width = rectangleF.Height / single1;
                        rectangleF.X = single - rectangleF.Width;
                    }
                    else {
                        rectangleF.Height = single1 * rectangleF.Width;
                    }
                }
            }
        }
        else if (handle <= 64) {
            if (handle == 32) {
                rectangleF.Y = Math.max(newPoint.Y, y1 - max.Height);
                rectangleF.Y = Math.min(rectangleF.Y, y1 - min.Height);
                rectangleF.Height = y1 - rectangleF.Y;
                if (rectangleF.Height <= 0) {
                    rectangleF.Height = 1;
                }
            }
            else if (handle === 64) {
                rectangleF.Width = Math.min(newPoint.X - x, max.Width);
                rectangleF.Width = Math.max(rectangleF.Width, min.Width);
            }
        }
        else if (handle === 128) {
            rectangleF.Height = Math.min(newPoint.Y - y, max.Height);
            rectangleF.Height = Math.max(rectangleF.Height, min.Height);
        }
        else if (handle === 256) {
            rectangleF.X = Math.max(newPoint.X, single - max.Width);
            rectangleF.X = Math.min(rectangleF.X, single - min.Width);
            rectangleF.Width = single - rectangleF.X;
            if (rectangleF.Width <= 0) {
                rectangleF.Width = 1;
            }
        }
        return rectangleF;
    };
    TuObject.prototype.ContainedByRectangle = function (r) {
        return _GeomUtilities__WEBPACK_IMPORTED_MODULE_3__.GeomUtilities.ContainsRect(r.clone(), this.Bounds);
    };
    TuObject.prototype.ContainsPoint = function (p) {
        return _GeomUtilities__WEBPACK_IMPORTED_MODULE_3__.GeomUtilities.ContainsRect(this.Bounds, p.clone());
    };
    TuObject.prototype.Copy = function () {
        var goCopyDictionary;
        var document = this.Document;
        goCopyDictionary = (document == null ? new _TuCopyDictionary__WEBPACK_IMPORTED_MODULE_4__.TuCopyDictionary() : document.createCopyDictionary());
        return goCopyDictionary.CopyComplete(this);
    };
    TuObject.prototype.CopyNewValueForRedo = function (e) {
    };
    TuObject.prototype.CopyObject = function (env) {
        var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.as)(env.Get(this), _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuObject);
        if (item != null) {
            return undefined;
        }
        item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.clone)(this);
        env.Set(this, item);
        item.myLayer = undefined;
        item.myParent = undefined;
        if (this.myObservers != null && this.myObservers.Count > 0) {
            env.Delayeds.Add(this);
        }
        item.myObservers = undefined;
        return item;
    };
    TuObject.prototype.CopyObjectDelayed = function (env, newobj) {
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.foreach)(this.Observers, function (observer) {
            newobj.AddObserver((0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.as)(env.Get(observer), _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuObject));
        });
    };
    TuObject.prototype.CopyOldValueForUndo = function (e) {
    };
    TuObject.prototype.CreateBoundingHandle = function () {
        // TODO: implement in the TuHandle
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.NotImplementedException('TuObject.createBoundingHandle not implemented. TuHandle must implement this.');
    };
    TuObject.prototype.CreateEditor = function (view) {
        return undefined;
    };
    TuObject.prototype.CreateResizeHandle = function (handleid) {
        // TODO: implement in the TuHandle
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.NotImplementedException('TuObject.createResizeHandle not implemented. TuHandle must implement this.');
    };
    TuObject.prototype.DoBeginEdit = function (view) {
    };
    TuObject.prototype.DoEndEdit = function (view) {
    };
    TuObject.prototype.DoMove = function (view, origLoc, newLoc) {
        this.Location = this.ComputeMove(origLoc, newLoc);
    };
    TuObject.prototype.DoResize = function (view, origRect, newPoint, whichHandle, evttype, min, max) {
        if (evttype === _TuInputState__WEBPACK_IMPORTED_MODULE_2__.TuInputState.Cancel) {
            this.Bounds = origRect;
            return;
        }
        var rectangleF = this.ComputeResize(origRect.clone(), newPoint.clone(), whichHandle, min, max, (!this.CanReshape() || !view.CanReshapeObjects() ? false : !view.LastInput.Shift));
        if (this.ResizesRealtime) {
            this.Bounds = rectangleF.clone();
            return;
        }
        view.drawXorBox(view.convertDocToView(rectangleF), evttype !== _TuInputState__WEBPACK_IMPORTED_MODULE_2__.TuInputState.Finish);
        if (evttype === _TuInputState__WEBPACK_IMPORTED_MODULE_2__.TuInputState.Finish) {
            this.Bounds = rectangleF.clone();
        }
    };
    TuObject.prototype.ExpandPaintBounds = function (rect, view) {
        return rect.clone();
    };
    TuObject.FindCommonParent = function (a, b) {
        if (a === b) {
            return a;
        }
        if (a == null) {
            return undefined;
        }
        if (a.Parent === b) {
            return b;
        }
        if (b == null) {
            return undefined;
        }
        if (b.Parent === a) {
            return a;
        }
        if (a.Parent === b.Parent) {
            return a.Parent;
        }
        if (b.Parent == null) {
            for (var i = a; i != null; i = i.Parent) {
                if (i === b) {
                    return b;
                }
            }
        }
        else if (a.Parent != null) {
            for (var j = a; j != null; j = j.Parent) {
                for (var k = b; k != null; k = k.Parent) {
                    if (k == j) {
                        return k;
                    }
                }
            }
        }
        else {
            for (var l = b; l != null; l = l.Parent) {
                if (l === a) {
                    return a;
                }
            }
        }
        return undefined;
    };
    TuObject.prototype.GetContextMenu = function (view) {
        return undefined;
    };
    TuObject.prototype.GetContextMenuStrip = function (view) {
        return undefined;
    };
    TuObject.prototype.GetCursorName = function (view) {
        return undefined;
    };
    TuObject.prototype.GetNearestIntersectionPoint = function (p1, p2, result) {
        return _GeomUtilities__WEBPACK_IMPORTED_MODULE_3__.GeomUtilities.GetNearestIntersectionPoint(this.Bounds, p1.clone(), p2.clone(), result);
    };
    TuObject.prototype.GetPartInfo = function (view, renderer) {
        return renderer.getStandardPartInfo(this);
    };
    TuObject.prototype.GetRectangleSpotLocation = function (r, spot) {
        return spot.getSpotLocation(r.clone());
    };
    TuObject.prototype.GetShadowBrush = function (view) {
        if (view == null) {
            return null;
        }
        return view.getShadowBrush(this);
    };
    TuObject.prototype.GetShadowOffset = function (view) {
        if (view != null) {
            return view.ShadowOffset;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGSize();
    };
    TuObject.prototype.GetShadowPen = function (view, width) {
        if (view == null) {
            return null;
        }
        return view.getShadowPen(this, width);
    };
    TuObject.prototype.GetSpotLocation = function (spot) {
        return spot.getSpotLocation(this.Bounds);
    };
    TuObject.prototype.GetToolTip = function (view) {
        return undefined;
    };
    TuObject.prototype.InvalidateViews = function () {
        if (this.Parent != null) {
            this.Parent.invalidatePaintBounds();
        }
        this.Changed(1000, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
    };
    TuObject.prototype.IsApprox = function (x, y) {
        var worldEpsilon = 0.5;
        var document = this.Document;
        if (document != null) {
            worldEpsilon = document.WorldEpsilon;
        }
        var single = x - y;
        if (single >= worldEpsilon) {
            return false;
        }
        return single > -worldEpsilon;
    };
    TuObject.prototype.isChildOf = function (obj) {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_8__.is.typeof(obj, _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuGroup)) {
            for (var i = this.Parent; i != null; i = i.Parent) {
                if (i === obj) {
                    return true;
                }
            }
        }
        return false;
    };
    TuObject.prototype.MakeDiamondResizeHandle = function (handle, spot) {
        // TODO: implement in the TuCollectionEnumerator
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_8__.NotImplementedException('TuObject.makeDiamondResizeHandle not implemented. TuHandle must implement this.');
    };
    TuObject.prototype.onBoundsChangedInternal = function (old) {
        if (this.BoundsChanged$ != null) {
            this.BoundsChanged$(old);
        }
        this.OnBoundsChanged(old);
    };
    TuObject.prototype.OnBoundsChanged = function (old) {
    };
    TuObject.prototype.OnContextClick = function (evt, view) {
        return false;
    };
    TuObject.prototype.OnDoubleClick = function (evt, view) {
        return false;
    };
    TuObject.prototype.OnEnterLeave = function (from, to, view) {
        return false;
    };
    TuObject.prototype.OnGotSelection = function (sel) {
        if (this.IsInDocument && this.CanView()) {
            var selectionObject = this.SelectionObject;
            if (selectionObject != null) {
                selectionObject.AddSelectionHandles(sel, this);
            }
        }
    };
    TuObject.prototype.OnHover = function (evt, view) {
        return false;
    };
    TuObject.prototype.OnLayerChanged = function (oldlayer, newlayer, mainObj) {
    };
    TuObject.prototype.OnLostSelection = function (sel) {
        var selectionObject = this.SelectionObject;
        if (selectionObject != null) {
            selectionObject.RemoveSelectionHandles(sel);
        }
    };
    TuObject.prototype.OnMouseOver = function (evt, view) {
        var cursorName = this.GetCursorName(view);
        if (cursorName == null) {
            return false;
        }
        view.CursorName = cursorName;
        return true;
    };
    TuObject.prototype.OnObservedChanged = function (observed, subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
    };
    TuObject.prototype.OnParentChanged = function (oldgroup, newgroup) {
    };
    TuObject.prototype.OnSelectionDropped = function (evt, view) {
        return false;
    };
    TuObject.prototype.OnSelectionDropReject = function (evt, view) {
        return false;
    };
    TuObject.prototype.OnSingleClick = function (evt, view) {
        return false;
    };
    TuObject.prototype.Paint = function (g, view) {
    };
    TuObject.prototype.Pick = function (p, selectableOnly) {
        //console.log('pick');
        if (!this.CanView()) {
            return undefined;
        }
        if (!this.ContainsPoint(p)) {
            return undefined;
        }
        if (!selectableOnly) {
            return this;
        }
        if (this.CanSelect()) {
            return this;
        }
        for (var i = this.Parent; i != null; i = i.Parent) {
            if (i.CanSelect()) {
                return i;
            }
        }
        return undefined;
    };
    TuObject.prototype.Remove = function (obj) {
        var layer = this.Layer;
        if (layer != null) {
            layer.Remove(this);
            //layer.ForceUpdate();
            return;
        }
        var parent = this.Parent;
        if (parent != null) {
            parent.Remove(this);
            //parent.ForceUpdate();
        }
        return true;
    };
    TuObject.prototype.isExist = function () {
        return this.Layer != null;
    };
    TuObject.prototype.removeObserver = function (obj) {
        if (obj == null) {
            return;
        }
        if (this.myObservers != null && this.myObservers.Contains(obj)) {
            this.myObservers.Remove(obj);
            this.Changed(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_10__.TuObjectEvents.ChangedRemovedObserver, 0, obj, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_5__.NullRect);
        }
    };
    TuObject.prototype.RemoveSelectionHandles = function (sel) {
        sel.removeHandles(this);
    };
    TuObject.prototype.setBeingRemoved = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagBeingRemoved;
            return;
        }
        this.InternalFlags = this.InternalFlags & ~flagBeingRemoved;
    };
    TuObject.prototype.setLayer = function (value, mainObj, undoing) {
        var goObjectArray;
        var i;
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.as)(this, _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuGroup);
        if (goGroups != null) {
            goObjectArray = goGroups.CopyArray();
            for (var i_1 = 0; i_1 < goObjectArray.length; i_1++) {
                goObjectArray[i_1].setLayer(value, mainObj, undoing);
            }
        }
        var goLayers = this.myLayer;
        var goLayers1 = value;
        if (goLayers !== goLayers1) {
            if (goLayers1 == null) {
                if (!undoing || _tuval_core__WEBPACK_IMPORTED_MODULE_8__.is.typeof(this, _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuControl)) {
                    this.OnLayerChanged(goLayers, undefined, mainObj);
                    if (this.myObservers != null && !this.SuspendsUpdates) {
                        var bounds = this.Bounds;
                        goObjectArray = this.myObservers.CopyArray();
                        for (var i_2 = 0; i_2 < goObjectArray.length; i_2++) {
                            goObjectArray[i_2].OnObservedChanged(this, 903, 0, goLayers, bounds, 0, goLayers1, bounds);
                        }
                    }
                }
                this.myLayer = null;
                return;
            }
            this.myLayer = goLayers1;
            if (!undoing) {
                this.OnLayerChanged(goLayers, goLayers1, mainObj);
                if (this.myObservers != null && !this.SuspendsUpdates) {
                    var int32 = (goLayers == null ? 902 : 904);
                    var rectangleF = this.Bounds;
                    goObjectArray = this.myObservers.CopyArray();
                    for (i = 0; i < goObjectArray.length; i++) {
                        goObjectArray[i].OnObservedChanged(this, int32, 0, goLayers, rectangleF, 0, goLayers1, rectangleF);
                    }
                }
            }
        }
    };
    TuObject.prototype.setParent = function (value, undoing) {
        var goGroups = this.myParent;
        var goGroups1 = value;
        if (goGroups !== goGroups1) {
            if (goGroups1 == null) {
                if (!undoing) {
                    this.OnParentChanged(goGroups, undefined);
                }
                this.setLayer(undefined, this, undoing);
                this.myParent = null;
                return;
            }
            this.myParent = goGroups1;
            this.setLayer(goGroups1.Layer, this, undoing);
            if (!undoing) {
                this.OnParentChanged(goGroups, goGroups1);
            }
        }
    };
    TuObject.prototype.setRectangleSpotLocation = function (r, spot, p) {
        if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleCenter || spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.Middle) {
            r.X = p.X - r.Width / 2;
            r.Y = p.Y - r.Height / 2;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.TopLeft) {
            r.X = p.X;
            r.Y = p.Y;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.TopRight) {
            r.X = p.X - r.Width;
            r.Y = p.Y;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomRight) {
            r.X = p.X - r.Width;
            r.Y = p.Y - r.Height;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomLeft) {
            r.X = p.X;
            r.Y = p.Y - r.Height;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleTop || spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.TopCenter) {
            r.X = p.X - r.Width / 2;
            r.Y = p.Y;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleRight) {
            r.X = p.X - r.Width;
            r.Y = p.Y - r.Height / 2;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleBottom || spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomCenter) {
            r.X = p.X - r.Width / 2;
            r.Y = p.Y - r.Height;
            return r;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleLeft) {
            r.X = p.X;
            r.Y = p.Y - r.Height / 2;
            return r;
        }
        return r;
    };
    TuObject.prototype.setSizeKeepingLocation = function (s) {
        this.Size = s;
    };
    TuObject.prototype.setSpotLocation = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 2) {
            var spot = args[0];
            var newp = args[1];
            var bounds = this.Bounds;
            this.Bounds = this.setRectangleSpotLocation(bounds, spot, newp);
        }
        else if (args.length === 3) {
            var spot = args[0];
            var obj = args[1];
            var otherSpot = args[2];
            this.setSpotLocation(spot, obj.GetSpotLocation(otherSpot));
        }
        else if (args.length === 4) {
            var spot = args[0];
            var obj = args[1];
            var otherSpot = args[2];
            var offset = args[3];
            var spotLocation = obj.GetSpotLocation(otherSpot);
            this.setSpotLocation(spot, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(spotLocation.X + offset.Width, spotLocation.Y + offset.Height));
        }
        else if (args.length === 5) {
            var spot = args[0];
            var obj = args[1];
            var otherSpot = args[2];
            var dx = args[3];
            var dy = args[4];
            var spotLocation = obj.GetSpotLocation(otherSpot);
            this.setSpotLocation(spot, new _tuval_cg__WEBPACK_IMPORTED_MODULE_6__.CGPoint(spotLocation.X + dx, spotLocation.Y + dy));
        }
    };
    TuObject.prototype.spotOpposite = function (spot) {
        switch (spot) {
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.Middle:
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleCenter:
                {
                    return _Spot__WEBPACK_IMPORTED_MODULE_1__.Middle;
                }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.TopLeft:
                {
                    return _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomRight;
                }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.TopRight:
                {
                    return _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomLeft;
                }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomRight: {
                return _Spot__WEBPACK_IMPORTED_MODULE_1__.TopLeft;
            }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomLeft: {
                return _Spot__WEBPACK_IMPORTED_MODULE_1__.TopRight;
            }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleBottom:
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.BottomCenter:
                {
                    return _Spot__WEBPACK_IMPORTED_MODULE_1__.TopCenter;
                }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleLeft: {
                return _Spot__WEBPACK_IMPORTED_MODULE_1__.TopCenter;
            }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleTop:
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.TopCenter: {
                return _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleBottom;
            }
            case _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleRight: {
                return _Spot__WEBPACK_IMPORTED_MODULE_1__.MiddleLeft;
            }
        }
        return spot;
    };
    TuObject.prototype.GetType = function () {
        return this.constructor['__type__'];
    };
    TuObject.prototype.InvalidateCache = function () {
        this.myCachedSvgNode = null;
        this.myCachedHtmlNode = null;
    };
    TuObject.prototype.ForceUpdate = function () {
        this.InvalidateCache();
        _super.prototype.ForceUpdate.call(this);
    };
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myCachedSvgNode", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myCachedHtmlNode", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "mySvgRenderer", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myHtmlRenderer", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myLayer", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myParent", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myBounds", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myInternalFlags", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myObservers", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "myLayerIndex", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.State)()
    ], TuObject.prototype, "my$BoundsChanged", void 0);
    TuObject = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_8__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_9__.Types.TuObject,
            name: 'TuObject',
            instanceof: [_types__WEBPACK_IMPORTED_MODULE_9__.Types.TuObject]
        })
    ], TuObject);
    return TuObject;
}(_tuval_forms__WEBPACK_IMPORTED_MODULE_7__.TComponent));



/***/ }),

/***/ "./src/TuObject/TuObjectEventArgs.ts":
/*!*******************************************!*\
  !*** ./src/TuObject/TuObjectEventArgs.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuObjectEventArgs": () => (/* binding */ TuObjectEventArgs)
/* harmony export */ });
/* harmony import */ var _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuInputEventArgs */ "./src/TuInputEventArgs.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuObjectEventArgs = /** @class */ (function (_super) {
    __extends(TuObjectEventArgs, _super);
    function TuObjectEventArgs(obj, evt) {
        var _this = _super.call(this, evt) || this;
        _this.myObject = obj;
        return _this;
    }
    Object.defineProperty(TuObjectEventArgs.prototype, "TuObject", {
        get: function () {
            return this.myObject;
        },
        set: function (value) {
            this.myObject = value;
        },
        enumerable: false,
        configurable: true
    });
    return TuObjectEventArgs;
}(_TuInputEventArgs__WEBPACK_IMPORTED_MODULE_0__.TuInputEventArgs));



/***/ }),

/***/ "./src/TuPickInRectangleStyle.ts":
/*!***************************************!*\
  !*** ./src/TuPickInRectangleStyle.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPickInRectangleStyle": () => (/* binding */ TuPickInRectangleStyle)
/* harmony export */ });
var TuPickInRectangleStyle;
(function (TuPickInRectangleStyle) {
    TuPickInRectangleStyle[TuPickInRectangleStyle["AnyContained"] = 1] = "AnyContained";
    TuPickInRectangleStyle[TuPickInRectangleStyle["AnyIntersectsBounds"] = 2] = "AnyIntersectsBounds";
    TuPickInRectangleStyle[TuPickInRectangleStyle["SelectableOnlyContained"] = 257] = "SelectableOnlyContained";
    TuPickInRectangleStyle[TuPickInRectangleStyle["SelectableOnlyIntersectsBounds"] = 258] = "SelectableOnlyIntersectsBounds";
})(TuPickInRectangleStyle || (TuPickInRectangleStyle = {}));


/***/ }),

/***/ "./src/TuPort/TuPort.ts":
/*!******************************!*\
  !*** ./src/TuPort/TuPort.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPort": () => (/* binding */ TuPort)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TuPortEvents */ "./src/TuPort/TuPortEvents.ts");
/* harmony import */ var _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuPortStyle */ "./src/TuPort/TuPortStyle.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _TuPortFilteredLinkEnumerator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TuPortFilteredLinkEnumerator */ "./src/TuPort/TuPortFilteredLinkEnumerator.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuPortLinkEnumerator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TuPortLinkEnumerator */ "./src/TuPort/TuPortLinkEnumerator.ts");
/* harmony import */ var _TuDocument_TuDocumentValidCycle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../TuDocument/TuDocumentValidCycle */ "./src/TuDocument/TuDocumentValidCycle.ts");
/* harmony import */ var _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuDocument/TuDocument */ "./src/TuDocument/TuDocument.ts");
/* harmony import */ var _TuLink_TuLink__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../TuLink/TuLink */ "./src/TuLink/TuLink.ts");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _TuSubGraph_TuSubGraphState__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../TuSubGraph/TuSubGraphState */ "./src/TuSubGraph/TuSubGraphState.ts");
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../TuObjectEvents */ "./src/TuObjectEvents.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _Forms_Orientation__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../Forms/Orientation */ "./src/Forms/Orientation.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



















var flagValidFrom = 1048576;
var flagValidTo = 2097152;
var flagValidSelfNode = 4194304;
var flagValidDuplicateLinks = 8388608;
var flagRecursive = 16777216;
var flagClearsLinksWhenRemoved = 33554432;
var flagNoClearLinks = 67108864;
var flagValidSingleLink = 134217728;
var flagInsideCollapsedSubGraph = 268435456;
var TuPort = /** @class */ (function (_super) {
    __extends(TuPort, _super);
    //#endregion
    function TuPort() {
        var _this = _super.call(this) || this;
        _this.myStyle = _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse;
        _this.myFromLinkSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleRight;
        _this.myToLinkSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleLeft;
        _this.myLinks = new _tuval_core__WEBPACK_IMPORTED_MODULE_4__.List();
        _this.myUserFlags = 0;
        _this.myPartID = -1;
        _this.myEndSegmentLength = 10;
        _this.InternalFlags = _this.InternalFlags & -19;
        _this.InternalFlags = _this.InternalFlags | 36700160;
        _this.Brush = _Globals__WEBPACK_IMPORTED_MODULE_7__.Brushes_Black;
        return _this;
    }
    TuPort_1 = TuPort;
    Object.defineProperty(TuPort.prototype, "ClearsLinksWhenRemoved", {
        //#region [Property] ClearsLinksWhenRemoved
        get: function () {
            return this.getClearsLinksWhenRemoved();
        },
        set: function (value) {
            this.setClearsLinksWhenRemoved(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getClearsLinksWhenRemoved = function () {
        return (this.InternalFlags & flagClearsLinksWhenRemoved) !== 0;
    };
    TuPort.prototype.setClearsLinksWhenRemoved = function (value) {
        var internalFlags = (this.InternalFlags & flagClearsLinksWhenRemoved) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagClearsLinksWhenRemoved;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagClearsLinksWhenRemoved;
            }
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedClearsLinksWhenRemoved, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuPort.prototype, "DestinationLinks", {
        //#endregion
        //#region [Property] DestinationLinks
        get: function () {
            return this.getDestinationLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getDestinationLinks = function () {
        return new _TuPortFilteredLinkEnumerator__WEBPACK_IMPORTED_MODULE_8__.TuPortFilteredLinkEnumerator(this, this.myLinks, true);
    };
    Object.defineProperty(TuPort.prototype, "DestinationLinksCount", {
        //#endregion
        //#region [Property] DestinationLinksCount
        get: function () {
            return this.getDestinationLinksCount();
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getDestinationLinksCount = function () {
        var int32 = 0;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.foreach)(this.DestinationLinks, function (destinationLink) {
            if (destinationLink == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_4__.CONTINUE;
            }
            int32++;
        });
        return int32;
    };
    Object.defineProperty(TuPort.prototype, "EndSegmentLength", {
        //#endregion
        //#region [Property] EndSegmentLength
        get: function () {
            return this.getEndSegmentLength();
        },
        set: function (value) {
            this.setEndSegmentLength(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getEndSegmentLength = function () {
        return this.myEndSegmentLength;
    };
    TuPort.prototype.setEndSegmentLength = function (value) {
        var single = this.myEndSegmentLength;
        if (single != value) {
            this.myEndSegmentLength = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedEndSegmentLength, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(value));
            if (!this.Initializing) {
                this.linksOnPortChanged(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedEndSegmentLength, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(value));
            }
        }
    };
    Object.defineProperty(TuPort.prototype, "FromSpot", {
        //#endregion
        //#region [Property] FromSpot
        get: function () {
            return this.getFromSpot();
        },
        set: function (value) {
            this.setFromSpot(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getFromSpot = function () {
        return this.myFromLinkSpot;
    };
    TuPort.prototype.setFromSpot = function (value) {
        var int32 = this.myFromLinkSpot;
        if (int32 !== value) {
            this.myFromLinkSpot = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedFromSpot, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            if (!this.Initializing) {
                this.linksOnPortChanged(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedFromSpot, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            }
        }
    };
    Object.defineProperty(TuPort.prototype, "TuObject", {
        //#endregion
        //#region [Property] NodeObject
        get: function () {
            return this.getTuObject();
        },
        set: function (value) {
            this.setTuObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getTuObject = function () {
        return this;
    };
    TuPort.prototype.setTuObject = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.error)('You can not set Port.TuObject.');
    };
    Object.defineProperty(TuPort.prototype, "InsideCollapsedSubGraph", {
        //#endregion
        //#region [Property] InsideCollapsedSubGraph
        get: function () {
            return this.getInsideCollapsedSubGraph();
        },
        set: function (value) {
            this.setInsideCollapsedSubGraph(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getInsideCollapsedSubGraph = function () {
        return (this.InternalFlags & flagInsideCollapsedSubGraph) !== 0;
    };
    TuPort.prototype.setInsideCollapsedSubGraph = function (value) {
        if ((this.InternalFlags & flagInsideCollapsedSubGraph) !== 0 !== value) {
            if (value) {
                this.InternalFlags = this.InternalFlags | flagInsideCollapsedSubGraph;
                return;
            }
            this.InternalFlags = this.InternalFlags & ~flagInsideCollapsedSubGraph;
        }
    };
    Object.defineProperty(TuPort.prototype, "IsValidDuplicateLinks", {
        //#endregion
        //#region [Property] IsValidDuplicateLinks
        get: function () {
            return this.getIsValidDuplicateLinks();
        },
        set: function (value) {
            this.setIsValidDuplicateLinks(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getIsValidDuplicateLinks = function () {
        return (this.InternalFlags & flagValidDuplicateLinks) != 0;
    };
    TuPort.prototype.setIsValidDuplicateLinks = function (value) {
        var internalFlags = (this.InternalFlags & flagValidDuplicateLinks) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagValidDuplicateLinks;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagValidDuplicateLinks;
            }
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidDuplicateLinks, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuPort.prototype, "IsValidFrom", {
        //#endregion
        //#region [Property] IsValidFrom
        get: function () {
            return this.getIsValidFrom();
        },
        set: function (value) {
            this.setIsValidFrom(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getIsValidFrom = function () {
        return (this.InternalFlags & flagValidFrom) !== 0;
    };
    TuPort.prototype.setIsValidFrom = function (value) {
        var internalFlags = (this.InternalFlags & flagValidFrom) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagValidFrom;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagValidFrom;
            }
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidFrom, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuPort.prototype, "IsValidSelfNode", {
        //#endregion
        //#region [Property] IsValidSelfNode
        get: function () {
            return this.getIsValidSelfNode();
        },
        set: function (value) {
            this.setIsValidSelfNode(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getIsValidSelfNode = function () {
        return (this.InternalFlags & flagValidSelfNode) !== 0;
    };
    TuPort.prototype.setIsValidSelfNode = function (value) {
        var internalFlags = (this.InternalFlags & flagValidSelfNode) != 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagValidSelfNode;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagValidSelfNode;
            }
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidSelfNode, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuPort.prototype, "IsValidSingleLink", {
        //#endregion
        //#region [Property] IsValidSingleLink
        get: function () {
            return this.getIsValidSingleLink();
        },
        set: function (value) {
            this.setIsValidSingleLink(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getIsValidSingleLink = function () {
        return (this.InternalFlags & flagValidSingleLink) !== 0;
    };
    TuPort.prototype.setIsValidSingleLink = function (value) {
        var internalFlags = (this.InternalFlags & flagValidSingleLink) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagValidSingleLink;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagValidSingleLink;
            }
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidSingleLink, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuPort.prototype, "IsValidTo", {
        //#endregion
        //#region [Property] IsValidTo
        get: function () {
            return this.getIsValidTo();
        },
        set: function (value) {
            this.setIsValidTo(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getIsValidTo = function () {
        return (this.InternalFlags & flagValidTo) !== 0;
    };
    TuPort.prototype.setIsValidTo = function (value) {
        var internalFlags = (this.InternalFlags & flagValidTo) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagValidTo;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagValidTo;
            }
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidTo, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuPort.prototype, "Links", {
        //#endregion
        //#region [Property] Links
        get: function () {
            return this.getLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getLinks = function () {
        return new _TuPortLinkEnumerator__WEBPACK_IMPORTED_MODULE_10__.TuPortLinkEnumerator(this.myLinks);
    };
    Object.defineProperty(TuPort.prototype, "LinksCount", {
        //#endregion
        //#region [Property] LinksCount
        get: function () {
            return this.getLinksCount();
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getLinksCount = function () {
        return this.myLinks.Count;
    };
    Object.defineProperty(TuPort, "LinksRedirectedToSubGraphPort", {
        //#endregion
        //#region [Property] LinksRedirectedToSubGraphPort
        get: function () {
            return this.getLinksRedirectedToSubGraphPort();
        },
        set: function (value) {
            this.setLinksRedirectedToSubGraphPort(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.getLinksRedirectedToSubGraphPort = function () {
        return TuPort_1.myLinksRedirectedToSubGraphPort;
    };
    TuPort.setLinksRedirectedToSubGraphPort = function (value) {
        TuPort_1.myLinksRedirectedToSubGraphPort = value;
    };
    Object.defineProperty(TuPort.prototype, "NoClearLinks", {
        //#endregion
        //#region [Property] NoClearLinks
        /* internal */ get: function () {
            return this.getNoClearLinks();
        },
        /* internal */ set: function (value) {
            this.setNoClearLinks(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getNoClearLinks = function () {
        return (this.InternalFlags & flagNoClearLinks) !== 0;
    };
    TuPort.prototype.setNoClearLinks = function (value) {
        if (value) {
            this.InternalFlags = this.InternalFlags | flagNoClearLinks;
            return;
        }
        this.InternalFlags = this.InternalFlags & ~flagNoClearLinks;
    };
    Object.defineProperty(TuPort.prototype, "Node", {
        //#endregion
        //#region [Property] Node
        get: function () {
            return this.getNode();
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getNode = function () {
        return TuPort_1.FindParentNode(this);
    };
    Object.defineProperty(TuPort.prototype, "PartID", {
        //#endregion
        //#region [Property] PartID
        get: function () {
            return this.getPartID();
        },
        set: function (value) {
            this.setPartID(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getPartID = function () {
        return this.myPartID;
    };
    TuPort.prototype.setPartID = function (value) {
        var int32 = this.myPartID;
        if (int32 !== value) {
            this.myPartID = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedPartID, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
        return this;
    };
    Object.defineProperty(TuPort.prototype, "PortObject", {
        //#endregion
        //#region [Property] PortObject
        get: function () {
            return this.getPortObject();
        },
        set: function (value) {
            this.setPortObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getPortObject = function () {
        return this.myPortObject;
    };
    TuPort.prototype.setPortObject = function (value) {
        var goObject = this.myPortObject;
        if (goObject !== value) {
            this.myPortObject = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedObject, 0, goObject, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            if (!this.Initializing) {
                this.linksOnPortChanged(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedObject, 0, goObject, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            }
        }
        return this;
    };
    Object.defineProperty(TuPort.prototype, "SourceLinks", {
        //#endregion
        //#region [Property] SourceLinks
        get: function () {
            return this.getSourceLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getSourceLinks = function () {
        return new _TuPortFilteredLinkEnumerator__WEBPACK_IMPORTED_MODULE_8__.TuPortFilteredLinkEnumerator(this, this.myLinks, false);
    };
    Object.defineProperty(TuPort.prototype, "SourceLinksCount", {
        //#endregion
        //#region [Property] DestinationLinksCount
        get: function () {
            return this.getSourceLinksCount();
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getSourceLinksCount = function () {
        var int32 = 0;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.foreach)(this.SourceLinks, function (sourceLink) {
            if (sourceLink == null) {
                return;
            }
            int32++;
        });
        return int32;
    };
    Object.defineProperty(TuPort.prototype, "Style", {
        //#endregion
        //#region [Property] Style
        get: function () {
            return this.getStyle();
        },
        set: function (value) {
            this.setStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getStyle = function () {
        return this.myStyle;
    };
    TuPort.prototype.setStyle = function (value) {
        var goPortStyle = this.myStyle;
        if (goPortStyle !== value) {
            this.myStyle = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedStyle, goPortStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            if (!this.Initializing) {
                this.linksOnPortChanged(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedStyle, goPortStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            }
        }
    };
    TuPort.prototype.style = function (value) { throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.error)('Will Implement getter and setters'); };
    Object.defineProperty(TuPort.prototype, "ToSpot", {
        //#endregion
        //#region [Property] ToSpot
        get: function () {
            return this.getToSpot();
        },
        set: function (value) {
            this.setToSpot(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getToSpot = function () {
        return this.myToLinkSpot;
    };
    TuPort.prototype.setToSpot = function (value) {
        var int32 = this.myToLinkSpot;
        if (int32 !== value) {
            this.myToLinkSpot = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedToSpot, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            if (!this.Initializing) {
                this.linksOnPortChanged(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedToSpot, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            }
        }
    };
    Object.defineProperty(TuPort.prototype, "UserFlags", {
        //#endregion
        //#region [Property] UserFlags
        get: function () {
            return this.getUserFlags();
        },
        set: function (value) {
            this.setUserFlags(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getUserFlags = function () {
        return this.myUserFlags;
    };
    TuPort.prototype.setUserFlags = function (value) {
        var int32 = this.myUserFlags;
        if (int32 !== value) {
            this.myUserFlags = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedPortUserFlags, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
        return this;
    };
    Object.defineProperty(TuPort.prototype, "UserObject", {
        //#endregion
        //#region [Property] UserObject
        get: function () {
            return this.getUserObject();
        },
        set: function (value) {
            this.setUserObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuPort.prototype.getUserObject = function () {
        return this.myUserObject;
    };
    TuPort.prototype.setUserObject = function (value) {
        var int32 = this.myUserObject;
        if (int32 !== value) {
            this.myUserObject = value;
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedPortUserObject, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
        return this;
    };
    TuPort.prototype.addDestinationLink = function (link) {
        link.FromPort = this;
        if (link.FromPort === this) {
            this.internalAddLink(link, false);
        }
    };
    TuPort.prototype.addSourceLink = function (link) {
        link.ToPort = this;
        if (link.ToPort === this) {
            this.internalAddLink(link, false);
        }
    };
    TuPort.prototype.canLinkFrom = function () {
        if (!this.IsValidFrom) {
            return false;
        }
        if (this.IsValidSingleLink && this.LinksCount >= 1) {
            return false;
        }
        if (!this.CanView()) {
            return false;
        }
        if (this.Layer != null && !this.Layer.CanLinkObjects()) {
            return false;
        }
        return true;
    };
    TuPort.prototype.canLinkTo = function () {
        if (!this.IsValidTo) {
            return false;
        }
        if (this.IsValidSingleLink && this.LinksCount >= 1) {
            return false;
        }
        if (!this.CanView()) {
            return false;
        }
        if (this.Layer != null && !this.Layer.CanLinkObjects()) {
            return false;
        }
        return true;
    };
    TuPort.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedPortUserFlags:
                {
                    this.UserFlags = e.getFloat(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedPortUserObject:
                {
                    this.UserObject = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedStyle:
                {
                    this.Style = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedObject:
                {
                    this.PortObject = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidFrom:
                {
                    this.IsValidFrom = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidTo:
                {
                    this.IsValidTo = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidSelfNode:
                {
                    this.IsValidSelfNode = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedFromSpot:
                {
                    this.FromSpot = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedToSpot:
                {
                    this.ToSpot = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedAddedLink:
                {
                    var oldValue = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(e.OldValue, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLink);
                    if (undo) {
                        this.internalRemoveLink(oldValue, true);
                        return;
                    }
                    this.internalAddLink(oldValue, true);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedRemovedLink:
                {
                    var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(e.OldValue, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuLink);
                    if (undo) {
                        this.internalAddLink(goLink, true);
                        return;
                    }
                    this.internalRemoveLink(goLink, true);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidDuplicateLinks:
                {
                    this.IsValidDuplicateLinks = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedEndSegmentLength:
                {
                    this.EndSegmentLength = e.getFloat(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedPartID:
                {
                    this.PartID = e.getFloat(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedClearsLinksWhenRemoved:
                {
                    this.ClearsLinksWhenRemoved = e.getValue(undo);
                    return;
                }
            case _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedValidSingleLink:
                {
                    this.IsValidSingleLink = e.getValue(undo);
                    return;
                }
        }
        _super.prototype.ChangeValue.call(this, e, undo);
    };
    TuPort.prototype.clearLinks = function () {
        this._clearLinks(undefined);
    };
    TuPort.prototype._clearLinks = function (mainObj) {
        var layerCollectionContainer;
        if (this.Layer != null) {
            layerCollectionContainer = this.Layer.LayerCollectionContainer;
        }
        else {
            layerCollectionContainer = undefined;
        }
        var goLayerCollectionContainer = layerCollectionContainer;
        var count = this.myLinks.Count;
        while (count > 0) {
            var goLinks = this.myLinks;
            var int32 = count - 1;
            count = int32;
            var item = goLinks[int32];
            var goObject = item.TuObject;
            if (goObject != null && goObject.Layer != null &&
                (goObject.Layer.LayerCollectionContainer !== goLayerCollectionContainer || mainObj != null &&
                    (goObject.isChildOf(mainObj) || goObject.Movable))) {
                continue;
            }
            item.unlink();
            count = Math.min(count, this.myLinks.Count);
        }
    };
    TuPort.prototype.computeTrianglePoints = function (v) {
        var bounds = this.Bounds.clone();
        var toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.Middle;
        var style = this.Style;
        if (style !== _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle) {
            switch (style) {
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleTopLeft:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.BottomRight;
                        break;
                    }
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleTopRight:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.BottomLeft;
                        break;
                    }
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleBottomRight:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.TopLeft;
                        break;
                    }
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleBottomLeft:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.TopRight;
                        break;
                    }
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleTop:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleBottom;
                        break;
                    }
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleRight:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleLeft;
                        break;
                    }
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleBottom:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleTop;
                        break;
                    }
                case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleLeft:
                    {
                        toSpot = _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleRight;
                        break;
                    }
                default:
                    {
                        toSpot = this.ToSpot;
                    }
            }
        }
        else {
            toSpot = this.ToSpot;
        }
        if (toSpot.ID <= _Spot__WEBPACK_IMPORTED_MODULE_6__.BottomLeft.ID) {
            switch (toSpot) {
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.Middle:
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.TopLeft:
                    {
                        v[0].X = bounds.X + bounds.Width / 2;
                        v[0].Y = bounds.Y;
                        v[1].X = bounds.X + bounds.Width;
                        v[1].Y = bounds.Y + bounds.Height;
                        v[2].X = bounds.X;
                        v[2].Y = bounds.Y + bounds.Height / 2;
                        return;
                    }
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.TopRight:
                    {
                        v[0].X = bounds.X + bounds.Width;
                        v[0].Y = bounds.Y + bounds.Height / 2;
                        v[1].X = bounds.X;
                        v[1].Y = bounds.Y + bounds.Height;
                        v[2].X = bounds.X + bounds.Width / 2;
                        v[2].Y = bounds.Y;
                        return;
                    }
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.BottomRight:
                    {
                        v[0].X = bounds.X + bounds.Width / 2;
                        v[0].Y = bounds.Y + bounds.Height;
                        v[1].X = bounds.X;
                        v[1].Y = bounds.Y;
                        v[2].X = bounds.X + bounds.Width;
                        v[2].Y = bounds.Y + bounds.Height / 2;
                        return;
                    }
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.BottomLeft:
                    {
                        v[0].X = bounds.X;
                        v[0].Y = bounds.Y + bounds.Height / 2;
                        v[1].X = bounds.X + bounds.Width;
                        v[1].Y = bounds.Y;
                        v[2].X = bounds.X + bounds.Width / 2;
                        v[2].Y = bounds.Y + bounds.Height;
                        return;
                    }
            }
        }
        else if (toSpot.ID > _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleRight.ID) {
            if (toSpot === _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleBottom) {
                v[0].X = bounds.X;
                v[0].Y = bounds.Y + bounds.Height;
                v[1].X = bounds.X + bounds.Width / 2;
                v[1].Y = bounds.Y;
                v[2].X = bounds.X + bounds.Width;
                v[2].Y = bounds.Y + bounds.Height;
                return;
            }
        }
        else {
            if (toSpot === _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleTop) {
                v[0].X = bounds.X + bounds.Width;
                v[0].Y = bounds.Y;
                v[1].X = bounds.X + bounds.Width / 2;
                v[1].Y = bounds.Y + bounds.Height;
                v[2].X = bounds.X;
                v[2].Y = bounds.Y;
                return;
            }
            if (toSpot === _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleRight) {
                v[0].X = bounds.X + bounds.Width;
                v[0].Y = bounds.Y + bounds.Height;
                v[1].X = bounds.X;
                v[1].Y = bounds.Y + bounds.Height / 2;
                v[2].X = bounds.X + bounds.Width;
                v[2].Y = bounds.Y;
                return;
            }
        }
        v[0].X = bounds.X;
        v[0].Y = bounds.Y;
        v[1].X = bounds.X + bounds.Width;
        v[1].Y = bounds.Y + bounds.Height / 2;
        v[2].X = bounds.X;
        v[2].Y = bounds.Y + bounds.Height;
        return;
    };
    TuPort.prototype.containsLink = function (l) {
        return this.myLinks.Contains(l);
    };
    TuPort.prototype.copyLinksArray = function () {
        return this.myLinks.ToArray();
    };
    TuPort.prototype.copyObject = function (env) {
        var goLinks = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(_super.prototype.copyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort);
        if (goLinks != null) {
            goLinks.myLinks = new _tuval_core__WEBPACK_IMPORTED_MODULE_4__.List();
            goLinks.myPartID = -1;
            if (this.myPortObject != null) {
                env.Delayeds.Add(this);
            }
        }
        return goLinks;
    };
    TuPort.prototype.CopyObjectDelayed = function (env, newobj) {
        _super.prototype.CopyObjectDelayed.call(this, env, newobj);
        var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(newobj, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort);
        var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(env.Get(this.myPortObject), _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuObject);
        if (item != null) {
            goPort.myPortObject = item;
        }
    };
    TuPort.prototype.cycleOK = function (toPort) {
        var document = this.Document;
        if (document == null) {
            return true;
        }
        switch (document.ValidCycle) {
            case _TuDocument_TuDocumentValidCycle__WEBPACK_IMPORTED_MODULE_11__.TuDocumentValidCycle.NotDirected:
                {
                    return !_TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_12__.TuDocument.MakesDirectedCycle(this.Node, toPort.Node);
                }
            case _TuDocument_TuDocumentValidCycle__WEBPACK_IMPORTED_MODULE_11__.TuDocumentValidCycle.NotDirectedFast:
                {
                    return !_TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_12__.TuDocument.MakesDirectedCycleFast(this.Node, toPort.Node);
                }
            case _TuDocument_TuDocumentValidCycle__WEBPACK_IMPORTED_MODULE_11__.TuDocumentValidCycle.NotUndirected:
                {
                    return !_TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_12__.TuDocument.MakesUndirectedCycle(this.Node, toPort.Node);
                }
            case _TuDocument_TuDocumentValidCycle__WEBPACK_IMPORTED_MODULE_11__.TuDocumentValidCycle.DestinationTree:
                {
                    if (toPort.SourceLinksCount !== 0) {
                        return false;
                    }
                    return !_TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_12__.TuDocument.MakesDirectedCycleFast(this.Node, toPort.Node);
                }
            case _TuDocument_TuDocumentValidCycle__WEBPACK_IMPORTED_MODULE_11__.TuDocumentValidCycle.SourceTree:
                {
                    if (this.DestinationLinksCount !== 0) {
                        return false;
                    }
                    return !_TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_12__.TuDocument.MakesDirectedCycleFast(this.Node, toPort.Node);
                }
            default:
                {
                    return true;
                }
        }
    };
    TuPort.prototype.ExpandPaintBounds = function (rect, view) {
        var portObject = this.PortObject;
        if (portObject == null || portObject === this || this.Style !== _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object || portObject.Layer != null || (this.InternalFlags & flagRecursive) !== 0) {
            return _super.prototype.ExpandPaintBounds.call(this, rect, view);
        }
        this.InternalFlags = this.InternalFlags | flagRecursive;
        var rectangleF = portObject.ExpandPaintBounds(rect, view);
        this.InternalFlags = this.InternalFlags & ~flagRecursive;
        return rectangleF;
    };
    TuPort.FindParentNode = function (x) {
        if (x == null) {
            return undefined;
        }
        var goNode = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(x, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuNode);
        if (goNode != null) {
            return goNode;
        }
        return TuPort_1.FindParentNode(x.Parent);
    };
    TuPort.findTopNode = function (x) {
        if (x == null) {
            return undefined;
        }
        if (x.IsTopLevel) {
            return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(x, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuNode);
        }
        var goNode = TuPort_1.findTopNode(x.Parent);
        if (goNode != null) {
            return goNode;
        }
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(x, _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuNode);
    };
    TuPort.prototype.findVisibleCollapsedSubGraph = function () {
        if (!TuPort_1.LinksRedirectedToSubGraphPort) {
            return undefined;
        }
        if (!this.InsideCollapsedSubGraph) {
            return undefined;
        }
        var parent = _super.prototype.getParent.call(this);
        var goSubGraph = undefined;
        while (parent != null) {
            var goSubGraph1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(parent, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuSubGraph);
            if (goSubGraph1 != null && goSubGraph1.CanView()) {
                if (goSubGraph1.State !== _TuSubGraph_TuSubGraphState__WEBPACK_IMPORTED_MODULE_15__.TuSubGraphState.Collapsed) {
                    return goSubGraph;
                }
                goSubGraph = goSubGraph1;
            }
            parent = parent.Parent;
        }
        return goSubGraph;
    };
    TuPort.prototype.GetCursorName = function (view) {
        if (view != null && !view.CanLinkObjects()) {
            return undefined;
        }
        if (!this.canLinkFrom() && !this.canLinkTo()) {
            return undefined;
        }
        return "hand";
    };
    TuPort.prototype._getEndSegmentLength = function (link, atEnd) {
        var center;
        var y;
        var endSegmentLength = this.EndSegmentLength;
        if (link == null) {
            return endSegmentLength;
        }
        if (!this.Visible) {
            return endSegmentLength;
        }
        if (!_TuLink_TuLink__WEBPACK_IMPORTED_MODULE_13__.TuLink.isOrtho(link)) {
            return endSegmentLength;
        }
        var otherPort = link.getOtherPort(this);
        if (otherPort == null) {
            return endSegmentLength;
        }
        var goObject = otherPort.TuObject;
        if (goObject == null) {
            return endSegmentLength;
        }
        var pointF = goObject.Center.clone();
        var parentNode = _super.prototype.getParentNode.call(this);
        var goGeneralNode = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(parentNode, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuGeneralNode);
        var goMultiTextNode = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(parentNode, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuMultiTextNode);
        if (goGeneralNode == null && goMultiTextNode == null) {
            return endSegmentLength;
        }
        var single = (atEnd ? 4 : 8);
        if (goGeneralNode != null) {
            single = (atEnd ? goGeneralNode.ToEndSegmentLengthStep : goGeneralNode.FromEndSegmentLengthStep);
        }
        else if (goMultiTextNode != null) {
            single = (atEnd ? goMultiTextNode.ToEndSegmentLengthStep : goMultiTextNode.FromEndSegmentLengthStep);
        }
        if (single === 0) {
            return endSegmentLength;
        }
        var leftSide = false;
        var int32 = 0;
        var int321 = 0;
        if (goGeneralNode != null) {
            if (goGeneralNode.Orientation === _Forms_Orientation__WEBPACK_IMPORTED_MODULE_18__.Orientation.Horizontal && this.Center.X < goGeneralNode.Center.X) {
                y = true;
            }
            else if (goGeneralNode.Orientation !== _Forms_Orientation__WEBPACK_IMPORTED_MODULE_18__.Orientation.Vertical) {
                y = false;
            }
            else {
                var y1 = this.Center.Y;
                center = goGeneralNode.Center;
                y = y1 < center.Y;
            }
            leftSide = y;
            if (!leftSide) {
                var goGeneralNodePort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(this, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuGeneralNodePort);
                if (goGeneralNodePort != null) {
                    leftSide = goGeneralNodePort.LeftSide;
                }
            }
            if (!leftSide) {
                var rightPortsCount = goGeneralNode.RightPortsCount;
                for (var i = 0; i < rightPortsCount; i++) {
                    var rightPort = goGeneralNode.getRightPort(i);
                    if (rightPort != null) {
                        if (rightPort === this) {
                            int32 = int321;
                        }
                        if (rightPort.LinksCount > 0) {
                            int321++;
                        }
                    }
                }
            }
            else {
                var leftPortsCount = goGeneralNode.LeftPortsCount;
                for (var j = 0; j < leftPortsCount; j++) {
                    var leftPort = goGeneralNode.getLeftPort(j);
                    if (leftPort != null) {
                        if (leftPort === this) {
                            int32 = int321;
                        }
                        if (leftPort.LinksCount > 0) {
                            int321++;
                        }
                    }
                }
            }
        }
        else if (goMultiTextNode != null) {
            var x = this.Center.X;
            center = goMultiTextNode.Center;
            leftSide = x < center.X;
            var topIndex = goMultiTextNode.ListGroup.TopIndex;
            if (topIndex < 0) {
                topIndex = 0;
            }
            if (!leftSide) {
                var itemCount = goMultiTextNode.ItemCount;
                for (var k = topIndex; k < itemCount; k++) {
                    var rightPort1 = goMultiTextNode.getRightPort(k);
                    if (rightPort1 != null) {
                        if (rightPort1 === this) {
                            int32 = int321;
                        }
                        if (rightPort1.Visible) {
                            var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(rightPort1, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort);
                            if (goPort != null && goPort.LinksCount > 0) {
                                int321++;
                            }
                        }
                    }
                }
            }
            else {
                var itemCount1 = goMultiTextNode.ItemCount;
                for (var l = topIndex; l < itemCount1; l++) {
                    var leftPort1 = goMultiTextNode.getLeftPort(l);
                    if (leftPort1 != null) {
                        if (leftPort1 === this) {
                            int32 = int321;
                        }
                        if (leftPort1.Visible) {
                            var goPort1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(leftPort1, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort);
                            if (goPort1 != null && goPort1.LinksCount > 0) {
                                int321++;
                            }
                        }
                    }
                }
            }
        }
        if (int321 <= 1) {
            return endSegmentLength;
        }
        var outBounds = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.New.Out(goObject.ParentNode.Bounds.clone());
        var single1 = endSegmentLength;
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.InflateRect(outBounds, single1, single1);
        var center1 = this.Center.clone();
        var orientation = true;
        if (goGeneralNode != null) {
            orientation = goGeneralNode.Orientation === _Forms_Orientation__WEBPACK_IMPORTED_MODULE_18__.Orientation.Horizontal;
        }
        var single2 = endSegmentLength;
        var single3 = orientation ? this.Height : this.Width;
        if ((orientation ? pointF.Y < center1.Y - single3 : pointF.X < center1.X - single3)) {
            single2 = endSegmentLength + int32 * single + single / 2;
            if (orientation) {
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.IntersectsLineSegment(outBounds.value, center1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: center1.X + (leftSide ? -single2 : single2), y: center1.Y }))) {
                    return endSegmentLength;
                }
            }
            if (!orientation) {
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.IntersectsLineSegment(outBounds.value, center1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: center1.X, y: center1.Y + (leftSide ? -single2 : single2) }))) {
                    return endSegmentLength;
                }
            }
        }
        else if ((orientation ? pointF.Y > center1.Y + single3 : pointF.X > center1.X + single3)) {
            single2 = endSegmentLength + ((int321 - 1) - int32) * single;
            if (orientation) {
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.IntersectsLineSegment(outBounds.value, center1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: center1.X + (leftSide ? -single2 : single2), y: center1.Y }))) {
                    return endSegmentLength;
                }
            }
            if (!orientation) {
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.IntersectsLineSegment(outBounds.value, center1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint({ x: center1.X, y: center1.Y + (leftSide ? -single2 : single2) }))) {
                    return endSegmentLength;
                }
            }
        }
        return single2;
    };
    TuPort.prototype.getFromEndSegmentLength = function (link) {
        return this._getEndSegmentLength(link, false);
    };
    TuPort.prototype.getFromLinkDir = function (link) {
        var center = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
        var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
        var goSubGraph = this.findVisibleCollapsedSubGraph();
        if (goSubGraph != null && goSubGraph.Port != null && goSubGraph.Port != null && !link.TuObject.isChildOf(goSubGraph)) {
            return goSubGraph.Port.getFromLinkDir(link);
        }
        var fromSpot = this.FromSpot;
        if (fromSpot !== _Spot__WEBPACK_IMPORTED_MODULE_6__.NoSpot && fromSpot !== _Spot__WEBPACK_IMPORTED_MODULE_6__.Middle) {
            return this.getLinkDir(fromSpot);
        }
        if (link == null || link.ToPort == null || link.ToPort.TuObject == null) {
            return 0;
        }
        var realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
        if (realLink == null && _tuval_core__WEBPACK_IMPORTED_MODULE_4__.is.typeof(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink)) {
            realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink).RealLink;
        }
        if (realLink != null) {
            if (realLink.PointsCount <= (realLink.Orthogonal ? 6 : 2)) {
                center = link.ToPort.TuObject.Center.clone();
                pointF = this.Center.clone();
                if (Math.abs(center.X - pointF.X) > Math.abs(center.Y - pointF.Y)) {
                    if (center.X >= pointF.X) {
                        return 0;
                    }
                    return 180;
                }
                if (center.Y >= pointF.Y) {
                    return 90;
                }
                return 270;
            }
            center = realLink.getPoint(1);
            if (!realLink.Orthogonal) {
                center = this.getLinkPointFromPoint(center);
                if (center.Equals(this.Center)) {
                    center = this.getLinkPointFromPoint(realLink.getPoint(2));
                    if (center.Equals(this.Center) && realLink.PointsCount > 3) {
                        var goLink = realLink;
                        center = this.getLinkPointFromPoint(goLink.getPoint(goLink.PointsCount - 1));
                    }
                }
            }
            else {
                center = this.orthoPointToward(center.clone());
            }
        }
        else {
            center = link.ToPort.TuObject.Center.clone();
            pointF = this.Center.clone();
            if (Math.abs(center.X - pointF.X) > Math.abs(center.Y - pointF.Y)) {
                if (center.X >= pointF.X) {
                    return 0;
                }
                return 180;
            }
            if (center.Y >= pointF.Y) {
                return 90;
            }
            return 270;
        }
        pointF = this.Center.clone();
        if (Math.abs(center.X - pointF.X) > Math.abs(center.Y - pointF.Y)) {
            if (center.X >= pointF.X) {
                return 0;
            }
            return 180;
        }
        if (center.Y >= pointF.Y) {
            return 90;
        }
        return 270;
    };
    TuPort.prototype.getFromLinkPoint = function (link) {
        var point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
        var goSubGraph = this.findVisibleCollapsedSubGraph();
        if (goSubGraph != null && goSubGraph.Port != null && goSubGraph.Port != null && !link.TuObject.isChildOf(goSubGraph)) {
            return goSubGraph.Port.getFromLinkPoint(link);
        }
        if (this.FromSpot !== _Spot__WEBPACK_IMPORTED_MODULE_6__.NoSpot) {
            var portObject = this.PortObject;
            if (portObject == null || portObject.Layer == null && _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_14__.TuObject.FindCommonParent(this, portObject) == null) {
                portObject = this;
            }
            return portObject.GetSpotLocation(this.FromSpot);
        }
        if (link == null || link.ToPort == null || link.ToPort.TuObject == null) {
            return this.Center.clone();
        }
        var realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
        if (realLink == null && _tuval_core__WEBPACK_IMPORTED_MODULE_4__.is.typeof(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink)) {
            realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink).RealLink;
        }
        if (realLink != null) {
            if (realLink.PointsCount > (realLink.Orthogonal ? 6 : 2)) {
                point = realLink.getPoint(1);
                if (realLink.Orthogonal) {
                    point = this.orthoPointToward(point.clone());
                    return this.getLinkPointFromPoint(point.clone());
                }
                var linkPointFromPoint = this.getLinkPointFromPoint(point);
                if (linkPointFromPoint.Equals(this.Center.clone())) {
                    linkPointFromPoint = this.getLinkPointFromPoint(realLink.getPoint(2));
                    if (linkPointFromPoint.Equals(this.Center.clone()) && realLink.PointsCount > 3) {
                        var goLink = realLink;
                        linkPointFromPoint = this.getLinkPointFromPoint(goLink.getPoint(goLink.PointsCount - 1));
                    }
                }
                return linkPointFromPoint.clone();
            }
        }
        point = link.ToPort.TuObject.Center.clone();
        if (realLink != null && realLink.Orthogonal) {
            point = this.orthoPointToward(point);
        }
        return this.getLinkPointFromPoint(point);
    };
    TuPort.prototype.getLinkDir = function (spot) {
        if (spot.ID <= 16) {
            switch (spot) {
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.Middle:
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.TopLeft:
                    {
                        return 225;
                    }
                case _Spot__WEBPACK_IMPORTED_MODULE_6__.TopRight:
                    {
                        return 315;
                    }
                default:
                    {
                        if (spot === _Spot__WEBPACK_IMPORTED_MODULE_6__.BottomRight) {
                            return 45;
                        }
                        if (spot === _Spot__WEBPACK_IMPORTED_MODULE_6__.BottomLeft) {
                            return 135;
                        }
                        break;
                    }
            }
        }
        else if (spot.ID > 64) {
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleBottom) {
                return 90;
            }
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleLeft) {
                return 180;
            }
        }
        else {
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleTop) {
                return 270;
            }
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_6__.MiddleRight) {
                return 0;
            }
        }
        return 0;
    };
    TuPort.prototype.getLinkPointFromPoint = function (p) {
        var pointF = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.New.Out();
        var portObject = this.PortObject;
        var goSubGraph = this.findVisibleCollapsedSubGraph();
        if (goSubGraph != null) {
            if (goSubGraph.CollapsedObject != null) {
                portObject = goSubGraph.CollapsedObject;
            }
            else if (goSubGraph != null && goSubGraph.Port != null && goSubGraph.Port != null) {
                return goSubGraph.Port.getLinkPointFromPoint(p);
            }
        }
        if (portObject == null || portObject.Layer == null && _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_14__.TuObject.FindCommonParent(this, portObject) == null) {
            portObject = this;
        }
        if (portObject.ContainsPoint(p.clone())) {
            return portObject.Center.clone();
        }
        if (this.GetNearestIntersectionPoint(p.clone(), this.Center.clone(), pointF)) {
            return pointF.value.clone();
        }
        return portObject.Center.clone();
    };
    TuPort.prototype.GetNearestIntersectionPoint = function (p1, p2, result) {
        var portObject = this.PortObject;
        if (portObject == null || portObject === this || this.Style === _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object || (this.InternalFlags & flagRecursive) != 0 || portObject.Layer == null && _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_14__.TuObject.FindCommonParent(this, portObject) == null) {
            return _super.prototype.GetNearestIntersectionPoint.call(this, p1.clone(), p2.clone(), result);
        }
        this.InternalFlags = this.InternalFlags | 16777216;
        var nearestIntersectionPoint = portObject.GetNearestIntersectionPoint(p1.clone(), p2.clone(), result);
        this.InternalFlags = this.InternalFlags & -16777217;
        return nearestIntersectionPoint;
    };
    TuPort.prototype.getToEndSegmentLength = function (link) {
        return this._getEndSegmentLength(link, true);
    };
    TuPort.prototype.getToLinkDir = function (link) {
        var center;
        var pointF;
        var goSubGraph = this.findVisibleCollapsedSubGraph();
        if (goSubGraph != null && goSubGraph.Port != null && goSubGraph.Port !== this && !link.TuObject.isChildOf(goSubGraph)) {
            return goSubGraph.Port.getToLinkDir(link);
        }
        var toSpot = this.ToSpot;
        if (toSpot !== _Spot__WEBPACK_IMPORTED_MODULE_6__.NoSpot && toSpot !== _Spot__WEBPACK_IMPORTED_MODULE_6__.Middle) {
            return this.getLinkDir(toSpot);
        }
        if (link == null || link.FromPort == null || link.FromPort.TuObject == null) {
            return 0;
        }
        var realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
        if (realLink == null && _tuval_core__WEBPACK_IMPORTED_MODULE_4__.is.typeof(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink)) {
            realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink).RealLink;
        }
        if (realLink != null) {
            if (realLink.PointsCount <= (realLink.Orthogonal ? 6 : 2)) {
                center = link.FromPort.TuObject.Center.clone();
                pointF = this.Center.clone();
                if (Math.abs(center.X - pointF.X) > Math.abs(center.Y - pointF.Y)) {
                    if (center.X >= pointF.X) {
                        return 0;
                    }
                    return 180;
                }
                if (center.Y >= pointF.Y) {
                    return 90;
                }
                return 270;
            }
            var goLink = realLink;
            center = goLink.getPoint(goLink.PointsCount - 2);
            if (!realLink.Orthogonal) {
                center = this.getLinkPointFromPoint(center.clone());
                if (center.Equals(this.Center.clone())) {
                    var goLink1 = realLink;
                    center = this.getLinkPointFromPoint(goLink1.getPoint(goLink1.PointsCount - 3));
                    if (center.Equals(this.Center.clone()) && realLink.PointsCount > 3) {
                        center = this.getLinkPointFromPoint(realLink.getPoint(0));
                    }
                }
            }
            else {
                center = this.orthoPointToward(center);
            }
        }
        else {
            center = link.FromPort.TuObject.Center.clone();
            pointF = this.Center.clone();
            if (Math.abs(center.X - pointF.X) > Math.abs(center.Y - pointF.Y)) {
                if (center.X >= pointF.X) {
                    return 0;
                }
                return 180;
            }
            if (center.Y >= pointF.Y) {
                return 90;
            }
            return 270;
        }
        pointF = this.Center.clone();
        if (Math.abs(center.X - pointF.X) > Math.abs(center.Y - pointF.Y)) {
            if (center.X >= pointF.X) {
                return 0;
            }
            return 180;
        }
        if (center.Y >= pointF.Y) {
            return 90;
        }
        return 270;
    };
    TuPort.prototype.getToLinkPoint = function (link) {
        var point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
        var goSubGraph = this.findVisibleCollapsedSubGraph();
        if (goSubGraph != null && goSubGraph.Port != null && goSubGraph.Port != null && !link.TuObject.isChildOf(goSubGraph)) {
            return goSubGraph.Port.getToLinkPoint(link);
        }
        if (this.ToSpot !== _Spot__WEBPACK_IMPORTED_MODULE_6__.NoSpot) {
            var portObject = this.PortObject;
            if (portObject == null || portObject.Layer == null && _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_14__.TuObject.FindCommonParent(this, portObject) == null) {
                portObject = this;
            }
            return portObject.GetSpotLocation(this.ToSpot);
        }
        if (link == null || link.FromPort == null || link.FromPort.TuObject == null) {
            return this.Center.clone();
        }
        var realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLink);
        if (realLink == null && _tuval_core__WEBPACK_IMPORTED_MODULE_4__.is.typeof(link, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuLabeledLink)) {
            realLink = link.RealLink;
        }
        if (realLink != null) {
            if (realLink.PointsCount > (realLink.Orthogonal ? 6 : 2)) {
                var goLink = realLink;
                point = goLink.getPoint(goLink.PointsCount - 2);
                if (realLink.Orthogonal) {
                    point = this.orthoPointToward(point.clone());
                    return this.getLinkPointFromPoint(point.clone());
                }
                var linkPointFromPoint = this.getLinkPointFromPoint(point);
                if (linkPointFromPoint.Equals(this.Center.clone())) {
                    var goLink1 = realLink;
                    linkPointFromPoint = this.getLinkPointFromPoint(goLink1.getPoint(goLink1.PointsCount - 3));
                    if (linkPointFromPoint.Equals(this.Center) && realLink.PointsCount > 3) {
                        linkPointFromPoint = this.getLinkPointFromPoint(realLink.getPoint(0));
                    }
                }
                return linkPointFromPoint.clone();
            }
        }
        point = link.FromPort.TuObject.Center.clone();
        if (realLink != null && realLink.Orthogonal) {
            point = this.orthoPointToward(point.clone());
        }
        return this.getLinkPointFromPoint(point.clone());
    };
    TuPort.prototype.internalAddLink = function (link, undoing) {
        if (!this.myLinks.Contains(link)) {
            this.myLinks.Add(link);
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedAddedLink, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.onLinkChanged(link, _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedAddedLink, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    TuPort.prototype.internalRemoveLink = function (link, undoing) {
        var int32 = this.myLinks.IndexOf(link);
        if (int32 >= 0) {
            this.myLinks.RemoveAt(int32);
            this.Changed(_TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedRemovedLink, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.onLinkChanged(link, _TuPortEvents__WEBPACK_IMPORTED_MODULE_1__.TuPortEvents.ChangedRemovedLink, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, link, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    TuPort.isInSameNode = function (a, b) {
        if (a == null || b == null) {
            return false;
        }
        if (a === b) {
            return true;
        }
        var node = a.Node;
        if (node == null && a.TuObject != null) {
            node = a.TuObject.TopLevelObject;
        }
        var topLevelObject = b.Node;
        if (topLevelObject == null && b.TuObject != null) {
            topLevelObject = b.TuObject.TopLevelObject;
        }
        if (node == null) {
            return false;
        }
        return node === topLevelObject;
    };
    TuPort.prototype.isInSameNode = function (p) {
        return TuPort_1.isInSameNode(this, p);
    };
    TuPort.isLinked = function (a, b) {
        var flag;
        if (a == null || b == null) {
            return false;
        }
        var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(b, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort);
        if (goPort == null) {
            var enumerator = b.Links.GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var current = enumerator.Current;
                    if (current.FromPort !== a || current.ToPort !== b) {
                        continue;
                    }
                    flag = true;
                    return flag;
                }
                return false;
            }
            finally {
                enumerator.Dispose();
            }
        }
        else {
            var goPortLinkEnumerators = goPort.Links.GetEnumerator();
            try {
                while (goPortLinkEnumerators.MoveNext()) {
                    var goLink = goPortLinkEnumerators.Current;
                    if (goLink.FromPort !== a || goLink.ToPort !== b) {
                        continue;
                    }
                    flag = true;
                    return flag;
                }
                return false;
            }
            finally {
                goPortLinkEnumerators.Dispose();
            }
        }
        return flag;
    };
    TuPort.prototype.isLinked = function (p) {
        return TuPort_1.isLinked(this, p);
    };
    TuPort.prototype.isValidLink = function (toPort) {
        if (!this.canLinkFrom() || toPort == null || !toPort.canLinkTo() ||
            (!this.IsValidSelfNode || !_tuval_core__WEBPACK_IMPORTED_MODULE_4__.is.typeof(toPort.TuObject, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort) || !((0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(toPort.TuObject, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort)).IsValidSelfNode) &&
                this.isInSameNode(toPort) || (!this.IsValidDuplicateLinks || !_tuval_core__WEBPACK_IMPORTED_MODULE_4__.is.typeof(toPort.TuObject, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort) || !((0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(toPort.TuObject, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort)).IsValidDuplicateLinks) &&
            this.isLinked(toPort)) {
            return false;
        }
        return this.cycleOK(toPort);
    };
    TuPort.prototype.linksOnPortChanged = function (subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
        var _this = this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.foreach)(this.Links, function (link) {
            if (link != null) {
                link.onPortChanged(_this, subhint, oldI, oldVal, oldRect, newI, newVal, newRect);
            }
            if (subhint !== _TuObjectEvents__WEBPACK_IMPORTED_MODULE_16__.TuObjectEvents.ChangedBounds) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_4__.CONTINUE;
            }
            var otherPort = link.getOtherPort(_this);
            if (otherPort == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_4__.CONTINUE;
            }
            var goBoxPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.as)(otherPort, _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuBoxPort);
            if (goBoxPort == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_4__.CONTINUE;
            }
            goBoxPort.updateAllLinkPoints();
        });
    };
    TuPort.prototype.makePath = function () {
        var graphicsPath = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_17__.GraphicsPath(_tuval_graphics__WEBPACK_IMPORTED_MODULE_17__.FillMode.Winding);
        var bounds = this.Bounds.clone();
        switch (this.Style) {
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.None:
                {
                    graphicsPath.addLine(bounds.X, bounds.Y, bounds.X, bounds.Y);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object:
                {
                    graphicsPath.addLine(bounds.X, bounds.Y, bounds.X, bounds.Y);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Diamond | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Plus | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Diamond | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Plus | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Times | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle:
                {
                    graphicsPath.addEllipse(bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleTopLeft:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleTopRight:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleBottomRight:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleBottomLeft:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleTop:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleRight:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleBottom:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleLeft:
                {
                    var pointFArray = new Array(3);
                    for (var i = 0; i < pointFArray.length; i++) {
                        pointFArray[i] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
                    }
                    this.computeTrianglePoints(pointFArray);
                    graphicsPath.addPolygon(pointFArray);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle:
                {
                    graphicsPath.addRectangle(bounds);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Diamond:
                {
                    var x = new Array(4);
                    for (var i = 0; i < x.length; i++) {
                        x[i] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
                    }
                    x[0].X = bounds.X + bounds.Width / 2;
                    x[0].Y = bounds.Y;
                    x[1].X = bounds.X + bounds.Width;
                    x[1].Y = bounds.Y + bounds.Height / 2;
                    x[2].X = x[0].X;
                    x[2].Y = bounds.Y + bounds.Height;
                    x[3].X = bounds.X;
                    x[3].Y = x[1].Y;
                    graphicsPath.addPolygon(x);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Plus:
                {
                    graphicsPath.addLine(bounds.X + bounds.Width / 2, bounds.Y, bounds.X + bounds.Width / 2, bounds.Y + bounds.Height);
                    graphicsPath.startFigure();
                    graphicsPath.addLine(bounds.X, bounds.Y + bounds.Height / 2, bounds.X + bounds.Width, bounds.Y + bounds.Height / 2);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Times:
                {
                    graphicsPath.addLine(bounds.X, bounds.Y, bounds.X + bounds.Width, bounds.Y + bounds.Height);
                    graphicsPath.startFigure();
                    graphicsPath.addLine(bounds.X + bounds.Width, bounds.Y, bounds.X, bounds.Y + bounds.Height);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
                {
                    graphicsPath.addLine(bounds.X + bounds.Width / 2, bounds.Y, bounds.X + bounds.Width / 2, bounds.Y + bounds.Height);
                    graphicsPath.startFigure();
                    graphicsPath.addLine(bounds.X, bounds.Y + bounds.Height / 2, bounds.X + bounds.Width, bounds.Y + bounds.Height / 2);
                    graphicsPath.startFigure();
                    graphicsPath.addLine(bounds.X, bounds.Y, bounds.X + bounds.Width, bounds.Y + bounds.Height);
                    graphicsPath.startFigure();
                    graphicsPath.addLine(bounds.X + bounds.Width, bounds.Y, bounds.X, bounds.Y + bounds.Height);
                    break;
                }
            default:
                {
                    graphicsPath.addEllipse(bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    break;
                }
        }
        return graphicsPath;
    };
    TuPort.prototype.OnBoundsChanged = function (old) {
        _super.prototype.OnBoundsChanged.call(this, old);
        this.linksOnPortChanged(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_16__.TuObjectEvents.ChangedBounds, 0, undefined, old, 0, undefined, this.Bounds.clone());
    };
    TuPort.prototype.OnLayerChanged = function (oldlayer, newlayer, mainObj) {
        _super.prototype.OnLayerChanged.call(this, oldlayer, newlayer, mainObj);
        if (newlayer == null && this.ClearsLinksWhenRemoved && !this.NoClearLinks) {
            this._clearLinks(mainObj);
        }
    };
    TuPort.prototype.onLinkChanged = function (l, subhint, oldI, oldVal, oldRect, newI, newVal, newRect) {
    };
    TuPort.prototype.orthoPointToward = function (p) {
        var center = this.Center.clone();
        if (Math.abs(p.X - center.X) <= Math.abs(p.Y - center.Y)) {
            if (p.Y < center.Y) {
                p.Y = -9999999;
            }
            else {
                p.Y = 9999999;
            }
            p.X = center.X;
        }
        else {
            if (p.X < center.X) {
                p.X = -9999999;
            }
            else {
                p.X = 9999999;
            }
            p.Y = center.Y;
        }
        return p;
    };
    TuPort.prototype.Paint = function (g, view) {
        if (this.paintGreek(g, view)) {
            return;
        }
        var bounds = this.Bounds.clone();
        switch (this.Style) {
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.None:
                {
                    return;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object:
                {
                    var portObject = this.PortObject;
                    if (portObject == null || portObject.Layer != null) {
                        break;
                    }
                    portObject.Bounds = bounds;
                    portObject.Paint(g, view);
                    return;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Diamond | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Plus | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Diamond | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Plus | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Times | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Object | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Ellipse | _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawEllipse(g, view, this.Pen, this.Brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    break;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Triangle:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleTopLeft:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleTopRight:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleBottomRight:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleBottomLeft:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleTop:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleRight:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleBottom:
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.TriangleMiddleLeft:
                {
                    var pointFArray = view.allocTempPointArray(3);
                    this.computeTrianglePoints(pointFArray);
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawPolygon(g, view, this.Pen, this.Brush, pointFArray);
                    view.freeTempPointArray(pointFArray);
                    return;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Rectangle:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawRectangle(g, view, this.Pen, this.Brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    return;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Diamond:
                {
                    var x = view.allocTempPointArray(4);
                    x[0].X = bounds.X + bounds.Width / 2;
                    x[0].Y = bounds.Y;
                    x[1].X = bounds.X + bounds.Width;
                    x[1].Y = bounds.Y + bounds.Height / 2;
                    x[2].X = x[0].X;
                    x[2].Y = bounds.Y + bounds.Height;
                    x[3].X = bounds.X;
                    x[3].Y = x[1].Y;
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawPolygon(g, view, this.Pen, this.Brush, x);
                    view.freeTempPointArray(x);
                    return;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Plus:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X + bounds.Width / 2, bounds.Y, bounds.X + bounds.Width / 2, bounds.Y + bounds.Height);
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X, bounds.Y + bounds.Height / 2, bounds.X + bounds.Width, bounds.Y + bounds.Height / 2);
                    return;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.Times:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X, bounds.Y, bounds.X + bounds.Width, bounds.Y + bounds.Height);
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X + bounds.Width, bounds.Y, bounds.X, bounds.Y + bounds.Height);
                    return;
                }
            case _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.PlusTimes:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X + bounds.Width / 2, bounds.Y, bounds.X + bounds.Width / 2, bounds.Y + bounds.Height);
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X, bounds.Y + bounds.Height / 2, bounds.X + bounds.Width, bounds.Y + bounds.Height / 2);
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X, bounds.Y, bounds.X + bounds.Width, bounds.Y + bounds.Height);
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawLine(g, view, this.Pen, bounds.X + bounds.Width, bounds.Y, bounds.X, bounds.Y + bounds.Height);
                    return;
                }
            default:
                {
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawEllipse(g, view, this.Pen, this.Brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
                    break;
                }
        }
    };
    TuPort.prototype.paintGreek = function (g, view) {
        var docScale = view.DocScale;
        var paintNothingScale = view.PaintNothingScale;
        var worldScale = view.WorldScale;
        var height = paintNothingScale / worldScale.Height;
        var paintGreekScale = view.PaintGreekScale;
        worldScale = view.WorldScale;
        var single = paintGreekScale / worldScale.Height;
        if (view.IsPrinting) {
            height = height / 4;
            single = single / 4;
        }
        if (docScale <= height) {
            return true;
        }
        if (docScale > single) {
            return false;
        }
        if (this.Style !== _TuPortStyle__WEBPACK_IMPORTED_MODULE_2__.TuPortStyle.None) {
            var bounds = this.Bounds.clone();
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.DrawRectangle(g, view, this.Pen, this.Brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
        }
        return true;
    };
    TuPort.prototype.removeLink = function (link) {
        this.internalRemoveLink(link, false);
    };
    var TuPort_1;
    TuPort.myLinksRedirectedToSubGraphPort = false;
    TuPort = TuPort_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_4__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort,
            name: 'TuObject',
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuPort,
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuPort,
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuGraphPart,
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.ITuIdentifiablePart
            ]
        })
    ], TuPort);
    return TuPort;
}(_TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape));



/***/ }),

/***/ "./src/TuPort/TuPortEvents.ts":
/*!************************************!*\
  !*** ./src/TuPort/TuPortEvents.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPortEvents": () => (/* binding */ TuPortEvents)
/* harmony export */ });
/* harmony import */ var _TuShape_TuShapeEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuShape/TuShapeEvents */ "./src/TuShape/TuShapeEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuPortEvents = /** @class */ (function (_super) {
    __extends(TuPortEvents, _super);
    function TuPortEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuPortEvents.ChangedPortUserFlags = 1700;
    TuPortEvents.ChangedPortUserObject = 1701;
    TuPortEvents.ChangedStyle = 1702;
    TuPortEvents.ChangedObject = 1703;
    TuPortEvents.ChangedValidFrom = 1704;
    TuPortEvents.ChangedValidTo = 1705;
    TuPortEvents.ChangedValidSelfNode = 1706;
    TuPortEvents.ChangedFromSpot = 1707;
    TuPortEvents.ChangedToSpot = 1708;
    TuPortEvents.ChangedAddedLink = 1709;
    TuPortEvents.ChangedRemovedLink = 1710;
    TuPortEvents.ChangedValidDuplicateLinks = 1711;
    TuPortEvents.ChangedEndSegmentLength = 1712;
    TuPortEvents.ChangedPartID = 1713;
    TuPortEvents.ChangedClearsLinksWhenRemoved = 1714;
    TuPortEvents.ChangedValidSingleLink = 1715;
    TuPortEvents[1700] = 'ChangedPortUserFlags';
    TuPortEvents[1701] = 'ChangedPortUserObject';
    TuPortEvents[1702] = 'ChangedStyle';
    TuPortEvents[1703] = 'ChangedObject';
    TuPortEvents[1704] = 'ChangedValidFrom';
    TuPortEvents[1705] = 'ChangedValidTo';
    TuPortEvents[1706] = 'ChangedValidSelfNode';
    TuPortEvents[1707] = 'ChangedFromSpot';
    TuPortEvents[1708] = 'ChangedToSpot';
    TuPortEvents[1709] = 'ChangedAddedLink';
    TuPortEvents[1710] = 'ChangedRemovedLink';
    TuPortEvents[1711] = 'ChangedValidDuplicateLinks';
    TuPortEvents[1712] = 'ChangedEndSegmentLength';
    TuPortEvents[1713] = 'ChangedPartID';
    TuPortEvents[1714] = 'ChangedClearsLinksWhenRemoved';
    TuPortEvents[1715] = 'ChangedValidSingleLink';
    return TuPortEvents;
}(_TuShape_TuShapeEvents__WEBPACK_IMPORTED_MODULE_0__.TuShapeEvents));



/***/ }),

/***/ "./src/TuPort/TuPortFilteredLinkEnumerator.ts":
/*!****************************************************!*\
  !*** ./src/TuPort/TuPortFilteredLinkEnumerator.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPortFilteredLinkEnumerator": () => (/* binding */ TuPortFilteredLinkEnumerator)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuPortFilteredLinkEnumerator = /** @class */ (function (_super) {
    __extends(TuPortFilteredLinkEnumerator, _super);
    function TuPortFilteredLinkEnumerator(p, a, dest) {
        var _this = _super.call(this) || this;
        _this.isEndless = false;
        _this.myPort = p;
        _this.myArray = a;
        _this.myIndex = -1;
        _this.myDest = dest;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuPortFilteredLinkEnumerator.prototype, "Current", {
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.InvalidOperationException("Port.PortFilteredLinkEnumerator is not at a valid position for the List");
            }
            return this.myArray[this.myIndex];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPortFilteredLinkEnumerator.prototype, "First", {
        get: function () {
            for (var i = 0; i < this.myArray.Count; i++) {
                var item = this.myArray[i];
                if (this.myDest) {
                    if (item.FromPort === this.myPort) {
                        return item;
                    }
                }
                else if (item.ToPort === this.myPort) {
                    return item;
                }
            }
            return undefined;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPortFilteredLinkEnumerator.prototype, "Last", {
        get: function () {
            for (var i = this.myArray.Count - 1; i >= 0; i++) {
                var item = this.myArray[i];
                if (this.myDest) {
                    if (item.FromPort === this.myPort) {
                        return item;
                    }
                }
                else if (item.ToPort === this.myPort) {
                    return item;
                }
            }
            return undefined;
        },
        enumerable: false,
        configurable: true
    });
    TuPortFilteredLinkEnumerator.prototype.GetEnumerator = function () {
        var goPortFilteredLinkEnumerators = this;
        goPortFilteredLinkEnumerators.Reset();
        return goPortFilteredLinkEnumerators;
    };
    TuPortFilteredLinkEnumerator.prototype.MoveNext = function () {
        if (this.myIndex + 1 >= this.myArray.Count) {
            return false;
        }
        this.myIndex = this.myIndex + 1;
        var item = this.myArray[this.myIndex];
        if (this.myDest) {
            if (item.FromPort !== this.myPort) {
                return this.MoveNext();
            }
        }
        else if (item.ToPort !== this.myPort) {
            return this.MoveNext();
        }
        return true;
    };
    /// <summary>
    /// Reset the enumerator to its original position.
    /// </summary>
    TuPortFilteredLinkEnumerator.prototype.Reset = function () {
        this.myIndex = -1;
    };
    TuPortFilteredLinkEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('tryMoveNext not implemented in PortFilteredLinkEnumerator');
    };
    TuPortFilteredLinkEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('end not implemented in PortFilteredLinkEnumerator');
    };
    TuPortFilteredLinkEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('nextValue not implemented in PortFilteredLinkEnumerator');
    };
    TuPortFilteredLinkEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('next not implemented in PortFilteredLinkEnumerator');
    };
    TuPortFilteredLinkEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('return not implemented in PortFilteredLinkEnumerator');
    };
    TuPortFilteredLinkEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('throw not implemented in PortFilteredLinkEnumerator');
    };
    TuPortFilteredLinkEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuPortFilteredLinkEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuPortFilteredLinkEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Disposable.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IIterator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_0__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuPortFilteredLinkEnumerator);
    return TuPortFilteredLinkEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.DisposableBase));



/***/ }),

/***/ "./src/TuPort/TuPortLinkEnumerator.ts":
/*!********************************************!*\
  !*** ./src/TuPort/TuPortLinkEnumerator.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPortLinkEnumerator": () => (/* binding */ TuPortLinkEnumerator)
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TuPortLinkEnumerator = /** @class */ (function (_super) {
    __extends(TuPortLinkEnumerator, _super);
    function TuPortLinkEnumerator(a) {
        var _this = _super.call(this) || this;
        _this.isEndless = false;
        _this.myArray = a;
        _this.myIndex = -1;
        _this.Reset();
        return _this;
    }
    Object.defineProperty(TuPortLinkEnumerator.prototype, "Current", {
        get: function () {
            if (this.myIndex < 0 || this.myIndex >= this.myArray.Count) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.InvalidOperationException("TuPort.GoPortLinkEnumerator is not at a valid position for the List");
            }
            return this.myArray[this.myIndex];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPortLinkEnumerator.prototype, "First", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return undefined;
            }
            return this.myArray[0];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPortLinkEnumerator.prototype, "Last", {
        get: function () {
            if (this.myArray.Count <= 0) {
                return undefined;
            }
            return this.myArray[this.myArray.Count - 1];
        },
        enumerable: false,
        configurable: true
    });
    TuPortLinkEnumerator.prototype.GetEnumerator = function () {
        var goPortLinkEnumerators = this;
        goPortLinkEnumerators.Reset();
        return goPortLinkEnumerators;
    };
    /// <summary>
    /// Advance the enumerator to the next IGoLink.
    /// </summary>
    /// <returns>True if there is a next IGoLink; false if it has finished iterating over the collection.</returns>
    TuPortLinkEnumerator.prototype.MoveNext = function () {
        if (this.myIndex + 1 >= this.myArray.Count) {
            return false;
        }
        this.myIndex = this.myIndex + 1;
        return true;
    };
    /// <summary>
    /// Reset the enumerator to its original position.
    /// </summary>
    TuPortLinkEnumerator.prototype.Reset = function () {
        this.myIndex = -1;
    };
    TuPortLinkEnumerator.prototype.TryMoveNext = function (out) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('tryMoveNext not implemented in TuPortLinkEnumerator');
    };
    TuPortLinkEnumerator.prototype.End = function () {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('end not implemented in TuPortLinkEnumerator');
    };
    TuPortLinkEnumerator.prototype.NextValue = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('nextValue not implemented in TuPortLinkEnumerator');
    };
    TuPortLinkEnumerator.prototype.Next = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('next not implemented in TuPortLinkEnumerator');
    };
    TuPortLinkEnumerator.prototype['return'] = function (value) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('return not implemented in TuPortLinkEnumerator');
    };
    TuPortLinkEnumerator.prototype['throw'] = function (e) {
        throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.error)('throw not implemented in TuPortLinkEnumerator');
    };
    TuPortLinkEnumerator = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuPortFilteredLinkEnumerator,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.TuPortFilteredLinkEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Disposable.DisposableBase,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IEnumerator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IIterator,
                _tuval_core__WEBPACK_IMPORTED_MODULE_1__.System.Types.Collections.Enumeration.IEnumerable
            ]
        })
    ], TuPortLinkEnumerator);
    return TuPortLinkEnumerator;
}(_tuval_core__WEBPACK_IMPORTED_MODULE_1__.DisposableBase));



/***/ }),

/***/ "./src/TuPort/TuPortStyle.ts":
/*!***********************************!*\
  !*** ./src/TuPort/TuPortStyle.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPortStyle": () => (/* binding */ TuPortStyle)
/* harmony export */ });
var TuPortStyle;
(function (TuPortStyle) {
    TuPortStyle[TuPortStyle["None"] = 0] = "None";
    TuPortStyle[TuPortStyle["Object"] = 1] = "Object";
    TuPortStyle[TuPortStyle["Ellipse"] = 2] = "Ellipse";
    TuPortStyle[TuPortStyle["Triangle"] = 3] = "Triangle";
    TuPortStyle[TuPortStyle["Rectangle"] = 4] = "Rectangle";
    TuPortStyle[TuPortStyle["Diamond"] = 5] = "Diamond";
    TuPortStyle[TuPortStyle["Plus"] = 6] = "Plus";
    TuPortStyle[TuPortStyle["Times"] = 7] = "Times";
    TuPortStyle[TuPortStyle["PlusTimes"] = 8] = "PlusTimes";
    TuPortStyle[TuPortStyle["TriangleTopLeft"] = 20] = "TriangleTopLeft";
    TuPortStyle[TuPortStyle["TriangleTopRight"] = 21] = "TriangleTopRight";
    TuPortStyle[TuPortStyle["TriangleBottomRight"] = 22] = "TriangleBottomRight";
    TuPortStyle[TuPortStyle["TriangleBottomLeft"] = 23] = "TriangleBottomLeft";
    TuPortStyle[TuPortStyle["TriangleMiddleTop"] = 24] = "TriangleMiddleTop";
    TuPortStyle[TuPortStyle["TriangleMiddleRight"] = 25] = "TriangleMiddleRight";
    TuPortStyle[TuPortStyle["TriangleMiddleBottom"] = 26] = "TriangleMiddleBottom";
    TuPortStyle[TuPortStyle["TriangleMiddleLeft"] = 27] = "TriangleMiddleLeft";
})(TuPortStyle || (TuPortStyle = {}));


/***/ }),

/***/ "./src/TuRectangle/TuRectangle.tsx":
/*!*****************************************!*\
  !*** ./src/TuRectangle/TuRectangle.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuRectangle": () => (/* binding */ TuRectangle)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuRectangle = /** @class */ (function (_super) {
    __extends(TuRectangle, _super);
    function TuRectangle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /*   public CreateElements(param: any) {
         const view: TuView = param;
         const result = [];
         if (view.RenderingMode === ViewRenderingMode.Svg) {
             //TuRectangleSvgRenderer.Apply(result, this);
 
             const renderer = new TuShapeSvgRenderer();
             renderer.Render(result,view, this);
 
         } else if (view.RenderingMode === ViewRenderingMode.Html) {
             TuRectangleHtmlRenderer.Apply(result, this);
         }
 
 
 
 
         return result;
     } */
    TuRectangle.prototype.Paint = function (g, view) {
        var brush = this.Brush;
        var bounds = this.Bounds;
        if (this.Shadowed) {
            var shadowOffset = this.GetShadowOffset(view);
            if (brush != null) {
                var shadowBrush = this.GetShadowBrush(view);
                _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__.TuShape.DrawRectangle(g, view, undefined, shadowBrush, bounds.X + shadowOffset.Width, bounds.Y + shadowOffset.Height, bounds.Width, bounds.Height);
            }
            else if (this.Pen != null) {
                var shadowPen = this.GetShadowPen(view, this.PenWidth);
                _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__.TuShape.DrawRectangle(g, view, shadowPen, null, bounds.X + shadowOffset.Width, bounds.Y + shadowOffset.Height, bounds.Width, bounds.Height);
            }
        }
        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__.TuShape.DrawRectangle(g, view, this.Pen, brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
        /*   const ctx: CanvasRenderingContext2D = (<any>g.context).canvasContext;
          ctx.beginPath();
          (<any>ctx).lineWidth = "5";
          ctx.strokeStyle = "green"; // Green path
          ctx.moveTo(this.Bounds.X, this.Bounds.Y);
          ctx.lineTo(100, 100);
          ctx.stroke(); // Draw it

          ctx.beginPath();
          ctx.strokeStyle = "purple"; // Purple path
          ctx.moveTo(this.Bounds.X + 10, this.Bounds.Y +10);
          ctx.lineTo(90, 90);
          ctx.stroke(); // Draw it */
    };
    TuRectangle = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuRectangle,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuRectangle
            ]
        })
    ], TuRectangle);
    return TuRectangle;
}(_TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__.TuShape));



/***/ }),

/***/ "./src/TuRectangle/TuRectangleButton.tsx":
/*!***********************************************!*\
  !*** ./src/TuRectangle/TuRectangleButton.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuRectangleButton": () => (/* binding */ TuRectangleButton)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuRectangleSvgRenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TuRectangleSvgRenderer */ "./src/TuRectangle/TuRectangleSvgRenderer.tsx");
/* harmony import */ var _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuView/ViewRenderingMode */ "./src/TuView/ViewRenderingMode.ts");
/* harmony import */ var _TuRectangleButtonHtmlRenderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TuRectangleButtonHtmlRenderer */ "./src/TuRectangle/TuRectangleButtonHtmlRenderer.tsx");
/* harmony import */ var _TuRectangle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TuRectangle */ "./src/TuRectangle/TuRectangle.tsx");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var TuRectangleButton = /** @class */ (function (_super) {
    __extends(TuRectangleButton, _super);
    function TuRectangleButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuRectangleButton.prototype.SetupControlDefaults = function () {
        _super.prototype.SetupControlDefaults.call(this);
        ///this.button = new Button();
        this.button.Text = 'Set Width';
        this.button.Color = 1;
    };
    TuRectangleButton.prototype.CreateElements = function (param) {
        var view = param;
        var result = [];
        if (view.RenderingMode === _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_5__.ViewRenderingMode.Svg) {
            _TuRectangleSvgRenderer__WEBPACK_IMPORTED_MODULE_4__.TuRectangleSvgRenderer.Apply(result, this);
        }
        else if (view.RenderingMode === _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_5__.ViewRenderingMode.Html) {
            _TuRectangleButtonHtmlRenderer__WEBPACK_IMPORTED_MODULE_6__.TuRectangleButtonHtmlRenderer.Apply(result, this);
        }
        /* const bounds: CGRectangle = this.Bounds;

        let fillColor: string = 'transparent';

        if (this.Brush != null) {
            const brush: SolidBrush = as(this.Brush, GraphicTypes.SolidBrush);
            if (brush != null) {
                fillColor = brush.Color.toString('#rrggbb');
            }
        }

        const pen = this.Pen;
        let strokeColor = 'transparent';
        let strokeWidth = 0;
        if (this.Pen != null) {
            strokeColor = pen.Color.toString('#rrggbb');
            strokeWidth = pen.Width;
        }

        return (
            <rect
                x={bounds.X}
                y={bounds.Y}
                rx={0}
                ry={0}
                width={bounds.Width}
                height={bounds.Height}
                stroke={strokeColor}
                stroke-width={strokeWidth}
                fill={fillColor}>
            </rect>
        ); */
        return result;
    };
    TuRectangleButton.prototype.Paint = function (g, view) {
        var brush = this.Brush;
        var bounds = this.Bounds;
        if (this.Shadowed) {
            var shadowOffset = this.GetShadowOffset(view);
            if (brush != null) {
                var shadowBrush = this.GetShadowBrush(view);
                _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__.TuShape.DrawRectangle(g, view, undefined, shadowBrush, bounds.X + shadowOffset.Width, bounds.Y + shadowOffset.Height, bounds.Width, bounds.Height);
            }
            else if (this.Pen != null) {
                var shadowPen = this.GetShadowPen(view, this.PenWidth);
                _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__.TuShape.DrawRectangle(g, view, shadowPen, null, bounds.X + shadowOffset.Width, bounds.Y + shadowOffset.Height, bounds.Width, bounds.Height);
            }
        }
        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_1__.TuShape.DrawRectangle(g, view, this.Pen, brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
        /*   const ctx: CanvasRenderingContext2D = (<any>g.context).canvasContext;
          ctx.beginPath();
          (<any>ctx).lineWidth = "5";
          ctx.strokeStyle = "green"; // Green path
          ctx.moveTo(this.Bounds.X, this.Bounds.Y);
          ctx.lineTo(100, 100);
          ctx.stroke(); // Draw it

          ctx.beginPath();
          ctx.strokeStyle = "purple"; // Purple path
          ctx.moveTo(this.Bounds.X + 10, this.Bounds.Y +10);
          ctx.lineTo(90, 90);
          ctx.stroke(); // Draw it */
    };
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_2__.State)()
    ], TuRectangleButton.prototype, "button", void 0);
    TuRectangleButton = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuRectangle,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_3__.Types.TuRectangle
            ]
        })
    ], TuRectangleButton);
    return TuRectangleButton;
}(_TuRectangle__WEBPACK_IMPORTED_MODULE_7__.TuRectangle));



/***/ }),

/***/ "./src/TuRectangle/TuRectangleButtonHtmlRenderer.tsx":
/*!***********************************************************!*\
  !*** ./src/TuRectangle/TuRectangleButtonHtmlRenderer.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuRectangleButtonHtmlRenderer": () => (/* binding */ TuRectangleButtonHtmlRenderer)
/* harmony export */ });
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_2__);



var TuRectangleButtonHtmlRenderer = /** @class */ (function () {
    function TuRectangleButtonHtmlRenderer() {
    }
    TuRectangleButtonHtmlRenderer.Apply = function (result, rectangleObject) {
        var bounds = rectangleObject.Bounds;
        var fillColor = 'transparent';
        if (rectangleObject.Brush != null) {
            var brush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.as)(rectangleObject.Brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.GraphicTypes.SolidBrush);
            if (brush != null) {
                fillColor = brush.Color.toString('#rrggbb');
            }
        }
        var pen = rectangleObject.Pen;
        var strokeColor = 'transparent';
        var strokeWidth = 0;
        if (rectangleObject.Pen != null) {
            strokeColor = pen.Color.toString('#rrggbb');
            strokeWidth = pen.Width;
        }
        var style = {};
        style['position'] = 'absolute';
        style['left'] = bounds.X + 'px';
        style['top'] = bounds.Y + 'px';
        style['width'] = bounds.Width + 'px';
        style['height'] = bounds.Height + 'px';
        style['backgroundColor'] = fillColor;
        style['borderColor'] = strokeColor;
        style['borderWidth'] = strokeWidth;
        style['borderStyle'] = 'solid';
        style['overflow'] = 'hidden';
        style['box-shadow'] = 'rgb(0 0 0 / 12%) 0px 1px 1px, rgb(0 0 0 / 12%) 0px 2px 2px, rgb(0 0 0 / 12%) 0px 4px 4px, rgb(0 0 0 / 12%) 0px 8px 8px, rgb(0 0 0 / 12%) 0px 16px 16px';
        var styleMask = {};
        styleMask['position'] = 'absolute';
        styleMask['left'] = '0px';
        styleMask['top'] = '0px';
        styleMask['width'] = bounds.Width + 'px';
        styleMask['height'] = bounds.Height + 'px';
        styleMask['backgroundColor'] = 'transparent';
        styleMask['borderColor'] = 'transparent';
        styleMask['borderWidth'] = 0;
        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("div", { class: 'TuRectangleButton' },
            _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("div", { style: style },
                rectangleObject.button.CreateMainElement(),
                _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("div", { style: styleMask }))));
    };
    return TuRectangleButtonHtmlRenderer;
}());



/***/ }),

/***/ "./src/TuRectangle/TuRectangleSvgRenderer.tsx":
/*!****************************************************!*\
  !*** ./src/TuRectangle/TuRectangleSvgRenderer.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuRectangleSvgRenderer": () => (/* binding */ TuRectangleSvgRenderer)
/* harmony export */ });
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Matrix */ "./src/Matrix.ts");



var TuRectangleSvgRenderer = /** @class */ (function () {
    function TuRectangleSvgRenderer() {
    }
    TuRectangleSvgRenderer.Apply = function (result, rectangleObject) {
        var bounds = rectangleObject.Bounds;
        var fillColor = 'transparent';
        if (rectangleObject.Brush != null) {
            var brush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(rectangleObject.Brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.GraphicTypes.SolidBrush);
            if (brush != null) {
                fillColor = brush.Color.toString('#rrggbb');
            }
        }
        var pen = rectangleObject.Pen;
        var strokeColor = 'transparent';
        var strokeWidth = 0;
        if (rectangleObject.Pen != null) {
            strokeColor = pen.Color.toString('#rrggbb');
            strokeWidth = pen.Width;
        }
        var matrix = new _Matrix__WEBPACK_IMPORTED_MODULE_2__.SvgMatrix();
        matrix = matrix.translate(0.5, 0.5);
        result.push(
        /*  <g transform={matrix.transformString}> */
        { /* <rect
            x={bounds.X}
            y={bounds.Y}
            rx={0}
            ry={0}
            width={bounds.Width}
            height={bounds.Height}
            stroke={strokeColor}
            stroke-width={strokeWidth}
            shape-rendering="crispEdges"
            fill={fillColor}>
        </rect> */}
        /* </g> */
        );
    };
    return TuRectangleSvgRenderer;
}());



/***/ }),

/***/ "./src/TuSelection/TuSelection.ts":
/*!****************************************!*\
  !*** ./src/TuSelection/TuSelection.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuSelection": () => (/* binding */ TuSelection)
/* harmony export */ });
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var TuSelection = /** @class */ (function (_super) {
    __extends(TuSelection, _super);
    //#endregion
    function TuSelection(view) {
        var _this = _super.call(this) || this;
        _this.myObjTable = new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.Dictionary();
        _this.myHotSpot = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize();
        _this.myResizeHandlePenColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Black;
        _this.myFocused = true;
        _this.myView = view;
        _this.InternalChecksForDuplicates = false;
        return _this;
    }
    TuSelection.prototype.GetType = function () {
        return this.constructor['__type__'];
    };
    Object.defineProperty(TuSelection.prototype, "Focused", {
        //#region [Property] Focused
        get: function () {
            return this.getFocused();
        },
        set: function (value) {
            this.setFocused(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSelection.prototype.getFocused = function () {
        return this.myFocused;
    };
    TuSelection.prototype.setFocused = function (value) {
        this.myFocused = value;
    };
    Object.defineProperty(TuSelection.prototype, "HotSpot", {
        //#endregion
        //#region [Property] HotSpot
        get: function () {
            return this.getHotSpot();
        },
        set: function (value) {
            this.setHotSpot(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSelection.prototype.getHotSpot = function () {
        return this.myHotSpot;
    };
    TuSelection.prototype.setHotSpot = function (value) {
        this.myHotSpot = value;
        ;
    };
    Object.defineProperty(TuSelection.prototype, "Primary", {
        //#endregion
        //#region [Property] Primary
        get: function () {
            return this.getPrimary();
        },
        enumerable: false,
        configurable: true
    });
    TuSelection.prototype.getPrimary = function () {
        return this.First;
    };
    Object.defineProperty(TuSelection.prototype, "View", {
        //#endregion
        //#region [Property] View
        get: function () {
            return this.getView();
        },
        enumerable: false,
        configurable: true
    });
    TuSelection.prototype.getView = function () {
        return this.myView;
    };
    TuSelection.prototype.Add = function (obj) {
        if (obj == null) {
            return;
        }
        var view = this.View;
        if ((view == null || view.Selection !== this || this.Count < view.MaximumSelectionCount) && !this.Contains(obj)) {
            if (view != null && obj.Document !== view.Document && obj.View !== view) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.ArgumentException("Selected objects must belong to the view or its document");
            }
            this.AddToSelection(obj);
        }
    };
    TuSelection.prototype.addAllSelectionHandles = function () {
        var _this = this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.foreach)(this, function (goObject) {
            var selectionObject = goObject.SelectionObject;
            if (selectionObject == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_3__.CONTINUE;
            }
            if (!goObject.CanView()) {
                selectionObject.RemoveSelectionHandles(_this);
            }
            else {
                selectionObject.AddSelectionHandles(_this, goObject);
            }
        });
    };
    TuSelection.prototype.addHandle = function (obj, handle) {
        var obj1 = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.New.Out();
        if (this.myHandles == null) {
            this.myHandles = new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.Dictionary();
        }
        this.myHandles.TryGetValue(obj, obj1);
        if (obj1.value == null) {
            this.myHandles.Set(obj, handle);
        }
        else if (!(obj1.value instanceof _tuval_core__WEBPACK_IMPORTED_MODULE_3__.List)) {
            var goHandles = new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.List();
            goHandles.Add(obj1.value);
            goHandles.Add(handle);
            this.myHandles.Set(obj, goHandles);
        }
        else {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.convert)(obj1.value).Add(handle);
        }
        if (this.View) {
            this.View.Layers.Default.Add(handle.TuObject);
        }
    };
    TuSelection.prototype.addRange = function (coll) {
        if (coll == null) {
            return;
        }
        if (coll.IsEmpty) {
            return;
        }
        var view = this.View;
        if (view != null) {
            view.raiseSelectionStarting();
        }
        _super.prototype.AddRange.call(this, coll);
        if (view != null) {
            view.raiseSelectionFinished();
        }
    };
    TuSelection.prototype.AddToSelection = function (obj) {
        var primary = this.Primary;
        _super.prototype.Add.call(this, obj);
        this.myObjTable.Set(obj, true);
        var view = this.View;
        if (view != null) {
            if (obj.IsInDocument) {
                obj.OnGotSelection(this);
            }
            view.raiseObjectGotSelection(obj);
            if (primary != null && this.Primary !== primary && primary.IsInDocument) {
                primary.OnLostSelection(this);
                view.raiseObjectLostSelection(primary);
                primary.OnGotSelection(this);
                view.raiseObjectGotSelection(primary);
            }
        }
    };
    TuSelection.prototype.Clear = function () {
        var flag;
        var view = this.View;
        flag = (view == null ? false : this.Count > 1);
        if (flag) {
            view.raiseSelectionStarting();
        }
        var count = _super.prototype.Clear.call(this);
        if (flag) {
            view.raiseSelectionFinished();
        }
        return count;
    };
    TuSelection.prototype.Contains = function (obj) {
        if (obj == null) {
            return false;
        }
        return this.myObjTable.ContainsKey(obj);
    };
    TuSelection.prototype.createBoundingHandle = function (obj, selectedObj) {
        var goHandle = obj.CreateBoundingHandle();
        if (goHandle == null) {
            return null;
        }
        goHandle.SelectedObject = selectedObj;
        var goObject = goHandle.TuObject;
        if (goObject == null) {
            return undefined;
        }
        goObject.Selectable = false;
        var goShape = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuShape);
        if (goShape != null) {
            var lightGray = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray;
            var view = this.View;
            if (view != null) {
                if (!this.Focused) {
                    lightGray = view.NoFocusSelectionColor;
                }
                else {
                    lightGray = (this.Primary == null || this.Primary.SelectionObject !== obj ? view.SecondarySelectionColor : view.PrimarySelectionColor);
                }
            }
            var boundingHandlePenWidth = view.BoundingHandlePenWidth;
            var single = (boundingHandlePenWidth === 0 ? 0 : boundingHandlePenWidth / view.WorldScale.Width);
            if (this.myBoundingHandlePen == null || _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.GetPenColor(this.myBoundingHandlePen, lightGray).notEquals(lightGray) || _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.GetPenWidth(this.myBoundingHandlePen) !== single) {
                this.myBoundingHandlePen = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.NewPen(lightGray, single);
            }
            goShape.Pen = this.myBoundingHandlePen;
            goShape.Brush = null;
        }
        this.addHandle(obj, goHandle);
        return goHandle;
    };
    TuSelection.prototype.createResizeHandle = function (obj, selectedObj, loc, handleid, filled) {
        var worldScale;
        var width;
        var single;
        var goHandle = obj.CreateResizeHandle(handleid);
        if (goHandle == null) {
            return undefined;
        }
        goHandle.HandleID = handleid;
        goHandle.SelectedObject = selectedObj;
        var goObject = goHandle.TuObject;
        if (goObject == null) {
            return null;
        }
        var view = this.View;
        var size = goObject.Size;
        if (size.Width <= 0 || size.Height <= 0) {
            size = (view == null ? new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(6, 6) : view.ResizeHandleSize);
        }
        if (view != null) {
            var width1 = size.Width;
            worldScale = view.WorldScale;
            size.Width = width1 / worldScale.Width;
            var height = size.Height;
            worldScale = view.WorldScale;
            size.Height = height / worldScale.Height;
        }
        goObject.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(loc.X - size.Width / 2, loc.Y - size.Height / 2, size.Width, size.Height);
        if (handleid !== 0) {
            goObject.Selectable = true;
        }
        else {
            goObject.Selectable = false;
        }
        var goShape = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuShape);
        if (goShape != null) {
            var lightGray = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray;
            if (view != null) {
                if (!this.Focused) {
                    lightGray = view.NoFocusSelectionColor;
                }
                else {
                    lightGray = (this.Primary == null || this.Primary.SelectionObject !== obj ? view.SecondarySelectionColor : view.PrimarySelectionColor);
                }
            }
            if (!filled) {
                var resizeHandlePenWidth = view.ResizeHandlePenWidth;
                if (resizeHandlePenWidth === 0) {
                    width = 0;
                }
                else {
                    worldScale = view.WorldScale;
                    width = (resizeHandlePenWidth + 1) / worldScale.Width;
                }
                var single1 = width;
                if (this.myResizeHandlePen == null || _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.GetPenColor(this.myResizeHandlePen, lightGray).notEquals(lightGray) || _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.GetPenWidth(this.myResizeHandlePen) !== single1) {
                    this.myResizeHandlePen = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.NewPen(lightGray, single1);
                }
                goShape.Pen = this.myResizeHandlePen;
                goShape.Brush = undefined;
            }
            else {
                var resizeHandlePenWidth1 = view.ResizeHandlePenWidth;
                if (resizeHandlePenWidth1 === 0) {
                    single = 0;
                }
                else {
                    worldScale = view.WorldScale;
                    single = resizeHandlePenWidth1 / worldScale.Width;
                }
                var single2 = single;
                if (this.myResizeHandlePen == null || _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.GetPenColor(this.myResizeHandlePen, this.myResizeHandlePenColor).notEquals(this.myResizeHandlePenColor) || _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.GetPenWidth(this.myResizeHandlePen) !== single2) {
                    this.myResizeHandlePen = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_5__.TuShape.NewPen(this.myResizeHandlePenColor, single2);
                }
                goShape.Pen = this.myResizeHandlePen;
                if (this.myResizeHandleBrush == null || this.myResizeHandleBrush.Color.notEquals(lightGray)) {
                    this.myResizeHandleBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.SolidBrush(lightGray);
                }
                goShape.Brush = this.myResizeHandleBrush;
            }
        }
        this.addHandle(obj, goHandle);
        return goHandle;
    };
    TuSelection.prototype.findHandleByID = function (obj, id) {
        var obj1;
        var goHandle;
        if (!this.myHandles) {
            return undefined;
        }
        this.myHandles.TryGetValue(obj, obj1);
        if (obj1.value == null) {
            return undefined;
        }
        if (!(obj1.value instanceof _tuval_core__WEBPACK_IMPORTED_MODULE_3__.List)) {
            var goHandle1 = obj1.value;
            if (goHandle1.HandleID === id) {
                return goHandle1;
            }
            return undefined;
        }
        if (obj1.value instanceof _tuval_core__WEBPACK_IMPORTED_MODULE_3__.List) {
            for (var i = 0; i < obj1.value.Count; i++) {
                var current = obj1.value[i];
                if (current.HandleID !== id) {
                    continue;
                }
                goHandle = current;
                return goHandle;
            }
            return undefined;
        }
        return goHandle;
    };
    TuSelection.prototype.getAnExistingHandle = function (obj) {
        var obj1 = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.New.Out();
        if (this.myHandles == null) {
            return undefined;
        }
        this.myHandles.TryGetValue(obj, obj1);
        if (obj1 == null) {
            return undefined;
        }
        if (!_tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(obj1.value, _tuval_core__WEBPACK_IMPORTED_MODULE_3__.System.Types.Collections.Generics.List)) {
            return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(obj1.value, _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuHandle);
        }
        var goHandles = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(obj1.value, _tuval_core__WEBPACK_IMPORTED_MODULE_3__.System.Types.Collections.Generics.List);
        if (goHandles.Count <= 0) {
            return undefined;
        }
        return goHandles[0];
    };
    TuSelection.prototype.getHandleCount = function (obj) {
        var obj1 = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.New.Out();
        if (this.myHandles == null) {
            return 0;
        }
        this.myHandles.TryGetValue(obj, obj1);
        if (obj1.value == null) {
            return 0;
        }
        if (!_tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(obj1.value, _tuval_core__WEBPACK_IMPORTED_MODULE_3__.System.Types.Collections.Generics.List)) {
            return 1;
        }
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(obj1.value, _tuval_core__WEBPACK_IMPORTED_MODULE_3__.System.Types.Collections.Generics.List).Count;
    };
    TuSelection.prototype.onGotFocus = function () {
        this.myFocused = true;
        if (this.View) {
            if (this.View.HidesSelection) {
                this.addAllSelectionHandles();
                return;
            }
            if (this.View.NoFocusSelectionColor.notEquals(this.View.PrimarySelectionColor)) {
                this.removeAllSelectionHandles();
                this.addAllSelectionHandles();
            }
        }
    };
    TuSelection.prototype.onLostFocus = function () {
        this.myFocused = false;
        if (this.View) {
            if (this.View.HidesSelection) {
                this.removeAllSelectionHandles();
                return;
            }
            if (this.View.NoFocusSelectionColor.notEquals(this.View.PrimarySelectionColor)) {
                this.removeAllSelectionHandles();
                this.addAllSelectionHandles();
            }
        }
    };
    TuSelection.prototype.Remove = function (obj) {
        if (!obj) {
            return false;
        }
        if (this.Contains(obj)) {
            this.removeFromSelection(obj);
            return true;
        }
        this.removeHandles(obj);
        return false;
    };
    TuSelection.prototype.removeAllSelectionHandles = function () {
        var _this = this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.foreach)(this.Backwards, function (backward) {
            var selectionObject = backward.SelectionObject;
            if (selectionObject == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_3__.CONTINUE;
            }
            selectionObject.RemoveSelectionHandles(_this);
        });
    };
    TuSelection.prototype.removeFromSelection = function (obj) {
        var primary = this.getPrimary();
        this.myObjTable.Remove(obj);
        _super.prototype.Remove.call(this, obj);
        var view = this.View;
        if (view) {
            if (obj.IsInDocument) {
                obj.OnLostSelection(this);
            }
            view.raiseObjectLostSelection(obj);
            if (primary === obj && primary.IsInDocument) {
                primary = this.getPrimary();
                if (primary) {
                    primary.OnLostSelection(this);
                    view.raiseObjectLostSelection(primary);
                    primary.OnGotSelection(this);
                    view.raiseObjectGotSelection(primary);
                }
            }
        }
    };
    TuSelection.prototype.removeHandles = function (obj) {
        var obj1 = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.New.Out();
        if (!this.myHandles) {
            return;
        }
        this.myHandles.TryGetValue(obj, obj1);
        if (obj1.value == null) {
            return;
        }
        if (this.View != null) {
            var goHandle = obj1.value;
            if (_tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(goHandle, _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuHandle)) {
                goHandle.SelectedObject = undefined;
                var goObject = goHandle.TuObject;
                if (goObject) {
                    var layer = goObject.Layer;
                    if (layer) {
                        layer.Remove(goObject);
                    }
                    goObject.Remove();
                }
            }
            else if (obj1.value instanceof _tuval_core__WEBPACK_IMPORTED_MODULE_3__.List) {
                var goHandles = obj1.value;
                for (var i = 0; i < goHandles.Count; i++) {
                    var item = goHandles[i];
                    var goObject1 = item.TuObject;
                    item.SelectedObject = undefined;
                    if (goObject1) {
                        var goLayers = goObject1.Layer;
                        if (goLayers != null) {
                            goLayers.Remove(goObject1);
                        }
                        goObject1.Remove();
                    }
                }
            }
        }
        this.myHandles.Remove(obj);
    };
    TuSelection.prototype.select = function (obj) {
        if (!obj) {
            return undefined;
        }
        if (this.getPrimary() === obj && this.Count === 1) {
            return obj;
        }
        this.Clear();
        this.Add(obj);
        return obj;
    };
    TuSelection.prototype.setView = function (stage) {
        this.myView = stage;
    };
    TuSelection.prototype.toggle = function (obj) {
        if (!obj) {
            return;
        }
        if (!this.Contains(obj)) {
            this.Add(obj);
            return;
        }
        this.Remove(obj);
    };
    TuSelection = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuSelection,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuSelection
            ]
        })
    ], TuSelection);
    return TuSelection;
}(_TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_4__.TuCollection));

(function staticConstructor() {
    TuSelection.myEmptyList = new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.List(); //TODO:/* ).asReadOnly() */;
})();


/***/ }),

/***/ "./src/TuSelection/TuSelectionEventArgs.ts":
/*!*************************************************!*\
  !*** ./src/TuSelection/TuSelectionEventArgs.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuSelectionEventArgs": () => (/* binding */ TuSelectionEventArgs)
/* harmony export */ });
var TuSelectionEventArgs = /** @class */ (function () {
    function TuSelectionEventArgs(obj) {
        this.myObject = obj;
    }
    Object.defineProperty(TuSelectionEventArgs.prototype, "TuObject", {
        get: function () {
            return this.myObject;
        },
        set: function (value) {
            this.myObject = value;
        },
        enumerable: false,
        configurable: true
    });
    return TuSelectionEventArgs;
}());



/***/ }),

/***/ "./src/TuShape/BrushInfoEx.ts":
/*!************************************!*\
  !*** ./src/TuShape/BrushInfoEx.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrushInfoEx": () => (/* binding */ BrushInfoEx)
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var BrushInfoEx = /** @class */ (function () {
    function BrushInfoEx(other) {
        if (other != null) {
            this.myBrushType = other.myBrushType;
            this.myBrushStyle = other.myBrushStyle;
            this.myForeColor = other.myForeColor;
            this.myImage = other.myImage;
            this.myWrapMode = other.myWrapMode;
            this.myStartOrFocusScales = other.myStartOrFocusScales;
            this.myPoint = other.myPoint;
            this.myMidBlendFactor = other.myMidBlendFactor;
            this.myMidPosition = other.myMidPosition;
            this.myMidColor = other.myMidColor;
        }
    }
    BrushInfoEx.prototype.Equals = function (obj) {
        var goBrushInfoEx = obj;
        if (goBrushInfoEx == null) {
            return false;
        }
        if (this.myBrushType !== goBrushInfoEx.myBrushType || this.myBrushStyle !== goBrushInfoEx.myBrushStyle || !(this.myForeColor === goBrushInfoEx.myForeColor) || this.myImage !== goBrushInfoEx.myImage || this.myWrapMode !== goBrushInfoEx.myWrapMode || !(this.myStartOrFocusScales === goBrushInfoEx.myStartOrFocusScales) || !(this.myPoint === goBrushInfoEx.myPoint) || this.myMidBlendFactor !== goBrushInfoEx.myMidBlendFactor || this.myMidPosition !== goBrushInfoEx.myMidPosition) {
            return false;
        }
        return this.myMidColor == goBrushInfoEx.myMidColor;
    };
    BrushInfoEx = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_0__.Types.BrushInfoEx,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_0__.Types.BrushInfoEx
            ]
        })
    ], BrushInfoEx);
    return BrushInfoEx;
}());



/***/ }),

/***/ "./src/TuShape/TuBrushInfo.ts":
/*!************************************!*\
  !*** ./src/TuShape/TuBrushInfo.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuBrushInfo": () => (/* binding */ TuBrushInfo)
/* harmony export */ });
/* harmony import */ var _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuBrushStyle */ "./src/TuShape/TuBrushStyle.ts");
/* harmony import */ var _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BrushInfoEx */ "./src/TuShape/BrushInfoEx.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _TuBrushType__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TuBrushType */ "./src/TuShape/TuBrushType.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};







var TuBrushInfo = /** @class */ (function () {
    function TuBrushInfo() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.myColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty;
        if (args[0] instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.Brush) {
            this.setBrush(args[0], undefined);
        }
        else if (args[0] instanceof TuBrushInfo_1) {
            var goBrushInfoEx = void 0;
            if (args[0] != null) {
                this.myColor = args[0].myColor;
                if (args[0].myEx != null) {
                    goBrushInfoEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx(args[0].myEx);
                }
                else {
                    goBrushInfoEx = undefined;
                }
                this.myEx = goBrushInfoEx;
            }
        }
    }
    TuBrushInfo_1 = TuBrushInfo;
    Object.defineProperty(TuBrushInfo.prototype, "BrushStyle", {
        get: function () {
            if (this.myEx == null) {
                return _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.Solid;
            }
            return this.myEx.myBrushStyle;
        },
        set: function (value) {
            if (this.myEx == null && value !== _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.Solid) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            if (this.myEx != null) {
                this.myEx.myBrushStyle = value;
                switch (value) {
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.None:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.None;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.Solid:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Solid;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientVertical:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientHorizontal:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientForwardDiagonal:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientBackwardDiagonal:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradientGamma;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipXY;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientVertical:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientHorizontal:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientForwardDiagonal:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientBackwardDiagonal:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradientGamma;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipXY;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientTop:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientLeft:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientRight:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientBottom:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradientGamma;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipXY;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientVertical:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientHorizontal:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientForwardDiagonal:
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientBackwardDiagonal:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradientGamma;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipXY;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.ShapeSimpleGradient:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.Clamp;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.ShapeFringeGradient:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.Clamp;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.ShapeHighlightGradient:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipXY;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.RectangleGradient:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipX;
                            return;
                        }
                    case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.EllipseGradient:
                        {
                            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient;
                            this.myEx.myWrapMode = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipY;
                            return;
                        }
                    default:
                        {
                            switch (value) {
                                case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.Texture:
                                    {
                                        this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Texture;
                                        return;
                                    }
                                case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.CustomLinearGradient:
                                    {
                                        this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradient;
                                        return;
                                    }
                                case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.CustomPathGradient:
                                    {
                                        this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient;
                                        return;
                                    }
                                default:
                                    {
                                        this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Hatch;
                                        break;
                                    }
                            }
                            break;
                        }
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "BrushType", {
        get: function () {
            if (this.myEx == null) {
                return _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Solid;
            }
            return this.myEx.myBrushType;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "Color", {
        get: function () {
            return this.myColor;
        },
        set: function (value) {
            this.myColor = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "ForeColor", {
        get: function () {
            if (this.myEx == null) {
                return _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty;
            }
            return this.myEx.myForeColor;
        },
        set: function (value) {
            if (this.myEx == null && value !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            if (this.myEx != null) {
                this.myEx.myForeColor = value;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "HasBrush", {
        get: function () {
            return this.myBrush != null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "MidBlendFactor", {
        get: function () {
            if (this.myEx == null) {
                return Number.NaN;
            }
            return this.myEx.myMidBlendFactor;
        },
        set: function (value) {
            if (this.myEx == null && !Number.isNaN(value)) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            if (this.myEx != null) {
                this.myEx.myMidBlendFactor = value;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "MidColor", {
        get: function () {
            if (this.myEx == null) {
                return _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty;
            }
            return this.myEx.myMidColor;
        },
        set: function (value) {
            if (this.myEx == null && value !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            if (this.myEx != null) {
                this.myEx.myMidColor = value;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "MidFraction", {
        get: function () {
            if (this.myEx == null) {
                return Number.NaN;
            }
            return this.myEx.myMidPosition;
        },
        set: function (value) {
            if (this.myEx == null && value !== Number.NaN) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            if (this.myEx != null) {
                this.myEx.myMidPosition = value;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "Point", {
        get: function () {
            if (this.myEx == null) {
                return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint();
            }
            return this.myEx.myPoint;
        },
        set: function (value) {
            if (this.myEx == null) {
                if (value != new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint()) {
                    this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
                }
            }
            if (this.myEx != null) {
                this.myEx.myPoint = value;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuBrushInfo.prototype, "StartOrFocusScales", {
        get: function () {
            if (this.myEx == null) {
                return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint();
            }
            return this.myEx.myStartOrFocusScales;
        },
        set: function (value) {
            if (this.myEx == null) {
                if (value != new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint()) {
                    this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
                }
            }
            if (this.myEx != null) {
                this.myEx.myStartOrFocusScales = value;
            }
        },
        enumerable: false,
        configurable: true
    });
    TuBrushInfo.prototype.equals = function (obj) {
        var goBrushInfo = obj;
        if (goBrushInfo == null) {
            return false;
        }
        if (this.myColor !== goBrushInfo.myColor) {
            return false;
        }
        if (this.myEx == null) {
            return goBrushInfo.myEx == null;
        }
        return this.myEx.Equals(goBrushInfo.myEx);
    };
    TuBrushInfo.prototype.getBrush = function (shapeorpath) {
        function toHatchStyle(s) {
            return ((s + 256));
        }
        var pathGradientBrush;
        if (this.myBrush == null) {
            if (this.myEx == null || this.myEx.myBrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Solid) {
                this.myBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.SolidBrush(this.myColor);
            }
            else {
                if (this.myEx.myBrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.None) {
                    return undefined;
                }
                if (this.myEx.myBrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Hatch) {
                    this.myBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.HatchBrush(toHatchStyle(this.myEx.myBrushStyle), this.myEx.myForeColor, this.myColor);
                }
                else if (this.myEx.myBrushType !== _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Texture) {
                    if (this.myEx.myBrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradient || this.myEx.myBrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradientGamma) {
                        var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(0, 0, 100, 100);
                        var goShape = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(shapeorpath, _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuShape);
                        if (goShape == null) {
                            var graphicsPath = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(shapeorpath, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.GraphicsPath);
                            if (graphicsPath != null) {
                                rectangleF = graphicsPath.getBounds();
                            }
                        }
                        else {
                            rectangleF = goShape.Bounds;
                        }
                        if (rectangleF.Width < 0.001 && rectangleF.Height < 0.001 || rectangleF.Width > 9999999 || rectangleF.Height > 9999999) {
                            this.myBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.SolidBrush(this.myColor);
                            return this.myBrush;
                        }
                        var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(this.myEx.myStartOrFocusScales.X * rectangleF.Width, this.myEx.myStartOrFocusScales.Y * rectangleF.Height);
                        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(this.myEx.myPoint.X * rectangleF.Width, this.myEx.myPoint.Y * rectangleF.Height);
                        if (pointF == pointF1) {
                            pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(0, 0);
                            pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(0, rectangleF.Height);
                        }
                        var linearGradientBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.LinearGradientBrush(pointF, pointF1, this.myEx.myForeColor, this.myColor);
                        linearGradientBrush.WrapMode = this.myEx.myWrapMode;
                        if (this.myEx.myMidColor !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty && !Number.isNaN(this.myEx.myMidPosition)) {
                            var colorBlend = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.ColorBlend();
                            colorBlend.Colors = [this.myEx.myForeColor, this.myEx.myMidColor, this.myColor];
                            colorBlend.Positions = [0, this.myEx.myMidPosition, 1];
                            linearGradientBrush.InterpolationColors = colorBlend;
                        }
                        else if (!Number.isNaN(this.myEx.myMidBlendFactor) && !Number.isNaN(this.myEx.myMidPosition)) {
                            var blend = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.Blend();
                            blend.Factors = [0, this.myEx.myMidBlendFactor, 1];
                            blend.Positions = [0, this.myEx.myMidPosition, 1];
                            linearGradientBrush.Blend = blend;
                        }
                        linearGradientBrush.GammaCorrection = this.myEx.myBrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradientGamma;
                        return linearGradientBrush;
                    }
                    if (this.myEx.myBrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient) {
                        var path = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(shapeorpath, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.GraphicsPath);
                        var goShape1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(shapeorpath, _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuShape);
                        if (path == null && goShape1 != null) {
                            path = goShape1.getPath();
                        }
                        if (path != null) {
                            var bounds = path.getBounds();
                            if (bounds.Width < 0.001 || bounds.Height < 0.001 || bounds.Width > 9999999 || bounds.Height > 9999999) {
                                this.myBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.SolidBrush(this.myColor);
                                return this.myBrush;
                            }
                            if (this.myEx.myWrapMode == _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipX) {
                                if (goShape1 != null) {
                                    bounds = goShape1.Bounds;
                                }
                                pathGradientBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.PathGradientBrush([
                                    new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(bounds.X, bounds.Y),
                                    new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(bounds.Right, bounds.Y),
                                    new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(bounds.Right, bounds.Bottom),
                                    new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(bounds.X, bounds.Bottom)
                                ], _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.Clamp);
                            }
                            else if (this.myEx.myWrapMode !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipY) {
                                pathGradientBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.PathGradientBrush(path);
                            }
                            else {
                                if (goShape1 != null) {
                                    bounds = goShape1.Bounds;
                                }
                                var width = bounds.Width / 2;
                                var height = bounds.Height / 2;
                                if (width > 0.1 && height > 0.1) {
                                    var num = Math.atan2(height, width);
                                    var single = Math.sin(num);
                                    var single1 = Math.cos(num);
                                    bounds.inflate(single1 * width, single * height);
                                }
                                var graphicsPath1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicsPath();
                                graphicsPath1.addEllipse(bounds);
                                pathGradientBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.PathGradientBrush(graphicsPath1);
                            }
                            if (this.myEx.myWrapMode !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.Clamp) {
                                var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(bounds.X + this.myEx.myPoint.X * bounds.Width, bounds.Y + this.myEx.myPoint.Y * bounds.Height);
                                pathGradientBrush.CenterPoint = pointF2;
                            }
                            pathGradientBrush.WrapMode = this.myEx.myWrapMode;
                            if (!(this.myEx.myMidColor !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) || Number.isNaN(this.myEx.myMidPosition)) {
                                if (!Number.isNaN(this.myEx.myMidBlendFactor) && !Number.isNaN(this.myEx.myMidPosition)) {
                                    var blend1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.Blend();
                                    blend1.Factors = [0, this.myEx.myMidBlendFactor, 1];
                                    blend1.Positions = [0, this.myEx.myMidPosition, 1];
                                    pathGradientBrush.Blend = blend1;
                                }
                                pathGradientBrush.CenterColor = this.myColor;
                                pathGradientBrush.SurroundColors = [this.myEx.myForeColor];
                            }
                            else {
                                var colorBlend1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.ColorBlend();
                                colorBlend1.Colors = [this.myEx.myForeColor, this.myEx.myMidColor, this.myColor];
                                colorBlend1.Positions = [0, this.myEx.myMidPosition, 1];
                                pathGradientBrush.InterpolationColors = colorBlend1;
                            }
                            pathGradientBrush.FocusScales = this.myEx.myStartOrFocusScales;
                            return pathGradientBrush;
                        }
                    }
                }
                else if (this.myEx.myImage != null) {
                    var textureBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.TextureBrush(this.myEx.myImage /* , this.myEx.myWrapMode */);
                    var matrix = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.Matrix(this.myEx.myStartOrFocusScales.X, this.myEx.myStartOrFocusScales.Y, this.myEx.myPoint.X, this.myEx.myPoint.Y, 0, 0);
                    textureBrush.Transform = matrix;
                    this.myBrush = textureBrush;
                }
                else {
                    this.myBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.SolidBrush(this.myColor);
                }
            }
        }
        return this.myBrush;
    };
    TuBrushInfo.prototype.setBrush = function (b, shapeorpath) {
        function toBrushStyle(s) {
            return s + 256;
        }
        var centerPoint;
        this.myBrush = b;
        if (b instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.SolidBrush) {
            this.myColor = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(b, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.SolidBrush).Color;
            this.myEx = undefined;
            return;
        }
        if (b instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.HatchBrush) {
            var hatchBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(b, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.HatchBrush);
            this.myColor = hatchBrush.BackgroundColor;
            if (this.myEx == null) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Hatch;
            this.myEx.myBrushStyle = toBrushStyle(hatchBrush.HatchStyle);
            this.myEx.myForeColor = hatchBrush.ForegroundColor;
            return;
        }
        if (b instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.TextureBrush) {
            var textureBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(b, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.TextureBrush);
            if (this.myEx == null) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.Texture;
            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.Texture;
            this.myEx.myImage = textureBrush.Image;
            this.myEx.myWrapMode = textureBrush.WrapMode;
            var elements = textureBrush.Transform.Elements;
            this.myEx.myStartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(elements[0], elements[1]);
            this.myEx.myPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(elements[2], elements[3]);
            return;
        }
        if (b instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.LinearGradientBrush) {
            var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(b, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.LinearGradientBrush);
            if (this.myEx == null) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradient;
            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.CustomLinearGradient;
            var flag = false;
            var blend = undefined;
            try {
                blend = linearGradientBrush.Blend;
                if (blend != null && blend.Positions.length > 3) {
                    flag = (flag | 1);
                }
            }
            catch (exception) {
                blend = undefined;
            }
            var ınterpolationColors = undefined;
            try {
                ınterpolationColors = linearGradientBrush.InterpolationColors;
                if (ınterpolationColors != null && ınterpolationColors.Positions.length > 3) {
                    flag = (flag | 1);
                }
            }
            catch (exception1) {
                ınterpolationColors = undefined;
            }
            if (!linearGradientBrush.GammaCorrection) {
                this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradient;
            }
            else {
                this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.LinearGradientGamma;
            }
            if (!flag) {
                this.myBrush = undefined;
            }
            this.myColor = linearGradientBrush.LinearColors[1];
            this.myEx.myForeColor = linearGradientBrush.LinearColors[0];
            var bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle();
            var goShape = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(shapeorpath, _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuShape);
            if (goShape == null) {
                var graphicsPath = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(shapeorpath, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.GraphicsPath);
                if (graphicsPath != null) {
                    bounds = graphicsPath.getBounds();
                }
            }
            else {
                bounds = goShape.Bounds;
            }
            var transform = linearGradientBrush.Transform;
            var rectangle = linearGradientBrush.Rectangle;
            var pointF = [new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(rectangle.X, rectangle.Y), new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(rectangle.X + rectangle.Width, rectangle.Y)];
            transform.transformPoints(pointF);
            var width = pointF[0];
            var x = pointF[1];
            if (Math.abs(width.X - x.X) < 0.001) {
                width.X = bounds.Width / 4;
                x.X = width.X;
            }
            if (Math.abs(width.Y - x.Y) < 0.001) {
                width.Y = bounds.Height / 4;
                x.Y = width.Y;
            }
            if (Math.abs(width.X - x.X) > 0.001 && Math.abs(width.Y - x.Y) > 0.001) {
                var single = width.X - (rectangle.X + rectangle.Width / 2);
                var y = width.Y - (rectangle.Y + rectangle.Height / 2);
                var x1 = x.X - (rectangle.X + rectangle.Width / 2);
                var y1 = x.Y - (rectangle.Y + rectangle.Height / 2);
                if (single !== x1 && y !== y1) {
                    var single1 = (y1 - y) / (x1 - single);
                    var single2 = single1 + 1 / single1;
                    var single3 = (single / single1 + y) / single2;
                    var single4 = single1 * single3;
                    var single5 = (x1 / single1 + y1) / single2;
                    var single6 = single1 * single5;
                    width.X = single3 + (rectangle.X + rectangle.Width / 2);
                    width.Y = single4 + (rectangle.Y + rectangle.Height / 2);
                    x.X = single5 + (rectangle.X + rectangle.Width / 2);
                    x.Y = single6 + (rectangle.Y + rectangle.Height / 2);
                }
            }
            if (bounds.Width <= 0.001) {
                this.myEx.myStartOrFocusScales.X = 0;
                this.myEx.myPoint.X = 0;
            }
            else {
                this.myEx.myStartOrFocusScales.X = width.X / bounds.Width;
                this.myEx.myPoint.X = x.X / bounds.Width;
            }
            if (bounds.Height <= 0.001) {
                this.myEx.myStartOrFocusScales.Y = 0;
                this.myEx.myPoint.Y = 0;
            }
            else {
                this.myEx.myStartOrFocusScales.Y = width.Y / bounds.Height;
                this.myEx.myPoint.Y = x.Y / bounds.Height;
            }
            if (this.myEx.myStartOrFocusScales == this.myEx.myPoint) {
                this.myEx.myStartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(0, 0);
                this.myEx.myPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(0, 1);
            }
            this.myEx.myWrapMode = linearGradientBrush.WrapMode;
            this.myEx.myMidPosition = Number.NaN;
            this.myEx.myMidBlendFactor = Number.NaN;
            if (ınterpolationColors != null && ınterpolationColors.Colors.length > 1) {
                this.myEx.myMidColor = ınterpolationColors.Colors[ınterpolationColors.Colors.length / 2];
                this.myEx.myMidPosition = ınterpolationColors.Positions[ınterpolationColors.Positions.length / 2];
            }
            else if (blend != null && blend.Factors.length > 1) {
                this.myEx.myMidBlendFactor = blend.Factors[blend.Factors.length / 2];
                this.myEx.myMidPosition = blend.Positions[blend.Positions.length / 2];
            }
            if (!flag) {
                var flag1 = this.myEx.myPoint.X - this.myEx.myStartOrFocusScales.X > 0.1;
                var flag2 = Math.abs(this.myEx.myPoint.X - this.myEx.myStartOrFocusScales.X) <= 0.1;
                var x2 = this.myEx.myPoint.X - this.myEx.myStartOrFocusScales.X < -0.1;
                var y2 = this.myEx.myPoint.Y - this.myEx.myStartOrFocusScales.Y > 0.1;
                var flag3 = Math.abs(this.myEx.myPoint.Y - this.myEx.myStartOrFocusScales.Y) <= 0.1;
                var y3 = this.myEx.myPoint.Y - this.myEx.myStartOrFocusScales.Y < -0.1;
                if (flag2 & y2) {
                    if (this.myEx.myMidColor !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientVertical;
                        return;
                    }
                    if (Number.isNaN(this.myEx.myMidPosition)) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientVertical;
                        return;
                    }
                    if (Math.abs(this.myEx.myPoint.X - 0.5) < 0.1) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientVertical;
                        return;
                    }
                    this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientTop;
                    return;
                }
                if (flag1 & flag3) {
                    if (this.myEx.myMidColor != _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientHorizontal;
                        return;
                    }
                    if (Number.isNaN(this.myEx.myMidPosition)) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientHorizontal;
                        return;
                    }
                    if (Math.abs(this.myEx.myPoint.X - 0.5) < 0.1) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientHorizontal;
                        return;
                    }
                    this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientLeft;
                    return;
                }
                if (flag1 & y2) {
                    if (this.myEx.myMidColor !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientForwardDiagonal;
                        return;
                    }
                    if (Number.isNaN(this.myEx.myMidPosition)) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientForwardDiagonal;
                        return;
                    }
                    if (Math.abs(this.myEx.myPoint.X - 0.5) < 0.1 && Math.abs(this.myEx.myPoint.Y - 0.5) < 0.1) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientForwardDiagonal;
                        return;
                    }
                }
                else if (x2 & y2) {
                    if (this.myEx.myMidColor !== _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.MiddleGradientBackwardDiagonal;
                        return;
                    }
                    if (Number.isNaN(this.myEx.myMidPosition)) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SimpleGradientBackwardDiagonal;
                        return;
                    }
                    if (Math.abs(this.myEx.myPoint.X - 0.5) < 0.1 && Math.abs(this.myEx.myPoint.Y - 0.5) < 0.1) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.DoubleEdgeGradientBackwardDiagonal;
                        return;
                    }
                }
                else if (x2 & flag3) {
                    if (!Number.isNaN(this.myEx.myMidPosition)) {
                        this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientRight;
                        return;
                    }
                }
                else if (flag2 & y3 && !Number.isNaN(this.myEx.myMidPosition)) {
                    this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.SingleEdgeGradientBottom;
                    return;
                }
            }
        }
        else if (!(b instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.PathGradientBrush)) {
            if (this.myEx == null) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.None;
            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.None;
        }
        else {
            var pathGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(b, _tuval_graphics__WEBPACK_IMPORTED_MODULE_5__.GraphicTypes.PathGradientBrush);
            if (this.myEx == null) {
                this.myEx = new _BrushInfoEx__WEBPACK_IMPORTED_MODULE_1__.BrushInfoEx();
            }
            this.myEx.myBrushType = _TuBrushType__WEBPACK_IMPORTED_MODULE_6__.TuBrushType.PathGradient;
            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.CustomPathGradient;
            var flag4 = false;
            var blend1 = undefined;
            try {
                blend1 = pathGradientBrush.Blend;
                if (blend1 != null && blend1.Positions.length > 3) {
                    flag4 = (flag4 | 1);
                }
            }
            catch (exception2) {
                blend1 = undefined;
            }
            var colorBlend = undefined;
            try {
                colorBlend = pathGradientBrush.InterpolationColors;
                if (colorBlend != null && colorBlend.Positions.length > 3) {
                    flag4 = (flag4 | 1);
                }
            }
            catch (exception3) {
                colorBlend = undefined;
            }
            var surroundColors = undefined;
            try {
                surroundColors = pathGradientBrush.SurroundColors;
                if (surroundColors != null && surroundColors.length > 1) {
                    flag4 = (flag4 | 1);
                }
            }
            catch (exception4) {
                surroundColors = undefined;
            }
            if (!flag4) {
                this.myBrush = undefined;
            }
            try {
                this.myColor = pathGradientBrush.CenterColor;
            }
            catch (exception5) {
                this.myColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty;
            }
            if (surroundColors == null) {
                this.myEx.myForeColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty;
            }
            else {
                this.myEx.myForeColor = surroundColors[0];
            }
            var rectangleF = pathGradientBrush.Rectangle;
            try {
                centerPoint = pathGradientBrush.CenterPoint;
            }
            catch (exception6) {
                centerPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(rectangleF.X + rectangleF.Width / 2, rectangleF.Y + rectangleF.Height / 2);
            }
            this.myEx.myPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint((rectangleF.Width === 0 ? 0.5 : (centerPoint.X - rectangleF.X) / rectangleF.Width), (rectangleF.Height === 0 ? 0.5 : (centerPoint.Y - rectangleF.Y) / rectangleF.Height));
            this.myEx.myWrapMode = pathGradientBrush.WrapMode;
            this.myEx.myMidPosition = Number.NaN;
            this.myEx.myMidBlendFactor = Number.NaN;
            if (colorBlend != null && colorBlend.Colors.length > 1) {
                this.myEx.myMidColor = colorBlend.Colors[colorBlend.Colors.length / 2];
                this.myEx.myMidPosition = colorBlend.Positions[colorBlend.Positions.length / 2];
            }
            else if (blend1 != null && blend1.Factors.length > 1) {
                this.myEx.myMidBlendFactor = blend1.Factors[blend1.Factors.length / 2];
                this.myEx.myMidPosition = blend1.Positions[blend1.Positions.length / 2];
            }
            this.myEx.myStartOrFocusScales = pathGradientBrush.FocusScales;
            if (!flag4) {
                switch (this.myEx.myWrapMode) {
                    case _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.Tile:
                    case _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.Clamp:
                        {
                            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.ShapeFringeGradient;
                            return;
                        }
                    case _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipX:
                        {
                            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.RectangleGradient;
                            return;
                        }
                    case _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipY:
                        {
                            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.EllipseGradient;
                            return;
                        }
                    case _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.WrapMode.TileFlipXY:
                        {
                            this.myEx.myBrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_0__.TuBrushStyle.ShapeHighlightGradient;
                            return;
                        }
                    default:
                        {
                            return;
                        }
                }
            }
        }
    };
    var TuBrushInfo_1;
    TuBrushInfo = TuBrushInfo_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuBrushInfo,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_4__.Types.TuBrushInfo
            ]
        })
    ], TuBrushInfo);
    return TuBrushInfo;
}());



/***/ }),

/***/ "./src/TuShape/TuBrushStyle.ts":
/*!*************************************!*\
  !*** ./src/TuShape/TuBrushStyle.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuBrushStyle": () => (/* binding */ TuBrushStyle)
/* harmony export */ });
var TuBrushStyle;
(function (TuBrushStyle) {
    TuBrushStyle[TuBrushStyle["None"] = 0] = "None";
    TuBrushStyle[TuBrushStyle["Solid"] = 1] = "Solid";
    TuBrushStyle[TuBrushStyle["SimpleGradientVertical"] = 2] = "SimpleGradientVertical";
    TuBrushStyle[TuBrushStyle["SimpleGradientHorizontal"] = 3] = "SimpleGradientHorizontal";
    TuBrushStyle[TuBrushStyle["SimpleGradientForwardDiagonal"] = 4] = "SimpleGradientForwardDiagonal";
    TuBrushStyle[TuBrushStyle["SimpleGradientBackwardDiagonal"] = 5] = "SimpleGradientBackwardDiagonal";
    TuBrushStyle[TuBrushStyle["MiddleGradientVertical"] = 6] = "MiddleGradientVertical";
    TuBrushStyle[TuBrushStyle["MiddleGradientHorizontal"] = 7] = "MiddleGradientHorizontal";
    TuBrushStyle[TuBrushStyle["MiddleGradientForwardDiagonal"] = 8] = "MiddleGradientForwardDiagonal";
    TuBrushStyle[TuBrushStyle["MiddleGradientBackwardDiagonal"] = 9] = "MiddleGradientBackwardDiagonal";
    TuBrushStyle[TuBrushStyle["SingleEdgeGradientTop"] = 10] = "SingleEdgeGradientTop";
    TuBrushStyle[TuBrushStyle["SingleEdgeGradientLeft"] = 11] = "SingleEdgeGradientLeft";
    TuBrushStyle[TuBrushStyle["SingleEdgeGradientRight"] = 12] = "SingleEdgeGradientRight";
    TuBrushStyle[TuBrushStyle["SingleEdgeGradientBottom"] = 13] = "SingleEdgeGradientBottom";
    TuBrushStyle[TuBrushStyle["DoubleEdgeGradientVertical"] = 14] = "DoubleEdgeGradientVertical";
    TuBrushStyle[TuBrushStyle["DoubleEdgeGradientHorizontal"] = 15] = "DoubleEdgeGradientHorizontal";
    TuBrushStyle[TuBrushStyle["DoubleEdgeGradientForwardDiagonal"] = 16] = "DoubleEdgeGradientForwardDiagonal";
    TuBrushStyle[TuBrushStyle["DoubleEdgeGradientBackwardDiagonal"] = 17] = "DoubleEdgeGradientBackwardDiagonal";
    TuBrushStyle[TuBrushStyle["ShapeSimpleGradient"] = 18] = "ShapeSimpleGradient";
    TuBrushStyle[TuBrushStyle["ShapeFringeGradient"] = 19] = "ShapeFringeGradient";
    TuBrushStyle[TuBrushStyle["ShapeHighlightGradient"] = 20] = "ShapeHighlightGradient";
    TuBrushStyle[TuBrushStyle["RectangleGradient"] = 21] = "RectangleGradient";
    TuBrushStyle[TuBrushStyle["EllipseGradient"] = 22] = "EllipseGradient";
    TuBrushStyle[TuBrushStyle["Texture"] = 253] = "Texture";
    TuBrushStyle[TuBrushStyle["CustomLinearGradient"] = 254] = "CustomLinearGradient";
    TuBrushStyle[TuBrushStyle["CustomPathGradient"] = 255] = "CustomPathGradient";
    TuBrushStyle[TuBrushStyle["HatchHorizontal"] = 256] = "HatchHorizontal";
    TuBrushStyle[TuBrushStyle["HatchVertical"] = 257] = "HatchVertical";
    TuBrushStyle[TuBrushStyle["HatchForwardDiagonal"] = 258] = "HatchForwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchBackwardDiagonal"] = 259] = "HatchBackwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchCross"] = 260] = "HatchCross";
    TuBrushStyle[TuBrushStyle["HatchDiagonalCross"] = 261] = "HatchDiagonalCross";
    TuBrushStyle[TuBrushStyle["HatchPercent05"] = 262] = "HatchPercent05";
    TuBrushStyle[TuBrushStyle["HatchPercent10"] = 263] = "HatchPercent10";
    TuBrushStyle[TuBrushStyle["HatchPercent20"] = 264] = "HatchPercent20";
    TuBrushStyle[TuBrushStyle["HatchPercent25"] = 265] = "HatchPercent25";
    TuBrushStyle[TuBrushStyle["HatchPercent30"] = 266] = "HatchPercent30";
    TuBrushStyle[TuBrushStyle["HatchPercent40"] = 267] = "HatchPercent40";
    TuBrushStyle[TuBrushStyle["HatchPercent50"] = 268] = "HatchPercent50";
    TuBrushStyle[TuBrushStyle["HatchPercent60"] = 269] = "HatchPercent60";
    TuBrushStyle[TuBrushStyle["HatchPercent70"] = 270] = "HatchPercent70";
    TuBrushStyle[TuBrushStyle["HatchPercent75"] = 271] = "HatchPercent75";
    TuBrushStyle[TuBrushStyle["HatchPercent80"] = 272] = "HatchPercent80";
    TuBrushStyle[TuBrushStyle["HatchPercent90"] = 273] = "HatchPercent90";
    TuBrushStyle[TuBrushStyle["HatchLightDownwardDiagonal"] = 274] = "HatchLightDownwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchLightUpwardDiagonal"] = 275] = "HatchLightUpwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchDarkDownwardDiagonal"] = 276] = "HatchDarkDownwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchDarkUpwardDiagonal"] = 277] = "HatchDarkUpwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchWideDownwardDiagonal"] = 278] = "HatchWideDownwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchWideUpwardDiagonal"] = 279] = "HatchWideUpwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchLightVertical"] = 280] = "HatchLightVertical";
    TuBrushStyle[TuBrushStyle["HatchLightHorizontal"] = 281] = "HatchLightHorizontal";
    TuBrushStyle[TuBrushStyle["HatchNarrowVertical"] = 282] = "HatchNarrowVertical";
    TuBrushStyle[TuBrushStyle["HatchNarrowHorizontal"] = 283] = "HatchNarrowHorizontal";
    TuBrushStyle[TuBrushStyle["HatchDarkVertical"] = 284] = "HatchDarkVertical";
    TuBrushStyle[TuBrushStyle["HatchDarkHorizontal"] = 285] = "HatchDarkHorizontal";
    TuBrushStyle[TuBrushStyle["HatchDashedDownwardDiagonal"] = 286] = "HatchDashedDownwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchDashedUpwardDiagonal"] = 287] = "HatchDashedUpwardDiagonal";
    TuBrushStyle[TuBrushStyle["HatchDashedHorizontal"] = 288] = "HatchDashedHorizontal";
    TuBrushStyle[TuBrushStyle["HatchDashedVertical"] = 289] = "HatchDashedVertical";
    TuBrushStyle[TuBrushStyle["HatchSmallConfetti"] = 290] = "HatchSmallConfetti";
    TuBrushStyle[TuBrushStyle["HatchLargeConfetti"] = 291] = "HatchLargeConfetti";
    TuBrushStyle[TuBrushStyle["HatchZigZag"] = 292] = "HatchZigZag";
    TuBrushStyle[TuBrushStyle["HatchWave"] = 293] = "HatchWave";
    TuBrushStyle[TuBrushStyle["HatchDiagonalBrick"] = 294] = "HatchDiagonalBrick";
    TuBrushStyle[TuBrushStyle["HatchHorizontalBrick"] = 295] = "HatchHorizontalBrick";
    TuBrushStyle[TuBrushStyle["HatchWeave"] = 296] = "HatchWeave";
    TuBrushStyle[TuBrushStyle["HatchPlaid"] = 297] = "HatchPlaid";
    TuBrushStyle[TuBrushStyle["HatchDivot"] = 298] = "HatchDivot";
    TuBrushStyle[TuBrushStyle["HatchDottedGrid"] = 299] = "HatchDottedGrid";
    TuBrushStyle[TuBrushStyle["HatchDottedDiamond"] = 300] = "HatchDottedDiamond";
    TuBrushStyle[TuBrushStyle["HatchShingle"] = 301] = "HatchShingle";
    TuBrushStyle[TuBrushStyle["HatchTrellis"] = 302] = "HatchTrellis";
    TuBrushStyle[TuBrushStyle["HatchSphere"] = 303] = "HatchSphere";
    TuBrushStyle[TuBrushStyle["HatchSmallGrid"] = 304] = "HatchSmallGrid";
    TuBrushStyle[TuBrushStyle["HatchSmallCheckerBoard"] = 305] = "HatchSmallCheckerBoard";
    TuBrushStyle[TuBrushStyle["HatchLargeCheckerBoard"] = 306] = "HatchLargeCheckerBoard";
    TuBrushStyle[TuBrushStyle["HatchOutlinedDiamond"] = 307] = "HatchOutlinedDiamond";
    TuBrushStyle[TuBrushStyle["HatchSolidDiamond"] = 308] = "HatchSolidDiamond";
})(TuBrushStyle || (TuBrushStyle = {}));


/***/ }),

/***/ "./src/TuShape/TuBrushType.ts":
/*!************************************!*\
  !*** ./src/TuShape/TuBrushType.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuBrushType": () => (/* binding */ TuBrushType)
/* harmony export */ });
var TuBrushType;
(function (TuBrushType) {
    TuBrushType[TuBrushType["None"] = 0] = "None";
    TuBrushType[TuBrushType["Solid"] = 1] = "Solid";
    TuBrushType[TuBrushType["Hatch"] = 2] = "Hatch";
    TuBrushType[TuBrushType["Texture"] = 3] = "Texture";
    TuBrushType[TuBrushType["LinearGradient"] = 4] = "LinearGradient";
    TuBrushType[TuBrushType["LinearGradientGamma"] = 5] = "LinearGradientGamma";
    TuBrushType[TuBrushType["PathGradient"] = 6] = "PathGradient";
})(TuBrushType || (TuBrushType = {}));


/***/ }),

/***/ "./src/TuShape/TuPenInfo.ts":
/*!**********************************!*\
  !*** ./src/TuShape/TuPenInfo.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPenInfo": () => (/* binding */ TuPenInfo)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TuPenInfoEx */ "./src/TuShape/TuPenInfoEx.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var TuPenInfo = /** @class */ (function () {
    function TuPenInfo() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.myColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Empty;
        this.myWidth = 0;
        if (args[0] instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.Pen) {
            this.setPen(args[0]);
        }
        else if (args[0] instanceof TuPenInfo_1) {
            var goPenInfoEx = void 0;
            if (args[0] != null) {
                this.myColor = args[0].myColor;
                this.myWidth = args[0].myWidth;
                if (args[0].myEx != null) {
                    goPenInfoEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx(args[0].myEx);
                }
                else {
                    goPenInfoEx = undefined;
                }
                this.myEx = goPenInfoEx;
            }
        }
    }
    TuPenInfo_1 = TuPenInfo;
    Object.defineProperty(TuPenInfo.prototype, "Color", {
        get: function () {
            return this.myColor;
        },
        set: function (value) {
            this.myColor = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPenInfo.prototype, "MiterLimit", {
        get: function () {
            if (this.myEx == null) {
                return 10;
            }
            return this.myEx.myMiterLimit;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuPenInfo.prototype, "Width", {
        get: function () {
            return this.myWidth;
        },
        set: function (value) {
            this.myWidth = value;
        },
        enumerable: false,
        configurable: true
    });
    TuPenInfo.prototype.getPen = function () {
        if (this.myPen == null) {
            this.myPen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.Pen(this.Color, this.Width);
            if (this.myEx != null) {
                this.myPen.DashStyle = this.myEx.myDashStyle;
                // this.myPen.DashCap = this.myEx.myDashCap;
                this.myPen.DashOffset = this.myEx.myDashOffset;
                if (this.myEx.myDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.DashStyle.Custom) {
                    this.myPen.DashPattern = this.myEx.myDashPattern;
                }
                this.myPen.Alignment = this.myEx.myAlignment;
                this.myPen.EndCap = this.myEx.myEndCap;
                this.myPen.StartCap = this.myEx.myStartCap;
                this.myPen.LineJoin = this.myEx.myLineJoin;
                this.myPen.MiterLimit = this.myEx.myMiterLimit;
                if (this.myEx.myCompoundFractions != null) {
                    // this.myPen.CompoundArray = this.myEx.myCompoundFractions;
                }
            }
        }
        return this.myPen;
    };
    TuPenInfo.prototype.setPen = function (p) {
        this.myPen = p;
        this.myColor = (0,_Globals__WEBPACK_IMPORTED_MODULE_5__.getPenColor)(p, _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Empty);
        this.myWidth = (0,_Globals__WEBPACK_IMPORTED_MODULE_5__.getPenWidth)(p);
        if (p.DashStyle !== 0 /* DashStyle.Solid */) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myDashStyle = p.DashStyle;
        }
        if (p.DashCap !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.DashCap.Flat) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myDashCap = p.DashCap;
        }
        if (p.DashOffset !== 0) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myDashOffset = p.DashOffset;
        }
        if (p.DashStyle === 5 /* DashStyle.Custom */) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myDashPattern = p.DashPattern;
        }
        if (p.Alignment !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.PenAlignment.Center) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myAlignment = p.Alignment;
        }
        if (p.EndCap != _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.LineCap.Flat) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myEndCap = p.EndCap;
        }
        if (p.StartCap !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.LineCap.Flat) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myStartCap = p.StartCap;
        }
        if (p.LineJoin !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_3__.LineJoin.Miter) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myLineJoin = p.LineJoin;
        }
        if (p.MiterLimit !== 10) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myMiterLimit = p.MiterLimit;
        }
        var compoundArray = p.CompoundArray;
        if (compoundArray != null && compoundArray.length !== 0) {
            if (this.myEx == null) {
                this.myEx = new _TuPenInfoEx__WEBPACK_IMPORTED_MODULE_4__.TuPenInfoEx();
            }
            this.myEx.myCompoundFractions = compoundArray;
        }
        if (this.myColor !== _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Empty) {
            return true;
        }
        this.myColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Black;
        return false;
    };
    TuPenInfo.prototype.equals = function (penInfo) {
        if (penInfo == null) {
            return false;
        }
        if (!(this.myColor === penInfo.myColor) || this.myWidth !== penInfo.myWidth) {
            return false;
        }
        if (this.myEx == null) {
            return penInfo.myEx == null;
        }
        return this.myEx.equals(penInfo.myEx);
    };
    var TuPenInfo_1;
    TuPenInfo = TuPenInfo_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuPenInfo,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuPenInfo
            ]
        })
    ], TuPenInfo);
    return TuPenInfo;
}());



/***/ }),

/***/ "./src/TuShape/TuPenInfoEx.ts":
/*!************************************!*\
  !*** ./src/TuShape/TuPenInfoEx.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuPenInfoEx": () => (/* binding */ TuPenInfoEx)
/* harmony export */ });
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuPenInfoEx = /** @class */ (function () {
    function TuPenInfoEx(other) {
        this.myDashStyle = _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.DashStyle.Solid;
        this.myDashCap = _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.DashCap.Flat;
        this.myDashOffset = 0;
        this.myAlignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.PenAlignment.Center;
        this.myEndCap = _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.LineCap.Flat;
        this.myStartCap = _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.LineCap.Flat;
        this.myLineJoin = _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.LineJoin.Miter;
        this.myMiterLimit = 0;
        if (other != null) {
            this.myDashStyle = other.myDashStyle;
            this.myDashCap = other.myDashCap;
            this.myDashOffset = other.myDashOffset;
            if (other.myDashPattern != null) {
                this.myDashPattern = other.myDashPattern.slice();
            }
            this.myAlignment = other.myAlignment;
            this.myEndCap = other.myEndCap;
            this.myStartCap = other.myStartCap;
            this.myLineJoin = other.myLineJoin;
            this.myMiterLimit = other.myMiterLimit;
            if (other.myCompoundFractions != null) {
                this.myCompoundFractions = other.myCompoundFractions.slice();
            }
        }
    }
    TuPenInfoEx.prototype.equals = function (obj) {
        var goPenInfoEx = obj;
        if (goPenInfoEx == null) {
            return false;
        }
        if (this.myDashStyle !== goPenInfoEx.myDashStyle || this.myDashCap !== goPenInfoEx.myDashCap || this.myDashOffset !== goPenInfoEx.myDashOffset || this.myAlignment !== goPenInfoEx.myAlignment || this.myEndCap !== goPenInfoEx.myEndCap || this.myStartCap !== goPenInfoEx.myStartCap || this.myLineJoin !== goPenInfoEx.myLineJoin || this.myMiterLimit !== goPenInfoEx.myMiterLimit) {
            return false;
        }
        if (this.myDashStyle === _tuval_graphics__WEBPACK_IMPORTED_MODULE_0__.DashStyle.Custom && (this.myDashPattern != null || goPenInfoEx.myDashPattern != null)) {
            if (this.myDashPattern == null || goPenInfoEx.myDashPattern == null) {
                return false;
            }
            if (this.myDashPattern.length !== goPenInfoEx.myDashPattern.length) {
                return false;
            }
            for (var i = 0; i < this.myDashPattern.length; i++) {
                if (this.myDashPattern[i] !== goPenInfoEx.myDashPattern[i]) {
                    return false;
                }
            }
        }
        if (this.myCompoundFractions !== null || goPenInfoEx.myCompoundFractions != null) {
            if (this.myCompoundFractions === null || goPenInfoEx.myCompoundFractions == null) {
                return false;
            }
            if (this.myCompoundFractions.length !== goPenInfoEx.myCompoundFractions.length) {
                return false;
            }
            for (var j = 0; j < this.myCompoundFractions.length; j++) {
                if (this.myCompoundFractions[j] != goPenInfoEx.myCompoundFractions[j]) {
                    return false;
                }
            }
        }
        return true;
    };
    TuPenInfoEx.prototype.getHashCode = function () {
        /* const hashCode: number = this.myDashStyle ^ this.myDashCap ^ this.myDashOffset.getHashCode() ^ (int)this.myAlignment ^ (int)this.myEndCap ^ (int)this.myStartCap ^ (int)this.myLineJoin ^ this.myMiterLimit.GetHashCode();
        if (this.myDashStyle == DashStyle.Custom && this.myDashPattern != null)
        {
            hashCode = hashCode ^ this.myDashPattern.GetHashCode();
        }
        if (this.myCompoundFractions != null)
        {
            hashCode = hashCode ^ this.myCompoundFractions.GetHashCode();
        }
        return hashCode; */
        return 0;
    };
    TuPenInfoEx = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuPenInfoEx,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuPenInfoEx
            ]
        })
    ], TuPenInfoEx);
    return TuPenInfoEx;
}());



/***/ }),

/***/ "./src/TuShape/TuShape.tsx":
/*!*********************************!*\
  !*** ./src/TuShape/TuShape.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuShape": () => (/* binding */ TuShape)
/* harmony export */ });
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuShapeEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TuShapeEvents */ "./src/TuShape/TuShapeEvents.ts");
/* harmony import */ var _TuBrushType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuBrushType */ "./src/TuShape/TuBrushType.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _TuPenInfo__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TuPenInfo */ "./src/TuShape/TuPenInfo.ts");
/* harmony import */ var _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TuBrushInfo */ "./src/TuShape/TuBrushInfo.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TuBrushStyle */ "./src/TuShape/TuBrushStyle.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _Matrix__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Matrix */ "./src/Matrix.ts");
/* harmony import */ var _Xml_TuShapeSvgRenderer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../Xml/TuShapeSvgRenderer */ "./src/Xml/TuShapeSvgRenderer.ts");
/* harmony import */ var _Xml_TuShapeHtmlRenderer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../Xml/TuShapeHtmlRenderer */ "./src/Xml/TuShapeHtmlRenderer.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

















var TuShape = /** @class */ (function (_super) {
    __extends(TuShape, _super);
    function TuShape() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myPenInfo = TuShape_1.GetPenInfo(_Globals__WEBPACK_IMPORTED_MODULE_9__.Pens_Black);
        return _this;
    }
    TuShape_1 = TuShape;
    TuShape.prototype.SetupControlDefaults = function () {
        _super.prototype.SetupControlDefaults.call(this);
        this.SvgRenderer = new _Xml_TuShapeSvgRenderer__WEBPACK_IMPORTED_MODULE_15__.TuShapeSvgRenderer();
        this.HtmlRenderer = new _Xml_TuShapeHtmlRenderer__WEBPACK_IMPORTED_MODULE_16__.TuShapeHtmlRenderer();
        this.myPenInfo = TuShape_1.GetPenInfo(_Globals__WEBPACK_IMPORTED_MODULE_9__.Pens_Black);
    };
    //#region [Property] AutoRescales
    TuShape.prototype.getBounds = function () {
        return _super.prototype.getBounds.call(this);
    };
    TuShape.prototype.setBounds = function (value) {
        this.resetPath();
        _super.prototype.setBounds.call(this, value);
    };
    Object.defineProperty(TuShape.prototype, "Brush", {
        //#endregion
        //#region [Property] Brush
        get: function () {
            return this.getBrush();
        },
        set: function (value) {
            this.setBrush(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrush = function () {
        if (this.myBrushInfo == null) {
            return undefined;
        }
        if (this.myBrush == null) {
            this.myBrush = this.myBrushInfo.getBrush(this);
        }
        return this.myBrush;
    };
    TuShape.prototype.setBrush = function (value) {
        this.BrushInfo = TuShape_1.GetBrushInfo(value, this);
    };
    Object.defineProperty(TuShape.prototype, "BrushColor", {
        //#endregion
        //#region [Property] BrushColor
        get: function () {
            return this.getBrushColor();
        },
        set: function (value) {
            this.setBrushColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushColor = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo == null) {
            return _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.Empty;
        }
        return brushInfo.Color;
    };
    TuShape.prototype.setBrushColor = function (value) {
        var brushInfo = this.BrushInfo;
        if (brushInfo == null || !(brushInfo.Color.notEquals(value))) {
            if (brushInfo == null && value != _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.Empty) {
                this.BrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
                this.BrushInfo.Color = value;
            }
            return;
        }
        if (value.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.Empty) && brushInfo.BrushType === _TuBrushType__WEBPACK_IMPORTED_MODULE_2__.TuBrushType.Solid) {
            this.BrushInfo = undefined;
            return;
        }
        var tempBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
        tempBrushInfo.Color = value;
        this.BrushInfo = tempBrushInfo;
    };
    Object.defineProperty(TuShape.prototype, "BrushFocusScales", {
        //#endregion
        //#region [Property] BrushFocusScales
        get: function () {
            return this.getBrushFocusScales();
        },
        set: function (value) {
            this.setBrushFocusScales(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushFocusScales = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo == null) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize();
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize(brushInfo.StartOrFocusScales.X, brushInfo.StartOrFocusScales.Y);
    };
    TuShape.prototype.setBrushFocusScales = function (value) {
        var brushInfo = this.BrushInfo;
        var sizeF = value;
        if (sizeF.Width < 0) {
            sizeF.Width = 0;
        }
        else if (sizeF.Width > 1) {
            sizeF.Width = 1;
        }
        if (sizeF.Height < 0) {
            sizeF.Height = 0;
        }
        else if (sizeF.Height > 1) {
            sizeF.Height = 1;
        }
        if (brushInfo != null && (brushInfo.StartOrFocusScales.X !== sizeF.Width || brushInfo.StartOrFocusScales.Y !== sizeF.Height)) {
            var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(sizeF.Width, sizeF.Height);
            this.BrushInfo = goBrushInfo;
            return;
        }
        if (brushInfo == null) {
            if (!sizeF.IsEmpty) {
                var goBrushInfo1 = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
                goBrushInfo1.BrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None;
                goBrushInfo1.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(sizeF.Width, sizeF.Height);
                this.BrushInfo = goBrushInfo1;
            }
        }
    };
    Object.defineProperty(TuShape.prototype, "BrushForeColor", {
        //#endregion
        //#region [Property] BrushForeColor
        get: function () {
            return this.getBrushForeColor();
        },
        set: function (value) {
            this.setBrushForeColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushForeColor = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo == null) {
            return _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.Empty;
        }
        return brushInfo.ForeColor;
    };
    TuShape.prototype.setBrushForeColor = function (value) {
        var brushInfo = this.BrushInfo;
        if (brushInfo != null && brushInfo.ForeColor !== value) {
            this.BrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            this.BrushInfo.ForeColor = value;
            return;
        }
        if (brushInfo == null && value !== _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.Empty) {
            var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            goBrushInfo.BrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None;
            goBrushInfo.ForeColor = value;
            this.BrushInfo = goBrushInfo;
        }
    };
    Object.defineProperty(TuShape.prototype, "BrushInfo", {
        //#endregion
        //#region [Property] BrushInfo
        get: function () {
            return this.getBrushInfo();
        },
        set: function (value) {
            this.setBrushInfo(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushInfo = function () {
        return this.myBrushInfo;
    };
    TuShape.prototype.setBrushInfo = function (value) {
        var goBrushInfo = this.myBrushInfo;
        var goBrushInfo1 = value;
        if (goBrushInfo !== goBrushInfo1 && (goBrushInfo == null || !goBrushInfo.equals(goBrushInfo1))) {
            this.myBrushInfo = goBrushInfo1;
            this.myBrush = undefined;
            this.Changed(_TuShapeEvents__WEBPACK_IMPORTED_MODULE_1__.TuShapeEvents.ChangedBrush, 0, goBrushInfo, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, goBrushInfo1, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
        }
    };
    Object.defineProperty(TuShape.prototype, "BrushMidColor", {
        //#endregion
        //#region [Property] BrushMidColor
        get: function () {
            return this.getBrushMidColor();
        },
        set: function (value) {
            this.setBrushMidColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushMidColor = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo == null) {
            return _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.Empty;
        }
        return brushInfo.MidColor;
    };
    TuShape.prototype.setBrushMidColor = function (value) {
        var brushInfo = this.BrushInfo;
        if (brushInfo != null && brushInfo.MidColor !== value) {
            this.BrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            this.BrushInfo.MidColor = value;
            return;
        }
        if (brushInfo == null && !value.IsEmpty) {
            var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            goBrushInfo.BrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None;
            goBrushInfo.MidColor = value;
            this.BrushInfo = goBrushInfo;
        }
    };
    Object.defineProperty(TuShape.prototype, "BrushMidFraction", {
        //#endregion
        //#region [Property] BrushMidFraction
        get: function () {
            return this.getBrushMidFraction();
        },
        set: function (value) {
            this.setBrushMidFraction(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushMidFraction = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo == null) {
            return Number.NaN;
        }
        return brushInfo.MidFraction;
    };
    TuShape.prototype.setBrushMidFraction = function (value) {
        var brushInfo = this.BrushInfo;
        var single = value;
        if (!Number.isNaN(single)) {
            if (single < 0) {
                single = 0;
            }
            else if (single > 1) {
                single = 1;
            }
        }
        if (brushInfo != null && brushInfo.MidFraction !== single) {
            this.BrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            this.BrushInfo.MidFraction = single;
            return;
        }
        if (brushInfo == null && single !== Number.NaN) {
            var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            goBrushInfo.BrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None;
            goBrushInfo.MidFraction = single;
            this.BrushInfo = goBrushInfo;
        }
    };
    Object.defineProperty(TuShape.prototype, "BrushPoint", {
        //#endregion
        //#region [Property] BrushPoint
        get: function () {
            return this.getBrushPoint();
        },
        set: function (value) {
            this.setBrushPoint(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushPoint = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo != null) {
            return brushInfo.Point;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint();
    };
    TuShape.prototype.setBrushPoint = function (value) {
        var brushInfo = this.BrushInfo;
        var pointF = value;
        if (pointF.X < -1) {
            pointF.X = -1;
        }
        else if (pointF.X > 2) {
            pointF.X = 2;
        }
        if (pointF.Y < -1) {
            pointF.Y = -1;
        }
        else if (pointF.Y > 2) {
            pointF.Y = 2;
        }
        if (brushInfo != null && brushInfo.Point.notEquals(pointF)) {
            this.BrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            this.BrushInfo.Point = pointF;
            return;
        }
        if (brushInfo == null) {
            if (!pointF.IsEmpty) {
                var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
                goBrushInfo.BrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None;
                goBrushInfo.Point = pointF;
                this.BrushInfo = goBrushInfo;
            }
        }
    };
    Object.defineProperty(TuShape.prototype, "BrushStartPoint", {
        //#endregion
        //#region [Property] BrushStartPoint
        get: function () {
            return this.getBrushStartPoint();
        },
        set: function (value) {
            this.setBrushStartPoint(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushStartPoint = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo != null) {
            return brushInfo.StartOrFocusScales;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint();
    };
    TuShape.prototype.setBrushStartPoint = function (value) {
        var brushInfo = this.BrushInfo;
        var pointF = value;
        if (pointF.X < -1) {
            pointF.X = -1;
        }
        else if (pointF.X > 2) {
            pointF.X = 2;
        }
        if (pointF.Y < -1) {
            pointF.Y = -1;
        }
        else if (pointF.Y > 2) {
            pointF.Y = 2;
        }
        if (brushInfo != null && brushInfo.Point !== pointF) {
            this.BrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
            this.BrushInfo.StartOrFocusScales = pointF;
            return;
        }
        if (brushInfo == null) {
            if (!pointF.IsEmpty) {
                var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(brushInfo);
                goBrushInfo.BrushStyle = _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None;
                goBrushInfo.StartOrFocusScales = pointF;
                this.BrushInfo = goBrushInfo;
            }
        }
    };
    Object.defineProperty(TuShape.prototype, "BrushStyle", {
        //#endregion
        //#region [Property] BrushStyle
        get: function () {
            return this.getBrushStyle();
        },
        set: function (value) {
            this.setBrushStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getBrushStyle = function () {
        var brushInfo = this.BrushInfo;
        if (brushInfo == null) {
            return _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None;
        }
        return brushInfo.BrushStyle;
    };
    TuShape.prototype.setBrushStyle = function (value) {
        var brushInfo = this.BrushInfo;
        if (brushInfo != null && brushInfo.BrushStyle === value) {
            return;
        }
        if (brushInfo == null && value === _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.None) {
            return;
        }
        this.BrushInfo = TuShape_1.ModifyBrushStyle(brushInfo, value);
    };
    Object.defineProperty(TuShape.prototype, "Pen", {
        //#endregion
        //#region [Property] Pen
        get: function () {
            return this.getPen();
        },
        set: function (value) {
            this.setPen(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getPen = function () {
        if (!this.myPenInfo) {
            return undefined;
        }
        return this.myPenInfo.getPen();
    };
    TuShape.prototype.setPen = function (value) {
        this.PenInfo = TuShape_1.GetPenInfo(value);
    };
    Object.defineProperty(TuShape.prototype, "PenColor", {
        //#endregion
        //#region [Property] PenColor
        get: function () {
            return this.getPenColor();
        },
        set: function (value) {
            this.setPenColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getPenColor = function () {
        var penInfo = this.PenInfo;
        if (penInfo == null) {
            return _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.Empty;
        }
        return penInfo.Color;
    };
    TuShape.prototype.setPenColor = function (value) {
        var penInfo = this.PenInfo;
        var goPenInfo = undefined;
        if (penInfo != null) {
            if (penInfo.Color === value) {
                return;
            }
            if (!value.IsEmpty) {
                goPenInfo = new _TuPenInfo__WEBPACK_IMPORTED_MODULE_7__.TuPenInfo(penInfo);
                goPenInfo.Color = value;
            }
        }
        else if (!value.IsEmpty) {
            goPenInfo = new _TuPenInfo__WEBPACK_IMPORTED_MODULE_7__.TuPenInfo();
            goPenInfo.Width = this.PenWidth;
            goPenInfo.Color = value;
        }
        this.PenInfo = goPenInfo;
    };
    Object.defineProperty(TuShape.prototype, "PenInfo", {
        //#endregion
        //#region [Property] PenInfo
        get: function () {
            return this.getPenInfo();
        },
        set: function (value) {
            this.setPenInfo(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getPenInfo = function () {
        return this.myPenInfo;
    };
    TuShape.prototype.setPenInfo = function (value) {
        var goPenInfo = this.myPenInfo;
        var goPenInfo1 = value;
        if (goPenInfo !== goPenInfo1 && (!goPenInfo || !goPenInfo.equals(goPenInfo1))) {
            this.InvalidateViews();
            this.myPenInfo = goPenInfo1;
            this.Changed(_TuShapeEvents__WEBPACK_IMPORTED_MODULE_1__.TuShapeEvents.ChangedPen, 0, goPenInfo, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect, 0, goPenInfo1, _Globals__WEBPACK_IMPORTED_MODULE_9__.NullRect);
            if (this.Parent) {
                this.Parent.invalidatePaintBounds();
            }
        }
    };
    Object.defineProperty(TuShape.prototype, "PenWidth", {
        //#endregion
        //#region [Property] PenWidth
        get: function () {
            return this.getPenWidth();
        },
        set: function (value) {
            this.setPenWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    TuShape.prototype.getPenWidth = function () {
        var penInfo = this.PenInfo;
        if (penInfo == null) {
            return 0;
        }
        return penInfo.Width;
    };
    TuShape.prototype.setPenWidth = function (value) {
        var penInfo = this.PenInfo;
        var width = 0;
        if (penInfo == null) {
            penInfo = TuShape_1.PenInfo_Black;
        }
        else {
            width = penInfo.Width;
        }
        if (width !== value) {
            this.PenInfo = new _TuPenInfo__WEBPACK_IMPORTED_MODULE_7__.TuPenInfo(penInfo);
            this.PenInfo.Width = value;
        }
    };
    //#endregion
    TuShape.prototype.CanonicalizeLinearGradientSpot = function (spot) {
        if (spot.ID > 4) {
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop || spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopCenter) {
                return _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop;
            }
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft) {
                return _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft;
            }
        }
        else {
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopLeft) {
                return _Spot__WEBPACK_IMPORTED_MODULE_11__.TopLeft;
            }
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopRight) {
                return _Spot__WEBPACK_IMPORTED_MODULE_11__.TopRight;
            }
        }
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_6__.ArgumentOutOfRangeException("spot", "spot must be one of: MiddleTop, MiddleLeft, TopLeft, or TopRight");
    };
    TuShape.prototype.ChangeValue = function (e, undo) {
        var subHint = e.SubHint;
        if (subHint === _TuShapeEvents__WEBPACK_IMPORTED_MODULE_1__.TuShapeEvents.ChangedBounds) {
            _super.prototype.ChangeValue.call(this, e, undo);
            this.resetPath();
            return;
        }
        if (subHint === _TuShapeEvents__WEBPACK_IMPORTED_MODULE_1__.TuShapeEvents.ChangedPen) {
            var value = e.getValue(undo);
            if (value instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.Pen) {
                this.Pen = value;
                return;
            }
            if (value instanceof _TuPenInfo__WEBPACK_IMPORTED_MODULE_7__.TuPenInfo) {
                this.PenInfo = value;
            }
            return;
        }
        if (subHint !== _TuShapeEvents__WEBPACK_IMPORTED_MODULE_1__.TuShapeEvents.ChangedBrush) {
            _super.prototype.ChangeValue.call(this, e, undo);
            return;
        }
        var obj = e.getValue(undo);
        if (obj instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.Brush) {
            this.Brush = obj;
            return;
        }
        if (obj instanceof _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo) {
            this.BrushInfo = obj;
        }
    };
    TuShape.prototype.ContainedByRectangle = function (r) {
        var bounds = { value: this.Bounds.clone() };
        var penWidth = this.PenWidth;
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.InflateRect(bounds, penWidth / 2, penWidth / 2);
        if (r.Width <= 0 || r.Height <= 0 || bounds.value.Width < 0 || bounds.value.Height < 0 || bounds.value.X < r.X || bounds.value.Y < r.Y || bounds.value.X + bounds.value.Width > r.X + r.Width) {
            return false;
        }
        return bounds.value.Y + bounds.value.Height <= r.Y + r.Height;
    };
    TuShape.prototype.containsPoint = function (p) {
        var bounds = { value: this.Bounds.clone() };
        var penWidth = this.PenWidth;
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.InflateRect(bounds, penWidth / 2, penWidth / 2);
        return _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.ContainsRect(bounds.value, p);
    };
    TuShape.prototype.copyObject = function (env) {
        var goShape = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(_super.prototype.CopyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_5__.Types.TuShape);
        if (goShape != null) {
            goShape.myPath = null;
            goShape.myBrush = null;
        }
        return goShape;
    };
    TuShape.DarkerIntenser = function (c) {
        var single = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single1 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single2 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single3 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single4 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single5 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        TuShape_1.RgbToHsb(c.R / 255, c.G / 255, c.B / 255, single, single1, single2);
        single2.value = single2.value / 1.4;
        if (single2.value < 0) {
            single2.value = 0;
        }
        else if (single2.value > 1) {
            single2.value = 1;
        }
        single1.value = single1.value * 1.4;
        if (single1.value < 0) {
            single1.value = 0;
        }
        else if (single1.value > 1) {
            single1.value = 1;
        }
        TuShape_1.HsbToRgb(single.value, single1.value, single2.value, single3, single4, single5);
        return _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.FromRgba(~~(single3.value * 255), ~~(single4.value * 255), ~~(single5.value * 255), ~~c.A);
    };
    TuShape.prototype.disposePath = function (path) {
        if (path != this.myPath) {
            path.Dispose();
        }
    };
    TuShape.DrawArc = function (g, view, pen, x, y, width, height, startangle, sweepangle) {
        try {
            if (pen != null) {
                g.drawArc(pen, x, y, width, height, startangle, sweepangle);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawBezier = function (g, view, pen, x1, y1, x2, y2, x3, y3, x4, y4) {
        try {
            if (pen != null) {
                g.drawBezier(pen, x1, y1, x2, y2, x3, y3, x4, y4);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawEllipse = function (g, view, pen, brush, x, y, width, height) {
        try {
            if (brush != null) {
                var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.LinearGradientBrush);
                if (linearGradientBrush != null) {
                    if (!TuShape_1.IsExtremelySmall(width, height, view)) {
                        g.translateTransform(x, y);
                        g.FillEllipse(brush, 0, 0, width, height);
                        g.translateTransform(-x, -y);
                    }
                    else {
                        var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(linearGradientBrush.LinearColors[0]);
                        g.FillEllipse(solidBrush, x, y, width, height);
                        solidBrush.Dispose();
                    }
                }
                else if (brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.PathGradientBrush && TuShape_1.IsExtremelySized(width, height, view)) {
                    var solidBrush1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(brush.CenterColor);
                    g.FillEllipse(solidBrush1, x, y, width, height);
                    solidBrush1.Dispose();
                }
                else if (!(brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.TextureBrush)) {
                    g.FillEllipse(brush, x, y, width, height);
                }
                else {
                    g.translateTransform(x, y);
                    g.FillEllipse(brush, 0, 0, width, height);
                    g.translateTransform(-x, -y);
                }
            }
            if (pen != null) {
                g.DrawEllipse(pen, x, y, width, height);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawHtmlLine = function (result, view, pen, ax, ay, bx, by) {
        var color = pen.Color.toString('#rrggbb');
        var width = pen.Width;
        if (ax > bx) {
            bx = ax + bx;
            ax = bx - ax;
            bx = bx - ax;
            by = ay + by;
            ay = by - ay;
            by = by - ay;
        }
        var angle = Math.atan((ay - by) / (bx - ax));
        // console.log('angle: ' + angle);
        angle = (angle * 180 / Math.PI);
        //   console.log('angle: ' + angle);
        angle = -angle;
        //   console.log('angle: ' + angle);
        var length = Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by));
        //console.log('length: ' + length);
        var style = "";
        style += "left:" + (ax) + "px;";
        style += "top:" + (ay) + "px;";
        style += "width:" + length + "px;";
        style += "height:" + width + 'px;';
        style += "background-color:" + color + ';';
        style += "position:absolute;";
        style += "transform:rotate(" + angle + "deg);";
        style += "-ms-transform:rotate(" + angle + "deg);";
        style += "transform-origin:0% 0%;";
        style += "-moz-transform:rotate(" + angle + "deg);";
        style += "-moz-transform-origin:0% 0%;";
        style += "-webkit-transform:rotate(" + angle + "deg);";
        style += "-webkit-transform-origin:0% 0%;";
        style += "-o-transform:rotate(" + angle + "deg);";
        style += "-o-transform-origin:0% 0%;";
        //  style += "-webkit-box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, .1);"
        //  style += "box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, .1);"
        //style += "z-index:99;"
        /* style['position'] = 'absolute';
        style['left'] = x1 + 'px';
        style['top'] = y1 + 'px';
        style['width'] = x1 + 'px';
        style['top'] = y1 + 'px';
        style['border-color'] = color;
        style['border-width'] = width + 'px'; */
        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("div", { style: style }));
    };
    TuShape.DrawSvgLine = function (result, view, pen, x1, y1, x2, y2) {
        var color = pen.Color.toString('#rrggbb');
        var width = pen.Width;
        var style = {};
        style['stroke'] = color;
        style['stroke-width'] = width;
        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("line", { x1: x1, y1: y1, x2: x2, y2: y2, style: style, "shape-rendering": "crispEdges" }));
    };
    TuShape.DrawLine = function (g, view, pen, x1, y1, x2, y2) {
        if (pen != null) {
            g.DrawLine(pen, x1, y1, x2, y2);
        }
    };
    TuShape.DrawLines = function (g, view, pen, points) {
        if (pen != null) {
            g.drawLines(pen, points);
        }
    };
    TuShape.DrawPath = function (g, view, pen, brush, path) {
        try {
            if (brush != null) {
                var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.LinearGradientBrush);
                if (linearGradientBrush != null) {
                    var bounds = path.getBounds();
                    if (!TuShape_1.IsExtremelySmall(bounds.Width, bounds.Height, view)) {
                        g.translateTransform(bounds.X, bounds.Y);
                        var matrix = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.Matrix(1, 0, 0, 1, -bounds.X, -bounds.Y);
                        path.transform(matrix);
                        g.fillPath(brush, path);
                        matrix.translate(bounds.X * 2, bounds.Y * 2);
                        path.transform(matrix);
                        matrix.Dispose();
                        g.translateTransform(-bounds.X, -bounds.Y);
                    }
                    else {
                        var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(linearGradientBrush.LinearColors[0]);
                        g.fillPath(solidBrush, path);
                        solidBrush.Dispose();
                    }
                }
                else if (brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.PathGradientBrush) {
                    var pathGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.PathGradientBrush);
                    var rectangleF = path.getBounds();
                    if (!TuShape_1.IsExtremelySized(rectangleF.Width, rectangleF.Height, view)) {
                        g.fillPath(brush, path);
                    }
                    else {
                        var solidBrush1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(pathGradientBrush.CenterColor);
                        g.fillPath(solidBrush1, path);
                        solidBrush1.Dispose();
                    }
                }
                else if (!(brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.TextureBrush)) {
                    g.fillPath(brush, path);
                }
                else {
                    var bounds1 = path.getBounds();
                    g.translateTransform(bounds1.X, bounds1.Y);
                    var matrix1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.Matrix(1, 0, 0, 1, -bounds1.X, -bounds1.Y);
                    path.transform(matrix1);
                    g.fillPath(brush, path);
                    matrix1.translate(bounds1.X * 2, bounds1.Y * 2);
                    path.transform(matrix1);
                    matrix1.Dispose();
                    g.translateTransform(-bounds1.X, -bounds1.Y);
                }
            }
            if (pen != null) {
                g.drawPath(pen, path);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawPie = function (g, view, pen, brush, x, y, width, height, startangle, sweepangle) {
        try {
            if (brush != null) {
                var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.LinearGradientBrush);
                if (linearGradientBrush != null) {
                    if (!TuShape_1.IsExtremelySmall(width, height, view)) {
                        g.translateTransform(x, y);
                        g.fillPie(brush, 0, 0, width, height, startangle, sweepangle);
                        g.translateTransform(-x, -y);
                    }
                    else {
                        var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(linearGradientBrush.LinearColors[0]);
                        g.fillPie(solidBrush, x, y, width, height, startangle, sweepangle);
                        solidBrush.Dispose();
                    }
                }
                else if (brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.PathGradientBrush && TuShape_1.IsExtremelySized(width, height, view)) {
                    var solidBrush1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(brush.CenterColor);
                    g.fillPie(solidBrush1, x, y, width, height, startangle, sweepangle);
                    solidBrush1.Dispose();
                }
                else if (!(brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.TextureBrush)) {
                    g.fillPie(brush, x, y, width, height, startangle, sweepangle);
                }
                else {
                    g.translateTransform(x, y);
                    g.fillPie(brush, 0, 0, width, height, startangle, sweepangle);
                    g.translateTransform(-x, -y);
                }
            }
            if (pen != null) {
                g.drawPie(pen, x, y, width, height, startangle, sweepangle);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawHtmlPolygon = function (result, view, pen, brush, points) {
    };
    TuShape.DrawSvgPolygon = function (result, view, pen, brush, points) {
        try {
            if (brush != null && points.length > 2) {
                var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.LinearGradientBrush);
                if (linearGradientBrush != null) {
                    var pointF = points[0];
                    var x = pointF.X;
                    var single = pointF.X;
                    var y = pointF.Y;
                    var y1 = pointF.Y;
                    for (var i = 1; i < points.length; i++) {
                        pointF = points[i];
                        if (pointF.X < x) {
                            x = pointF.X;
                        }
                        else if (pointF.X > single) {
                            single = pointF.X;
                        }
                        if (pointF.Y < y) {
                            y = pointF.Y;
                        }
                        else if (pointF.Y > y1) {
                            y1 = pointF.Y;
                        }
                    }
                    if (!TuShape_1.IsExtremelySmall(single - x, y1 - y, view)) {
                        var matrix = new _Matrix__WEBPACK_IMPORTED_MODULE_14__.SvgMatrix();
                        matrix = matrix.translate(x, y);
                        //g.translateTransform(x, y);
                        var pointFArray = points.slice();
                        var pointsString = pointFArray[0].X + ',' + pointFArray[0].Y;
                        for (var j = 0; j < pointFArray.length; j++) {
                            pointsString = ' ' + pointFArray[j].X + ',' + pointFArray[j].Y;
                            /*  pointFArray[j].X = pointFArray[j].X - x;
                             pointFArray[j].Y = pointFArray[j].Y - y; */
                        }
                        var color = linearGradientBrush.LinearColors[0].toString('#rrggbb');
                        var style = {};
                        style['fill'] = color;
                        style['stroke'] = pen != null ? pen.Color.toString('#rrggbb') : 'transparent';
                        style['stroke-width'] = pen != null ? pen.Width : 0;
                        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("g", { transform: matrix.transformString },
                            _tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("polygon", { points: pointsString, style: style })));
                    }
                    else {
                        //const solidBrush: Brush = new SolidBrush(linearGradientBrush.LinearColors[0]);
                        var pointFArray = points.slice();
                        var pointsString = pointFArray[0].X + ',' + pointFArray[0].Y;
                        for (var j = 0; j < pointFArray.length; j++) {
                            pointsString = ' ' + pointFArray[j].X + ',' + pointFArray[j].Y;
                            /*  pointFArray[j].X = pointFArray[j].X - x;
                             pointFArray[j].Y = pointFArray[j].Y - y; */
                        }
                        var color = linearGradientBrush.LinearColors[0].toString('#rrggbb');
                        var style = {};
                        style['fill'] = color;
                        style['stroke'] = pen != null ? pen.Color.toString('#rrggbb') : 'transparent';
                        style['stroke-width'] = pen != null ? pen.Width : 0;
                        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("polygon", { points: pointsString, style: style }));
                    }
                }
                else if (brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.PathGradientBrush) {
                    var pathGradientBrush = brush;
                    var pointF1 = points[0];
                    var x1 = pointF1.X;
                    var single1 = pointF1.X;
                    var y2 = pointF1.Y;
                    var single2 = pointF1.Y;
                    for (var k = 1; k < points.length; k++) {
                        pointF1 = points[k];
                        if (pointF1.X < x1) {
                            x1 = pointF1.X;
                        }
                        else if (pointF1.X > single1) {
                            single1 = pointF1.X;
                        }
                        if (pointF1.Y < y2) {
                            y2 = pointF1.Y;
                        }
                        else if (pointF1.Y > single2) {
                            single2 = pointF1.Y;
                        }
                    }
                    if (!TuShape_1.IsExtremelySized(single1 - x1, single2 - y2, view)) {
                        //g.fillPolygon(brush, points);
                    }
                    else {
                        var solidBrush1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(pathGradientBrush.CenterColor);
                        //g.fillPolygon(solidBrush1, points);
                        solidBrush1.Dispose();
                    }
                }
                else if (!(brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.TextureBrush)) {
                    //g.fillPolygon(brush, points);
                }
                else {
                    var pointF2 = points[0];
                    var x2 = pointF2.X;
                    var y3 = pointF2.Y;
                    for (var l = 1; l < points.length; l++) {
                        pointF2 = points[l];
                        if (pointF2.X < x2) {
                            x2 = pointF2.X;
                        }
                        if (pointF2.Y < y3) {
                            y3 = pointF2.Y;
                        }
                    }
                    var matrix = new _Matrix__WEBPACK_IMPORTED_MODULE_14__.SvgMatrix();
                    matrix = matrix.translate(x2, y3);
                    //g.translateTransform(x, y);
                    var pointFArray = points.slice();
                    var pointsString = pointFArray[0].X + ',' + pointFArray[0].Y;
                    for (var j = 0; j < pointFArray.length; j++) {
                        pointsString = ' ' + pointFArray[j].X + ',' + pointFArray[j].Y;
                        /*  pointFArray[j].X = pointFArray[j].X - x;
                         pointFArray[j].Y = pointFArray[j].Y - y; */
                    }
                    var color = linearGradientBrush.LinearColors[0].toString('#rrggbb');
                    var style = {};
                    style['fill'] = color;
                    style['stroke'] = pen != null ? pen.Color.toString('#rrggbb') : 'transparent';
                    style['stroke-width'] = pen != null ? pen.Width : 0;
                    result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("g", { transform: matrix.transformString },
                        _tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("polygon", { points: pointsString, style: style })));
                }
            }
            if (pen != null) {
                // g.drawPolygon(pen, points);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawPolygon = function (g, view, pen, brush, points) {
        try {
            if (brush != null && points.length > 2) {
                var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.LinearGradientBrush);
                if (linearGradientBrush != null) {
                    var pointF = points[0];
                    var x = pointF.X;
                    var single = pointF.X;
                    var y = pointF.Y;
                    var y1 = pointF.Y;
                    for (var i = 1; i < points.length; i++) {
                        pointF = points[i];
                        if (pointF.X < x) {
                            x = pointF.X;
                        }
                        else if (pointF.X > single) {
                            single = pointF.X;
                        }
                        if (pointF.Y < y) {
                            y = pointF.Y;
                        }
                        else if (pointF.Y > y1) {
                            y1 = pointF.Y;
                        }
                    }
                    if (!TuShape_1.IsExtremelySmall(single - x, y1 - y, view)) {
                        g.translateTransform(x, y);
                        var pointFArray = points.slice();
                        for (var j = 0; j < pointFArray.length; j++) {
                            pointFArray[j].X = pointFArray[j].X - x;
                            pointFArray[j].Y = pointFArray[j].Y - y;
                        }
                        g.fillPolygon(brush, pointFArray);
                        g.translateTransform(-x, -y);
                    }
                    else {
                        var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(linearGradientBrush.LinearColors[0]);
                        g.fillPolygon(solidBrush, points);
                        solidBrush.Dispose();
                    }
                }
                else if (brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.PathGradientBrush) {
                    var pathGradientBrush = brush;
                    var pointF1 = points[0];
                    var x1 = pointF1.X;
                    var single1 = pointF1.X;
                    var y2 = pointF1.Y;
                    var single2 = pointF1.Y;
                    for (var k = 1; k < points.length; k++) {
                        pointF1 = points[k];
                        if (pointF1.X < x1) {
                            x1 = pointF1.X;
                        }
                        else if (pointF1.X > single1) {
                            single1 = pointF1.X;
                        }
                        if (pointF1.Y < y2) {
                            y2 = pointF1.Y;
                        }
                        else if (pointF1.Y > single2) {
                            single2 = pointF1.Y;
                        }
                    }
                    if (!TuShape_1.IsExtremelySized(single1 - x1, single2 - y2, view)) {
                        g.fillPolygon(brush, points);
                    }
                    else {
                        var solidBrush1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(pathGradientBrush.CenterColor);
                        g.fillPolygon(solidBrush1, points);
                        solidBrush1.Dispose();
                    }
                }
                else if (!(brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.TextureBrush)) {
                    g.fillPolygon(brush, points);
                }
                else {
                    var pointF2 = points[0];
                    var x2 = pointF2.X;
                    var y3 = pointF2.Y;
                    for (var l = 1; l < points.length; l++) {
                        pointF2 = points[l];
                        if (pointF2.X < x2) {
                            x2 = pointF2.X;
                        }
                        if (pointF2.Y < y3) {
                            y3 = pointF2.Y;
                        }
                    }
                    g.translateTransform(x2, y3);
                    var pointFArray1 = points.slice();
                    for (var m = 0; m < pointFArray1.length; m++) {
                        pointFArray1[m].X = pointFArray1[m].X - x2;
                        pointFArray1[m].Y = pointFArray1[m].Y - y3;
                    }
                    g.fillPolygon(brush, pointFArray1);
                    g.translateTransform(-x2, -y3);
                }
            }
            if (pen != null) {
                g.drawPolygon(pen, points);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawHtmlRectangle = function (result, view, pen, brush, x, y, width, height) {
    };
    TuShape.DrawSvgRectangle = function (result, view, pen, brush, x, y, width, height) {
        try {
            if (brush != null) {
                var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.LinearGradientBrush);
                if (linearGradientBrush != null) {
                    if (!TuShape_1.IsExtremelySmall(width, height, view)) {
                        /*  g.translateTransform(x, y);
                         g.FillRectangle(brush, 0, 0, width, height);
                         g.translateTransform(-x, -y); */
                    }
                    else {
                        var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(linearGradientBrush.LinearColors[0]);
                        var strokeColor = pen == null ? 'transparent' : pen.Color.toString('#rrggbb');
                        var strokeWidth = pen == null ? 0 : pen.Width;
                        var style = {};
                        style['fill'] = solidBrush.Color.toString('#rrggbb');
                        style['stroke'] = strokeColor;
                        style['stroke-width'] = strokeWidth;
                        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("rect", { x: x, y: y, width: width, height: height, style: style }));
                        //g.FillRectangle(solidBrush, x, y, width, height);
                        solidBrush.Dispose();
                    }
                }
                else if (brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.PathGradientBrush && TuShape_1.IsExtremelySized(width, height, view)) {
                    var solidBrush1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(brush.CenterColor);
                    var strokeColor = pen == null ? 'transparent' : pen.Color.toString('#rrggbb');
                    var strokeWidth = pen == null ? 0 : pen.Width;
                    var style = {};
                    style['fill'] = solidBrush1.Color.toString('#rrggbb');
                    style['stroke'] = strokeColor;
                    style['stroke-width'] = strokeWidth;
                    result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("rect", { x: x, y: y, width: width, height: height, style: style }));
                    // g.FillRectangle(solidBrush1, x, y, width, height);
                    solidBrush1.Dispose();
                }
                else if (!(brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.TextureBrush)) {
                    // g.FillRectangle(brush, x, y, width, height);
                }
                else {
                    var matrix = new _Matrix__WEBPACK_IMPORTED_MODULE_14__.SvgMatrix();
                    matrix = matrix.translate(x, y);
                    var strokeColor = pen == null ? 'transparent' : pen.Color.toString('#rrggbb');
                    var strokeWidth = pen == null ? 0 : pen.Width;
                    var style = {};
                    style['fill'] = brush.Color.toString('#rrggbb');
                    style['stroke'] = strokeColor;
                    style['stroke-width'] = strokeWidth;
                    result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("g", { transform: matrix.transformString },
                        _tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("rect", { x: 0, y: 0, width: width, height: height, style: style })));
                    /*  g.translateTransform(x, y);
                     g.FillRectangle(brush, 0, 0, width, height);
                     g.translateTransform(-x, -y); */
                }
            }
            else if (pen != null) {
                var strokeColor = pen == null ? 'transparent' : pen.Color.toString('#rrggbb');
                var strokeWidth = pen == null ? 0 : pen.Width;
                var style = {};
                style['fill'] = 'transparent';
                style['stroke'] = strokeColor;
                style['stroke-width'] = strokeWidth;
                result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.Teact.createElement("rect", { x: x, y: y, width: width, height: height, style: style }));
                //g.DrawRectangle(pen, x, y, width, height);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawRectangle = function (g, view, pen, brush, x, y, width, height) {
        try {
            if (brush != null) {
                var linearGradientBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicTypes.LinearGradientBrush);
                if (linearGradientBrush != null) {
                    if (!TuShape_1.IsExtremelySmall(width, height, view)) {
                        g.translateTransform(x, y);
                        g.FillRectangle(brush, 0, 0, width, height);
                        g.translateTransform(-x, -y);
                    }
                    else {
                        var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(linearGradientBrush.LinearColors[0]);
                        g.FillRectangle(solidBrush, x, y, width, height);
                        solidBrush.Dispose();
                    }
                }
                else if (brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.PathGradientBrush && TuShape_1.IsExtremelySized(width, height, view)) {
                    var solidBrush1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(brush.CenterColor);
                    g.FillRectangle(solidBrush1, x, y, width, height);
                    solidBrush1.Dispose();
                }
                else if (!(brush instanceof _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.TextureBrush)) {
                    g.FillRectangle(brush, x, y, width, height);
                }
                else {
                    g.translateTransform(x, y);
                    g.FillRectangle(brush, 0, 0, width, height);
                    g.translateTransform(-x, -y);
                }
            }
            if (pen != null) {
                g.DrawRectangle(pen, x, y, width, height);
            }
        }
        catch (exception) {
            console.error(exception);
        }
    };
    TuShape.DrawRoundedRectangle = function (g, view, pen, brush, x, y, w, h, cw, ch) {
        var graphicsPath = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicsPath();
        (0,_Globals__WEBPACK_IMPORTED_MODULE_9__.makeRoundedRectangularPath)(graphicsPath, 0, 0, new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGRectangle(x, y, w, h), new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize(cw, ch));
        TuShape_1.DrawPath(g, view, pen, brush, graphicsPath);
        graphicsPath.Dispose();
    };
    TuShape.prototype.ExpandPaintBounds = function (rect, view) {
        var penInfo = this.PenInfo;
        if (penInfo != null) {
            var single = Math.max(penInfo.Width, 1) / 2 * penInfo.MiterLimit + 1;
            var single1 = single;
            var outRect = { value: rect.clone() };
            _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.InflateRect(outRect, single1 + 2, single1 + 2);
            rect = outRect.value;
        }
        if (this.Shadowed) {
            var shadowOffset = this.GetShadowOffset(view);
            if (shadowOffset.Width >= 0) {
                rect.Width = rect.Width + shadowOffset.Width;
            }
            else {
                rect.X = rect.X + shadowOffset.Width;
                rect.Width = rect.Width - shadowOffset.Width;
            }
            if (shadowOffset.Height >= 0) {
                rect.Height = rect.Height + shadowOffset.Height;
            }
            else {
                rect.Y = rect.Y + shadowOffset.Height;
                rect.Height = rect.Height - shadowOffset.Height;
            }
        }
        return rect;
    };
    TuShape.prototype.fillDoubleEdge = function (start, center, spot) {
        if (center == null && spot == null) {
            return this.fillDoubleEdge(start, _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.White, _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop);
        }
        spot = this.CanonicalizeLinearGradientSpot(spot);
        var goBrushInfo = undefined;
        if (spot.ID > 4) {
            if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop || spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft) {
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientVertical);
                goBrushInfo.ForeColor = start;
                goBrushInfo.Color = center;
                goBrushInfo.MidFraction = 0.2;
                this.BrushInfo = goBrushInfo;
                return;
            }
            goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientHorizontal);
            goBrushInfo.ForeColor = start;
            goBrushInfo.Color = center;
            goBrushInfo.MidFraction = 0.2;
            this.BrushInfo = goBrushInfo;
            return;
        }
        else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopLeft) {
            goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientForwardDiagonal);
            goBrushInfo.ForeColor = start;
            goBrushInfo.Color = center;
            goBrushInfo.MidFraction = 0.2;
            this.BrushInfo = goBrushInfo;
            return;
        }
        else {
            if (spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.TopRight) {
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientVertical);
                goBrushInfo.ForeColor = start;
                goBrushInfo.Color = center;
                goBrushInfo.MidFraction = 0.2;
                this.BrushInfo = goBrushInfo;
                return;
            }
            goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientBackwardDiagonal);
            goBrushInfo.ForeColor = start;
            goBrushInfo.Color = center;
            goBrushInfo.MidFraction = 0.2;
            this.BrushInfo = goBrushInfo;
            return;
        }
        goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientVertical);
        goBrushInfo.ForeColor = start;
        goBrushInfo.Color = center;
        goBrushInfo.MidFraction = 0.2;
        this.BrushInfo = goBrushInfo;
    };
    TuShape.prototype.fillEllipseGradient = function (start, center) {
        if (center == null) {
            center = TuShape_1.VeryLight(start);
        }
        var pointF = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.EllipseGradient);
        pointF.ForeColor = start;
        pointF.Color = center;
        pointF.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
        pointF.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
        this.BrushInfo = pointF;
    };
    TuShape.prototype.fillHalfGradient = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var color = args[0];
            var color1 = color.clone();
            this.fillMiddleGradient(TuShape_1.VeryLight(color), color1, color1, _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop);
        }
        else if (args.length === 2) {
            var color = args[0];
            var spot = args[1];
            var color1 = color.clone();
            this.fillMiddleGradient(TuShape_1.VeryLight(color), color1, color1, spot);
        }
    };
    TuShape.prototype.fillMiddleGradient = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var color = args[0];
            this.fillMiddleGradient(TuShape_1.VeryLight(color), TuShape_1.LighterSofter(color), TuShape_1.VeryLight(color), _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop);
        }
        else if (args.length === 2) {
            var color = args[0];
            var spot = args[1];
            this.fillMiddleGradient(TuShape_1.VeryLight(color), TuShape_1.LighterSofter(color), TuShape_1.VeryLight(color), spot);
        }
        else if (args.length === 3) {
            var color = args[0];
            var mid = args[1];
            var spot = args[2];
            this.fillMiddleGradient(TuShape_1.VeryLight(color), mid, TuShape_1.VeryLight(color), spot);
        }
        else if (args.length === 4) {
            var start = args[0];
            var mid = args[1];
            var end = args[2];
            var spot = args[3];
            spot = this.CanonicalizeLinearGradientSpot(spot);
            var goBrushInfo = undefined;
            if (spot.ID > 4) {
                if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop || spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopCenter || spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft) {
                    goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientVertical);
                    goBrushInfo.ForeColor = start;
                    goBrushInfo.MidColor = mid;
                    goBrushInfo.Color = end;
                    goBrushInfo.MidFraction = 0.5;
                    this.BrushInfo = goBrushInfo;
                    return;
                }
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientHorizontal);
                goBrushInfo.ForeColor = start;
                goBrushInfo.MidColor = mid;
                goBrushInfo.Color = end;
                goBrushInfo.MidFraction = 0.5;
                this.BrushInfo = goBrushInfo;
                return;
            }
            else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopLeft) {
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientForwardDiagonal);
                goBrushInfo.ForeColor = start;
                goBrushInfo.MidColor = mid;
                goBrushInfo.Color = end;
                goBrushInfo.MidFraction = 0.5;
                this.BrushInfo = goBrushInfo;
                return;
            }
            else {
                if (spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.TopRight) {
                    goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientVertical);
                    goBrushInfo.ForeColor = start;
                    goBrushInfo.MidColor = mid;
                    goBrushInfo.Color = end;
                    goBrushInfo.MidFraction = 0.5;
                    this.BrushInfo = goBrushInfo;
                    return;
                }
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientBackwardDiagonal);
                goBrushInfo.ForeColor = start;
                goBrushInfo.MidColor = mid;
                goBrushInfo.Color = end;
                goBrushInfo.MidFraction = 0.5;
                this.BrushInfo = goBrushInfo;
                return;
            }
            goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientVertical);
            goBrushInfo.ForeColor = start;
            goBrushInfo.MidColor = mid;
            goBrushInfo.Color = end;
            goBrushInfo.MidFraction = 0.5;
            this.BrushInfo = goBrushInfo;
        }
    };
    TuShape.prototype.fillRectangleGradient = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var color = args[0];
            this.fillRectangleGradient(color, TuShape_1.VeryLight(color));
        }
        else if (args.length === 2) {
            var start = args[0];
            var center = args[1];
            var brushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.RectangleGradient);
            brushInfo.ForeColor = start;
            brushInfo.Color = center;
            brushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
            brushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
            this.BrushInfo = brushInfo;
        }
    };
    TuShape.prototype.fillShadedGradient = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var color = args[0];
            this.fillMiddleGradient(TuShape_1.VeryLight(color), TuShape_1.LighterSofter(color), TuShape_1.DarkerIntenser(color), _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop);
        }
        else if (args.length === 2) {
            var color = args[0];
            var spot = args[1];
            this.fillMiddleGradient(TuShape_1.VeryLight(color), TuShape_1.LighterSofter(color), TuShape_1.DarkerIntenser(color), spot);
        }
        else if (args.length === 3) {
            var start = args[0];
            var color = args[1];
            var spot = args[2];
            this.fillMiddleGradient(start, TuShape_1.LighterSofter(color), TuShape_1.DarkerIntenser(color), spot);
        }
    };
    TuShape.prototype.fillShapeFringe = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var start = args[0];
            this.fillShapeFringe(start, _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.White);
        }
        else if (args.length === 2) {
            var start = args[0];
            var center = args[1];
            var goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeFringeGradient);
            goBrushInfo.ForeColor = start;
            goBrushInfo.Color = center;
            goBrushInfo.MidFraction = 0.2;
            this.BrushInfo = goBrushInfo;
        }
    };
    TuShape.prototype.fillShapeGradient = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var color = args[0];
            this.fillShapeGradient(color, TuShape_1.VeryLight(color));
        }
        else if (args.length === 2) {
            var start = args[0];
            var center = args[1];
            var brushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeSimpleGradient);
            brushInfo.ForeColor = start;
            brushInfo.Color = center;
            brushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.15, 0.15);
            this.BrushInfo = brushInfo;
        }
    };
    TuShape.prototype.fillShapeHighlight = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var start = args[0];
            this.fillShapeHighlight(start, _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.White);
        }
        else if (args.length === 2) {
            var start = args[0];
            var center = args[1];
            var brushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeHighlightGradient);
            brushInfo.ForeColor = start;
            brushInfo.Color = center;
            brushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.15, 0.15);
            brushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.1, 0.1);
            this.BrushInfo = brushInfo;
        }
    };
    TuShape.prototype.fillSimpleGradient = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var color = args[0];
            this.fillSimpleGradient(TuShape_1.VeryLight(color), color, _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop);
        }
        else if (args.length === 2) {
            var color = args[0];
            var spot = args[1];
            this.fillSimpleGradient(TuShape_1.VeryLight(color), color, spot);
        }
        else if (args.length === 3) {
            var start = args[0];
            var end = args[1];
            var spot = args[2];
            spot = this.CanonicalizeLinearGradientSpot(spot);
            var goBrushInfo = undefined;
            if (spot.ID > 4) {
                if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop || spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopCenter || spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft) {
                    goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientVertical);
                    goBrushInfo.ForeColor = start;
                    goBrushInfo.Color = end;
                    this.BrushInfo = goBrushInfo;
                    return;
                }
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientHorizontal);
                goBrushInfo.ForeColor = start;
                goBrushInfo.Color = end;
                this.BrushInfo = goBrushInfo;
                return;
            }
            else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.TopLeft) {
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientForwardDiagonal);
                goBrushInfo.ForeColor = start;
                goBrushInfo.Color = end;
                this.BrushInfo = goBrushInfo;
                return;
            }
            else {
                if (spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.TopRight) {
                    goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientVertical);
                    goBrushInfo.ForeColor = start;
                    goBrushInfo.Color = end;
                    this.BrushInfo = goBrushInfo;
                    return;
                }
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientBackwardDiagonal);
                goBrushInfo.ForeColor = start;
                goBrushInfo.Color = end;
                this.BrushInfo = goBrushInfo;
                return;
            }
            goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientVertical);
            goBrushInfo.ForeColor = start;
            goBrushInfo.Color = end;
            this.BrushInfo = goBrushInfo;
        }
    };
    TuShape.prototype.fillSingleEdge = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var start = args[0];
            this.fillSingleEdge(start, _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.White, _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop);
        }
        else if (args.length === 2) {
            var start = args[0];
            var center = args[1];
            var spot = args[2];
            if ((spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop || spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.TopCenter) && spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft && spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleRight && (spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleBottom || spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.BottomCenter)) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_6__.ArgumentOutOfRangeException("spot", "spot must be one of: MiddleTop, MiddleLeft, MiddleRight, or MiddleBottom");
            }
            var goBrushInfo = undefined;
            if (spot.ID <= 64) {
                if (spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop || spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.TopCenter) {
                    if (spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleRight) {
                        goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientTop);
                        goBrushInfo.ForeColor = start;
                        goBrushInfo.Color = center;
                        goBrushInfo.MidFraction = 0.1;
                        this.BrushInfo = goBrushInfo;
                        return;
                    }
                    goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientRight);
                    goBrushInfo.ForeColor = start;
                    goBrushInfo.Color = center;
                    goBrushInfo.MidFraction = 0.1;
                    this.BrushInfo = goBrushInfo;
                    return;
                }
            }
            else if (spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleBottom || spot === _Spot__WEBPACK_IMPORTED_MODULE_11__.BottomCenter) {
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientBottom);
                goBrushInfo.ForeColor = start;
                goBrushInfo.Color = center;
                goBrushInfo.MidFraction = 0.1;
                this.BrushInfo = goBrushInfo;
                return;
            }
            else {
                if (spot !== _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft) {
                    goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientTop);
                    goBrushInfo.ForeColor = start;
                    goBrushInfo.Color = center;
                    goBrushInfo.MidFraction = 0.1;
                    this.BrushInfo = goBrushInfo;
                    return;
                }
                goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientLeft);
                goBrushInfo.ForeColor = start;
                goBrushInfo.Color = center;
                goBrushInfo.MidFraction = 0.1;
                this.BrushInfo = goBrushInfo;
                return;
            }
            goBrushInfo = TuShape_1.ModifyBrushStyle(this.BrushInfo, _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientTop);
            goBrushInfo.ForeColor = start;
            goBrushInfo.Color = center;
            goBrushInfo.MidFraction = 0.1;
            this.BrushInfo = goBrushInfo;
        }
    };
    TuShape.GetBrushInfo = function (b, shapeorpath) {
        if (b == null) {
            return undefined;
        }
        if (TuShape_1.BrushInfo_Black == null) {
            TuShape_1.BrushInfo_Black = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(_Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_Black);
            TuShape_1.BrushInfo_Gray = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(_Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_Gray);
            TuShape_1.BrushInfo_LightGray = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(_Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_LightGray);
            TuShape_1.BrushInfo_White = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(_Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_White);
        }
        if (b === _Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_Black) {
            return TuShape_1.BrushInfo_Black;
        }
        if (b === _Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_Gray) {
            return TuShape_1.BrushInfo_Gray;
        }
        if (b === _Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_LightGray) {
            return TuShape_1.BrushInfo_LightGray;
        }
        if (b === _Globals__WEBPACK_IMPORTED_MODULE_9__.Brushes_White) {
            return TuShape_1.BrushInfo_White;
        }
        var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo();
        goBrushInfo.setBrush(b, shapeorpath);
        return goBrushInfo;
    };
    TuShape.prototype.GetNearestIntersectionPoint = function (p1, p2, result) {
        var bounds = this.Bounds.clone();
        var penWidth = this.PenWidth;
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.InflateRect({ value: bounds }, penWidth / 2, penWidth / 2);
        return _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.GetNearestIntersectionPoint(bounds, p1, p2, result);
    };
    TuShape.prototype.getPath = function () {
        if (this.myPath == null) {
            this.myPath = this.makePath();
        }
        return this.myPath;
    };
    TuShape.GetPenColor = function (p, def) {
        var color;
        if (p == null) {
            return def;
        }
        try {
            color = p.Color;
        }
        catch (exception) {
            color = def;
        }
        return color;
    };
    TuShape.GetPenInfo = function (p) {
        if (p == null) {
            return undefined;
        }
        if (TuShape_1.PenInfo_Black == null) {
            TuShape_1.PenInfo_Black = new _TuPenInfo__WEBPACK_IMPORTED_MODULE_7__.TuPenInfo(_Globals__WEBPACK_IMPORTED_MODULE_9__.Pens_Black);
        }
        if (p === _Globals__WEBPACK_IMPORTED_MODULE_9__.Pens_Black) {
            return TuShape_1.PenInfo_Black;
        }
        var goPenInfo = new _TuPenInfo__WEBPACK_IMPORTED_MODULE_7__.TuPenInfo();
        goPenInfo.setPen(p);
        return goPenInfo;
    };
    TuShape.GetPenWidth = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var pen = args[0];
            var width = void 0;
            if (!pen) {
                return 0;
            }
            try {
                width = pen.Width ? pen.Width : 0;
            }
            catch (e) {
                width = 1;
            }
            return width;
        }
        else if (args.length === 2) {
            var pen = args[0];
            var view = args[1];
            if (pen == null) {
                return 0;
            }
            var width = TuShape_1.GetPenInfo(pen).Width;
            if (width !== 0 || view == null || view.DocScale <= 0) {
                return width;
            }
            return 1 / view.DocScale;
        }
    };
    TuShape.HsbToRgb = function (hue, saturation, brightness, red, green, blue) {
        if (saturation === 0) {
            red.value = brightness;
            green.value = brightness;
            blue.value = brightness;
            return;
        }
        var ınt32 = (Math.floor(hue / 60) % 6);
        var single = hue / 60 - ınt32;
        var single1 = brightness * (1 - saturation);
        var single2 = brightness * (1 - single * saturation);
        var single3 = brightness * (1 - (1 - single) * saturation);
        switch (ınt32) {
            case 1:
                {
                    red.value = single2;
                    green.value = brightness;
                    blue.value = single1;
                    return;
                }
            case 2:
                {
                    red.value = single1;
                    green.value = brightness;
                    blue.value = single3;
                    return;
                }
            case 3:
                {
                    red.value = single1;
                    green.value = single2;
                    blue.value = brightness;
                    return;
                }
            case 4:
                {
                    red.value = single3;
                    green.value = single1;
                    blue.value = brightness;
                    return;
                }
            case 5:
                {
                    red.value = brightness;
                    green.value = single1;
                    blue.value = single2;
                    return;
                }
            default:
                {
                    red.value = brightness;
                    green.value = single3;
                    blue.value = single1;
                    return;
                }
        }
    };
    TuShape.IsExtremelySized = function (w, h, view) {
        var worldScale = view.WorldScale;
        var docScale = view.DocScale;
        var single = w * h * docScale * docScale * worldScale.Width * worldScale.Height;
        if (single < 2) {
            return true;
        }
        return single > 9999999;
    };
    TuShape.IsExtremelySmall = function (w, h, view) {
        var worldScale = view.WorldScale;
        var docScale = view.DocScale;
        return w * h * docScale * docScale * worldScale.Width * worldScale.Height < 2;
    };
    TuShape.LighterSofter = function (c) {
        var single;
        var single1;
        var single2;
        var single3;
        var single4;
        var single5;
        TuShape_1.RgbToHsb(c.R / 255, c.G / 255, c.B / 255, single, single1, single2);
        single2.value = single2.value * 1.4;
        if (single2.value < 0) {
            single2.value = 0;
        }
        else if (single2.value > 1) {
            single2.value = 1;
        }
        single1.value = single1.value / 1.4;
        if (single1.value < 0) {
            single1.value = 0;
        }
        else if (single1.value > 1) {
            single1.value = 1;
        }
        TuShape_1.HsbToRgb(single.value, single1.value, single2.value, single3, single4, single5);
        return _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.FromRgba(~~(single3.value * 255), ~~(single4.value * 255), ~~(single5.value * 255), ~~c.A);
    };
    TuShape.prototype.makePath = function () {
        var graphicsPath = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.GraphicsPath(_tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.FillMode.Winding);
        graphicsPath.addRectangle(this.Bounds);
        return graphicsPath;
    };
    TuShape.ModifyBrushStyle = function (info, style) {
        var goBrushInfo = new _TuBrushInfo__WEBPACK_IMPORTED_MODULE_8__.TuBrushInfo(info);
        goBrushInfo.BrushStyle = style;
        switch (style) {
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientVertical:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientVertical:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientTop:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 1);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientHorizontal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientHorizontal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientLeft:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(1, 0);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientForwardDiagonal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientForwardDiagonal:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(1, 1);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SimpleGradientBackwardDiagonal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientBackwardDiagonal:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(1, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 1);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientRight:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(1, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientBottom:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 1);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientVertical:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0.5);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientHorizontal:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientForwardDiagonal:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientBackwardDiagonal:
                {
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(1, 0);
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeSimpleGradient:
                {
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.15, 0.15);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeFringeGradient:
                {
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeHighlightGradient:
                {
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.15, 0.15);
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.1, 0.1);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.RectangleGradient:
                {
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.EllipseGradient:
                {
                    goBrushInfo.Point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0.5, 0.5);
                    goBrushInfo.StartOrFocusScales = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint(0, 0);
                    break;
                }
        }
        switch (style) {
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientVertical:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientHorizontal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientForwardDiagonal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.MiddleGradientBackwardDiagonal:
                {
                    goBrushInfo.MidBlendFactor = 1;
                    goBrushInfo.MidFraction = 0.5;
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientTop:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientLeft:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientRight:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.SingleEdgeGradientBottom:
                {
                    goBrushInfo.MidBlendFactor = 1;
                    goBrushInfo.MidFraction = 0.1;
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientVertical:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientHorizontal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientForwardDiagonal:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.DoubleEdgeGradientBackwardDiagonal:
                {
                    goBrushInfo.MidBlendFactor = 1;
                    goBrushInfo.MidFraction = 0.2;
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeSimpleGradient:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeHighlightGradient:
                {
                    goBrushInfo.MidBlendFactor = Number.NaN;
                    goBrushInfo.MidFraction = Number.NaN;
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.ShapeFringeGradient:
                {
                    goBrushInfo.MidBlendFactor = 1;
                    goBrushInfo.MidFraction = 0.2;
                    break;
                }
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.RectangleGradient:
            case _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.EllipseGradient:
                {
                    goBrushInfo.MidBlendFactor = 0.5;
                    goBrushInfo.MidFraction = 0.5;
                    break;
                }
            default:
                {
                    goBrushInfo.MidBlendFactor = Number.NaN;
                    goBrushInfo.MidFraction = Number.NaN;
                    break;
                }
        }
        return goBrushInfo;
    };
    TuShape.NewPen = function (color, width) {
        return new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.Pen(color, width);
    };
    TuShape.prototype.Paint = function (g, view) {
        this.paintPath(g, view, this.getPath());
    };
    TuShape.prototype.paintPath = function (g, view, path) {
        var brush = this.Brush;
        var pen = this.Pen;
        if (this.Shadowed) {
            var shadowOffset = this.GetShadowOffset(view);
            if (brush != null) {
                var shadowBrush = this.GetShadowBrush(view);
                try {
                    view.translateTransform(g, shadowOffset.Width, shadowOffset.Height);
                    TuShape_1.DrawPath(g, view, null, shadowBrush, path);
                }
                finally {
                    view.translateTransform(g, -shadowOffset.Width, -shadowOffset.Height);
                }
            }
            else if (pen != null) {
                var shadowPen = this.GetShadowPen(view, this.PenWidth);
                try {
                    view.translateTransform(g, shadowOffset.Width, shadowOffset.Height);
                    TuShape_1.DrawPath(g, view, shadowPen, null, path);
                }
                finally {
                    view.translateTransform(g, -shadowOffset.Width, -shadowOffset.Height);
                }
            }
        }
        TuShape_1.DrawPath(g, view, pen, brush, path);
    };
    TuShape.prototype.paintPolygon = function (g, view, pts) {
        var brush = this.Brush;
        var pen = this.Pen;
        var shadowOffset = this.GetShadowOffset(view);
        if (this.Shadowed) {
            if (brush != null) {
                var shadowBrush = this.GetShadowBrush(view);
                try {
                    view.translateTransform(g, shadowOffset.Width, shadowOffset.Height);
                    TuShape_1.DrawPolygon(g, view, undefined, shadowBrush, pts);
                }
                finally {
                    view.translateTransform(g, -shadowOffset.Width, -shadowOffset.Height);
                }
            }
            else if (pen != null) {
                var shadowPen = this.GetShadowPen(view, this.PenWidth);
                try {
                    view.translateTransform(g, shadowOffset.Width, shadowOffset.Height);
                    TuShape_1.DrawPolygon(g, view, shadowPen, undefined, pts);
                }
                finally {
                    view.translateTransform(g, -shadowOffset.Width, -shadowOffset.Height);
                }
            }
        }
        TuShape_1.DrawPolygon(g, view, pen, brush, pts);
    };
    TuShape.prototype.resetPath = function () {
        if (this.myPath != null) {
            this.myPath.Dispose();
            this.myPath = undefined;
        }
        if (this.myBrush != null) {
            if (this.myBrushInfo != null && !this.myBrushInfo.HasBrush) {
                this.myBrush.Dispose();
            }
            this.myBrush = undefined;
        }
    };
    TuShape.RgbToHsb = function (red, green, blue, outHue, outSaturation, outBrightness) {
        var hue, saturation, brightness;
        brightness = Math.max(red, Math.max(green, blue));
        var single = Math.min(red, Math.min(green, blue));
        if (brightness === single) {
            hue = 0;
        }
        else if (brightness === red) {
            if (green >= blue) {
                hue = 60 * ((green - blue) / (brightness - single));
            }
            else {
                hue = 60 * ((green - blue) / (brightness - single)) + 360;
            }
        }
        else if (brightness !== green) {
            hue = 60 * ((red - green) / (brightness - single)) + 240;
        }
        else {
            hue = 60 * ((blue - red) / (brightness - single)) + 120;
        }
        if (brightness === 0) {
            saturation = 0;
            return;
        }
        saturation = (brightness - single) / brightness;
        outHue.value = hue;
        outSaturation.value = saturation;
        outBrightness.value = brightness;
    };
    TuShape.ToBrushStyle = function (s) {
        return (s + 256);
    };
    TuShape.ToHatchStyle = function (s) {
        return (s - _TuBrushStyle__WEBPACK_IMPORTED_MODULE_10__.TuBrushStyle.HatchHorizontal);
    };
    TuShape.VeryLight = function (c) {
        var single = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single1 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single2 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single3 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single4 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        var single5 = _tuval_core__WEBPACK_IMPORTED_MODULE_6__.New.Out();
        TuShape_1.RgbToHsb(c.R / 255, c.G / 255, c.B / 255, single, single1, single2);
        TuShape_1.HsbToRgb(single.value, Math.min(single1.value / 2, 0.1), Math.max(1 - (1 - single2.value) / 2, 0.9), single3, single4, single5);
        return _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGColor.FromRgba(~~(single3.value * 255), ~~(single4.value * 255), ~~(single5.value * 255), ~~c.A);
    };
    var TuShape_1;
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuShape.prototype, "myPenInfo", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuShape.prototype, "myBrushInfo", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuShape.prototype, "myPath", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_13__.State)()
    ], TuShape.prototype, "myBrush", void 0);
    TuShape = TuShape_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_5__.Types.TuShape,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_5__.Types.TuShape
            ]
        })
    ], TuShape);
    return TuShape;
}(_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_12__.TuObject));



/***/ }),

/***/ "./src/TuShape/TuShapeEvents.ts":
/*!**************************************!*\
  !*** ./src/TuShape/TuShapeEvents.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuShapeEvents": () => (/* binding */ TuShapeEvents)
/* harmony export */ });
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../TuObjectEvents */ "./src/TuObjectEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuShapeEvents = /** @class */ (function (_super) {
    __extends(TuShapeEvents, _super);
    function TuShapeEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuShapeEvents.ChangedPen = 1101;
    TuShapeEvents.ChangedBrush = 1102;
    TuShapeEvents[1101] = 'ChangedPen';
    TuShapeEvents[1102] = 'ChangedBrush';
    return TuShapeEvents;
}(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__.TuObjectEvents));



/***/ }),

/***/ "./src/TuSheet/TuSheet.ts":
/*!********************************!*\
  !*** ./src/TuSheet/TuSheet.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuSheet": () => (/* binding */ TuSheet)
/* harmony export */ });
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _TuGroup_TuGroup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../TuGroup/TuGroup */ "./src/TuGroup/TuGroup.tsx");
/* harmony import */ var _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuGrid/TuGrid */ "./src/TuGrid/TuGrid.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TuSheetEvents */ "./src/TuSheet/TuSheetEvents.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _TuGrid_TuViewGridStyle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TuGrid/TuViewGridStyle */ "./src/TuGrid/TuViewGridStyle.ts");
/* harmony import */ var _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../TuRectangle/TuRectangle */ "./src/TuRectangle/TuRectangle.tsx");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_12__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};














var TuSheet = /** @class */ (function (_super) {
    __extends(TuSheet, _super);
    //#endregion
    function TuSheet() {
        var _this = _super.call(this) || this;
        _this.Initializing = true;
        _this.myPaper = _this.createPaper();
        _this.Add(_this.myPaper);
        _this.myBackgroundImage = _this.createBackgroundImage();
        _this.Add(_this.myBackgroundImage);
        _this.myGrid = _this.createGrid();
        _this.Add(_this.myGrid);
        _this.myLeftRect = _this.makeBoundary();
        _this.Add(_this.myLeftRect);
        _this.myRightRect = _this.makeBoundary();
        _this.Add(_this.myRightRect);
        _this.myTopRect = _this.makeBoundary();
        _this.Add(_this.myTopRect);
        _this.myBottomRect = _this.makeBoundary();
        _this.Add(_this.myBottomRect);
        _this.Initializing = false;
        _this.layoutChildren(undefined);
        return _this;
    }
    TuSheet_1 = TuSheet;
    Object.defineProperty(TuSheet.prototype, "BackgroundImage", {
        //#region [Property] BackgroundImage
        get: function () {
            return this.getBackgroundImage();
        },
        set: function (value) {
            this.setBackgroundImage(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getBackgroundImage = function () {
        return this.myBackgroundImage;
    };
    TuSheet.prototype.setBackgroundImage = function (value) {
        var goImage = this.myBackgroundImage;
        if (goImage != value) {
            if (goImage != null) {
                this.Remove(goImage);
            }
            this.myBackgroundImage = value;
            if (value != null) {
                if (this.Paper == null) {
                    this.insertBefore(null, value);
                }
                else {
                    this.insertAfter(this.Paper, value);
                }
            }
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedBackgroundImage, 0, goImage, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuSheet.prototype, "BackgroundImageSpot", {
        //#endregion
        //#region [Property] BackgroundImageSpot
        get: function () {
            return this.getBackgroundImageSpot();
        },
        set: function (value) {
            this.setBackgroundImageSpot(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getBackgroundImageSpot = function () {
        return this.myBackgroundImageSpot;
    };
    TuSheet.prototype.setBackgroundImageSpot = function (value) {
        var int32 = this.myBackgroundImageSpot;
        if (!int32.equals(value)) {
            this.myBackgroundImageSpot = value;
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedBackgroundImageSpot, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
            if (!this.Initializing) {
                this.layoutChildren(undefined);
            }
        }
    };
    Object.defineProperty(TuSheet.prototype, "BottomRightMargin", {
        //#endregion
        //#region [Property] BottomRightMargin
        get: function () {
            return this.getBottomRightMargin();
        },
        set: function (value) {
            this.setBottomRightMargin(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getBottomRightMargin = function () {
        return this.myBottomRightMargin;
    };
    TuSheet.prototype.setBottomRightMargin = function (value) {
        var sizeF = this.myBottomRightMargin;
        if (!sizeF.Equals(value) && value.Width >= 0 && value.Height >= 0) {
            this.myBottomRightMargin = value;
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedBottomRightMargin, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.MakeRect(sizeF), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.MakeRect(value));
            if (!this.Initializing) {
                this.layoutChildren(null);
            }
        }
    };
    Object.defineProperty(TuSheet.prototype, "Grid", {
        //#endregion
        //#region [Property] Grid
        get: function () {
            return this.getGrid();
        },
        set: function (value) {
            this.setGrid(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getGrid = function () {
        return this.myGrid;
    };
    TuSheet.prototype.setGrid = function (value) {
        var goGrid = this.myGrid;
        if (goGrid !== value) {
            if (goGrid != null) {
                this.Remove(goGrid);
            }
            this.myGrid = value;
            if (value != null) {
                var backgroundImage = this.BackgroundImage;
                if (backgroundImage == null) {
                    backgroundImage = this.Paper;
                }
                if (backgroundImage == null) {
                    this.insertBefore(undefined, value);
                }
                else {
                    this.insertAfter(backgroundImage, value);
                }
            }
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedGrid, 0, goGrid, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuSheet.prototype, "MarginBounds", {
        //#endregion
        //#region [Property] Grid
        get: function () {
            return this.getMarginBounds();
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getMarginBounds = function () {
        var paper = this.Paper;
        if (paper == null) {
            paper = this;
        }
        var topLeftMargin = this.TopLeftMargin;
        var bottomRightMargin = this.BottomRightMargin;
        if (topLeftMargin.Width + bottomRightMargin.Width > paper.Width) {
            topLeftMargin.Width = paper.Width / 2;
            bottomRightMargin.Width = paper.Width / 2;
        }
        if (topLeftMargin.Height + bottomRightMargin.Height > paper.Height) {
            topLeftMargin.Height = paper.Height / 2;
            bottomRightMargin.Height = paper.Height / 2;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(paper.Left + Math.min(topLeftMargin.Width, paper.Width / 2), paper.Top + Math.min(topLeftMargin.Height, paper.Height / 2), Math.max(0, paper.Width - topLeftMargin.Width - bottomRightMargin.Width), Math.max(0, paper.Height - topLeftMargin.Height - bottomRightMargin.Height));
    };
    Object.defineProperty(TuSheet.prototype, "MarginColor", {
        //#endregion
        //#region [Property] MarginColor
        get: function () {
            return this.getMarginColor();
        },
        set: function (value) {
            this.setMarginColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getMarginColor = function () {
        return this.myMarginColor;
    };
    TuSheet.prototype.setMarginColor = function (value) {
        var color = this.myMarginColor;
        if (!color.Equals(value)) {
            this.myMarginColor = value;
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedMarginColor, 0, color, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
            if (!this.Initializing) {
                if (this.myLeftRect != null) {
                    this.myLeftRect.BrushColor = this.myMarginColor;
                }
                if (this.myRightRect != null) {
                    this.myRightRect.BrushColor = this.myMarginColor;
                }
                if (this.myTopRect != null) {
                    this.myTopRect.BrushColor = this.myMarginColor;
                }
                if (this.myBottomRect != null) {
                    this.myBottomRect.BrushColor = this.myMarginColor;
                }
            }
        }
    };
    Object.defineProperty(TuSheet.prototype, "Paper", {
        //#endregion
        //#region [Property] Paper
        get: function () {
            return this.getPaper();
        },
        set: function (value) {
            this.setPaper(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getPaper = function () {
        return this.myPaper;
    };
    TuSheet.prototype.setPaper = function (value) {
        var goRectangle = this.myPaper;
        if (goRectangle != value) {
            if (goRectangle != null) {
                this.Remove(goRectangle);
            }
            this.myPaper = value;
            if (value != null) {
                this.insertBefore(null, value);
            }
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedPaper, 0, goRectangle, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuSheet.prototype, "ShowsMargins", {
        //#endregion
        //#region [Property] ShowsMargins
        get: function () {
            return this.getShowsMargins();
        },
        set: function (value) {
            this.setShowsMargins(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getShowsMargins = function () {
        return this.myShowsMargins;
    };
    TuSheet.prototype.setShowsMargins = function (value) {
        var flag = this.myShowsMargins;
        if (flag != value) {
            this.myShowsMargins = value;
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedShowsMargins, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
            if (!this.Initializing) {
                if (this.myLeftRect != null) {
                    this.myLeftRect.Visible = value;
                    this.myLeftRect.Printable = value;
                }
                if (this.myRightRect != null) {
                    this.myRightRect.Visible = value;
                    this.myRightRect.Printable = value;
                }
                if (this.myTopRect != null) {
                    this.myTopRect.Visible = value;
                    this.myTopRect.Printable = value;
                }
                if (this.myBottomRect != null) {
                    this.myBottomRect.Visible = value;
                    this.myBottomRect.Printable = value;
                }
            }
        }
    };
    Object.defineProperty(TuSheet.prototype, "TopLeftMargin", {
        //#endregion
        //#region [Property] TopLeftMargin
        get: function () {
            return this.getTopLeftMargin();
        },
        set: function (value) {
            this.setTopLeftMargin(value);
        },
        enumerable: false,
        configurable: true
    });
    TuSheet.prototype.getTopLeftMargin = function () {
        return this.myTopLeftMargin;
    };
    TuSheet.prototype.setTopLeftMargin = function (value) {
        var sizeF = this.myTopLeftMargin;
        if (sizeF != value && value.Width >= 0 && value.Height >= 0) {
            this.myTopLeftMargin = value;
            this.Changed(_TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedShowsMargins, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.MakeRect(sizeF), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_7__.GeomUtilities.MakeRect(value));
            if (!this.Initializing) {
                this.layoutChildren(undefined);
            }
        }
    };
    TuSheet.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedTopLeftMargin:
                {
                    this.TopLeftMargin = e.getSize(undo);
                    return;
                }
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedBottomRightMargin:
                {
                    this.BottomRightMargin = e.getSize(undo);
                    return;
                }
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedBackgroundImageSpot:
                {
                    this.BackgroundImageSpot = e.getValue(undo);
                    return;
                }
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedShowsMargins:
                {
                    this.ShowsMargins = e.getValue(undo);
                    return;
                }
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedMarginColor:
                {
                    this.MarginColor = e.getValue(undo);
                    return;
                }
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedPaper:
                {
                    this.Paper = e.getValue(undo);
                    return;
                }
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedBackgroundImage:
                {
                    this.BackgroundImage = e.getValue(undo);
                    return;
                }
            case _TuSheetEvents__WEBPACK_IMPORTED_MODULE_6__.TuSheetEvents.ChangedGrid:
                {
                    this.Grid = e.getValue(undo);
                    return;
                }
            default:
                {
                    _super.prototype.ChangeValue.call(this, e, undo);
                    return;
                }
        }
    };
    TuSheet.prototype.copyChildren = function (newgroup, env) {
        _super.prototype.copyChildren.call(this, newgroup, env);
        var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(newgroup, _types__WEBPACK_IMPORTED_MODULE_8__.Types.TuSheet);
        item.myPaper = env.Get(this.myPaper);
        item.myBackgroundImage = env.Get(this.myBackgroundImage);
        item.myGrid = env.Get(this.myGrid);
        item.myLeftRect = env.Get(this.myLeftRect);
        item.myRightRect = env.Get(this.myRightRect);
        item.myTopRect = env.Get(this.myTopRect);
        item.myBottomRect = env.Get(this.myBottomRect);
    };
    TuSheet.prototype.createBackgroundImage = function () {
        return undefined;
    };
    TuSheet.prototype.createGrid = function () {
        var grid = new _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_4__.TuGrid();
        grid.Selectable = false;
        grid.CellSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(25, 25),
            grid.OriginRelative = false;
        grid.LineDashStyle = _tuval_graphics__WEBPACK_IMPORTED_MODULE_9__.DashStyle.Custom;
        grid.MajorLineColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.LightGray;
        grid.MajorLineFrequency = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(4, 4);
        grid.Style = _TuGrid_TuViewGridStyle__WEBPACK_IMPORTED_MODULE_10__.TuViewGridStyle.None;
        return grid;
    };
    TuSheet.prototype.createPaper = function () {
        var grid = new _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_4__.TuGrid();
        grid.Selectable = false;
        grid.UnboundedSpots = _Spot__WEBPACK_IMPORTED_MODULE_5__.Spot.None;
        grid.Brush = _Globals__WEBPACK_IMPORTED_MODULE_0__.Brushes_White;
        grid.Pen = _Globals__WEBPACK_IMPORTED_MODULE_0__.Pens_Black;
        grid.Shadowed = true;
        grid.Style = _TuGrid_TuViewGridStyle__WEBPACK_IMPORTED_MODULE_10__.TuViewGridStyle.None;
        return grid;
    };
    TuSheet.prototype.ExpandPaintBounds = function (rect, view) {
        _super.prototype.invalidatePaintBounds.call(this);
        return _super.prototype.ExpandPaintBounds.call(this, rect, view);
    };
    TuSheet.prototype.findChild = function (name) {
        if (name === "Paper") {
            return this.Paper;
        }
        if (name === "BackgroundImage") {
            return this.BackgroundImage;
        }
        if (name === "Grid") {
            return this.Grid;
        }
        return _super.prototype.findChild.call(this, name);
    };
    TuSheet.prototype.findName = function (child) {
        if (child === this.Paper) {
            return "Paper";
        }
        if (child === this.BackgroundImage) {
            return "BackgroundImage";
        }
        if (child === this.Grid) {
            return "Grid";
        }
        return _super.prototype.findName.call(this, child);
    };
    TuSheet.prototype.GetShadowBrush = function (view) {
        return _Globals__WEBPACK_IMPORTED_MODULE_0__.Brushes_Black;
    };
    TuSheet.prototype.layoutChildren = function (childchanged) {
        if (this.Initializing) {
            return;
        }
        _super.prototype.layoutChildren.call(this, childchanged);
        var topLeftMargin = this.TopLeftMargin;
        var bottomRightMargin = this.BottomRightMargin;
        var marginBounds = this.MarginBounds;
        if (this.BackgroundImage != null) {
            this.BackgroundImage.setSpotLocation(this.BackgroundImageSpot, this.GetRectangleSpotLocation(marginBounds, this.BackgroundImageSpot));
        }
        var paper = this.Paper;
        if (paper == null) {
            paper = this;
        }
        if (this.Grid != null) {
            this.Grid.Bounds = paper.Bounds;
        }
        if (topLeftMargin.Width + bottomRightMargin.Width > paper.Width) {
            topLeftMargin.Width = paper.Width / 2;
            bottomRightMargin.Width = paper.Width / 2;
        }
        if (topLeftMargin.Height + bottomRightMargin.Height > paper.Height) {
            topLeftMargin.Height = paper.Height / 2;
            bottomRightMargin.Height = paper.Height / 2;
        }
        if (this.myLeftRect != null) {
            this.myLeftRect.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(marginBounds.X - topLeftMargin.Width, marginBounds.Y, topLeftMargin.Width, marginBounds.Height);
        }
        if (this.myRightRect != null) {
            this.myRightRect.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(marginBounds.X + marginBounds.Width, marginBounds.Y, bottomRightMargin.Width, marginBounds.Height);
        }
        if (this.myTopRect != null) {
            this.myTopRect.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(marginBounds.X - topLeftMargin.Width, marginBounds.Y - topLeftMargin.Height, marginBounds.Width + topLeftMargin.Width + bottomRightMargin.Width, topLeftMargin.Height);
        }
        if (this.myBottomRect != null) {
            this.myBottomRect.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(marginBounds.X - topLeftMargin.Width, marginBounds.Y + marginBounds.Height, marginBounds.Width + topLeftMargin.Width + bottomRightMargin.Width, bottomRightMargin.Height);
        }
    };
    TuSheet.prototype.makeBoundary = function () {
        var rect = new _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_11__.TuRectangle();
        rect.Selectable = false;
        rect.AutoRescales = false;
        rect.BrushColor = this.MarginColor;
        rect.Pen = undefined;
        return rect;
    };
    TuSheet.prototype.Remove = function (obj) {
        var flag = _super.prototype.Remove.call(this, obj);
        if (obj === this.myPaper) {
            this.myPaper = null;
            return flag;
        }
        if (obj === this.myBackgroundImage) {
            this.myBackgroundImage = undefined;
            return flag;
        }
        if (obj === this.myGrid) {
            this.myGrid = undefined;
            return flag;
        }
        if (obj === this.myLeftRect) {
            this.myLeftRect = undefined;
            return flag;
        }
        if (obj === this.myRightRect) {
            this.myRightRect = undefined;
            return flag;
        }
        if (obj === this.myTopRect) {
            this.myTopRect = undefined;
            return flag;
        }
        if (obj === this.myBottomRect) {
            this.myBottomRect = undefined;
        }
        return flag;
    };
    TuSheet.prototype.updateBounds = function (ps, viewscale) {
        var paperSize = ps.PaperSize;
        var width = paperSize.Width / viewscale;
        var height = paperSize.Height / viewscale;
        var margins = ps.Margins;
        var left = margins.Left / viewscale;
        var top = margins.Top / viewscale;
        var right = margins.Right / viewscale;
        var bottom = margins.Bottom / viewscale;
        var rectangleF = (ps.Landscape ? new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(0, 0, height, width) : new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(0, 0, width, height));
        if (this.Paper == null) {
            this.Bounds = rectangleF;
        }
        else {
            this.Paper.Bounds = rectangleF;
        }
        this.TopLeftMargin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(left, top);
        this.BottomRightMargin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(right, bottom);
    };
    var TuSheet_1;
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuSheet.prototype, "myPaper", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuSheet.prototype, "myBackgroundImage", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuSheet.prototype, "myGrid", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuSheet.prototype, "myLeftRect", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuSheet.prototype, "myRightRect", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuSheet.prototype, "myTopRect", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuSheet.prototype, "myBottomRect", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)(function () { return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(50, 50); })
    ], TuSheet.prototype, "myTopLeftMargin", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)(function () { return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(50, 50); })
    ], TuSheet.prototype, "myBottomRightMargin", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)(function () { return _Spot__WEBPACK_IMPORTED_MODULE_5__.Middle; })
    ], TuSheet.prototype, "myBackgroundImageSpot", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)(function () { return true; })
    ], TuSheet.prototype, "myShowsMargins", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)(function () { return TuSheet_1.DefaultMarginColor; })
    ], TuSheet.prototype, "myMarginColor", void 0);
    TuSheet = TuSheet_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_8__.Types.TuSheet,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_8__.Types.TuSheet
            ]
        })
    ], TuSheet);
    return TuSheet;
}(_TuGroup_TuGroup__WEBPACK_IMPORTED_MODULE_3__.TuGroup));

(function () {
    TuSheet.DefaultMarginColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.FromRgba(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.LightGray.R, _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.LightGray.G, _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.LightGray.B, 64);
})();


/***/ }),

/***/ "./src/TuSheet/TuSheetEvents.ts":
/*!**************************************!*\
  !*** ./src/TuSheet/TuSheetEvents.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuSheetEvents": () => (/* binding */ TuSheetEvents)
/* harmony export */ });
/* harmony import */ var _TuGroup_TuGroupEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuGroup/TuGroupEvents */ "./src/TuGroup/TuGroupEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuSheetEvents = /** @class */ (function (_super) {
    __extends(TuSheetEvents, _super);
    function TuSheetEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuSheetEvents.ChangedTopLeftMargin = 3101;
    TuSheetEvents.ChangedBottomRightMargin = 3102;
    TuSheetEvents.ChangedBackgroundImageSpot = 3103;
    TuSheetEvents.ChangedShowsMargins = 3104;
    TuSheetEvents.ChangedMarginColor = 3105;
    TuSheetEvents.ChangedPaper = 3110;
    TuSheetEvents.ChangedBackgroundImage = 3111;
    TuSheetEvents.ChangedGrid = 3112;
    TuSheetEvents[3101] = 'ChangedTopLeftMargin';
    TuSheetEvents[3102] = 'ChangedBottomRightMargin';
    TuSheetEvents[3103] = 'ChangedBackgroundImageSpot';
    TuSheetEvents[3104] = 'ChangedShowsMargins';
    TuSheetEvents[3105] = 'ChangedMarginColor';
    TuSheetEvents[3110] = 'ChangedPaper';
    TuSheetEvents[3111] = 'ChangedBackgroundImage';
    TuSheetEvents[3112] = 'ChangedGrid';
    return TuSheetEvents;
}(_TuGroup_TuGroupEvents__WEBPACK_IMPORTED_MODULE_0__.TuGroupEvents));



/***/ }),

/***/ "./src/TuStroke/ArrowInfo.ts":
/*!***********************************!*\
  !*** ./src/TuStroke/ArrowInfo.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ArrowInfo": () => (/* binding */ ArrowInfo)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuStrokeArrowheadStyle */ "./src/TuStroke/TuStrokeArrowheadStyle.ts");



/* internal */ var flagFilled = 65536;
/* internal */ var flagStyleMask = 65535;
var ArrowInfo = /** @class */ (function () {
    function ArrowInfo() {
        /* internal */ this.ArrowLength = 0;
        /* internal */ this.ShaftLength = 0;
        /* internal */ this.Width = 0;
        this.myFlags = 0;
    }
    Object.defineProperty(ArrowInfo.prototype, "Filled", {
        /* internal */ get: function () {
            return (this.myFlags & flagFilled) !== 0;
        },
        /* internal */ set: function (value) {
            if (value) {
                this.myFlags |= flagFilled;
                return;
            }
            this.myFlags &= ~flagFilled;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ArrowInfo.prototype, "Style", {
        /* internal */ get: function () {
            return (this.myFlags & flagStyleMask);
        },
        /* internal */ set: function (value) {
            this.myFlags = this.myFlags & ~flagStyleMask | (value & (_TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_2__.TuStrokeArrowheadStyle.Circle | _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_2__.TuStrokeArrowheadStyle.Cross | _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_2__.TuStrokeArrowheadStyle.Slash | _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_2__.TuStrokeArrowheadStyle.BackSlash | _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_2__.TuStrokeArrowheadStyle.X));
        },
        enumerable: false,
        configurable: true
    });
    ArrowInfo.prototype.clone = function () {
        var arrowInfo = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.clone)(this);
        if (this.myPolyPoints != null) {
            arrowInfo.myPolyPoints = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TArray.Clone(this.myPolyPoints);
        }
        return arrowInfo;
    };
    /* internal */ ArrowInfo.prototype.getPoly = function (n) {
        if (this.myPolyPoints == null || this.myPolyPoints.length < n) {
            this.myPolyPoints = new Array(n);
            for (var i = 0; i < this.myPolyPoints.length; i++) {
                this.myPolyPoints[i] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGPoint();
            }
        }
        return this.myPolyPoints;
    };
    return ArrowInfo;
}());



/***/ }),

/***/ "./src/TuStroke/TuStroke.ts":
/*!**********************************!*\
  !*** ./src/TuStroke/TuStroke.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuStroke": () => (/* binding */ TuStroke)
/* harmony export */ });
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuShape_TuPenInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuShape/TuPenInfo */ "./src/TuShape/TuPenInfo.ts");
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ArrowInfo */ "./src/TuStroke/ArrowInfo.ts");
/* harmony import */ var _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./TuStrokeArrowheadStyle */ "./src/TuStroke/TuStrokeArrowheadStyle.ts");
/* harmony import */ var _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TuStrokeEvents */ "./src/TuStroke/TuStrokeEvents.ts");
/* harmony import */ var _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./TuStrokeStyle */ "./src/TuStroke/TuStrokeStyle.ts");
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};















var flagStrokeArrowStart = 1048576;
var flagStrokeArrowEnd = 2097152;
var flagStrokeHighlight = 4194304;
var flagHighlightWhenSelected = 8388608;
var TuStroke = /** @class */ (function (_super) {
    __extends(TuStroke, _super);
    //#endregion
    function TuStroke() {
        var _this = _super.call(this) || this;
        _this.myStyle = _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Line;
        _this.myPointsCount = 0;
        _this.myPoints = new Array(6);
        _this.myCurviness = 10;
        _this.InternalFlags = _this.InternalFlags | 512;
        _this.Brush = _Globals__WEBPACK_IMPORTED_MODULE_0__.Brushes_Black;
        return _this;
    }
    TuStroke_1 = TuStroke;
    Object.defineProperty(TuStroke.prototype, "Curviness", {
        //#region [Property] Curviness
        get: function () {
            return this.getCurviness();
        },
        set: function (value) {
            this.setCurviness(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getCurviness = function () {
        return this.myCurviness;
    };
    TuStroke.prototype.setCurviness = function (value) {
        var single = this.myCurviness;
        if (single !== value) {
            this.myCurviness = value;
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedCurviness, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuStroke.prototype, "FirstPickIndex", {
        //#endregion
        //#region [Property] FirstPickIndex
        get: function () {
            return this.getFirstPickIndex();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFirstPickIndex = function () {
        return 0;
    };
    Object.defineProperty(TuStroke.prototype, "FromArrow", {
        //#endregion
        //#region [Property] FromArrow
        get: function () {
            return this.getFromArrow();
        },
        set: function (value) {
            this.setFromArrow(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrow = function () {
        return (this.InternalFlags & flagStrokeArrowStart) !== 0;
    };
    TuStroke.prototype.setFromArrow = function (value) {
        var internalFlags = (this.InternalFlags & flagStrokeArrowStart) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagStrokeArrowStart;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagStrokeArrowStart;
            }
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowHead, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "FromArrowAnchorPoint", {
        //#endregion
        //#region [Property] FromArrowAnchorPoint
        get: function () {
            return this.getFromArrowAnchorPoint();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrowAnchorPoint = function () {
        return this.getPoint(1);
    };
    Object.defineProperty(TuStroke.prototype, "FromArrowEndPoint", {
        //#endregion
        //#region [Property] FromArrowEndPoint
        get: function () {
            return this.getFromArrowEndPoint();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrowEndPoint = function () {
        return this.getPoint(0);
    };
    Object.defineProperty(TuStroke.prototype, "FromArrowFilled", {
        //#endregion
        //#region [Property] FromArrowFilled
        get: function () {
            return this.getFromArrowFilled();
        },
        set: function (value) {
            this.setFromArrowFilled(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrowFilled = function () {
        if (this.myFromArrowInfo == null) {
            return true;
        }
        return this.myFromArrowInfo.Filled;
    };
    TuStroke.prototype.setFromArrowFilled = function (value) {
        var flag;
        flag = (this.myFromArrowInfo == null ? true : this.myFromArrowInfo.Filled);
        if (flag !== value) {
            if (this.myFromArrowInfo == null) {
                this.myFromArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myFromArrowInfo.Filled = value;
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowFilled, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "FromArrowLength", {
        //#endregion
        //#region [Property] FromArrowLength
        get: function () {
            return this.getFromArrowLength();
        },
        set: function (value) {
            this.setFromArrowLength(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrowLength = function () {
        if (this.myFromArrowInfo == null) {
            return 10;
        }
        return this.myFromArrowInfo.ArrowLength;
    };
    TuStroke.prototype.setFromArrowLength = function (value) {
        var single;
        single = (this.myFromArrowInfo == null ? 10 : this.myFromArrowInfo.ArrowLength);
        if (single != value) {
            if (this.myFromArrowInfo == null) {
                this.myFromArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myFromArrowInfo.ArrowLength = value;
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowLength, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuStroke.prototype, "FromArrowShaftLength", {
        //#endregion
        //#region [Property] FromArrowShaftLength
        get: function () {
            return this.getFromArrowShaftLength();
        },
        set: function (value) {
            this.setFromArrowShaftLength(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrowShaftLength = function () {
        if (this.myFromArrowInfo == null) {
            return 8;
        }
        return this.myFromArrowInfo.ShaftLength;
    };
    TuStroke.prototype.setFromArrowShaftLength = function (value) {
        var single;
        single = (this.myFromArrowInfo == null ? 8 : this.myFromArrowInfo.ShaftLength);
        if (single != value) {
            if (this.myFromArrowInfo == null) {
                this.myFromArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myFromArrowInfo.ShaftLength = value;
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowShaftLength, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuStroke.prototype, "FromArrowStyle", {
        //#endregion
        //#region [Property] FromArrowStyle
        get: function () {
            return this.getFromArrowStyle();
        },
        set: function (value) {
            this.setFromArrowStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrowStyle = function () {
        if (this.myFromArrowInfo == null) {
            return _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Polygon;
        }
        return this.myFromArrowInfo.Style;
    };
    TuStroke.prototype.setFromArrowStyle = function (value) {
        var goStrokeArrowheadStyle;
        goStrokeArrowheadStyle = (this.myFromArrowInfo == null ? _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Polygon : this.myFromArrowInfo.Style);
        if (goStrokeArrowheadStyle !== value) {
            if (this.myFromArrowInfo == null) {
                this.myFromArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myFromArrowInfo.Style = value;
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowStyle, 0, goStrokeArrowheadStyle, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "FromArrowWidth", {
        //#endregion
        //#region [Property] FromArrowWidth
        get: function () {
            return this.getFromArrowWidth();
        },
        set: function (value) {
            this.setFromArrowWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getFromArrowWidth = function () {
        if (this.myFromArrowInfo == null) {
            return 8;
        }
        return this.myFromArrowInfo.Width;
    };
    TuStroke.prototype.setFromArrowWidth = function (value) {
        var single;
        single = (this.myFromArrowInfo == null ? 8 : this.myFromArrowInfo.Width);
        if (single !== value) {
            if (this.myFromArrowInfo == null) {
                this.myFromArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myFromArrowInfo.Width = value;
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowWidth, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuStroke.prototype, "Highlight", {
        //#endregion
        //#region [Property] Highlight
        get: function () {
            return this.getHighlight();
        },
        set: function (value) {
            this.setHighlight(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getHighlight = function () {
        return (this.InternalFlags & flagStrokeHighlight) !== 0;
    };
    TuStroke.prototype.setHighlight = function (value) {
        var internalFlags = (this.InternalFlags & flagStrokeHighlight) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagStrokeHighlight;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagStrokeHighlight;
            }
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedHighlight, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "HighlightPen", {
        //#endregion
        //#region [Property] HighlightPen
        get: function () {
            return this.getHighlightPen();
        },
        set: function (value) {
            this.setHighlightPen(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getHighlightPen = function () {
        if (this.HighlightPenInfo == null) {
            return null;
        }
        return this.HighlightPenInfo.getPen();
    };
    TuStroke.prototype.setHighlightPen = function (value) {
        this.HighlightPenInfo = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.GetPenInfo(value);
    };
    Object.defineProperty(TuStroke.prototype, "HighlightPenColor", {
        //#endregion
        //#region [Property] HighlightPenColor
        get: function () {
            return this.getHighlightPenColor();
        },
        set: function (value) {
            this.setHighlightPenColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getHighlightPenColor = function () {
        var highlightPenInfo = this.HighlightPenInfo;
        if (highlightPenInfo == null) {
            return _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty;
        }
        return highlightPenInfo.Color;
    };
    TuStroke.prototype.setHighlightPenColor = function (value) {
        var highlightPenInfo = this.HighlightPenInfo;
        var goPenInfo = undefined;
        if (highlightPenInfo != null) {
            if (highlightPenInfo.Color.Equals(value)) {
                return;
            }
            if (value != _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty) {
                goPenInfo = new _TuShape_TuPenInfo__WEBPACK_IMPORTED_MODULE_5__.TuPenInfo(highlightPenInfo);
                goPenInfo.Color = value;
            }
        }
        else if (value.notEquals(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Empty)) {
            goPenInfo = new _TuShape_TuPenInfo__WEBPACK_IMPORTED_MODULE_5__.TuPenInfo();
            goPenInfo.Width = this.HighlightPenWidth;
            goPenInfo.Color = value;
        }
        this.HighlightPenInfo = goPenInfo;
    };
    Object.defineProperty(TuStroke.prototype, "HighlightPenInfo", {
        //#endregion
        //#region [Property] HighlightPenInfo
        /* internal */ get: function () {
            return this.getHighlightPenInfo();
        },
        /* internal */ set: function (value) {
            this.setHighlightPenInfo(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getHighlightPenInfo = function () {
        return this.myHighlightPenInfo;
    };
    TuStroke.prototype.setHighlightPenInfo = function (value) {
        var goPenInfo = this.myHighlightPenInfo;
        var goPenInfo1 = value;
        if (goPenInfo != goPenInfo1 && (goPenInfo == null || !goPenInfo.equals(goPenInfo1))) {
            this.InvalidateViews();
            this.myHighlightPenInfo = goPenInfo1;
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedHighlightPen, 0, goPenInfo, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, goPenInfo1, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
            if (this.Parent != null) {
                this.Parent.invalidatePaintBounds();
            }
        }
    };
    Object.defineProperty(TuStroke.prototype, "HighlightPenWidth", {
        //#endregion
        //#region [Property] HighlightPenWidth
        get: function () {
            return this.getHighlightPenWidth();
        },
        set: function (value) {
            this.setHighlightPenWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getHighlightPenWidth = function () {
        var highlightPenInfo = this.HighlightPenInfo;
        if (highlightPenInfo == null) {
            return 0;
        }
        return highlightPenInfo.Width;
    };
    TuStroke.prototype.setHighlightPenWidth = function (value) {
        var highlightPenInfo = this.HighlightPenInfo;
        var width = 0;
        if (highlightPenInfo == null) {
            highlightPenInfo = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.PenInfo_Black;
        }
        else {
            width = highlightPenInfo.Width;
        }
        if (width !== value) {
            var hpi = new _TuShape_TuPenInfo__WEBPACK_IMPORTED_MODULE_5__.TuPenInfo(highlightPenInfo);
            hpi.Width = value;
            this.HighlightPenInfo = hpi;
        }
    };
    Object.defineProperty(TuStroke.prototype, "HighlightWhenSelected", {
        //#endregion
        //#region [Property] HighlightWhenSelected
        get: function () {
            return this.getHighlightWhenSelected();
        },
        set: function (value) {
            this.setHighlightWhenSelected(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getHighlightWhenSelected = function () {
        return (this.InternalFlags & flagHighlightWhenSelected) !== 0;
    };
    TuStroke.prototype.setHighlightWhenSelected = function (value) {
        var internalFlags = (this.InternalFlags & flagHighlightWhenSelected) != 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagHighlightWhenSelected;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagHighlightWhenSelected;
            }
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedHighlightWhenSelected, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "LastPickIndex", {
        //#endregion
        //#region [Property] LastPickIndex
        get: function () {
            return this.getLastPickIndex();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getLastPickIndex = function () {
        return this.PointsCount - 1;
    };
    Object.defineProperty(TuStroke.prototype, "PickMargin", {
        //#endregion
        //#region [Property] PickMargin
        get: function () {
            return this.getPickMargin();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getPickMargin = function () {
        return 3;
    };
    Object.defineProperty(TuStroke.prototype, "PointsCount", {
        //#endregion
        //#region [Property] PointsCount
        get: function () {
            return this.getPointsCount();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getPointsCount = function () {
        return this.myPointsCount;
    };
    Object.defineProperty(TuStroke.prototype, "Style", {
        //#endregion
        //#region [Property] Style
        get: function () {
            return this.getStyle();
        },
        set: function (value) {
            this.setStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getStyle = function () {
        return this.myStyle;
    };
    TuStroke.prototype.setStyle = function (value) {
        var goStrokeStyle = this.myStyle;
        if (goStrokeStyle !== value) {
            this.myStyle = value;
            this.resetPath();
            if (!this.Initializing) {
                this.InvalidBounds = true;
            }
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedStyle, 0, goStrokeStyle, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "ToArrow", {
        //#endregion
        //#region [Property] ToArrow
        get: function () {
            return this.getToArrow();
        },
        set: function (value) {
            this.setToArrow(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrow = function () {
        return (this.InternalFlags & flagStrokeArrowEnd) !== 0;
    };
    TuStroke.prototype.setToArrow = function (value) {
        var internalFlags = (this.InternalFlags & flagStrokeArrowEnd) !== 0;
        if (internalFlags !== value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagStrokeArrowEnd;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagStrokeArrowEnd;
            }
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowHead, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "ToArrowAnchorPoint", {
        //#endregion
        //#region [Property] ToArrowAnchorPoint
        get: function () {
            return this.getToArrowAnchorPoint();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrowAnchorPoint = function () {
        return this.getPoint(this.PointsCount - 2);
    };
    Object.defineProperty(TuStroke.prototype, "ToArrowEndPoint", {
        //#endregion
        //#region [Property] ToArrowEndPoint
        get: function () {
            return this.getToArrowEndPoint();
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrowEndPoint = function () {
        return this.getPoint(this.PointsCount - 1);
    };
    Object.defineProperty(TuStroke.prototype, "ToArrowFilled", {
        //#endregion
        //#region [Property] ToArrowFilled
        get: function () {
            return this.getToArrowFilled();
        },
        set: function (value) {
            this.setToArrowFilled(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrowFilled = function () {
        if (this.myToArrowInfo == null) {
            return true;
        }
        return this.myToArrowInfo.Filled;
    };
    TuStroke.prototype.setToArrowFilled = function (value) {
        var flag;
        flag = (this.myToArrowInfo == null ? true : this.myToArrowInfo.Filled);
        if (flag !== value) {
            if (this.myToArrowInfo == null) {
                this.myToArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myToArrowInfo.Filled = value;
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowFilled, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "ToArrowLength", {
        //#endregion
        //#region [Property] ToArrowLength
        get: function () {
            return this.getToArrowLength();
        },
        set: function (value) {
            this.setToArrowLength(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrowLength = function () {
        if (this.myToArrowInfo == null) {
            return 10;
        }
        return this.myToArrowInfo.ArrowLength;
    };
    TuStroke.prototype.setToArrowLength = function (value) {
        var single;
        single = (this.myToArrowInfo == null ? 10 : this.myToArrowInfo.ArrowLength);
        if (single !== value) {
            if (this.myToArrowInfo == null) {
                this.myToArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myToArrowInfo.ArrowLength = value;
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowLength, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuStroke.prototype, "ToArrowShaftLength", {
        //#endregion
        //#region [Property] ToArrowShaftLength
        get: function () {
            return this.getToArrowShaftLength();
        },
        set: function (value) {
            this.setToArrowShaftLength(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrowShaftLength = function () {
        if (this.myToArrowInfo == null) {
            return 8;
        }
        return this.myToArrowInfo.ShaftLength;
    };
    TuStroke.prototype.setToArrowShaftLength = function (value) {
        var single;
        single = (this.myToArrowInfo == null ? 8 : this.myToArrowInfo.ShaftLength);
        if (single !== value) {
            if (this.myToArrowInfo == null) {
                this.myToArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myToArrowInfo.ShaftLength = value;
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowShaftLength, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(value));
        }
    };
    Object.defineProperty(TuStroke.prototype, "ToArrowStyle", {
        //#endregion
        //#region [Property] ToArrowStyle
        get: function () {
            return this.getToArrowStyle();
        },
        set: function (value) {
            this.setToArrowStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrowStyle = function () {
        if (this.myToArrowInfo == null) {
            return _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Polygon;
        }
        return this.myToArrowInfo.Style;
    };
    TuStroke.prototype.setToArrowStyle = function (value) {
        var goStrokeArrowheadStyle;
        goStrokeArrowheadStyle = (this.myToArrowInfo == null ? _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Polygon : this.myToArrowInfo.Style);
        if (goStrokeArrowheadStyle !== value) {
            if (this.myToArrowInfo == null) {
                this.myToArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myToArrowInfo.Style = value;
            this.resetPath();
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowStyle, 0, goStrokeArrowheadStyle, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
        }
    };
    Object.defineProperty(TuStroke.prototype, "ToArrowWidth", {
        //#endregion
        //#region [Property] ToArrowWidth
        get: function () {
            return this.getToArrowWidth();
        },
        set: function (value) {
            this.setToArrowWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    TuStroke.prototype.getToArrowWidth = function () {
        if (this.myToArrowInfo == null) {
            return 8;
        }
        return this.myToArrowInfo.Width;
    };
    TuStroke.prototype.setToArrowWidth = function (value) {
        var single;
        single = (this.myToArrowInfo == null ? 8 : this.myToArrowInfo.Width);
        if (single !== value) {
            if (this.myToArrowInfo == null) {
                this.myToArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            this.myToArrowInfo.Width = value;
            this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowShaftLength, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(value));
        }
    };
    TuStroke.prototype.addLine = function (path, offx, offy, from, to) {
        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers && this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpGaps) {
            path.addLine(from.X + offx, from.Y + offy, to.X + offx, to.Y + offy);
            return;
        }
        var single = 10;
        var single1 = single / 2;
        var singleArray = TuStroke_1.myIntersections;
        var intersections = this.getIntersections(from, to, singleArray);
        var pointF = from.clone();
        if (intersections > 0) {
            if (_super.prototype.IsApprox.call(this, from.Y, to.Y)) {
                if (from.X >= to.X) {
                    var int32 = intersections - 1;
                    while (int32 >= 0) {
                        var x = from.X;
                        var int321 = int32;
                        int32 = int321 - 1;
                        var single2 = Math.min(x, Math.max(singleArray[int321] + single1, to.X + single));
                        path.addLine(pointF.X + offx, pointF.Y + offy, single2 + offx, to.Y + offy);
                        pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(single2 + offx, to.Y + offy);
                        var single3 = Math.max(single2 - single, to.X);
                        while (int32 >= 0) {
                            var single4 = singleArray[int32];
                            if (single4 <= single3 - single) {
                                break;
                            }
                            int32 = int32 - 1;
                            single3 = Math.max(single4 - single1, to.X);
                        }
                        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint((single2 + single3) / 2, to.Y - single);
                        var pointF2 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(single3, to.Y);
                        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers) {
                            path.startFigure();
                        }
                        else {
                            path.addBezier(pointF.X, pointF.Y, pointF.X, pointF1.Y, pointF2.X, pointF1.Y, pointF2.X, pointF2.Y);
                        }
                        pointF = pointF2;
                    }
                }
                else {
                    var int322 = 0;
                    while (int322 < intersections) {
                        var x1 = from.X;
                        var int323 = int322;
                        int322 = int323 + 1;
                        var single5 = Math.max(x1, Math.min(singleArray[int323] - single1, to.X - single));
                        path.addLine(pointF.X + offx, pointF.Y + offy, single5 + offx, to.Y + offy);
                        pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(single5 + offx, to.Y + offy);
                        var single6 = Math.min(single5 + single, to.X);
                        while (int322 < intersections) {
                            var single7 = singleArray[int322];
                            if (single7 >= single6 + single) {
                                break;
                            }
                            int322 = int322 + 1;
                            single6 = Math.min(single7 + single1, to.X);
                        }
                        var pointF3 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint((single5 + single6) / 2, to.Y - single);
                        var pointF4 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(single6, to.Y);
                        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers) {
                            path.startFigure();
                        }
                        else {
                            path.addBezier(pointF.X, pointF.Y, pointF.X, pointF3.Y, pointF4.X, pointF3.Y, pointF4.X, pointF4.Y);
                        }
                        pointF = pointF4;
                    }
                }
            }
            else if (_super.prototype.IsApprox.call(this, from.X, to.X)) {
                if (from.Y >= to.Y) {
                    var int324 = intersections - 1;
                    while (int324 >= 0) {
                        var y = from.Y;
                        var int325 = int324;
                        int324 = int325 - 1;
                        var single8 = Math.min(y, Math.max(singleArray[int325] + single1, to.Y + single));
                        path.addLine(pointF.X + offx, pointF.Y + offy, to.X + offx, single8 + offy);
                        pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(to.X + offx, single8 + offy);
                        var single9 = Math.max(single8 - single, to.Y);
                        while (int324 >= 0) {
                            var single10 = singleArray[int324];
                            if (single10 <= single9 - single) {
                                break;
                            }
                            int324 = int324 - 1;
                            single9 = Math.max(single10 - single1, to.Y);
                        }
                        var pointF5 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(to.X - single, (single8 + single9) / 2);
                        var pointF6 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(to.X, single9);
                        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers) {
                            path.startFigure();
                        }
                        else {
                            path.addBezier(pointF.X, pointF.Y, pointF5.X, pointF.Y, pointF5.X, pointF6.Y, pointF6.X, pointF6.Y);
                        }
                        pointF = pointF6;
                    }
                }
                else {
                    var int326 = 0;
                    while (int326 < intersections) {
                        var y1 = from.Y;
                        var int327 = int326;
                        int326 = int327 + 1;
                        var single11 = Math.max(y1, Math.min(singleArray[int327] - single1, to.Y - single));
                        path.addLine(pointF.X + offx, pointF.Y + offy, to.X + offx, single11 + offy);
                        pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(to.X + offx, single11 + offy);
                        var single12 = Math.min(single11 + single, to.Y);
                        while (int326 < intersections) {
                            var single13 = singleArray[int326];
                            if (single13 >= single12 + single) {
                                break;
                            }
                            int326 = int326 + 1;
                            single12 = Math.min(single13 + single1, to.Y);
                        }
                        var pointF7 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(to.X - single, (single11 + single12) / 2);
                        var pointF8 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(to.X, single12);
                        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers) {
                            path.startFigure();
                        }
                        else {
                            path.addBezier(pointF.X, pointF.Y, pointF7.X, pointF.Y, pointF7.X, pointF8.Y, pointF8.X, pointF8.Y);
                        }
                        pointF = pointF8;
                    }
                }
            }
        }
        path.addLine(pointF.X + offx, pointF.Y + offy, to.X + offx, to.Y + offy);
    };
    TuStroke.prototype.addLineAndCorner = function (path, offx, offy, a, b, c) {
        var single;
        var single1;
        if (_super.prototype.IsApprox.call(this, a.Y, b.Y) && _super.prototype.IsApprox.call(this, b.X, c.X)) {
            var single2 = Math.min(Math.abs(this.Curviness), Math.abs(b.X - a.X) / 2);
            var single3 = Math.min(single2, Math.abs(c.Y - b.Y) / 2);
            single2 = single3;
            if (_super.prototype.IsApprox.call(this, single2, 0)) {
                this.addLine(path, offx, offy, a.clone(), b.clone());
                return b.clone();
            }
            var x = b.clone();
            var y = b.clone();
            var single4 = 90;
            var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(0, 0, single2 * 2, single3 * 2);
            if (b.X <= a.X) {
                x.X = b.X + single2;
                if (c.Y <= b.Y) {
                    y.Y = b.Y - single3;
                    single = 90;
                    rectangleF.X = b.X;
                    rectangleF.Y = b.Y - single3 * 2;
                }
                else {
                    y.Y = b.Y + single3;
                    single = 270;
                    single4 = -90;
                    rectangleF.X = b.X;
                    rectangleF.Y = b.Y;
                }
            }
            else {
                x.X = b.X - single2;
                if (c.Y <= b.Y) {
                    y.Y = b.Y - single3;
                    single = 90;
                    single4 = -90;
                    rectangleF.X = b.X - single2 * 2;
                    rectangleF.Y = b.Y - single3 * 2;
                }
                else {
                    y.Y = b.Y + single3;
                    single = 270;
                    rectangleF.X = b.X - single2 * 2;
                    rectangleF.Y = b.Y;
                }
            }
            this.addLine(path, offx, offy, a, x);
            rectangleF.X = rectangleF.X + offx;
            rectangleF.Y = rectangleF.Y + offy;
            path.addArc(rectangleF, single, single4);
            return y;
        }
        if (!_super.prototype.IsApprox.call(this, a.X, b.X) || !_super.prototype.IsApprox.call(this, b.Y, c.Y)) {
            this.addLine(path, offx, offy, a, b);
            return b.clone();
        }
        var single5 = Math.min(Math.abs(this.Curviness), Math.abs(b.Y - a.Y) / 2);
        var single6 = Math.min(single5, Math.abs(c.X - b.X) / 2);
        single5 = single6;
        if (_super.prototype.IsApprox.call(this, single6, 0)) {
            this.addLine(path, offx, offy, a, b);
            return b.clone();
        }
        var pointF = b.clone();
        var x1 = b.clone();
        var single7 = 90;
        var rectangleF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(0, 0, single6 * 2, single5 * 2);
        if (b.Y <= a.Y) {
            pointF.Y = b.Y + single5;
            if (c.X <= b.X) {
                x1.X = b.X - single6;
                single1 = 0;
                single7 = -90;
                rectangleF1.Y = b.Y;
                rectangleF1.X = b.X - single6 * 2;
            }
            else {
                x1.X = b.X + single6;
                single1 = 180;
                rectangleF1.Y = b.Y;
                rectangleF1.X = b.X;
            }
        }
        else {
            pointF.Y = b.Y - single5;
            if (c.X <= b.X) {
                x1.X = b.X - single6;
                single1 = 0;
                rectangleF1.Y = b.Y - single5 * 2;
                rectangleF1.X = b.X - single6 * 2;
            }
            else {
                x1.X = b.X + single6;
                single1 = 180;
                single7 = -90;
                rectangleF1.Y = b.Y - single5 * 2;
                rectangleF1.X = b.X;
            }
        }
        this.addLine(path, offx, offy, a.clone(), pointF.clone());
        rectangleF1.X = rectangleF1.X + offx;
        rectangleF1.Y = rectangleF1.Y + offy;
        path.addArc(rectangleF1, single1, single7);
        return x1.clone();
    };
    TuStroke.prototype.addPoint = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var p = args[0];
            return this.internalInsertPoint(this.myPointsCount, p.clone());
        }
        else {
            return this.addPoint(new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(args[0], args[1]));
        }
    };
    TuStroke.prototype.AddSelectionHandles = function (sel, selectedObj) {
        sel.removeHandles(this);
        if (this.HighlightWhenSelected) {
            var skipsUndoManager = this.SkipsUndoManager;
            this.SkipsUndoManager = true;
            this.Highlight = true;
            this.SkipsUndoManager = skipsUndoManager;
            return;
        }
        var view = sel.View;
        var flag = (view == null ? true : view.CanResizeObjects());
        var flag1 = (view == null ? true : view.CanReshapeObjects());
        var lastPickIndex = this.LastPickIndex;
        if (!(this.CanResize() && flag)) {
            for (var i = this.FirstPickIndex; i <= lastPickIndex; i = i + 1) {
                var point = this.getPoint(i);
                sel.createResizeHandle(this, selectedObj, point.clone(), 0, false);
            }
            return;
        }
        if (!(this.CanReshape() && flag1)) {
            _super.prototype.AddSelectionHandles.call(this, sel, selectedObj);
            return;
        }
        for (var j = this.FirstPickIndex; j <= lastPickIndex; j = j + 1) {
            var pointF = this.getPoint(j);
            sel.createResizeHandle(this, selectedObj, pointF.clone(), _Globals__WEBPACK_IMPORTED_MODULE_0__.LastSpot + j, true);
        }
    };
    TuStroke.prototype.addStroke = function (path, offx, offy, fromPoly, toPoly) {
        var pointF;
        var pointF1;
        var pointF2;
        var pointF3;
        var pointsCount = this.PointsCount;
        if (this.Style === _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Bezier && pointsCount >= 4) {
            for (var i = 3; i < pointsCount; i = i + 3) {
                pointF = (fromPoly == null || (i - 3) !== 0 || this.FromArrowShaftLength <= 0 || !(fromPoly[2].Equals(this.getPoint(0))) ? this.getPoint(i - 3) : fromPoly[0].clone());
                var point = this.getPoint(i - 2);
                if ((i + 3) >= pointsCount) {
                    i = (pointsCount - 1);
                }
                var point1 = this.getPoint((i - 1));
                pointF1 = (toPoly == null || i !== (pointsCount - 1) || this.ToArrowShaftLength <= 0 || !(toPoly[2].Equals(this.getPoint(i))) ? this.getPoint(i) : toPoly[0].clone());
                path.addBezier(pointF.X + offx, pointF.Y + offy, point.X + offx, point.Y + offy, point1.X + offx, point1.Y + offy, pointF1.X + offx, pointF1.Y + offy);
            }
            return;
        }
        if (pointsCount < 2) {
            return;
        }
        // TODO: any i kontrol et.
        if (pointsCount == 2 || this.Style === _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Line || this.Style === _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Bezier || _super.prototype.IsApprox.call(this, this.Curviness, 0) && (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers || this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpGaps)) {
            for (var j = 1; j < pointsCount; j = (j + 1)) {
                pointF2 = (fromPoly == null || (j - 1) !== 0 || this.FromArrowShaftLength <= 0 || !(fromPoly[2].Equals(this.getPoint(0))) ? this.getPoint((j - 1)) : fromPoly[0].clone());
                pointF3 = (toPoly == null || j !== (pointsCount - 1) || this.ToArrowShaftLength <= 0 || !(toPoly[2].Equals(this.getPoint(j))) ? this.getPoint(j) : toPoly[0].clone());
                path.addLine(pointF2.X + offx, pointF2.Y + offy, pointF3.X + offx, pointF3.Y + offy);
            }
            return;
        }
        var point2 = this.getPoint(0);
        if (fromPoly != null && this.FromArrowShaftLength > 0 && fromPoly[2].Equals(point2)) {
            point2 = fromPoly[0].clone();
        }
        var int32 = 1;
        while (int32 < pointsCount) {
            var int321 = int32;
            int32 = this.furthestPoint(point2.clone(), int321, int321 > 1);
            var point3 = this.getPoint(int32);
            if (int32 < (pointsCount - 1)) {
                var int322 = this.furthestPoint(point3.clone(), (int32 + 1), int32 < (pointsCount - 3));
                var point4 = this.getPoint(int322);
                if (toPoly != null && int322 === (pointsCount - 1) && this.ToArrowShaftLength > 0 && toPoly[2].Equals(point4)) {
                    point4 = toPoly[0].clone();
                }
                point2 = this.addLineAndCorner(path, offx, offy, point2.clone(), point3.clone(), point4.clone());
                int32 = int322;
            }
            else {
                if (toPoly != null && this.ToArrowShaftLength > 0 && toPoly[2].Equals(point3)) {
                    point3 = toPoly[0].clone();
                }
                if (point2.Equals(point3)) {
                    break;
                }
                this.addLine(path, offx, offy, point2.clone(), point3.clone());
                return;
            }
        }
    };
    TuStroke.prototype.calculateArrowhead = function (anchor, endPoint, atEnd, poly) {
        var fromArrowLength;
        var fromArrowShaftLength;
        var fromArrowWidth;
        var fromArrowStyle;
        var toArrowStyle;
        var x = endPoint.X;
        var y = endPoint.Y;
        var single = x - anchor.X;
        var y1 = y - anchor.Y;
        var single1 = single;
        var single2 = y1;
        var single3 = Math.sqrt((single1 * single1 + single2 * single2));
        var length = poly.length;
        for (var i = 0; i < length; i = (i + 1)) {
            poly[i].X = x;
            poly[i].Y = y;
        }
        if (_super.prototype.IsApprox.call(this, single3, 0) || length < 3) {
            return;
        }
        var single4 = single / single3;
        var single5 = y1 / single3;
        if (!atEnd) {
            fromArrowLength = this.FromArrowLength;
            fromArrowShaftLength = this.FromArrowShaftLength;
            fromArrowWidth = this.FromArrowWidth;
            fromArrowStyle = this.FromArrowStyle;
        }
        else {
            fromArrowLength = this.ToArrowLength;
            fromArrowShaftLength = this.ToArrowShaftLength;
            fromArrowWidth = this.ToArrowWidth;
            fromArrowStyle = this.ToArrowStyle;
        }
        fromArrowWidth /= 2;
        var single6 = Math.max(fromArrowLength, fromArrowShaftLength);
        if (single6 > 0 && single3 < single6 && this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Bezier) {
            var single7 = single3 / single6;
            fromArrowLength *= single7;
            fromArrowShaftLength *= single7;
            fromArrowWidth *= single7;
        }
        if (length >= 6) {
            var single8 = -fromArrowShaftLength;
            var single9 = 0;
            var single10 = -fromArrowLength;
            var single11 = -fromArrowWidth;
            var single12 = -fromArrowLength + fromArrowShaftLength;
            var single13 = -fromArrowWidth;
            var single14 = -fromArrowLength + fromArrowShaftLength;
            var single15 = fromArrowWidth;
            var single16 = -fromArrowLength;
            var single17 = fromArrowWidth;
            poly[0].X = x + (single4 * single8 - single5 * single9);
            poly[0].Y = y + (single5 * single8 + single4 * single9);
            poly[1].X = x + (single4 * single10 - single5 * single11);
            poly[1].Y = y + (single5 * single10 + single4 * single11);
            poly[2].X = x + (single4 * single12 - single5 * single13);
            poly[2].Y = y + (single5 * single12 + single4 * single13);
            poly[3].X = x;
            poly[3].Y = y;
            poly[4].X = x + (single4 * single14 - single5 * single15);
            poly[4].Y = y + (single5 * single14 + single4 * single15);
            poly[5].X = x + (single4 * single16 - single5 * single17);
            poly[5].Y = y + (single5 * single16 + single4 * single17);
            return;
        }
        if (length === 5) {
            var single18 = -fromArrowShaftLength;
            var single19 = 0;
            var single20 = -fromArrowLength;
            var single21 = -fromArrowWidth;
            var single22 = -fromArrowLength + fromArrowShaftLength;
            var single23 = -fromArrowWidth;
            poly[0].X = x + (single4 * single18 - single5 * single19);
            poly[0].Y = y + (single5 * single18 + single4 * single19);
            poly[1].X = x + (single4 * single20 - single5 * single21);
            poly[1].Y = y + (single5 * single20 + single4 * single21);
            poly[2].X = x + (single4 * single22 - single5 * single23);
            poly[2].Y = y + (single5 * single22 + single4 * single23);
            poly[3].X = x;
            poly[3].Y = y;
            poly[4].X = x;
            poly[4].Y = y;
            return;
        }
        if (length !== 4) {
            if (length === 3) {
                var single24 = -fromArrowShaftLength;
                var single25 = 0;
                var single26 = -fromArrowLength;
                var single27 = -fromArrowWidth;
                if (!atEnd) {
                    toArrowStyle = this.FromArrowStyle;
                    if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Slash) {
                        single26 = -fromArrowLength / 2;
                    }
                    else if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.BackSlash) {
                        single26 = -fromArrowLength * 3 / 2;
                    }
                }
                else {
                    toArrowStyle = this.ToArrowStyle;
                    if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Slash) {
                        single26 = -fromArrowLength / 2;
                    }
                    else if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.BackSlash) {
                        single26 = -fromArrowLength * 3 / 2;
                    }
                }
                poly[0].X = x + (single4 * single24 - single5 * single25);
                poly[0].Y = y + (single5 * single24 + single4 * single25);
                poly[1].X = x + (single4 * single26 - single5 * single27);
                poly[1].Y = y + (single5 * single26 + single4 * single27);
                poly[2].X = x;
                poly[2].Y = y;
            }
            return;
        }
        if (fromArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.X) {
            var single28 = fromArrowLength / 2;
            var single29 = -fromArrowShaftLength - single28;
            var single30 = -fromArrowWidth;
            var single31 = -fromArrowShaftLength + single28;
            var single32 = -fromArrowWidth;
            var single33 = -fromArrowShaftLength - single28;
            var single34 = fromArrowWidth;
            var single35 = -fromArrowShaftLength + single28;
            var single36 = fromArrowWidth;
            poly[0].X = x + (single4 * single29 - single5 * single30);
            poly[0].Y = y + (single5 * single29 + single4 * single30);
            poly[1].X = x + (single4 * single31 - single5 * single32);
            poly[1].Y = y + (single5 * single31 + single4 * single32);
            poly[2].X = x + (single4 * single33 - single5 * single34);
            poly[2].Y = y + (single5 * single33 + single4 * single34);
            poly[3].X = x + (single4 * single35 - single5 * single36);
            poly[3].Y = y + (single5 * single35 + single4 * single36);
            return;
        }
        var single37 = -fromArrowShaftLength;
        var single38 = 0;
        var single39 = -fromArrowLength;
        var single40 = -fromArrowWidth;
        var single41 = -fromArrowLength;
        var single42 = fromArrowWidth;
        if (!atEnd) {
            toArrowStyle = this.FromArrowStyle;
            if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Slash) {
                single39 = -fromArrowLength / 2;
                single41 = -fromArrowLength * 3 / 2;
            }
            else if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.BackSlash) {
                single39 = -fromArrowLength * 3 / 2;
                single41 = -fromArrowLength / 2;
            }
        }
        else {
            toArrowStyle = this.ToArrowStyle;
            if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Slash) {
                single39 = -fromArrowLength / 2;
                single41 = -fromArrowLength * 3 / 2;
            }
            else if (toArrowStyle === _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.BackSlash) {
                single39 = -fromArrowLength * 3 / 2;
                single41 = -fromArrowLength / 2;
            }
        }
        poly[0].X = x + (single4 * single37 - single5 * single38);
        poly[0].Y = y + (single5 * single37 + single4 * single38);
        poly[1].X = x + (single4 * single39 - single5 * single40);
        poly[1].Y = y + (single5 * single39 + single4 * single40);
        poly[2].X = x;
        poly[2].Y = y;
        poly[3].X = x + (single4 * single41 - single5 * single42);
        poly[3].Y = y + (single5 * single41 + single4 * single42);
    };
    TuStroke.prototype.ChangeValue = function (e, undo) {
        var newRect;
        var subHint = e.SubHint;
        if (subHint > _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedCurviness) {
            switch (subHint) {
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedHighlightPen:
                    {
                        var value = e.getValue(undo);
                        if (_tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(value, _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.GraphicTypes.Pen)) {
                            this.HighlightPen = value;
                            return;
                        }
                        if (_tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(value, _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuPenInfo)) {
                            this.HighlightPenInfo = value;
                        }
                        return;
                    }
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedHighlight:
                    {
                        this.Highlight = e.getValue(undo);
                        return;
                    }
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedHighlightWhenSelected:
                    {
                        this.HighlightWhenSelected = e.getValue(undo);
                        return;
                    }
                default:
                    {
                        switch (subHint) {
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowHead:
                                {
                                    this.ToArrow = e.getValue(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowLength:
                                {
                                    this.ToArrowLength = e.getFloat(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowShaftLength:
                                {
                                    this.ToArrowShaftLength = e.getFloat(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowWidth:
                                {
                                    this.ToArrowWidth = e.getFloat(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowFilled:
                                {
                                    this.ToArrowFilled = e.getValue(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedToArrowStyle:
                                {
                                    this.ToArrowStyle = e.getValue(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowHead:
                                {
                                    this.FromArrow = e.getValue(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowLength:
                                {
                                    this.FromArrowLength = e.getFloat(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowShaftLength:
                                {
                                    this.FromArrowShaftLength = e.getFloat(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowWidth:
                                {
                                    this.FromArrowWidth = e.getFloat(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowFilled:
                                {
                                    this.FromArrowFilled = e.getValue(undo);
                                    return;
                                }
                            case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedFromArrowStyle:
                                {
                                    this.FromArrowStyle = e.getValue(undo);
                                    return;
                                }
                        }
                        break;
                    }
            }
        }
        else {
            if (subHint === 1001) {
                _super.prototype.ChangeValue.call(this, e, undo);
                var rect = e.getRect(!undo);
                var rectangleF = e.getRect(undo);
                if (rect.Width === rectangleF.Width && rect.Height === rectangleF.Height) {
                    var x = rectangleF.X - rect.X;
                    var y = rectangleF.Y - rect.Y;
                    _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.TranslatePoints(this.myPoints, x, y);
                }
                return;
            }
            switch (subHint) {
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.AddedPoint:
                    {
                        if (undo) {
                            this.internalRemovePoint(e.OldInt);
                            return;
                        }
                        var oldInt = e.OldInt;
                        var single = e.NewRect.X;
                        newRect = e.NewRect;
                        this.internalInsertPoint(oldInt, new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(single, newRect.Y));
                        return;
                    }
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.RemovedPoint:
                    {
                        if (!undo) {
                            this.internalRemovePoint(e.OldInt);
                            return;
                        }
                        var int32 = e.OldInt;
                        var x1 = e.OldRect.X;
                        newRect = e.OldRect;
                        this.internalInsertPoint(int32, new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(x1, newRect.Y));
                        return;
                    }
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ModifiedPoint:
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedModifiedPoint:
                    {
                        if (undo) {
                            var oldInt1 = e.OldInt;
                            var single1 = e.OldRect.X;
                            newRect = e.OldRect;
                            this.internalSetPoint(oldInt1, new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(single1, newRect.Y));
                            return;
                        }
                        var int321 = e.OldInt;
                        var x2 = e.NewRect.X;
                        newRect = e.NewRect;
                        this.internalSetPoint(int321, new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(x2, newRect.Y));
                        return;
                    }
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedAllPoints:
                    {
                        this.setPoints(e.getValue(undo));
                        return;
                    }
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedStyle:
                    {
                        this.Style = e.getValue(undo);
                        return;
                    }
                case _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedCurviness:
                    {
                        this.Curviness = e.getFloat(undo);
                        return;
                    }
            }
        }
        _super.prototype.ChangeValue.call(this, e, undo);
    };
    TuStroke.prototype.clearPoints = function () {
        if (this.PointsCount <= 0) {
            return;
        }
        this.Changing(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedAllPoints);
        this.resetPath();
        this.myPointsCount = 0;
        if (!this.Initializing) {
            this.InvalidBounds = true;
        }
        this.Changed(_TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedAllPoints, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
    };
    TuStroke.prototype.ComputeBounds = function () {
        var pointsCount = this.PointsCount;
        if (pointsCount <= 0) {
            var position = this.Position;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(position.X, position.Y, 0, 0);
        }
        var point = this.getPoint(0);
        var x = point.X;
        var y = point.Y;
        var single = point.X;
        var y1 = point.Y;
        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Bezier || pointsCount < 4) {
            for (var i = 1; i < pointsCount; i = (i + 1)) {
                point = this.getPoint(i);
                x = Math.min(x, point.X);
                y = Math.min(y, point.Y);
                single = Math.max(single, point.X);
                y1 = Math.max(y1, point.Y);
            }
        }
        else {
            for (var j = 3; j < pointsCount; j = (j + 3)) {
                var pointF = this.getPoint(j - 3);
                var point1 = this.getPoint(j - 2);
                if ((j + 3) >= pointsCount) {
                    j = (pointsCount - 1);
                }
                var pointF1 = this.getPoint(j - 1);
                var point2 = this.getPoint(j);
                var rectangleF = _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.BezierBounds(pointF, point1, pointF1, point2, 0.1);
                x = Math.min(x, rectangleF.X);
                y = Math.min(y, rectangleF.Y);
                single = Math.max(single, rectangleF.X + rectangleF.Width);
                y1 = Math.max(y1, rectangleF.Y + rectangleF.Height);
            }
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(x, y, single - x, y1 - y);
    };
    TuStroke.prototype.containsPoint = function (p) {
        return this.getSegmentNearPoint(p) >= 0;
    };
    TuStroke.prototype.CopyNewValueForRedo = function (e) {
        if (e.SubHint !== _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedAllPoints) {
            _super.prototype.CopyNewValueForRedo.call(this, e);
            return;
        }
        if (!e.IsBeforeChanging) {
            e.NewValue = this.copyPointsArray();
        }
    };
    TuStroke.prototype.copyObject = function (env) {
        var goStroke = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(_super.prototype.copyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuStroke);
        if (goStroke != null) {
            goStroke.myPoints = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Clone(this.myPoints);
            if (this.myToArrowInfo != null) {
                goStroke.myToArrowInfo = this.myToArrowInfo.clone();
            }
            if (this.myFromArrowInfo != null) {
                goStroke.myFromArrowInfo = this.myFromArrowInfo.clone();
            }
        }
        return goStroke;
    };
    TuStroke.prototype.CopyOldValueForUndo = function (e) {
        if (e.SubHint !== _TuStrokeEvents__WEBPACK_IMPORTED_MODULE_10__.TuStrokeEvents.ChangedAllPoints) {
            _super.prototype.CopyOldValueForUndo.call(this, e);
            return;
        }
        if (e.IsBeforeChanging) {
            e.OldValue = this.copyPointsArray();
        }
    };
    TuStroke.prototype.copyPointsArray = function () {
        var pointFArray = new Array(this.myPointsCount);
        _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Copy(this.myPoints, 0, pointFArray, 0, this.myPointsCount);
        return pointFArray;
    };
    TuStroke.prototype.DoResize = function (view, origRect, newPoint, whichHandle, evttype, min, max) {
        if (whichHandle >= _Globals__WEBPACK_IMPORTED_MODULE_0__.LastSpot && (this.ResizesRealtime || evttype === _TuInputState__WEBPACK_IMPORTED_MODULE_12__.TuInputState.Finish || evttype === _TuInputState__WEBPACK_IMPORTED_MODULE_12__.TuInputState.Cancel)) {
            this.setPoint(whichHandle - _Globals__WEBPACK_IMPORTED_MODULE_0__.LastSpot, newPoint);
            return;
        }
        _super.prototype.DoResize.call(this, view, origRect, newPoint, whichHandle, evttype, min, max);
    };
    TuStroke.prototype.drawArrowhead = function (g, view, pen, brush, atEnd, offsetw, offseth, poly) {
        var brush1 = undefined;
        if (poly[0].notEquals(poly[2])) {
            if ((atEnd ? this.ToArrowFilled : this.FromArrowFilled)) {
                brush1 = brush;
            }
        }
        switch ((atEnd ? this.ToArrowStyle : this.FromArrowStyle)) {
            case _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Polygon:
                {
                    if (offsetw === 0 && offseth === 0) {
                        _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawPolygon(g, view, pen, brush1, poly);
                        return;
                    }
                    var length_1 = poly.length;
                    for (var i = 0; i < length_1; i = (i + 1)) {
                        var x = poly[i];
                        x.X = x.X + offsetw;
                        var y = poly[i];
                        y.Y = y.Y + offseth;
                    }
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawPolygon(g, view, pen, brush1, poly);
                    for (var j = 0; j < length_1; j = (j + 1)) {
                        var pointFPointer = poly[j];
                        pointFPointer.X = pointFPointer.X - offsetw;
                        var y1 = poly[j];
                        y1.Y = y1.Y - offseth;
                    }
                    return;
                }
            case _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Circle:
                {
                    var single = poly[0].X;
                    var single1 = poly[0].Y;
                    var x1 = poly[2].X;
                    var y2 = poly[2].Y;
                    var single2 = (single + x1) / 2 + offsetw;
                    var single3 = (single1 + y2) / 2 + offseth;
                    var single4 = Math.sqrt(((single - x1) * (single - x1) + (single1 - y2) * (single1 - y2)));
                    var single5 = single4;
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawEllipse(g, view, pen, brush1, single2 - single4 / 2, single3 - single4 / 2, single5, single5);
                    return;
                }
            case _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Cross:
            case _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.Slash:
            case _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.BackSlash:
                {
                    var x2 = poly[1].X + offsetw;
                    var y3 = poly[1].Y + offseth;
                    var x3 = poly[3].X + offsetw;
                    var y4 = poly[3].Y + offseth;
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawLine(g, view, pen, x2, y3, x3, y4);
                    return;
                }
            case _TuStrokeArrowheadStyle__WEBPACK_IMPORTED_MODULE_9__.TuStrokeArrowheadStyle.X:
                {
                    var x4 = poly[0].X + offsetw;
                    var y5 = poly[0].Y + offseth;
                    var x5 = poly[3].X + offsetw;
                    var y6 = poly[3].Y + offseth;
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawLine(g, view, pen, x4, y5, x5, y6);
                    x4 = poly[1].X + offsetw;
                    y5 = poly[1].Y + offseth;
                    x5 = poly[2].X + offsetw;
                    y6 = poly[2].Y + offseth;
                    _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawLine(g, view, pen, x4, y5, x5, y6);
                    return;
                }
            default:
                {
                    return;
                }
        }
    };
    TuStroke.prototype.ExpandPaintBounds = function (rect, view) {
        var penInfo = this.PenInfo;
        if (penInfo != null) {
            var single = Math.max(penInfo.Width, 1) / 2 * penInfo.MiterLimit + 1;
            var highlightPenInfo = this.HighlightPenInfo;
            if (highlightPenInfo != null) {
                var single1 = Math.max(highlightPenInfo.Width, 1) / 2 * highlightPenInfo.MiterLimit + 1;
                single = Math.max(single, single1);
            }
            if (this.ToArrow) {
                single = Math.max(single, Math.abs(this.ToArrowLength));
                single = Math.max(single, Math.abs(this.ToArrowWidth));
            }
            if (this.FromArrow) {
                single = Math.max(single, Math.abs(this.FromArrowLength));
                single = Math.max(single, Math.abs(this.FromArrowWidth));
            }
            var single2 = single;
            var outRect = { value: rect.clone() };
            _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.InflateRect(outRect, single2, single2);
            rect = outRect.value.clone();
            if (this.Shadowed) {
                var shadowOffset = this.GetShadowOffset(view);
                if (shadowOffset.Width >= 0) {
                    rect.Width = rect.Width + shadowOffset.Width;
                }
                else {
                    rect.X = rect.X + shadowOffset.Width;
                    rect.Width = rect.Width - shadowOffset.Width;
                }
                if (shadowOffset.Height >= 0) {
                    rect.Height = rect.Height + shadowOffset.Height;
                }
                else {
                    rect.Y = rect.Y + shadowOffset.Height;
                    rect.Height = rect.Height - shadowOffset.Height;
                }
            }
        }
        return rect;
    };
    TuStroke.prototype.furthestPoint = function (a, i, oneway) {
        // TODO: problem olursa kontrol et, label kullanilmişti.
        var point;
        var int32 = 0;
        var pointsCount = this.PointsCount;
        for (point = a.clone(); this.IsApprox(a.X, point.X) && this.IsApprox(a.Y, point.Y); point = this.getPoint(int32)) {
            if (i >= pointsCount) {
                return pointsCount - 1;
            }
            int32 = i;
            i = int32 + 1;
        }
        if (!this.IsApprox(a.X, point.X) && !this.IsApprox(a.Y, point.Y)) {
            return i - 1;
        }
        var pointF = point.clone();
        while (true) {
            if (this.IsApprox(a.X, point.X) && this.IsApprox(point.X, pointF.X)) {
                if (!oneway) {
                    if (i >= pointsCount) {
                        return pointsCount - 1;
                    }
                    var int321_1 = i;
                    i = (int321_1 + 1);
                    pointF = this.getPoint(int321_1);
                    continue;
                }
                else if ((a.Y >= point.Y ? point.Y >= pointF.Y : point.Y <= pointF.Y)) {
                    if (i >= pointsCount) {
                        return (pointsCount - 1);
                    }
                    var int321_2 = i;
                    i = (int321_2 + 1);
                    pointF = this.getPoint(int321_2);
                    continue;
                }
            }
            if (!this.IsApprox(a.Y, point.Y) || !this.IsApprox(point.Y, pointF.Y)) {
                break;
            }
            if (oneway) {
                if ((a.X >= point.X ? point.X < pointF.X : point.X > pointF.X)) {
                    break;
                }
            }
            if (i >= pointsCount) {
                return pointsCount - 1;
            }
            var int321 = i;
            i = (int321 + 1);
            pointF = this.getPoint(int321);
        }
        return (i - 2);
    };
    TuStroke.prototype.getArrowheadPointsCount = function (atEnd) {
        return 4;
    };
    TuStroke.prototype.getIntersections = function (A, B, v) {
        var int32;
        var document = this.Document;
        if (document == null) {
            return 0;
        }
        var single = Math.min(A.X, B.X);
        var single1 = Math.min(A.Y, B.Y);
        var single2 = Math.max(A.X, B.X);
        var single3 = Math.max(A.Y, B.Y);
        var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGRectangle(single, single1, single2 - single, single3 - single1);
        var intersections2 = 0;
        var enumerator = document.Layers.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (!current.CanViewObjects()) {
                    continue;
                }
                var goLayerCache = current.FindCache(rectangleF);
                if (goLayerCache == null) {
                    var goLayerEnumerators = current.GetEnumerator();
                    try {
                        while (goLayerEnumerators.MoveNext()) {
                            var goObject = goLayerEnumerators.Current;
                            var realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuStroke);
                            if (realLink == null) {
                                var goLabeledLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuLabeledLink);
                                if (goLabeledLink == null) {
                                    continue;
                                }
                                realLink = goLabeledLink.RealLink;
                            }
                            if (realLink.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers && realLink.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpGaps || !realLink.CanView()) {
                                continue;
                            }
                            if (realLink !== this) {
                                intersections2 = this.getIntersections2(A, B, v, intersections2, realLink);
                            }
                            else {
                                _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Sort(v, 0, intersections2, _tuval_core__WEBPACK_IMPORTED_MODULE_3__.FloatComparer.Default);
                                int32 = intersections2;
                                return int32;
                            }
                        }
                    }
                    finally {
                        goLayerEnumerators.Dispose();
                    }
                }
                else {
                    var goStrokes = undefined;
                    var enumerator1 = goLayerCache.Strokes.GetEnumerator();
                    try {
                        while (enumerator1.MoveNext()) {
                            var goStroke = enumerator1.Current;
                            if (goStroke.Layer == null) {
                                if (goStrokes == null) {
                                    goStrokes = new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.List();
                                }
                                goStrokes.Add(goStroke);
                            }
                            else if (goStroke != this) {
                                intersections2 = this.getIntersections2(A, B, v, intersections2, goStroke);
                            }
                            else {
                                if (goStrokes != null) {
                                    var enumerator2 = goStrokes.GetEnumerator();
                                    try {
                                        while (enumerator2.MoveNext()) {
                                            var current1 = enumerator2.Current;
                                            _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_13__.TuCollection.FastRemove(goLayerCache.Strokes, current1);
                                        }
                                    }
                                    finally {
                                        enumerator2.Dispose();
                                    }
                                }
                                _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Sort(v, 0, intersections2, _tuval_core__WEBPACK_IMPORTED_MODULE_3__.FloatComparer.Default);
                                int32 = intersections2;
                                return int32;
                            }
                        }
                    }
                    finally {
                        enumerator1.Dispose();
                    }
                    if (goStrokes == null) {
                        continue;
                    }
                    enumerator1 = goStrokes.GetEnumerator();
                    try {
                        while (enumerator1.MoveNext()) {
                            var goStroke1 = enumerator1.Current;
                            _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_13__.TuCollection.FastRemove(goLayerCache.Strokes, goStroke1);
                        }
                    }
                    finally {
                        enumerator1.Dispose();
                    }
                }
            }
            _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Sort(v, 0, intersections2, _tuval_core__WEBPACK_IMPORTED_MODULE_3__.FloatComparer.Default);
            return intersections2;
        }
        finally {
            enumerator.Dispose();
        }
        return int32;
    };
    TuStroke.prototype.getIntersections2 = function (A, B, v, numints, link) {
        if (link.CanView()) {
            var pointsCount = link.PointsCount;
            for (var i = 1; i < pointsCount; i = (i + 1)) {
                var point = link.getPoint((i - 1));
                var pointF = link.getPoint(i);
                var pointF1 = { value: new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint() };
                if (this.getOrthoSegmentIntersection(A, B, point.clone(), pointF.clone(), pointF1) && numints < v.length) {
                    if (!_super.prototype.IsApprox.call(this, A.Y, B.Y)) {
                        var int32 = numints;
                        numints = (int32 + 1);
                        v[int32] = pointF1.value.Y;
                    }
                    else {
                        var int321 = numints;
                        numints = (int321 + 1);
                        v[int321] = pointF1.value.X;
                    }
                }
            }
        }
        return numints;
    };
    TuStroke.prototype.GetNearestIntersectionPoint = function (p1, p2, result) {
        var pointF = _tuval_core__WEBPACK_IMPORTED_MODULE_3__.New.Out();
        var pointsCount = this.PointsCount;
        var single = 1E+21;
        var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint();
        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Bezier || pointsCount < 4) {
            for (var i = 0; i < (pointsCount - 1); i = (i + 1)) {
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.NearestIntersectionOnLine(this.getPoint(i), this.getPoint((i + 1)), p1.clone(), p2.clone(), pointF)) {
                    var x = (pointF.value.X - p1.X) * (pointF.value.X - p1.X) + (pointF.value.Y - p1.Y) * (pointF.value.Y - p1.Y);
                    if (x < single) {
                        single = x;
                        pointF1 = pointF.value.clone();
                    }
                }
            }
        }
        else {
            var penWidth = this.PenWidth / 2;
            for (var j = 3; j < pointsCount; j = (j + 3)) {
                var point = this.getPoint(j - 3);
                var point1 = this.getPoint(j - 2);
                if ((j + 3) >= pointsCount) {
                    j = (pointsCount - 1);
                }
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.BezierNearestIntersectionOnLine(point, point1, this.getPoint(j - 1), this.getPoint(j), p1.clone(), p2.clone(), penWidth, pointF)) {
                    var x1 = (pointF.value.X - p1.X) * (pointF.value.X - p1.X) + (pointF.value.Y - p1.Y) * (pointF.value.Y - p1.Y);
                    if (x1 < single) {
                        single = x1;
                        pointF1 = pointF.value.clone();
                    }
                }
            }
        }
        result.value = pointF1.clone();
        return single < 1E+21;
    };
    TuStroke.prototype.getOrthoSegmentIntersection = function (A, B, C, D, result) {
        if (!_super.prototype.IsApprox.call(this, A.X, B.X)) {
            if (_super.prototype.IsApprox.call(this, C.X, D.X) && Math.min(A.X, B.X) < C.X && Math.max(A.X, B.X) > C.X && Math.min(C.Y, D.Y) < A.Y && Math.max(C.Y, D.Y) > A.Y) {
                result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(C.X, A.Y);
                return true;
            }
        }
        else if (_super.prototype.IsApprox.call(this, C.Y, D.Y) && Math.min(A.Y, B.Y) < C.Y && Math.max(A.Y, B.Y) > C.Y && Math.min(C.X, D.X) < A.X && Math.max(C.X, D.X) > A.X) {
            result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(A.X, C.Y);
            return true;
        }
        result.value = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint(0, 0);
        return false;
    };
    TuStroke.prototype._getPath = function (offx, offy, fromPoly, toPoly) {
        if (offx !== 0 || offy !== 0 || this.Style === _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers || this.Style === _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpGaps) {
            var graphicsPath = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.GraphicsPath();
            this.addStroke(graphicsPath, offx, offy, fromPoly, toPoly);
            return graphicsPath;
        }
        if (this.myPath == null) {
            this.myPath = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.GraphicsPath();
            this.addStroke(this.myPath, 0, 0, fromPoly, toPoly);
        }
        return this.myPath;
    };
    TuStroke.prototype.getPoint = function (i) {
        if (i < 0 || i >= this.myPointsCount) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.ArgumentException("TuStroke.getPoint given an invalid index");
        }
        return this.myPoints[i].clone();
    };
    TuStroke.prototype.getSegmentNearPoint = function (pnt) {
        var bounds = this.Bounds;
        var single = Math.max(this.PenWidth, 0.1);
        var single1 = Math.max(this.PickMargin, 0);
        single += single1;
        if (pnt.X < bounds.X - single || pnt.X > bounds.X + bounds.Width + single || pnt.Y < bounds.Y - single || pnt.Y > bounds.Y + bounds.Height + single) {
            return -1;
        }
        var pointsCount = this.PointsCount;
        if (pointsCount <= 1) {
            return -1;
        }
        single = single - single1 / 2;
        if (this.Style !== _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.Bezier || pointsCount < 4) {
            for (var i = 0; i < (pointsCount - 1); i = (i + 1)) {
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.LineContainsPoint(this.getPoint(i), this.getPoint(i + 1), single, pnt.clone())) {
                    return i;
                }
            }
        }
        else {
            single *= Math.max(1, Math.max(bounds.Width, bounds.Height) / 1000);
            for (var j = 3; j < pointsCount; j = (j + 3)) {
                var int32 = j - 3;
                var point = this.getPoint(j - 3);
                var pointF = this.getPoint(j - 2);
                if (j + 3 >= pointsCount) {
                    j = pointsCount - 1;
                }
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.BezierContainsPoint(point.clone(), pointF.clone(), this.getPoint(j - 1), this.getPoint(j), single, pnt.clone())) {
                    return int32;
                }
            }
        }
        return -1;
    };
    TuStroke.prototype.insertPoint = function (i, p) {
        this.internalInsertPoint(i, p);
    };
    TuStroke.prototype.internalInsertPoint = function (i, p) {
        if (i < 0) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.ArgumentException("TuStroke.insertPoint given an invalid index, less than zero");
        }
        if (i > this.myPointsCount) {
            i = this.myPointsCount;
        }
        this.resetPath();
        var length = this.myPoints.length;
        if (this.myPointsCount >= length) {
            var pointFArray = new Array(Math.max(length * 2, this.myPointsCount + 1));
            _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Copy(this.myPoints, 0, pointFArray, 0, length);
            this.myPoints = pointFArray;
        }
        if (this.myPointsCount > i) {
            _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Copy(this.myPoints, i, this.myPoints, (i + 1), (this.myPointsCount - i));
        }
        this.myPointsCount = (this.myPointsCount + 1);
        this.myPoints[i] = p.clone();
        if (!this.Initializing) {
            this.InvalidBounds = true;
        }
        this.Changed(1201, i, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(p), i, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(p));
        return i;
    };
    TuStroke.prototype.internalRemovePoint = function (i) {
        if (i < 0 || i >= this.myPointsCount) {
            return;
        }
        this.resetPath();
        var pointF = this.myPoints[i].clone();
        if (this.myPointsCount > (i + 1)) {
            _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Copy(this.myPoints, (i + 1), this.myPoints, i, ((this.myPointsCount - i) - 1));
        }
        this.myPointsCount = (this.myPointsCount - 1);
        if (!this.Initializing) {
            this.InvalidBounds = true;
        }
        this.Changed(1202, i, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(pointF), i, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(pointF));
    };
    TuStroke.prototype.internalSetPoint = function (i, p) {
        if (i < 0 || i >= this.myPointsCount) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_3__.ArgumentException("TuStroke.setPoint given an invalid index");
        }
        var pointF = this.myPoints[i].clone();
        if (pointF.Equals(p)) {
            return;
        }
        this.resetPath();
        this.myPoints[i] = p.clone();
        if (!this.Initializing) {
            this.InvalidBounds = true;
        }
        this.Changed(1203, i, null, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(pointF), i, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.MakeRect(p));
    };
    /* internal */ TuStroke.intersectingLines = function (a1, a2, b1, b2) {
        if ((_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.ComparePointWithLine(a1.clone(), a2.clone(), b1.clone()) * _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.ComparePointWithLine(a1.clone(), a2.clone(), b2.clone())) > 0) {
            return false;
        }
        return (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.ComparePointWithLine(b1.clone(), b2.clone(), a1.clone()) * _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.ComparePointWithLine(b1.clone(), b2.clone(), a2.clone())) <= 0;
    };
    /* internal */ TuStroke.prototype.intersectsRectangle = function (rect) {
        return TuStroke_1.StrokesIntersect(this, undefined, rect.clone());
    };
    /* internal */ TuStroke.prototype.intersectsStroke = function (stroke) {
        return TuStroke_1.StrokesIntersect(this, stroke, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
    };
    TuStroke.prototype.makePath = function () {
        return this._getPath(0, 0, undefined, undefined).Clone();
    };
    TuStroke.prototype.OnBoundsChanged = function (old) {
        _super.prototype.OnBoundsChanged.call(this, old.clone());
        var bounds = this.Bounds;
        if (old.Width !== bounds.Width || old.Height !== bounds.Height) {
            this.Changing(1204);
            _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.RescalePoints(this.myPoints, old.clone(), bounds.clone());
            this.InvalidBounds = false;
            this.Changed(1204, 0, null, old, 0, null, bounds);
            return;
        }
        var x = bounds.X - old.X;
        var y = bounds.Y - old.Y;
        if (x === 0 && y === 0) {
            return;
        }
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.TranslatePoints(this.myPoints, x, y);
        this.InvalidBounds = false;
    };
    TuStroke.prototype.Paint = function (g, view) {
        var pen = this.Pen;
        if (pen == null) {
            return;
        }
        var pen1 = pen;
        var brush = this.Brush;
        var pointsCount = this.PointsCount;
        var poly = undefined;
        var pointFArray = undefined;
        if (this.FromArrow && pointsCount >= 2) {
            if (this.myFromArrowInfo == null) {
                this.myFromArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            poly = this.myFromArrowInfo.getPoly(this.getArrowheadPointsCount(false));
            this.calculateArrowhead(this.FromArrowAnchorPoint.clone(), this.FromArrowEndPoint.clone(), false, poly);
        }
        if (this.ToArrow && pointsCount >= 2) {
            if (this.myToArrowInfo == null) {
                this.myToArrowInfo = new _ArrowInfo__WEBPACK_IMPORTED_MODULE_8__.ArrowInfo();
            }
            pointFArray = this.myToArrowInfo.getPoly(this.getArrowheadPointsCount(true));
            this.calculateArrowhead(this.ToArrowAnchorPoint.clone(), this.ToArrowEndPoint.clone(), true, pointFArray);
        }
        if (this.Shadowed && this.Pen != null) {
            var shadowOffset = this.GetShadowOffset(view);
            var shadowPen = this.GetShadowPen(view, this.PenWidth);
            if (shadowPen != null) {
                var path = this._getPath(shadowOffset.Width, shadowOffset.Height, poly, pointFArray);
                _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawPath(g, view, shadowPen, undefined, path);
                _super.prototype.disposePath.call(this, path);
            }
            var shadowBrush = this.GetShadowBrush(view);
            if (poly != null) {
                this.drawArrowhead(g, view, shadowPen, shadowBrush, false, shadowOffset.Width, shadowOffset.Height, poly);
            }
            if (pointFArray != null) {
                this.drawArrowhead(g, view, shadowPen, shadowBrush, true, shadowOffset.Width, shadowOffset.Height, pointFArray);
            }
        }
        var graphicsPath = this._getPath(0, 0, poly, pointFArray);
        var highlightPen = this.HighlightPen;
        if (highlightPen != null && this.Highlight) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawPath(g, view, highlightPen, undefined, graphicsPath);
        }
        if (pen != null) {
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.DrawPath(g, view, pen, undefined, graphicsPath);
        }
        _super.prototype.disposePath.call(this, graphicsPath);
        if (poly != null || pointFArray != null) {
            if (pen1.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.DashStyle.Solid || pen1.Width > 1) {
                pen1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pen(_TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape.GetPenColor(pen1, _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGColor.Black));
                if (poly != null) {
                    this.drawArrowhead(g, view, pen1, brush, false, 0, 0, poly);
                }
                if (pointFArray != null) {
                    this.drawArrowhead(g, view, pen1, brush, true, 0, 0, pointFArray);
                }
                pen1.Dispose();
            }
            else {
                if (poly != null) {
                    this.drawArrowhead(g, view, pen1, brush, false, 0, 0, poly);
                }
                if (pointFArray != null) {
                    this.drawArrowhead(g, view, pen1, brush, true, 0, 0, pointFArray);
                }
            }
        }
        if (this.Layer != null && view != null && (this.Style === _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpOvers || this.Style === _TuStrokeStyle__WEBPACK_IMPORTED_MODULE_11__.TuStrokeStyle.RoundedLineWithJumpGaps)) {
            var goLayerCache = this.Layer.FindCache(view);
            if (goLayerCache != null && !goLayerCache.Strokes.Contains(this)) {
                goLayerCache.Strokes.Add(this);
            }
        }
    };
    TuStroke.prototype.removePoint = function (i) {
        this.internalRemovePoint(i);
    };
    TuStroke.prototype.removeSelectionHandles = function (sel) {
        if (this.HighlightWhenSelected) {
            var skipsUndoManager = this.SkipsUndoManager;
            this.SkipsUndoManager = true;
            this.Highlight = false;
            this.SkipsUndoManager = skipsUndoManager;
        }
        _super.prototype.RemoveSelectionHandles.call(this, sel);
    };
    TuStroke.prototype.setPoint = function (i, p) {
        this.internalSetPoint(i, p);
    };
    TuStroke.prototype.setPoints = function (points) {
        if (points == null) {
            return;
        }
        this.Changing(1204);
        this.resetPath();
        var length = points.length;
        if (length > this.myPoints.length) {
            this.myPoints = new Array(length);
        }
        _tuval_core__WEBPACK_IMPORTED_MODULE_3__.TArray.Copy(points, 0, this.myPoints, 0, length);
        this.myPointsCount = length;
        if (!this.Initializing) {
            this.InvalidBounds = true;
        }
        this.Changed(1204, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect, 0, undefined, _Globals__WEBPACK_IMPORTED_MODULE_0__.NullRect);
    };
    /* internal */ TuStroke.StrokesIntersect = function (a, b, br) {
        var bounds = a.Bounds;
        if (b != null) {
            br = b.Bounds;
        }
        if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.IntersectsRect(bounds.clone(), br.clone())) {
            return false;
        }
        var realLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(a, _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuStroke);
        if (realLink == null && _tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(a, _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuLabeledLink)) {
            realLink = a.RealLink;
        }
        var goStroke = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.as)(b, _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuStroke);
        if (goStroke == null && _tuval_core__WEBPACK_IMPORTED_MODULE_3__.is.typeof(b, _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuLabeledLink)) {
            goStroke = b.RealLink;
        }
        if (realLink == null) {
            if (goStroke == null) {
                return true;
            }
            var single = Math.max(goStroke.PenWidth, goStroke.HighlightPenWidth);
            for (var i = 0; i < (goStroke.PointsCount - 1); i = (i + 1)) {
                if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.IntersectsRect(bounds.clone(), _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.RectFromLine(goStroke.getPoint(i), goStroke.getPoint((i + 1)), single))) {
                    return true;
                }
            }
            return false;
        }
        var single1 = Math.max(realLink.PenWidth, realLink.HighlightPenWidth);
        for (var j = 0; j < (realLink.PointsCount - 1); j = (j + 1)) {
            var point = realLink.getPoint(j);
            var pointF = realLink.getPoint(j + 1);
            if (goStroke != null) {
                var single2 = Math.max(goStroke.PenWidth, goStroke.HighlightPenWidth);
                for (var k = 0; k < (goStroke.PointsCount - 1); k = (k + 1)) {
                    var point1 = goStroke.getPoint(k);
                    var pointF1 = goStroke.getPoint(k + 1);
                    if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.IntersectsRect(_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.RectFromLine(point.clone(), pointF.clone(), single1), _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.RectFromLine(point1.clone(), pointF1.clone(), single2))) {
                        return true;
                    }
                }
            }
            else if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.IntersectsRect(br, _GeomUtilities__WEBPACK_IMPORTED_MODULE_4__.GeomUtilities.RectFromLine(point.clone(), pointF.clone(), single1))) {
                return true;
            }
        }
        return false;
    };
    var TuStroke_1;
    TuStroke = TuStroke_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_3__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuStroke,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_7__.Types.TuStroke
            ]
        })
    ], TuStroke);
    return TuStroke;
}(_TuShape_TuShape__WEBPACK_IMPORTED_MODULE_6__.TuShape));

(function staticConstructor() {
    TuStroke.myIntersections = Array(50);
    for (var i = 0; i < TuStroke.myIntersections.lenght; i++) {
        TuStroke.myIntersections[i] = 0;
    }
})();


/***/ }),

/***/ "./src/TuStroke/TuStrokeArrowheadStyle.ts":
/*!************************************************!*\
  !*** ./src/TuStroke/TuStrokeArrowheadStyle.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuStrokeArrowheadStyle": () => (/* binding */ TuStrokeArrowheadStyle)
/* harmony export */ });
var TuStrokeArrowheadStyle;
(function (TuStrokeArrowheadStyle) {
    TuStrokeArrowheadStyle[TuStrokeArrowheadStyle["Polygon"] = 0] = "Polygon";
    TuStrokeArrowheadStyle[TuStrokeArrowheadStyle["Circle"] = 1] = "Circle";
    TuStrokeArrowheadStyle[TuStrokeArrowheadStyle["Cross"] = 2] = "Cross";
    TuStrokeArrowheadStyle[TuStrokeArrowheadStyle["Slash"] = 3] = "Slash";
    TuStrokeArrowheadStyle[TuStrokeArrowheadStyle["BackSlash"] = 4] = "BackSlash";
    TuStrokeArrowheadStyle[TuStrokeArrowheadStyle["X"] = 5] = "X";
})(TuStrokeArrowheadStyle || (TuStrokeArrowheadStyle = {}));


/***/ }),

/***/ "./src/TuStroke/TuStrokeEvents.ts":
/*!****************************************!*\
  !*** ./src/TuStroke/TuStrokeEvents.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuStrokeEvents": () => (/* binding */ TuStrokeEvents)
/* harmony export */ });
/* harmony import */ var _TuShape_TuShapeEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuShape/TuShapeEvents */ "./src/TuShape/TuShapeEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuStrokeEvents = /** @class */ (function (_super) {
    __extends(TuStrokeEvents, _super);
    function TuStrokeEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuStrokeEvents.AddedPoint = 1201;
    TuStrokeEvents.ChangedAddPoint = 1201;
    TuStrokeEvents.RemovedPoint = 1202;
    TuStrokeEvents.ChangedRemovePoint = 1202;
    TuStrokeEvents.ChangedModifiedPoint = 1203;
    TuStrokeEvents.ModifiedPoint = 1203;
    TuStrokeEvents.ChangedAllPoints = 1204;
    TuStrokeEvents.ChangedStyle = 1205;
    TuStrokeEvents.ChangedCurviness = 1206;
    TuStrokeEvents.ChangedHighlightPen = 1236;
    TuStrokeEvents.ChangedHighlight = 1237;
    TuStrokeEvents.ChangedHighlightWhenSelected = 1238;
    TuStrokeEvents.ChangedToArrowHead = 1250;
    TuStrokeEvents.ChangedToArrowLength = 1251;
    TuStrokeEvents.ChangedToArrowShaftLength = 1252;
    TuStrokeEvents.ChangedToArrowWidth = 1253;
    TuStrokeEvents.ChangedToArrowFilled = 1254;
    TuStrokeEvents.ChangedToArrowStyle = 1255;
    TuStrokeEvents.ChangedFromArrowHead = 1260;
    TuStrokeEvents.ChangedFromArrowLength = 1261;
    TuStrokeEvents.ChangedFromArrowShaftLength = 1262;
    TuStrokeEvents.ChangedFromArrowWidth = 1263;
    TuStrokeEvents.ChangedFromArrowFilled = 1264;
    TuStrokeEvents.ChangedFromArrowStyle = 1265;
    TuStrokeEvents[1201] = 'ChangedAddPoint';
    TuStrokeEvents[1202] = 'ChangedRemovePoint';
    TuStrokeEvents[1203] = 'ChangedModifiedPoint';
    TuStrokeEvents[1204] = 'ChangedAllPoints';
    TuStrokeEvents[1205] = 'ChangedStyle';
    TuStrokeEvents[1206] = 'ChangedCurviness';
    TuStrokeEvents[1236] = 'ChangedHighlightPen';
    TuStrokeEvents[1237] = 'ChangedHighlight';
    TuStrokeEvents[1238] = 'ChangedHighlightWhenSelected';
    TuStrokeEvents[1250] = 'ChangedToArrowHead';
    TuStrokeEvents[1251] = 'ChangedToArrowLength';
    TuStrokeEvents[1252] = 'ChangedToArrowShaftLength';
    TuStrokeEvents[1253] = 'ChangedToArrowWidth';
    TuStrokeEvents[1254] = 'ChangedToArrowFilled';
    TuStrokeEvents[1255] = 'ChangedToArrowStyle';
    TuStrokeEvents[1260] = 'ChangedFromArrowHead';
    TuStrokeEvents[1261] = 'ChangedFromArrowLength';
    TuStrokeEvents[1262] = 'ChangedFromArrowShaftLength';
    TuStrokeEvents[1263] = 'ChangedFromArrowWidth';
    TuStrokeEvents[1264] = 'ChangedFromArrowFilled';
    TuStrokeEvents[1265] = 'ChangedFromArrowStyle';
    return TuStrokeEvents;
}(_TuShape_TuShapeEvents__WEBPACK_IMPORTED_MODULE_0__.TuShapeEvents));



/***/ }),

/***/ "./src/TuStroke/TuStrokeStyle.ts":
/*!***************************************!*\
  !*** ./src/TuStroke/TuStrokeStyle.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuStrokeStyle": () => (/* binding */ TuStrokeStyle)
/* harmony export */ });
var TuStrokeStyle;
(function (TuStrokeStyle) {
    TuStrokeStyle[TuStrokeStyle["Line"] = 0] = "Line";
    TuStrokeStyle[TuStrokeStyle["RoundedLine"] = 1] = "RoundedLine";
    TuStrokeStyle[TuStrokeStyle["Bezier"] = 2] = "Bezier";
    TuStrokeStyle[TuStrokeStyle["RoundedLineWithJumpOvers"] = 3] = "RoundedLineWithJumpOvers";
    TuStrokeStyle[TuStrokeStyle["RoundedLineWithJumpGaps"] = 4] = "RoundedLineWithJumpGaps";
})(TuStrokeStyle || (TuStrokeStyle = {}));


/***/ }),

/***/ "./src/TuSubGraph/TuSubGraphBase.ts":
/*!******************************************!*\
  !*** ./src/TuSubGraph/TuSubGraphBase.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuSubGraphBase": () => (/* binding */ TuSubGraphBase)
/* harmony export */ });
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _TuGroup_TuGroup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../TuGroup/TuGroup */ "./src/TuGroup/TuGroup.tsx");
/* harmony import */ var _TuNode_TuNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuNode/TuNode */ "./src/TuNode/TuNode.ts");
/* harmony import */ var _TuNode_TuNodeLinkEnumerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuNode/TuNodeLinkEnumerator */ "./src/TuNode/TuNodeLinkEnumerator.ts");
/* harmony import */ var _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuNode/TuNodeSearch */ "./src/TuNode/TuNodeSearch.ts");
/* harmony import */ var _TuNode_TuNodeNodeEnumerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../TuNode/TuNodeNodeEnumerator */ "./src/TuNode/TuNodeNodeEnumerator.ts");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










var TuSubGraphBase = /** @class */ (function (_super) {
    __extends(TuSubGraphBase, _super);
    function TuSubGraphBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuSubGraphBase_1 = TuSubGraphBase;
    Object.defineProperty(TuSubGraphBase.prototype, "ExternalDestinationLinks", {
        get: function () {
            return this.getExternalDestinationLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuSubGraphBase.prototype.getExternalDestinationLinks = function () {
        return this.getLinkEnumerator(_TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.LinksOut | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NotSelf);
    };
    Object.defineProperty(TuSubGraphBase.prototype, "ExternalDestinations", {
        get: function () {
            return this.getExternalDestinations();
        },
        enumerable: false,
        configurable: true
    });
    TuSubGraphBase.prototype.getExternalDestinations = function () {
        return this.getNodeEnumerator(_TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NodesOut | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NotSelf);
    };
    Object.defineProperty(TuSubGraphBase.prototype, "ExternalLinks", {
        get: function () {
            return this.getExternalLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuSubGraphBase.prototype.getExternalLinks = function () {
        return this.getLinkEnumerator(_TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.LinksIn | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.LinksOut | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NotSelf);
    };
    Object.defineProperty(TuSubGraphBase.prototype, "ExternalNodes", {
        get: function () {
            return this.getExternalNodes();
        },
        enumerable: false,
        configurable: true
    });
    TuSubGraphBase.prototype.getExternalNodes = function () {
        return this.getNodeEnumerator(_TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NodesIn | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NodesOut | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NotSelf);
    };
    Object.defineProperty(TuSubGraphBase.prototype, "ExternalSourceLinks", {
        get: function () {
            return this.getExternalSourceLinks();
        },
        enumerable: false,
        configurable: true
    });
    TuSubGraphBase.prototype.getExternalSourceLinks = function () {
        return this.getLinkEnumerator(_TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.LinksIn | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NotSelf);
    };
    Object.defineProperty(TuSubGraphBase.prototype, "ExternalSources", {
        get: function () {
            return this.getExternalSources();
        },
        enumerable: false,
        configurable: true
    });
    TuSubGraphBase.prototype.getExternalSources = function () {
        return this.getNodeEnumerator(_TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NodesIn | _TuNode_TuNodeSearch__WEBPACK_IMPORTED_MODULE_6__.TuNodeSearch.NotSelf);
    };
    TuSubGraphBase.FindParentSubGraph = function (obj) {
        if (obj == null) {
            return undefined;
        }
        for (var i = obj.Parent; i != null; i = i.Parent) {
            if (_tuval_core__WEBPACK_IMPORTED_MODULE_2__.is.typeof(i, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuSubGraphBase)) {
                return i;
            }
        }
        return undefined;
    };
    TuSubGraphBase.prototype.getLinkEnumerator = function (s) {
        return new _TuNode_TuNodeLinkEnumerator__WEBPACK_IMPORTED_MODULE_5__.TuNodeLinkEnumerator(this, s);
    };
    TuSubGraphBase.prototype.getNodeEnumerator = function (s) {
        return new _TuNode_TuNodeNodeEnumerator__WEBPACK_IMPORTED_MODULE_7__.TuNodeNodeEnumerator(this, s);
    };
    TuSubGraphBase.prototype.pickObjects = function (p, selectableOnly, coll, max) {
        var goCollections;
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_9__.TuCollection();
        }
        if (coll.Count >= max) {
            return coll;
        }
        if (!_GeomUtilities__WEBPACK_IMPORTED_MODULE_0__.GeomUtilities.ContainsRect(this.Bounds, p)) {
            return coll;
        }
        if (!this.CanView()) {
            return coll;
        }
        var enumerator = this.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                var goSubGraphBase = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.as)(current, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuSubGraphBase);
                if (goSubGraphBase == null) {
                    var goObject = current.Pick(p, selectableOnly);
                    if (goObject == null) {
                        continue;
                    }
                    coll.Add(goObject);
                    if (coll.Count < max) {
                        continue;
                    }
                    goCollections = coll;
                    return goCollections;
                }
                else {
                    goSubGraphBase.pickObjects(p, selectableOnly, coll, max);
                }
            }
            if (this.PickableBackground && (!selectableOnly || this.CanSelect())) {
                coll.Add(this);
            }
            return coll;
        }
        finally {
            enumerator.Dispose();
        }
        return goCollections;
    };
    TuSubGraphBase.ReparentAllLinksToSubGraphs = function (coll, behind, layer) {
        var goCollections = new _tuval_core__WEBPACK_IMPORTED_MODULE_2__.List();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.foreach)(coll, function (goObject) {
            goCollections.Add(goObject);
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.foreach)(goCollections, function (goCollection) {
            var goNode = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.as)(goCollection, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuNode);
            if (goNode == null) {
                var goPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.as)(goCollection, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuPort);
                if (goPort == null) {
                    var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.as)(goCollection, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuLink);
                    if (goLink == null || goLink.FromPort == null || goLink.ToPort == null) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_2__.CONTINUE;
                    }
                    TuSubGraphBase_1.ReparentToCommonSubGraph(goLink.TuObject, goLink.FromPort.TuObject, goLink.ToPort.TuObject, behind, layer);
                }
                else {
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.foreach)(goPort.Links, function (link) {
                        if (link == null || link.FromPort == null || link.ToPort == null) {
                            return _tuval_core__WEBPACK_IMPORTED_MODULE_2__.CONTINUE;
                        }
                        TuSubGraphBase_1.ReparentToCommonSubGraph(link.TuObject, link.FromPort.TuObject, link.ToPort.TuObject, behind, layer);
                    });
                }
            }
            else {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.foreach)(goNode.Links, function (link1) {
                    if (link1 == null || link1.FromPort == null || link1.ToPort == null) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_2__.CONTINUE;
                    }
                    TuSubGraphBase_1.ReparentToCommonSubGraph(link1.TuObject, link1.FromPort.TuObject, link1.ToPort.TuObject, behind, layer);
                });
            }
        });
    };
    TuSubGraphBase.ReparentToCommonSubGraph = function (obj, child1, child2, behind, layer) {
        var parent = _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_8__.TuObject.FindCommonParent(TuSubGraphBase_1.FindParentSubGraph(child1), TuSubGraphBase_1.FindParentSubGraph(child2));
        while (parent != null && !(_tuval_core__WEBPACK_IMPORTED_MODULE_2__.is.typeof(parent, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuSubGraphBase))) {
            parent = parent.Parent;
        }
        var goSubGraphBase = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.as)(parent, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuSubGraphBase);
        if (obj.Parent !== goSubGraphBase || obj.Layer == null) {
            if (obj.Parent == null && obj.Layer == null) {
                if (goSubGraphBase == null) {
                    layer.Add(obj);
                    return;
                }
                if (behind) {
                    goSubGraphBase.insertBefore(undefined, obj);
                    return;
                }
                goSubGraphBase.insertAfter(undefined, obj);
                return;
            }
            var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_9__.TuCollection({
                entries: [obj]
            });
            if (goSubGraphBase != null) {
                goSubGraphBase.AddCollection(goCollections, false);
                return;
            }
            layer.AddCollection(goCollections, false);
        }
    };
    var TuSubGraphBase_1;
    TuSubGraphBase = TuSubGraphBase_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_2__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuSubGraphBase,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuSubGraphBase
            ]
        })
    ], TuSubGraphBase);
    return TuSubGraphBase;
}(_TuNode_TuNode__WEBPACK_IMPORTED_MODULE_4__.TuNode));

_TuGroup_TuGroup__WEBPACK_IMPORTED_MODULE_3__.TuGroup._ReparentAllLinksToSubGraphs = TuSubGraphBase.ReparentAllLinksToSubGraphs;


/***/ }),

/***/ "./src/TuSubGraph/TuSubGraphState.ts":
/*!*******************************************!*\
  !*** ./src/TuSubGraph/TuSubGraphState.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuSubGraphState": () => (/* binding */ TuSubGraphState)
/* harmony export */ });
var TuSubGraphState;
(function (TuSubGraphState) {
    TuSubGraphState[TuSubGraphState["Expanded"] = 0] = "Expanded";
    TuSubGraphState[TuSubGraphState["Collapsed"] = 1] = "Collapsed";
    TuSubGraphState[TuSubGraphState["Expanding"] = 2] = "Expanding";
    TuSubGraphState[TuSubGraphState["Collapsing"] = 3] = "Collapsing";
})(TuSubGraphState || (TuSubGraphState = {}));


/***/ }),

/***/ "./src/TuText/Renderers/HtmlRenderer.tsx":
/*!***********************************************!*\
  !*** ./src/TuText/Renderers/HtmlRenderer.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HtmlRenderer": () => (/* binding */ HtmlRenderer)
/* harmony export */ });
/* harmony import */ var _Xml_TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Xml/TuHtmlRenderer */ "./src/Xml/TuHtmlRenderer.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Spot */ "./src/Spot.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





/* white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;

  white-space: nowrap;
  width: 50px;
  overflow: hidden;
  text-overflow: ellipsis;
  border: 1px solid #000000; */
var myNewlineArray = ['\r', '\n'];
var HtmlRenderer = /** @class */ (function (_super) {
    __extends(HtmlRenderer, _super);
    function HtmlRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HtmlRenderer.prototype.DecideCache = function () {
        this.InvalidateCache();
    };
    HtmlRenderer.prototype.GenerateElement = function (view, obj) {
        this.WriteStartElement('tuval-diagram-TuText');
        return true;
    };
    HtmlRenderer.prototype.GenerateAttributes = function (view, tuText) {
        var r = tuText.Bounds.clone();
        this.WriteStyleAttrVal('position', 'absolute');
        this.WriteStyleAttrVal('left', r.Left + 'px');
        this.WriteStyleAttrVal('top', r.Top + 'px');
        this.WriteStyleAttrVal('width', r.Width + 'px');
        this.WriteStyleAttrVal('height', r.Height + 'px');
        this.WriteStyleAttrVal('display', 'flex');
        if (tuText.Alignment === _Spot__WEBPACK_IMPORTED_MODULE_4__.Middle) {
            this.WriteStyleAttrVal('align-items', 'center');
        }
        if (!tuText.Multiline) {
            this.WriteStyleAttrVal('overflow', 'hidden');
        }
        //  this.WriteAttrVal('onclick', ()=> alert(''));
    };
    HtmlRenderer.prototype.drawBackground = function (p, b, r) {
        this.WriteStartElement("div");
        this.WriteBrushAttributes(b);
        this.WritePenAttributes(p);
        this.WriteStyleAttrVal('position', 'absolute');
        // this.WriteStyleAttrVal('left', r.Left + 'px');
        // this.WriteStyleAttrVal('top', r.Top + 'px');
        this.WriteStyleAttrVal('width', r.Width + 'px');
        this.WriteStyleAttrVal('height', r.Height + 'px');
        this.WriteEndElement();
    };
    HtmlRenderer.prototype.FindFirstLineBreak = function (str, start, nextline) {
        var int32 = _tuval_core__WEBPACK_IMPORTED_MODULE_2__.TString.IndexOfAny(str, myNewlineArray, start);
        if (int32 >= 0) {
            if (str[int32] != '\r' || int32 + 1 >= str.length || str[int32 + 1] != '\n') {
                nextline.value = int32 + 1;
            }
            else {
                nextline.value = int32 + 2;
            }
        }
        return int32;
    };
    HtmlRenderer.prototype.GenerateBody = function (view, tuText) {
        var bounds = tuText.Bounds.clone();
        /*    this.WriteStartElement('div');
           this.WriteStyleAttrVal('position', 'absolute');
           this.WriteStyleAttrVal('left', bounds.Left + 'px');
           this.WriteStyleAttrVal('top', bounds.Top + 'px');
           this.WriteStyleAttrVal('width', bounds.Width + 'px');
           this.WriteStyleAttrVal('height', bounds.Height + 'px');
           this.WriteStyleAttrVal('display', 'flex');
           this.WriteStyleAttrVal('align-items', 'center'); */
        var brush = null;
        var pen = null;
        if (!tuText.TransparentBackground && !tuText.BackgroundColor.IsEmpty) {
            brush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.SolidBrush(tuText.BackgroundColor);
        }
        if (tuText.Bordered) {
            pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pen(tuText.TextColor);
        }
        if (brush != null || pen != null) {
            this.drawBackground(pen, brush, bounds);
            pen.Dispose();
            brush.Dispose();
        }
        var font = tuText.Font;
        var color = this.TranslateColor(tuText.TextColor);
        var fontSize = font ? "12" : font.Size;
        var fontName = '';
        var fontWeight = 'normal';
        var fontStyle = 'normal';
        this.WriteStartElement('span');
        this.WriteStyleAttrVal('position', 'relative');
        this.WriteStyleAttrVal('width', bounds.Width + 'px');
        if (font != null && font.Name != null) {
            this.WriteStyleAttrVal('font-name', font.Name);
        }
        if (font.Style & _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.FontStyle.Bold) {
            this.WriteStyleAttrVal('font-weight', 'bold');
        }
        if (font.Style & _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.FontStyle.Italic) {
            this.WriteStyleAttrVal('font-style', 'italic');
        }
        this.WriteStyleAttrVal('font-size', tuText.FontSize + 'pt');
        if (tuText.Wrapping) {
            this.WriteStyleAttrVal('white-space', 'normal');
        }
        else {
            this.WriteStyleAttrVal('white-space', 'nowrap');
        }
        if (tuText.Multiline) {
            var a = _tuval_core__WEBPACK_IMPORTED_MODULE_2__.New.Out(0);
            var result = [];
            var index = 0;
            while (index > -1) {
                var prevIndex = index;
                index = this.FindFirstLineBreak(tuText.Text, index + 1, a);
                var line = tuText.Text.substring(prevIndex, index > -1 ? index : tuText.Text.length - 1);
                var style = {};
                style['margin'] = '0px';
                if (tuText.Alignment === _Spot__WEBPACK_IMPORTED_MODULE_4__.Middle) {
                    style['text-align'] = 'center';
                }
                result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Teact.createElement("p", { style: style }, line));
            }
            if (result.length > 0) {
                this.WriteComponent(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Teact.createElement("p", { style: 'margin:0px;' }, result));
            }
            else {
                this.WriteTextBody(tuText.Text);
            }
        }
        else {
            this.WriteTextBody(tuText.Text);
        }
        this.WriteEndElement();
        //this.WriteEndElement();
    };
    HtmlRenderer.prototype.GenerateElementFinish = function (view, obj) {
        this.WriteEndElement();
    };
    return HtmlRenderer;
}(_Xml_TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_0__.TuHtmlRenderer));



/***/ }),

/***/ "./src/TuText/TuText.ts":
/*!******************************!*\
  !*** ./src/TuText/TuText.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuText": () => (/* binding */ TuText)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuControl_TuControl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuControl/TuControl */ "./src/TuControl/TuControl.ts");
/* harmony import */ var _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TuTextEvents */ "./src/TuText/TuTextEvents.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _TuTextEditorStyle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TuTextEditorStyle */ "./src/TuText/TuTextEditorStyle.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _TuTextSvgRenderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./TuTextSvgRenderer */ "./src/TuText/TuTextSvgRenderer.ts");
/* harmony import */ var _Renderers_HtmlRenderer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Renderers/HtmlRenderer */ "./src/TuText/Renderers/HtmlRenderer.tsx");
/* harmony import */ var _SvgMesurements__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../SvgMesurements */ "./src/SvgMesurements.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
















var _graphic;
var flagTransparentBackground = 1;
var flagBold = 2;
var flagItalic = 4;
var flagUnderline = 8;
var flagStrikeThrough = 16;
var flagMultiline = 32;
var flagWrapping = 64;
var flagClipping = 128;
var flagAutoResizes = 256;
var flagBackgroundOpaqueWhenSelected = 512;
var flagEditableWhenSelected = 1024;
var flagDropDownList = 2048;
var flagRightToLeft = 268435456;
var flagRightToLeftFromView = 536870912;
var flagUpdating = 1073741824;
var maskEditorStyle = 61440;
var maskGdiCharSet = 16711680;
var maskStringTrimming = 251658240;
var DEFAULT_CHARSET = 1;
var flagBordered = 1048576;
var TuText = /** @class */ (function (_super) {
    __extends(TuText, _super);
    function TuText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuText_1 = TuText;
    TuText.prototype.SetupControlDefaults = function () {
        _super.prototype.SetupControlDefaults.call(this);
        this.myString = '';
        this.myFamilyName = TuText_1.myDefaultFontName;
        this.myFontSize = TuText_1.myDefaultFontSize;
        this.myAlignment = _Spot__WEBPACK_IMPORTED_MODULE_3__.TopLeft;
        this.myTextColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Black;
        this.myBackgroundColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.White;
        this.myInternalTextFlags = 536936705;
        this.myWrappingWidth = 150;
        this.myNumLines = 1;
        this.myMinimum = 0;
        this.myMaximum = 100;
        this.myChoices = TuText_1.myEmptyChoices;
        this.SvgRenderer = new _TuTextSvgRenderer__WEBPACK_IMPORTED_MODULE_13__.TuTextSvgRenderer();
        this.HtmlRenderer = new _Renderers_HtmlRenderer__WEBPACK_IMPORTED_MODULE_14__.HtmlRenderer();
        this.InternalFlags = this.InternalFlags & -273;
    };
    Object.defineProperty(TuText.prototype, "Alignment", {
        //#region [Property] Alignment
        get: function () {
            return this.getAlignment();
        },
        set: function (value) {
            this.setAlignment(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getAlignment = function () {
        return this.myAlignment;
    };
    TuText.prototype.setAlignment = function (value) {
        var int32 = this.myAlignment;
        if (int32 !== value) {
            this.myAlignment = value;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedAlignment, 0, int32, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "AutoResizes", {
        //#endregion
        //#region [Property] AutoResizes
        get: function () {
            return this.getAutoResizes();
        },
        set: function (value) {
            this.setAutoResizes(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getAutoResizes = function () {
        return (this.myInternalTextFlags & flagAutoResizes) != 0;
    };
    TuText.prototype.setAutoResizes = function (value) {
        var flag = (this.myInternalTextFlags & flagAutoResizes) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagAutoResizes;
            }
            else {
                this.myInternalTextFlags |= flagAutoResizes;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedAutoResizes, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "BackgroundColor", {
        //#endregion
        //#region [Property] BackgroundColor
        get: function () {
            return this.getBackgroundColor();
        },
        set: function (value) {
            this.setBackgroundColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getBackgroundColor = function () {
        return this.myBackgroundColor;
    };
    TuText.prototype.setBackgroundColor = function (value) {
        var color = this.myBackgroundColor;
        if (color.notEquals(value)) {
            this.myBackgroundColor = value;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBackgroundColor, 0, color, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "BackgroundOpaqueWhenSelected", {
        //#endregion
        //#region [Property] BackgroundOpaqueWhenSelected
        get: function () {
            return this.getBackgroundOpaqueWhenSelected();
        },
        set: function (value) {
            this.setBackgroundOpaqueWhenSelected(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getBackgroundOpaqueWhenSelected = function () {
        return (this.myInternalTextFlags & flagBackgroundOpaqueWhenSelected) != 0;
    };
    TuText.prototype.setBackgroundOpaqueWhenSelected = function (value) {
        var flag = (this.myInternalTextFlags & flagBackgroundOpaqueWhenSelected) !== 0;
        if (flag != value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagBackgroundOpaqueWhenSelected;
            }
            else {
                this.myInternalTextFlags |= flagBackgroundOpaqueWhenSelected;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBackgroundOpaqueWhenSelected, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "Bold", {
        //#endregion
        //#region [Property] Bold
        get: function () {
            return this.getBold();
        },
        set: function (value) {
            this.setBold(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getBold = function () {
        return (this.myInternalTextFlags & flagBold) !== 0;
    };
    TuText.prototype.setBold = function (value) {
        var flag = (this.myInternalTextFlags & flagBold) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagBold;
            }
            else {
                this.myInternalTextFlags |= flagBold;
            }
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBold, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "Bordered", {
        //#endregion
        //#region [Property] Bordered
        get: function () {
            return this.getBordered();
        },
        set: function (value) {
            this.setBordered(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getBordered = function () {
        return (this.InternalFlags & flagBordered) !== 0;
    };
    TuText.prototype.setBordered = function (value) {
        var internalFlags = (this.InternalFlags & flagBordered) !== 0;
        if (internalFlags != value) {
            if (!value) {
                this.InternalFlags = this.InternalFlags & ~flagBordered;
            }
            else {
                this.InternalFlags = this.InternalFlags | flagBordered;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBordered, 0, internalFlags, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "Choices", {
        //#endregion
        //#region [Property] Choices
        get: function () {
            return this.getChoices();
        },
        set: function (value) {
            this.setChoices(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getChoices = function () {
        if (this.myChoices == null) {
            return TuText_1.myEmptyChoices;
        }
        return this.myChoices;
    };
    TuText.prototype.setChoices = function (value) {
        var lists = (this.myChoices != null ? this.myChoices : TuText_1.myEmptyChoices);
        var lists1 = value || TuText_1.myEmptyChoices;
        if (lists !== lists1) {
            this.myChoices = lists1;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedChoices, 0, lists, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, lists1, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "Clipping", {
        //#endregion
        //#region [Property] Clipping
        get: function () {
            return this.getClipping();
        },
        set: function (value) {
            this.setClipping(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getClipping = function () {
        return (this.myInternalTextFlags & flagClipping) !== 0;
    };
    TuText.prototype.setClipping = function (value) {
        var flag = (this.myInternalTextFlags & flagClipping) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagClipping;
            }
            else {
                this.myInternalTextFlags |= flagClipping;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedClipping, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText, "DefaultFontFamilyName", {
        //#endregion
        get: function () {
            return TuText_1.myDefaultFontName;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuText.prototype, "DefaultFontFamilyName", {
        set: function (value) {
            TuText_1.myDefaultFontName = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuText, "DefaultFontSize", {
        get: function () {
            return TuText_1.myDefaultFontSize;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuText.prototype, "DefaultFontSize", {
        set: function (value) {
            TuText_1.myDefaultFontSize = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuText.prototype, "DropDownList", {
        //#region [Property] DropDownList
        get: function () {
            return this.getDropDownList();
        },
        set: function (value) {
            this.setDropDownList(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getDropDownList = function () {
        return (this.myInternalTextFlags & flagDropDownList) !== 0;
    };
    TuText.prototype.setDropDownList = function (value) {
        var flag = (this.myInternalTextFlags & flagDropDownList) !== 0;
        if (flag != value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagDropDownList;
            }
            else {
                this.myInternalTextFlags |= flagDropDownList;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedDropDownList, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "EditableWhenSelected", {
        //#endregion
        //#region [Property] EditableWhenSelected
        get: function () {
            return this.getEditableWhenSelected();
        },
        set: function (value) {
            this.setEditableWhenSelected(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getEditableWhenSelected = function () {
        return (this.myInternalTextFlags & flagEditableWhenSelected) !== 0;
    };
    TuText.prototype.setEditableWhenSelected = function (value) {
        var flag = (this.myInternalTextFlags & flagEditableWhenSelected) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagEditableWhenSelected;
            }
            else {
                this.myInternalTextFlags |= flagEditableWhenSelected;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedEditableWhenSelected, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText, "Editor", {
        get: function () {
            return this.myEditor;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuText.prototype, "EditorStyle", {
        //#region [Property] EditorStyle
        get: function () {
            return this.getEditorStyle();
        },
        set: function (value) {
            this.setEditorStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getEditorStyle = function () {
        return ((this.myInternalTextFlags & maskEditorStyle) >> 12);
    };
    TuText.prototype.setEditorStyle = function (value) {
        var goTextEditorStyle = ((this.myInternalTextFlags & maskEditorStyle) >> 12);
        if (goTextEditorStyle != value) {
            this.myInternalTextFlags = this.myInternalTextFlags & ~maskEditorStyle | value << 12;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedEditorStyle, goTextEditorStyle, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "FamilyName", {
        //#endregion
        //#region [Property] FamilyName
        get: function () {
            return this.getFamilyName();
        },
        set: function (value) {
            this.setFamilyName(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getFamilyName = function () {
        return this.myFamilyName;
    };
    TuText.prototype.setFamilyName = function (value) {
        var str = value || TuText_1.DefaultFontFamilyName;
        var str1 = this.myFamilyName;
        if (str1 !== str) {
            this.myFamilyName = str;
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedFamilyName, 0, str1, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "Font", {
        //#endregion
        //#region [Property] Font
        get: function () {
            return this.getFont();
        },
        set: function (value) {
            this.setFont(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getFont = function () {
        if (this.myFont == null) {
            var fontStyle = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Regular;
            if (this.Bold) {
                fontStyle = fontStyle | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Bold;
            }
            if (this.Italic) {
                fontStyle = fontStyle | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Italic;
            }
            if (this.Underline) {
                fontStyle = fontStyle | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Underline;
            }
            if (this.StrikeThrough) {
                fontStyle = fontStyle | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Strikeout;
            }
            this.myFont = this.shareFont(this.FamilyName, this.FontSize, fontStyle);
        }
        return this.myFont;
    };
    TuText.prototype.setFont = function (value) {
        if (value != null) {
            var initializing = this.Initializing;
            this.Initializing = true;
            this.FamilyName = value.Name;
            this.FontSize = value.Size;
            this.Bold = (value.Style & _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Bold) !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Regular;
            this.Italic = (value.Style & _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Italic) !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Regular;
            this.Underline = (value.Style & _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Underline) !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Regular;
            this.StrikeThrough = (value.Style & _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Strikeout) !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.FontStyle.Regular;
            this.GdiCharSet = value.GdiCharSet;
            this.myFont = value;
            this.Initializing = initializing;
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "FontSize", {
        //#endregion
        //#region [Property] FontSize
        get: function () {
            return this.getFontSize();
        },
        set: function (value) {
            this.setFontSize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getFontSize = function () {
        return this.myFontSize;
    };
    TuText.prototype.setFontSize = function (value) {
        var single = this.myFontSize;
        if (value > 0 && single !== value) {
            this.myFontSize = value;
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedFontSize, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(value));
            this.updateSize();
        }
    };
    Object.defineProperty(TuText.prototype, "GdiCharSet", {
        //#endregion
        //#region [Property] GdiCharSet
        get: function () {
            return this.getGdiCharSet();
        },
        set: function (value) {
            this.setGdiCharSet(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getGdiCharSet = function () {
        return (this.myInternalTextFlags & maskGdiCharSet) >> 16;
    };
    TuText.prototype.setGdiCharSet = function (value) {
        var int32 = (this.myInternalTextFlags & maskGdiCharSet) >> 16;
        var int321 = value & 255;
        if (int32 !== int321) {
            this.myInternalTextFlags = this.myInternalTextFlags & ~maskGdiCharSet | int321 << 16;
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedGdiCharSet, int32, null, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, int321, null, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "InternalTextFlags", {
        //#endregion
        //#region [Property] InternalTextFlags
        get: function () {
            return this.myInternalTextFlags;
        },
        set: function (value) {
            this.myInternalTextFlags = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuText.prototype, "Italic", {
        //#endregion
        //#region [Property] Italic
        get: function () {
            return this.getItalic();
        },
        set: function (value) {
            this.setItalic(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getItalic = function () {
        return (this.myInternalTextFlags & flagItalic) !== 0;
    };
    TuText.prototype.setItalic = function (value) {
        var flag = (this.myInternalTextFlags & flagItalic) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagItalic;
            }
            else {
                this.myInternalTextFlags |= flagItalic;
            }
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedItalic, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "LineCount", {
        //#endregion
        get: function () {
            return this.myNumLines;
        },
        enumerable: false,
        configurable: true
    });
    //#region [Property] Location
    TuText.prototype.getLocation = function () {
        return this.GetSpotLocation(this.Alignment);
    };
    TuText.prototype.setLocation = function (value) {
        this.setSpotLocation(this.Alignment, value);
    };
    Object.defineProperty(TuText.prototype, "Maximum", {
        //#endregion
        //#region [Property] Maximum
        get: function () {
            return this.getMaximum();
        },
        set: function (value) {
            this.setMaximum(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getMaximum = function () {
        return this.myMaximum;
    };
    TuText.prototype.setMaximum = function (value) {
        var int32 = this.myMaximum;
        if (int32 !== value) {
            this.myMaximum = value;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedMaximum, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "Minimum", {
        //#endregion
        //#region [Property] Minimum
        get: function () {
            return this.getMinimum();
        },
        set: function (value) {
            this.setMinimum(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getMinimum = function () {
        return this.myMinimum;
    };
    TuText.prototype.setMinimum = function (value) {
        var int32 = this.myMinimum;
        if (int32 !== value) {
            this.myMinimum = value;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedMinimum, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, value, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "Multiline", {
        //#endregion
        //#region [Property] Multiline
        get: function () {
            return this.getMultiline();
        },
        set: function (value) {
            this.setMultiline(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getMultiline = function () {
        return (this.myInternalTextFlags & flagMultiline) !== 0;
    };
    TuText.prototype.setMultiline = function (value) {
        var flag = (this.myInternalTextFlags & flagMultiline) !== 0;
        if (flag != value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagMultiline;
            }
            else {
                this.myInternalTextFlags |= flagMultiline;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedMultiline, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "RightToLeft", {
        //#endregion
        //#region [Property] RightToLeft
        get: function () {
            return this.getRightToLeft();
        },
        set: function (value) {
            this.setRightToLeft(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getRightToLeft = function () {
        return (this.myInternalTextFlags & flagRightToLeft) !== 0;
    };
    TuText.prototype.setRightToLeft = function (value) {
        var flag = (this.myInternalTextFlags & flagRightToLeft) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagRightToLeft;
            }
            else {
                this.myInternalTextFlags |= flagRightToLeft;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedRightToLeft, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "RightToLeftFromgetView", {
        //#endregion
        //#region [Property] RightToLeftFromView
        get: function () {
            return this.getRightToLeftFromgetView();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuText.prototype, "RightToLeftFromView", {
        set: function (value) {
            this.setRightToLeftFromView(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getRightToLeftFromgetView = function () {
        return (this.myInternalTextFlags & flagRightToLeftFromView) !== 0;
    };
    TuText.prototype.setRightToLeftFromView = function (value) {
        var flag = (this.myInternalTextFlags & flagRightToLeftFromView) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagRightToLeftFromView;
            }
            else {
                this.myInternalTextFlags |= flagRightToLeftFromView;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedRightToLeftFromView, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "StrikeThrough", {
        //#endregion
        //#region [Property] StrikeThrough
        get: function () {
            return this.getStrikeThrough();
        },
        set: function (value) {
            this.setStrikeThrough(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getStrikeThrough = function () {
        return (this.myInternalTextFlags & flagStrikeThrough) !== 0;
    };
    TuText.prototype.setStrikeThrough = function (value) {
        var flag = (this.myInternalTextFlags & flagStrikeThrough) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagStrikeThrough;
            }
            else {
                this.myInternalTextFlags |= flagStrikeThrough;
            }
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedStrikeThrough, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "StringTrimming", {
        //#endregion
        //#region [Property] StringTrimming
        get: function () {
            return this.getStringTrimming();
        },
        set: function (value) {
            this.setStringTrimming(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getStringTrimming = function () {
        return ((this.myInternalTextFlags & maskStringTrimming) >> 24);
    };
    TuText.prototype.setStringTrimming = function (value) {
        var int32 = (this.myInternalTextFlags & maskStringTrimming) >> 24;
        var int321 = (value & _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringTrimming.Character | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringTrimming.Word | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringTrimming.EllipsisCharacter | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringTrimming.EllipsisWord | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringTrimming.EllipsisPath);
        if (int32 !== int321) {
            this.myInternalTextFlags = this.myInternalTextFlags & ~maskStringTrimming | int321 << 24;
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedStringTrimming, int32, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, int321, undefined, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "Text", {
        //#endregion
        //#region [Property] Text
        get: function () {
            return this.getText();
        },
        set: function (value) {
            this.setText(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getText = function () {
        return this.myString;
    };
    TuText.prototype.setText = function (value) {
        console.log('TuText set:  ', value);
        var str = value || '';
        var str1 = this.myString;
        if (str1 !== str) {
            this.myString = str;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedText, 0, str1, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, str, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "TextColor", {
        //#endregion
        //#region [Property] TextColor
        get: function () {
            return this.getTextColor();
        },
        set: function (value) {
            this.setTextColor(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getTextColor = function () {
        return this.myTextColor;
    };
    TuText.prototype.setTextColor = function (value) {
        var color = this.myTextColor;
        if (color.notEquals(value)) {
            this.myTextColor = value;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedTextColor, 0, color, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    Object.defineProperty(TuText.prototype, "TransparentBackground", {
        //#endregion
        //#region [Property] TransparentBackground
        get: function () {
            return this.getTransparentBackground();
        },
        set: function (value) {
            this.setTransparentBackground(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getTransparentBackground = function () {
        return (this.myInternalTextFlags & flagTransparentBackground) !== 0;
    };
    TuText.prototype.setTransparentBackground = function (value) {
        var flag = (this.myInternalTextFlags & flagTransparentBackground) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagTransparentBackground;
            }
            else {
                this.myInternalTextFlags |= flagTransparentBackground;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedTransparentBackground, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
        }
    };
    TuText.prototype.transparentBackground = function (value) { throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('Will Implement getter and setters'); };
    Object.defineProperty(TuText.prototype, "Underline", {
        //#endregion
        //#region [Property] Underline
        get: function () {
            return this.getUnderline();
        },
        set: function (value) {
            this.setUnderline(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getUnderline = function () {
        return (this.myInternalTextFlags & flagUnderline) !== 0;
    };
    TuText.prototype.setUnderline = function (value) {
        var flag = (this.myInternalTextFlags & flagUnderline) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagUnderline;
            }
            else {
                this.myInternalTextFlags |= flagUnderline;
            }
            this.resetFont();
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedUnderline, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    Object.defineProperty(TuText.prototype, "Wrapping", {
        //#endregion
        //#region [Property] Wrapping
        get: function () {
            return this.getWrapping();
        },
        set: function (value) {
            this.setWrapping(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getWrapping = function () {
        return (this.myInternalTextFlags & flagWrapping) !== 0;
    };
    TuText.prototype.setWrapping = function (value) {
        var flag = (this.myInternalTextFlags & flagWrapping) !== 0;
        if (flag !== value) {
            if (!value) {
                this.myInternalTextFlags &= ~flagWrapping;
            }
            else {
                this.myInternalTextFlags |= flagWrapping;
            }
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedWrapping, 0, flag, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect, 0, value, _Globals__WEBPACK_IMPORTED_MODULE_7__.NullRect);
            this.updateSizeOrScale();
        }
    };
    TuText.prototype.wrapping = function (value) { throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('Will Implement getter and setters'); };
    Object.defineProperty(TuText.prototype, "WrappingWidth", {
        //#endregion
        //#region [Property] WrappingWidth
        get: function () {
            return this.getWrappingWidth();
        },
        set: function (value) {
            this.setWrappingWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    TuText.prototype.getWrappingWidth = function () {
        return this.myWrappingWidth;
    };
    TuText.prototype.setWrappingWidth = function (value) {
        var single = this.myWrappingWidth;
        if (value > 0 && single !== value) {
            this.myWrappingWidth = value;
            this.Changed(_TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedWrappingWidth, 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(single), 0, undefined, _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.MakeRect(value));
            this.updateSizeOrScale();
        }
    };
    //#endregion
    TuText.prototype.AddSelectionHandles = function (sel, selectedObj) {
        if (!this.BackgroundOpaqueWhenSelected) {
            _super.prototype.AddSelectionHandles.call(this, sel, selectedObj);
            return;
        }
        _super.prototype.RemoveSelectionHandles.call(this, sel);
        var skipsUndoManager = this.SkipsUndoManager;
        this.SkipsUndoManager = true;
        this.TransparentBackground = false;
        this.SkipsUndoManager = skipsUndoManager;
    };
    TuText.prototype.ChangeValue = function (e, undo) {
        switch (e.SubHint) {
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedText:
                {
                    this.Text = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedFamilyName:
                {
                    this.FamilyName = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedFontSize:
                {
                    this.FontSize = e.getFloat(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedAlignment:
                {
                    this.Alignment = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedTextColor:
                {
                    this.TextColor = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBackgroundColor:
                {
                    this.BackgroundColor = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedTransparentBackground:
                {
                    this.TransparentBackground = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBold:
                {
                    this.Bold = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedItalic:
                {
                    this.Italic = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedUnderline:
                {
                    this.Underline = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedStrikeThrough:
                {
                    this.StrikeThrough = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedMultiline:
                {
                    this.Multiline = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBackgroundOpaqueWhenSelected:
                {
                    this.BackgroundOpaqueWhenSelected = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedClipping:
                {
                    this.Clipping = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedAutoResizes:
                {
                    this.AutoResizes = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedWrapping:
                {
                    this.Wrapping = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedWrappingWidth:
                {
                    this.WrappingWidth = e.getFloat(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedGdiCharSet:
                {
                    this.GdiCharSet = e.getInt(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedEditorStyle:
                {
                    this.EditorStyle = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedMinimum:
                {
                    this.Minimum = e.getInt(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedMaximum:
                {
                    this.Maximum = e.getInt(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedDropDownList:
                {
                    this.DropDownList = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedChoices:
                {
                    this.Choices = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedRightToLeft:
                {
                    this.RightToLeft = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedRightToLeftFromView:
                {
                    this.RightToLeftFromView = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedBordered:
                {
                    this.Bordered = e.getValue(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedStringTrimming:
                {
                    this.StringTrimming = e.getInt(undo);
                    return;
                }
            case _TuTextEvents__WEBPACK_IMPORTED_MODULE_6__.TuTextEvents.ChangedEditableWhenSelected:
                {
                    this.EditableWhenSelected = e.getValue(undo);
                    return;
                }
            default:
                {
                    _super.prototype.ChangeValue.call(this, e, undo);
                    return;
                }
        }
    };
    TuText.prototype.computeEdit = function (oldtext, newtext) {
        return newtext;
    };
    TuText.prototype.computeHeight = function (g, font, maxw) {
        var text = this.Text;
        var lineHeight = this.getLineHeight(font);
        if (text.length === 0) {
            this.myNumLines = 1;
            return lineHeight;
        }
        if (!this.Multiline) {
            var int32 = this.findFirstLineBreak(text, 0);
            if (int32 >= 0) {
                text = text.substr(0, int32);
            }
        }
        var stringFormat = this.getStringFormat(undefined);
        var height = 0;
        this.myNumLines = 0;
        var int321 = 0;
        var length = -1;
        var int322 = { value: 0 };
        var flag = false;
        while (!flag) {
            length = this.findFirstLineBreak(text, int321, int322);
            if (length === -1) {
                length = text.length;
                flag = true;
            }
            if (int321 <= length) {
                var str = text.substr(int321, length - int321);
                if (str.length <= 0) {
                    height = height + lineHeight;
                    this.myNumLines = (this.myNumLines + 1);
                }
                else if (!this.Wrapping) {
                    height = height + lineHeight;
                    this.myNumLines = this.myNumLines + 1;
                }
                else {
                    var sizeF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(maxw, 1E+09);
                    var int323 = { value: 0 };
                    var sizeF1 = this.measureString(str, g, font, stringFormat, sizeF, int323);
                    height = height + sizeF1.Height;
                    this.myNumLines = this.myNumLines + int323.value;
                }
            }
            int321 = int322.value;
        }
        return height;
    };
    TuText.prototype.computeWidth = function (g, font) {
        var text = this.Text;
        if (text.length === 0) {
            return 0;
        }
        var stringFormat = TuText_1.myStandardStringFormat;
        if (!this.Multiline) {
            var int32 = this.findFirstLineBreak(text, 0);
            if (int32 >= 0) {
                text = text.substr(0, int32);
            }
            var stringWidth = this.getStringWidth(text, g, font, stringFormat);
            if (!this.Wrapping || stringWidth <= this.WrappingWidth) {
                return stringWidth;
            }
            return this.WrappingWidth;
        }
        var single = 0;
        var int321 = 0;
        var flag = false;
        var int322 = { value: 0 };
        while (!flag) {
            var length_1 = this.findFirstLineBreak(text, int321, int322);
            if (length_1 === -1) {
                length_1 = text.length;
                flag = true;
            }
            var str = text.substr(int321, length_1 - int321);
            var stringWidth1 = this.getStringWidth(str, g, font, stringFormat);
            if (this.Wrapping && stringWidth1 > this.WrappingWidth) {
                return this.WrappingWidth;
            }
            if (stringWidth1 > single) {
                single = stringWidth1;
            }
            int321 = int322.value;
        }
        return single;
    };
    TuText.prototype.copyObject = function (env) {
        var goText = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(_super.prototype.CopyObject.call(this, env), _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuText);
        if (goText != null) {
            goText.myEditor = undefined;
        }
        return goText;
    };
    TuText.prototype.CreateEditor = function (view) {
        var _this = this;
        var alignment;
        var goControl = new _TuControl_TuControl__WEBPACK_IMPORTED_MODULE_5__.TuControl();
        var width = 1;
        var height = 1;
        if (view != null) {
            width = view.WorldScale.Width;
            height = view.WorldScale.Height;
        }
        if (this.EditorStyle === _TuTextEditorStyle__WEBPACK_IMPORTED_MODULE_8__.TuTextEditorStyle.NumericUpDown) {
            goControl.ControlType = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(TuText_1.NumericUpDownControl);
            var bounds = this.Bounds.clone();
            bounds.X = bounds.X - 2 / width;
            bounds.Y = bounds.Y - 2 / height;
            bounds.Width = bounds.Width + 36 / width;
            bounds.Height = bounds.Height + 8 / height;
            goControl.Bounds = bounds.clone();
            return goControl;
        }
        if (this.EditorStyle === _TuTextEditorStyle__WEBPACK_IMPORTED_MODULE_8__.TuTextEditorStyle.ComboBox) {
            goControl.ControlType = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(TuText_1.ComboBoxControl);
            var x = this.Bounds.clone();
            x.X = x.X - 2 / width;
            x.Y = x.Y - 2 / height;
            x.Width = x.Width + 4 / width;
            x.Height = x.Height + 4 / height;
            if (view != null) {
                var stringFormat_1 = this.getStringFormat(view);
                var docScale_1 = x.Width;
                docScale_1 = docScale_1 * view.DocScale;
                var graphic_1 = view.createGraphics();
                var font = this.Font;
                var size = font.Size;
                if (view != null) {
                    size = size * (view.DocScale / height);
                }
                var font1_1 = this.makeFont(font.Name, size, font.Style);
                if (graphic_1 != null) {
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Choices, function (choice) {
                        var str = choice.toString();
                        docScale_1 = Math.max(docScale_1, _this.getStringWidth(str, graphic_1, font1_1, stringFormat_1));
                    });
                    graphic_1.dispose();
                }
                font1_1.Dispose();
                docScale_1 = docScale_1 + 30 / width;
                x.Width = docScale_1 / view.DocScale;
            }
            goControl.Bounds = x;
            return goControl;
        }
        goControl.ControlType = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TextBoxControl);
        var y = this.Bounds;
        y.X = y.X - 2 / width;
        y.Y = y.Y - 2 / height;
        y.Width = y.Width + 4 / width;
        y.Height = y.Height + 4 / height;
        if (this.Multiline || this.Wrapping) {
            y.Height = y.Height + this.getLineHeight(this.Font) * 2;
        }
        if (!this.Wrapping) {
            alignment = this.Alignment;
            if (alignment.ID <= 16) {
                switch (alignment) {
                    case _Spot__WEBPACK_IMPORTED_MODULE_3__.Middle:
                    case _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleCenter:
                        {
                            y.X = y.X - 15 / width;
                            y.Width = y.Width + 30 / width;
                            goControl.Bounds = y;
                            return goControl;
                        }
                    case _Spot__WEBPACK_IMPORTED_MODULE_3__.TopLeft:
                    case _Spot__WEBPACK_IMPORTED_MODULE_3__.TopRight:
                        {
                            if (!this.isRightToLeft(view)) {
                                y.X = y.X - 30 / width;
                            }
                            y.Width = y.Width + 30 / width;
                            goControl.Bounds = y;
                            return goControl;
                        }
                    default:
                        {
                            if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.BottomRight) {
                                if (!this.isRightToLeft(view)) {
                                    y.X = y.X - 30 / width;
                                }
                                y.Width = y.Width + 30 / width;
                                goControl.Bounds = y;
                                return goControl;
                            }
                            if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.BottomLeft) {
                                break;
                            }
                            break;
                        }
                }
            }
            else if (alignment.ID > 64) {
                if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleBottom) {
                    y.X = y.X - 15 / width;
                    y.Width = y.Width + 30 / width;
                    goControl.Bounds = y;
                    return goControl;
                }
            }
            else {
                if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleTop || alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.TopCenter) {
                    y.X = y.X - 15 / width;
                    y.Width = y.Width + 30 / width;
                    goControl.Bounds = y;
                    return goControl;
                }
                if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleRight) {
                    if (!this.isRightToLeft(view)) {
                        y.X = y.X - 30 / width;
                    }
                    y.Width = y.Width + 30 / width;
                    goControl.Bounds = y;
                    return goControl;
                }
            }
            if (this.isRightToLeft(view)) {
                y.X = y.X - 30 / width;
                y.Width = y.Width + 30 / width;
                goControl.Bounds = y;
                return goControl;
            }
            else {
                y.Width = y.Width + 30 / width;
                goControl.Bounds = y;
                return goControl;
            }
        }
        else {
            alignment = this.Alignment;
            if (alignment.ID <= 16) {
                switch (alignment) {
                    case _Spot__WEBPACK_IMPORTED_MODULE_3__.Middle:
                        {
                            y.X = y.X + y.Width / 2 - this.WrappingWidth / 2 - 2 / width;
                            y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                            goControl.Bounds = y;
                            return goControl;
                        }
                    case _Spot__WEBPACK_IMPORTED_MODULE_3__.TopLeft:
                        {
                            break;
                        }
                    case _Spot__WEBPACK_IMPORTED_MODULE_3__.TopRight:
                        {
                            if (!this.isRightToLeft(view)) {
                                y.X = y.X + y.Width - this.WrappingWidth - 2 / width;
                            }
                            y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                            goControl.Bounds = y;
                            return goControl;
                        }
                    default:
                        {
                            if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.BottomRight) {
                                if (!this.isRightToLeft(view)) {
                                    y.X = y.X + y.Width - this.WrappingWidth - 2 / width;
                                }
                                y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                                goControl.Bounds = y;
                                return goControl;
                            }
                            if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.BottomLeft) {
                                break;
                            }
                            break;
                        }
                }
            }
            else if (alignment.ID > 64) {
                if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleBottom) {
                    y.X = y.X + y.Width / 2 - this.WrappingWidth / 2 - 2 / width;
                    y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                    goControl.Bounds = y;
                    return goControl;
                }
            }
            else {
                if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleTop) {
                    y.X = y.X + y.Width / 2 - this.WrappingWidth / 2 - 2 / width;
                    y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                    goControl.Bounds = y;
                    return goControl;
                }
                if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleRight) {
                    if (!this.isRightToLeft(view)) {
                        y.X = y.X + y.Width - this.WrappingWidth - 2 / width;
                    }
                    y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                    goControl.Bounds = y;
                    return goControl;
                }
            }
            if (this.isRightToLeft(view)) {
                y.X = y.X + y.Width - this.WrappingWidth - 2 / width;
                y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                goControl.Bounds = y;
                return goControl;
            }
            else {
                y.Width = Math.max(this.WrappingWidth + 4 / width, y.Width);
                goControl.Bounds = y;
                return goControl;
            }
        }
        goControl.Bounds = y;
        return goControl;
    };
    TuText.prototype.DoBeginEdit = function (view) {
        if (view == null) {
            return;
        }
        if (this.Editor != null) {
            return;
        }
        try {
            view.startTransaction();
            this.removeSelectionHandles(view.Selection);
            this.myEditor = this.CreateEditor(view);
            this.Editor.EditedObject = this;
            view.EditControl = this.Editor;
            var control = this.Editor.getControl(view);
            if (control != null) {
                control.focus();
            }
        }
        catch (verificationException) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("TuText DoBeginEdit: ", verificationException.toString()));
            view.EditControl = undefined;
            this.myEditor = undefined;
            view.AbortTransaction();
        }
    };
    TuText.prototype.doEdit = function (view, oldtext, newtext) {
        this.Text = this.computeEdit(oldtext, newtext);
        return true;
    };
    TuText.prototype.DoEndEdit = function (view) {
        if (this.Editor != null) {
            this.Editor.EditedObject = undefined;
            if (view != null) {
                view.EditControl = undefined;
            }
            this.myEditor = undefined;
            if (view != null) {
                view.raiseObjectEdited(this);
                view.finishTransaction("Text Edit");
            }
        }
    };
    TuText.prototype.drawString = function (str, g, view, font, br, rect, fmt) {
        g.drawString(str, font, br, rect, fmt);
    };
    TuText.prototype.ExpandPaintBounds = function (rect, view) {
        if (this.Shadowed) {
            var shadowOffset = this.GetShadowOffset(view);
            if (shadowOffset.Width >= 0) {
                rect.Width = rect.Width + shadowOffset.Width;
            }
            else {
                rect.X = rect.X + shadowOffset.Width;
                rect.Width = rect.Width - shadowOffset.Width;
            }
            if (shadowOffset.Height >= 0) {
                rect.Height = rect.Height + shadowOffset.Height;
            }
            else {
                rect.Y = rect.Y + shadowOffset.Height;
                rect.Height = rect.Height - shadowOffset.Height;
            }
        }
        var outRect = { value: rect };
        _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.InflateRect(outRect, Math.max(rect.Height / 3, 2), 30);
        return outRect.value;
    };
    TuText.prototype.findFirstLineBreak = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 2) {
            var int32 = { value: 0 };
            return this.findFirstLineBreak(args[0], args[1], int32);
        }
        else if (args.length === 3) {
            var str = args[0];
            var int32 = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.IndexOfAny(str, TuText_1.myNewlineArray, args[1]);
            if (int32 >= 0) {
                if (args[0][int32] != '\r' || (int32 + 1) >= args[0].length || args[0][int32 + 1] !== '\n') {
                    args[2].value = int32 + 1;
                }
                else {
                    args[2].value = int32 + 2;
                }
            }
            return int32;
        }
    };
    TuText.prototype.findLargestFont = function (g, rect, minfsize, maxfsize) {
        if (minfsize <= 0) {
            minfsize = 0.01;
        }
        var name = this.Font.Name;
        var style = this.Font.Style;
        var single = 10;
        var font = undefined;
        while (single <= maxfsize) {
            var font1 = this.makeFont(name, single, style);
            font = font1;
            if (!this.fitsInBox(g, font1, rect) || font == null) {
                break;
            }
            font.Dispose();
            single = single + 1;
        }
        if (font != null) {
            font.Dispose();
        }
        single = single - 0.1;
        while (true) {
            var font2 = this.makeFont(name, single, style);
            font = font2;
            if (this.fitsInBox(g, font2, rect) || single <= minfsize + 0.1 || font == null) {
                break;
            }
            font.Dispose();
            single = single - 0.1;
        }
        return font;
    };
    TuText.prototype.fitsInBox = function (g, font, rect) {
        var single = this.computeWidth(g, font);
        if (rect.Width < single) {
            return false;
        }
        var single1 = this.computeHeight(g, font, rect.Width);
        if (rect.Height < single1) {
            return false;
        }
        return true;
    };
    TuText.prototype.getLineHeight = function (font) {
        //return font.getHeight();
        return (0,_SvgMesurements__WEBPACK_IMPORTED_MODULE_15__.GetFontHeight)(font);
    };
    TuText.prototype.getLineLeading = function (font) {
        // TODO: implementasyonu düzelt. Aşağida fontfamily undefined olduğu için
        // height döndürüldü.
        var fontFamily = font.FontFamily;
        var style = font.Style;
        var size = font.Size;
        var lineSpacing = fontFamily ? fontFamily.getLineSpacing(style) : 1;
        var emHeight = fontFamily ? fontFamily.getEmHeight(style) : 1;
        return size * (lineSpacing - emHeight) / emHeight * 2 / 3;
    };
    TuText.prototype.getStringFormat = function (view) {
        var formatFlags;
        var stringFormat;
        var formatFlags1;
        var stringFormat1;
        if (this.myStringFormat == null) {
            this.myStringFormat = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormat(TuText_1.myStandardStringFormat);
        }
        this.myStringFormat.Trimming = this.StringTrimming;
        if (this.StringTrimming !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringTrimming.None) {
            var formatFlags2 = this.myStringFormat;
            formatFlags2.FormatFlags = formatFlags2.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit;
        }
        else {
            var stringFormat2 = this.myStringFormat;
            stringFormat2.FormatFlags = stringFormat2.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
        }
        var alignment = this.Alignment;
        if (alignment.ID <= 16) {
            switch (alignment) {
                case _Spot__WEBPACK_IMPORTED_MODULE_3__.Middle:
                    {
                        this.myStringFormat.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringAlignment.Center;
                        if (!this.isRightToLeft(view)) {
                            formatFlags = this.myStringFormat;
                            formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                        }
                        else {
                            stringFormat1 = this.myStringFormat;
                            stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft;
                        }
                        if (!this.Wrapping) {
                            stringFormat = this.myStringFormat;
                            stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap;
                        }
                        else {
                            formatFlags1 = this.myStringFormat;
                            formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                        }
                        return this.myStringFormat;
                    }
                case _Spot__WEBPACK_IMPORTED_MODULE_3__.TopLeft:
                    {
                        break;
                    }
                case _Spot__WEBPACK_IMPORTED_MODULE_3__.TopRight:
                    {
                        this.myStringFormat.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringAlignment.Far;
                        if (!this.isRightToLeft(view)) {
                            formatFlags = this.myStringFormat;
                            formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                        }
                        else {
                            stringFormat1 = this.myStringFormat;
                            stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft;
                        }
                        if (!this.Wrapping) {
                            stringFormat = this.myStringFormat;
                            stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap;
                        }
                        else {
                            formatFlags1 = this.myStringFormat;
                            formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                        }
                        return this.myStringFormat;
                    }
                default:
                    {
                        if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.BottomRight) {
                            this.myStringFormat.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringAlignment.Far;
                            if (!this.isRightToLeft(view)) {
                                formatFlags = this.myStringFormat;
                                formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                                    _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback |
                                    _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                            }
                            else {
                                stringFormat1 = this.myStringFormat;
                                stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft;
                            }
                            if (!this.Wrapping) {
                                stringFormat = this.myStringFormat;
                                stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap;
                            }
                            else {
                                formatFlags1 = this.myStringFormat;
                                formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical |
                                    _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                                    _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                            }
                            return this.myStringFormat;
                        }
                        if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.BottomLeft) {
                            break;
                        }
                        break;
                    }
            }
        }
        else if (alignment.ID > 64) {
            if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleBottom || alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.BottomCenter) {
                this.myStringFormat.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringAlignment.Center;
                if (!this.isRightToLeft(view)) {
                    formatFlags = this.myStringFormat;
                    formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                }
                else {
                    stringFormat1 = this.myStringFormat;
                    stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft;
                }
                if (!this.Wrapping) {
                    stringFormat = this.myStringFormat;
                    stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap;
                }
                else {
                    formatFlags1 = this.myStringFormat;
                    formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                }
                return this.myStringFormat;
            }
        }
        else {
            if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleTop || alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.TopCenter) {
                this.myStringFormat.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringAlignment.Center;
                if (!this.isRightToLeft(view)) {
                    formatFlags = this.myStringFormat;
                    formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                }
                else {
                    stringFormat1 = this.myStringFormat;
                    stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft;
                }
                if (!this.Wrapping) {
                    stringFormat = this.myStringFormat;
                    stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap;
                }
                else {
                    formatFlags1 = this.myStringFormat;
                    formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                }
                return this.myStringFormat;
            }
            if (alignment === _Spot__WEBPACK_IMPORTED_MODULE_3__.MiddleRight) {
                this.myStringFormat.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringAlignment.Far;
                if (!this.isRightToLeft(view)) {
                    formatFlags = this.myStringFormat;
                    formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                }
                else {
                    stringFormat1 = this.myStringFormat;
                    stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft;
                }
                if (!this.Wrapping) {
                    stringFormat = this.myStringFormat;
                    stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap;
                }
                else {
                    formatFlags1 = this.myStringFormat;
                    formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                        _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
                }
                return this.myStringFormat;
            }
        }
        this.myStringFormat.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringAlignment.Near;
        if (!this.isRightToLeft(view)) {
            formatFlags = this.myStringFormat;
            formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox |
                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
        }
        else {
            stringFormat1 = this.myStringFormat;
            stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft;
        }
        if (!this.Wrapping) {
            stringFormat = this.myStringFormat;
            stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap;
        }
        else {
            formatFlags1 = this.myStringFormat;
            formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical |
                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces |
                _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
        }
        return this.myStringFormat;
    };
    TuText.prototype.getStringWidth = function (str, g, font, fmt) {
        var _CGPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint();
        // return g.MeasureString(str, font, _CGPoint, fmt).Width;
        return (0,_SvgMesurements__WEBPACK_IMPORTED_MODULE_15__.GetTextWidth)(str, font);
    };
    TuText.prototype.isRightToLeft = function (view) {
        if (!this.RightToLeftFromView || view == null) {
            return this.RightToLeft;
        }
        return view.RightToLeft === 0; //RightToLeft.Yes;
    };
    TuText.prototype.makeFont = function (name, size, style) {
        var gdiCharSet = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Convert.ToByte(this.GdiCharSet);
        var font = undefined;
        try {
            font = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Font(name, size /* , style, GraphicsUnit.Point, gdiCharSet */);
        }
        catch (exception) {
            console.error(exception);
        }
        return font;
    };
    TuText.MakeStandardStringFormat = function () {
        var stringFormat = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormat(_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormat.GenericTypographic);
        stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces;
        stringFormat.FormatFlags = stringFormat.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DirectionVertical |
            _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.StringFormatFlags.NoClip);
        return stringFormat;
    };
    TuText.prototype.measureString = function (str, g, font, fmt, area, lines) {
        var int32 = { value: 0 };
        //return g.MeasureString(str, font, area, fmt, int32, lines);
        return (0,_SvgMesurements__WEBPACK_IMPORTED_MODULE_15__.MeasureString)(str, font, fmt, area);
    };
    TuText.prototype.OnBoundsChanged = function (old) {
        _super.prototype.OnBoundsChanged.call(this, old);
        var size = this.Size;
        if (old.Width !== size.Width || old.Height !== size.Height) {
            this.updateScale();
        }
    };
    TuText.prototype.OnLayerChanged = function (oldlayer, newlayer, mainObj) {
        _super.prototype.OnLayerChanged.call(this, oldlayer, newlayer, mainObj);
        if (this.Editor != null) {
            var view = this.Editor.View;
            if (view != null) {
                this.DoEndEdit(view);
            }
        }
    };
    TuText.prototype.OnSingleClick = function (evt, view) {
        if (!this.CanEdit()) {
            return false;
        }
        if (!view.CanEditObjects()) {
            return false;
        }
        if (evt.Shift || evt.Control) {
            return false;
        }
        if (!this.EditableWhenSelected) {
            this.DoBeginEdit(view);
        }
        else {
            var tool = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(view.Tool, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuTool);
            if (tool != null && tool.CurrentObjectWasSelected) {
                this.DoBeginEdit(view);
            }
        }
        return true;
    };
    TuText.prototype.Paint = function (g, view) {
        var brushesBlack;
        var brushesWhite;
        if (this.paintGreek(g, view)) {
            return;
        }
        var bounds = this.Bounds.clone();
        if (!this.TransparentBackground) {
            if (this.Shadowed) {
                var shadowOffset = this.GetShadowOffset(view);
                var shadowBrush = this.GetShadowBrush(view);
                _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__.TuShape.DrawRectangle(g, view, undefined, shadowBrush, bounds.X + shadowOffset.Width, bounds.Y + shadowOffset.Height, bounds.Width, bounds.Height);
            }
            var backgroundColor = this.BackgroundColor;
            if (backgroundColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.White)) {
                brushesWhite = _Globals__WEBPACK_IMPORTED_MODULE_7__.Brushes_White;
            }
            else {
                brushesWhite = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.SolidBrush(this.BackgroundColor);
            }
            var brush = brushesWhite;
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__.TuShape.DrawRectangle(g, view, undefined, brush, bounds.X, bounds.Y, bounds.Width, bounds.Height);
            if (!backgroundColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.White)) {
                brush.Dispose();
            }
        }
        var text = this.Text;
        var width = 1;
        if (view != null) {
            width = width / view.WorldScale.Width;
        }
        if (this.Shadowed && this.TransparentBackground) {
            var x = bounds;
            var sizeF = this.GetShadowOffset(view);
            x.X = x.X + sizeF.Width;
            x.Y = x.Y + sizeF.Height;
            if (this.Bordered) {
                var shadowPen = this.GetShadowPen(view, width);
                _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__.TuShape.DrawRectangle(g, view, shadowPen, undefined, x.X - width / 2, x.Y, x.Width + width, x.Height);
            }
            if (text.length > 0) {
                var shadowBrush1 = this.GetShadowBrush(view);
                this.paintText(text, g, view, x, shadowBrush1);
            }
        }
        var textColor = this.TextColor;
        if (this.Bordered) {
            var pen = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__.TuShape.NewPen(textColor, width);
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__.TuShape.DrawRectangle(g, view, pen, undefined, bounds.X - width / 2, bounds.Y, bounds.Width + width, bounds.Height);
            pen.Dispose();
        }
        if (text.length > 0) {
            if (textColor === _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Black) {
                brushesBlack = _Globals__WEBPACK_IMPORTED_MODULE_7__.Brushes_Black;
            }
            else {
                brushesBlack = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.SolidBrush(this.TextColor);
            }
            var brush1 = brushesBlack;
            this.paintText(text, g, view, bounds, brush1);
            if (!textColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Black)) {
                brush1.Dispose();
            }
        }
    };
    TuText.prototype.paintGreek = function (g, view) {
        var docScale = view.DocScale;
        var paintNothingScale = view.PaintNothingScale;
        var paintGreekScale = view.PaintGreekScale;
        if (view.IsPrinting) {
            paintNothingScale = paintNothingScale / 4;
            paintGreekScale = paintGreekScale / 4;
        }
        var fontSize = this.FontSize;
        fontSize = fontSize / 10;
        var worldScale = view.WorldScale;
        fontSize = fontSize * worldScale.Height;
        paintNothingScale = paintNothingScale / fontSize;
        paintGreekScale = paintGreekScale / fontSize;
        if (docScale <= paintNothingScale) {
            return true;
        }
        if (docScale > paintGreekScale) {
            return false;
        }
        var bounds = this.Bounds.clone();
        var textColor = this.TextColor;
        worldScale = view.WorldScale;
        var pen = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__.TuShape.NewPen(textColor, 1 / worldScale.Height);
        var lineCount = this.LineCount;
        var y = bounds.Y;
        var height = bounds.Height / (lineCount + 1);
        for (var i = 0; i < lineCount; i++) {
            y = y + height;
            _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_10__.TuShape.DrawLine(g, view, pen, bounds.X, y, bounds.X + bounds.Width, y);
        }
        pen.Dispose();
        return true;
    };
    TuText.prototype.paintText = function (str, g, view, rect, textbrush) {
        if (str.length === 0) {
            return;
        }
        var font = this.Font;
        if (font == null) {
            return;
        }
        var font1 = undefined;
        var lineHeight = this.getLineHeight(font);
        var clipping = this.Clipping;
        var clip = undefined;
        var region = undefined;
        if (clipping) {
            var CGRectangle_1 = _GeomUtilities__WEBPACK_IMPORTED_MODULE_9__.GeomUtilities.IntersectionRect(rect, g.ClipBounds);
            clip = g.Clip;
            region = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Region(CGRectangle_1);
            g.Clip = region;
        }
        if (!this.Multiline) {
            var int32 = this.findFirstLineBreak(str, 0);
            if (int32 >= 0) {
                str = str.substr(0, int32);
            }
        }
        var stringFormat = this.getStringFormat(view);
        if (view.IsPrinting && this.AutoResizes) {
            font1 = this.findLargestFont(g, this.Bounds, font.Size - 1, font.Size);
            font = font1;
        }
        var lineLeading = -this.getLineLeading(font);
        var int321 = 0;
        var length = -1;
        var int322 = { value: -1 };
        var flag = false;
        while (!flag) {
            length = this.findFirstLineBreak(str, int321, int322);
            if (length == -1) {
                length = str.length;
                flag = true;
            }
            if (int321 <= length) {
                var str1 = str.substr(int321, length - int321);
                if (str1.length <= 0) {
                    lineLeading = lineLeading + lineHeight;
                }
                else {
                    var CGRectangle1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle(rect.X, rect.Y + lineLeading, rect.Width, rect.Height - lineLeading + 0.01);
                    this.drawString(str1, g, view, font, textbrush, CGRectangle1, stringFormat);
                    if (!this.Wrapping) {
                        lineLeading = lineLeading + lineHeight;
                    }
                    else {
                        var int323 = { value: 0 };
                        var sizeF = this.measureString(str1, g, font, stringFormat, new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(CGRectangle1.Width, CGRectangle1.Height), int323);
                        lineLeading = lineLeading + sizeF.Height;
                    }
                }
            }
            int321 = int322.value;
        }
        if (font1 != null) {
            font1.Dispose();
        }
        if (clipping && clip != null) {
            g.Clip = clip;
        }
        if (region != null) {
            region.dispose();
        }
    };
    // TODO: Fix Below
    TuText.prototype.recalcBoundingRect = function () {
        _graphic.PageUnit = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicsUnit.Pixel;
        _graphic.TextRenderingHint = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.TextRenderingHint.ClearTypeGridFit;
        var single = this.computeWidth(_graphic, this.Font);
        var width = 10;
        var document = this.Document;
        if (document != null) {
            width = width / document.WorldScale.Width;
        }
        if (single < width) {
            single = width;
        }
        var single1 = this.computeHeight(_graphic, this.Font, single);
        if (single !== this.Width || single1 !== this.Height) {
            this.setSizeKeepingLocation(new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize(single, single1));
        }
        //graphic.dispose();
    };
    TuText.prototype.removeSelectionHandles = function (sel) {
        if (this.BackgroundOpaqueWhenSelected) {
            var skipsUndoManager = this.SkipsUndoManager;
            this.SkipsUndoManager = true;
            this.TransparentBackground = true;
            this.SkipsUndoManager = skipsUndoManager;
        }
        _super.prototype.RemoveSelectionHandles.call(this, sel);
    };
    TuText.prototype.rescaleFont = function () {
        //const graphic: Graphics = Graphics.FromImage(TuText.myEmptyBitmap);
        _graphic.PageUnit = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicsUnit.Pixel;
        // graphic.TextRenderingHint = TextRenderingHint.ClearTypeGridFit;
        var font = this.findLargestFont(_graphic, this.Bounds, 0, 999);
        if (font != null) {
            this.FontSize = font.Size;
            font.Dispose();
        }
        //graphic.dispose();
    };
    TuText.prototype.resetFont = function () {
        if (this.myFont != null) {
            this.myFont = undefined;
        }
    };
    TuText.prototype.setSizeKeepingLocation = function (s) {
        var bounds = this.Bounds;
        bounds.Width = s.Width;
        bounds.Height = s.Height;
        var location = this.Location;
        var CGRectangle = this.setRectangleSpotLocation(bounds, this.Alignment, location);
        this.Bounds = CGRectangle;
    };
    TuText.prototype.shareFont = function (name, size, style) {
        var font;
        if (TuText_1.myLastFont == null || !(TuText_1.myLastFont.Name === name) || TuText_1.myLastFont.Size !== size || TuText_1.myLastFont.Style !== style) {
            var font1 = this.makeFont(name, size, style);
            if (font1 != null) {
                TuText_1.myLastFont = font1;
            }
            font = TuText_1.myLastFont;
        }
        else {
            font = TuText_1.myLastFont;
        }
        return font;
    };
    // TODO: Fix below
    TuText.prototype.updateScale = function () {
        if (this.Initializing) {
            return;
        }
        if ((this.InternalTextFlags & 1073741824) == 0 && this.AutoRescales) {
            this.InternalTextFlags = this.InternalTextFlags | 1073741824;
            this.rescaleFont();
            this.InternalTextFlags = this.InternalTextFlags & -1073741825;
        }
    };
    TuText.prototype.updateSize = function () {
        if (this.Initializing) {
            return;
        }
        if ((this.InternalTextFlags & flagUpdating) === 0 && this.AutoResizes) {
            this.InternalTextFlags = this.InternalTextFlags | flagUpdating;
            this.recalcBoundingRect();
            this.InternalTextFlags = this.InternalTextFlags & ~flagUpdating;
        }
    };
    TuText.prototype.updateSizeOrScale = function () {
        if (this.AutoResizes) {
            this.updateSize();
            return;
        }
        this.updateScale();
    };
    var TuText_1;
    TuText.myDefaultFontSize = 0;
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myString", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myFamilyName", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myFontSize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myAlignment", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myTextColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myBackgroundColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myInternalTextFlags", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myWrappingWidth", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myNumLines", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myMinimum", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myMaximum", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myChoices", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myStringFormat", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myFont", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_12__.State)()
    ], TuText.prototype, "myEditor", void 0);
    TuText = TuText_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuText,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuText
            ]
        })
    ], TuText);
    return TuText;
}(_TuObject_TuObject__WEBPACK_IMPORTED_MODULE_11__.TuObject));

(function staticConstructor() {
    TuText.myNewlineArray = ['\r', '\n'];
    TuText.myDefaultFontName = 'Arial'; //FontFamily.GenericSansSerif.Name;
    TuText.myStandardStringFormat = TuText.MakeStandardStringFormat();
    TuText.myDefaultFontSize = 10;
    TuText.myEmptyChoices = [];
    var myEmptyBitmap = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Bitmap(10, 10);
    _graphic = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Graphics.FromImage(myEmptyBitmap);
})();


/***/ }),

/***/ "./src/TuText/TuTextEditorStyle.ts":
/*!*****************************************!*\
  !*** ./src/TuText/TuTextEditorStyle.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuTextEditorStyle": () => (/* binding */ TuTextEditorStyle)
/* harmony export */ });
var TuTextEditorStyle;
(function (TuTextEditorStyle) {
    TuTextEditorStyle[TuTextEditorStyle["TextBox"] = 0] = "TextBox";
    TuTextEditorStyle[TuTextEditorStyle["NumericUpDown"] = 1] = "NumericUpDown";
    TuTextEditorStyle[TuTextEditorStyle["ComboBox"] = 2] = "ComboBox";
})(TuTextEditorStyle || (TuTextEditorStyle = {}));


/***/ }),

/***/ "./src/TuText/TuTextEvents.ts":
/*!************************************!*\
  !*** ./src/TuText/TuTextEvents.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuTextEvents": () => (/* binding */ TuTextEvents)
/* harmony export */ });
/* harmony import */ var _TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../TuObjectEvents */ "./src/TuObjectEvents.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var TuTextEvents = /** @class */ (function (_super) {
    __extends(TuTextEvents, _super);
    function TuTextEvents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuTextEvents.ChangedText = 1501;
    TuTextEvents.ChangedFamilyName = 1502;
    TuTextEvents.ChangedFontSize = 1503;
    TuTextEvents.ChangedAlignment = 1504;
    TuTextEvents.ChangedTextColor = 1505;
    TuTextEvents.ChangedBackgroundColor = 1506;
    TuTextEvents.ChangedTransparentBackground = 1507;
    TuTextEvents.ChangedBold = 1508;
    TuTextEvents.ChangedItalic = 1509;
    TuTextEvents.ChangedUnderline = 1510;
    TuTextEvents.ChangedStrikeThrough = 1511;
    TuTextEvents.ChangedMultiline = 1512;
    TuTextEvents.ChangedBackgroundOpaqueWhenSelected = 1515;
    TuTextEvents.ChangedClipping = 1516;
    TuTextEvents.ChangedAutoResizes = 1518;
    TuTextEvents.ChangedWrapping = 1520;
    TuTextEvents.ChangedWrappingWidth = 1521;
    TuTextEvents.ChangedGdiCharSet = 1522;
    TuTextEvents.ChangedEditorStyle = 1523;
    TuTextEvents.ChangedMinimum = 1524;
    TuTextEvents.ChangedMaximum = 1525;
    TuTextEvents.ChangedDropDownList = 1526;
    TuTextEvents.ChangedChoices = 1527;
    TuTextEvents.ChangedRightToLeft = 1528;
    TuTextEvents.ChangedRightToLeftFromView = 1529;
    TuTextEvents.ChangedBordered = 1530;
    TuTextEvents.ChangedStringTrimming = 1531;
    TuTextEvents.ChangedEditableWhenSelected = 1532;
    TuTextEvents[1501] = 'ChangedText';
    TuTextEvents[1502] = 'ChangedFamilyName';
    TuTextEvents[1503] = 'ChangedFontSize';
    TuTextEvents[1504] = 'ChangedAlignment';
    TuTextEvents[1505] = 'ChangedTextColor';
    TuTextEvents[1506] = 'ChangedBackgroundColor';
    TuTextEvents[1507] = 'ChangedTransparentBackground';
    TuTextEvents[1508] = 'ChangedBold';
    TuTextEvents[1509] = 'ChangedItalic';
    TuTextEvents[1510] = 'ChangedUnderline';
    TuTextEvents[1511] = 'ChangedStrikeThrough';
    TuTextEvents[1512] = 'ChangedMultiline';
    TuTextEvents[1515] = 'ChangedBackgroundOpaqueWhenSelected';
    TuTextEvents[1516] = 'ChangedClipping';
    TuTextEvents[1518] = 'ChangedAutoResizes';
    TuTextEvents[1520] = 'ChangedWrapping';
    TuTextEvents[1521] = 'ChangedWrappingWidth';
    TuTextEvents[1522] = 'ChangedGdiCharSet';
    TuTextEvents[1523] = 'ChangedEditorStyle';
    TuTextEvents[1524] = 'ChangedMinimum';
    TuTextEvents[1525] = 'ChangedMaximum';
    TuTextEvents[1526] = 'ChangedDropDownList';
    TuTextEvents[1527] = 'ChangedChoices';
    TuTextEvents[1528] = 'ChangedRightToLeft';
    TuTextEvents[1529] = 'ChangedRightToLeftFromView';
    TuTextEvents[1530] = 'ChangedBordered';
    TuTextEvents[1531] = 'ChangedStringTrimming';
    TuTextEvents[1532] = 'ChangedEditableWhenSelected';
    return TuTextEvents;
}(_TuObjectEvents__WEBPACK_IMPORTED_MODULE_0__.TuObjectEvents));



/***/ }),

/***/ "./src/TuText/TuTextSvgRenderer.ts":
/*!*****************************************!*\
  !*** ./src/TuText/TuTextSvgRenderer.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuTextSvgRenderer": () => (/* binding */ TuTextSvgRenderer)
/* harmony export */ });
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Xml_TuSvgRenderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Xml/TuSvgRenderer */ "./src/Xml/TuSvgRenderer.ts");
/* harmony import */ var _TuText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuText */ "./src/TuText/TuText.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _SvgMesurements__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../SvgMesurements */ "./src/SvgMesurements.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var myDummyBitmap = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Bitmap(10, 10);
var graphic = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Graphics.FromImage(myDummyBitmap);
var myNewlineArray = ['\r', '\n'];
var TuTextSvgRenderer = /** @class */ (function (_super) {
    __extends(TuTextSvgRenderer, _super);
    function TuTextSvgRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuTextSvgRenderer.prototype.DecideCache = function (view, obj) {
    };
    TuTextSvgRenderer.prototype.GenerateElement = function (view, obj) {
        this.WriteStartElement('g');
        this.WriteAttrVal('class', 'TuText');
        return true;
    };
    TuTextSvgRenderer.prototype.GenerateAttributes = function (view, obj) {
    };
    TuTextSvgRenderer.prototype.GenerateElementFinish = function (view, obj) {
        this.WriteEndElement();
    };
    TuTextSvgRenderer.prototype.drawString = function (t, str, rect, g, font, fmt) {
        var lineHeight = this.getLineHeight(font);
        var rectangleF = rect.clone();
        if (!t.Wrapping) {
            var xPos = rectangleF.clone();
            xPos.Height = Math.min(xPos.Height, lineHeight + 1);
            var stringWidth = this.getStringWidth(str, g, font, fmt);
            xPos = this.GetXPos(t, stringWidth, xPos);
            this.drawString2(str, xPos, fmt);
            return;
        }
        var single = Math.min(t.WrappingWidth, rect.Width);
        var str1 = str;
        var y = rectangleF.clone();
        var xPos1 = rectangleF.clone();
        while (str1.length > 0) {
            var firstWord = this.getFirstWord(str1);
            str1 = str1.substring(firstWord.length);
            do {
                if (this.getStringWidth(firstWord, g, font, fmt) * 0.9 <= single) {
                    break;
                }
                var int32 = 1;
                while (this.getStringWidth(firstWord.substr(0, int32), g, font, fmt) * 0.9 <= single) {
                    int32++;
                }
                int32--;
                if (int32 < 1) {
                    int32 = 1;
                }
                var str2 = firstWord.substr(0, int32);
                xPos1 = this.GetXPos(t, this.getStringWidth(str2, g, font, fmt), y);
                this.drawString2(str2, xPos1, fmt);
                y.Y = y.Y + lineHeight;
                y.Height = y.Height - lineHeight;
                firstWord = firstWord.substring(int32);
            } while (y.Height >= lineHeight);
            if (y.Height < lineHeight) {
                return;
            }
            for (var i = this.getFirstWord(str1); i.length > 0 &&
                this.getStringWidth(_tuval_core__WEBPACK_IMPORTED_MODULE_4__.TString.Concat(firstWord, i), g, font, fmt) * 0.9 <= single; i = this.getFirstWord(str1)) {
                firstWord = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.TString.Concat(firstWord, i);
                str1 = str1.substring(i.length);
            }
            xPos1 = this.GetXPos(t, this.getStringWidth(firstWord, g, font, fmt), y);
            this.drawString2(firstWord, xPos1, fmt);
            y.Y = y.Y + lineHeight;
            y.Height = y.Height - lineHeight;
            if (y.Height >= lineHeight) {
                continue;
            }
            return;
        }
    };
    TuTextSvgRenderer.prototype.drawString2 = function (line, r, fmt) {
        this.WriteStartElement("tspan");
        this.WriteAttrVal("x", r.X);
        this.WriteAttrVal("y", r.Y);
        this.WriteAttrVal('alignment-baseline', 'before-edge');
        //this.WriteAttrVal("textLength", r.Width);
        this.WriteTextBody(line);
        this.WriteEndElement();
    };
    TuTextSvgRenderer.prototype.FindFirstLineBreak1 = function (str, start) {
        var int32 = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.New.Out(0);
        return this.FindFirstLineBreak(str, start, int32);
    };
    TuTextSvgRenderer.prototype.FindFirstLineBreak = function (str, start, nextline) {
        var int32 = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.TString.IndexOfAny(str, myNewlineArray, start);
        if (int32 >= 0) {
            if (str[int32] != '\r' || int32 + 1 >= str.length || str[int32 + 1] != '\n') {
                nextline.value = int32 + 1;
            }
            else {
                nextline.value = int32 + 2;
            }
        }
        return int32;
    };
    TuTextSvgRenderer.prototype.GenerateBody = function (view, goText) {
        if (!goText.TransparentBackground && !goText.BackgroundColor.IsEmpty) {
            var solidBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.SolidBrush(goText.BackgroundColor);
            _super.prototype.WriteRectangle.call(this, null, solidBrush, goText.Bounds, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(0, 0));
            solidBrush.Dispose();
        }
        if (goText.Bordered) {
            var pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.Pen(goText.TextColor);
            var bounds = goText.Bounds.clone();
            bounds.X = bounds.X - 1;
            bounds.Width = bounds.Width + 2;
            _super.prototype.WriteRectangle.call(this, pen, null, bounds, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(0, 0));
            pen.Dispose();
        }
        var fontFamily = goText.Font.FontFamily;
        var cellAscent = goText.Font.GetCellAscent(); //fontFamily.GetCellAscent(goText.Font.Style);
        var emHeight = goText.Font.GetHeight(); //fontFamily.GetEmHeight(goText.Font.Style);
        var height = goText.Font.GetHeight() * cellAscent / emHeight;
        this.WriteStartElement("text");
        if (goText.FamilyName != _TuText__WEBPACK_IMPORTED_MODULE_3__.TuText.DefaultFontFamilyName) {
            this.WriteAttrVal("font-family", goText.FamilyName);
        }
        if (goText.FontSize != _TuText__WEBPACK_IMPORTED_MODULE_3__.TuText.DefaultFontSize) {
            this.WriteAttrVal("font-size", _tuval_core__WEBPACK_IMPORTED_MODULE_4__.TString.Concat(goText.FontSize, "px"));
        }
        if (goText.Bold) {
            this.WriteAttrVal("font-weight", "bold");
        }
        if (goText.Italic) {
            this.WriteAttrVal("font-style", "italic");
        }
        if (goText.Underline) {
            this.WriteAttrVal("text-decoration", "underline");
        }
        if (goText.TextColor != _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGColor.Black) {
            this.WriteAttrVal("fill", this.TranslateColor(goText.TextColor));
        }
        if (goText.TextColor.A != 255) {
            this.WriteAttrVal("fill-opacity", this.TranslateAlpha(goText.TextColor));
        }
        var y = goText.Bounds.clone();
        y.Y = y.Y + _tuval_core__WEBPACK_IMPORTED_MODULE_4__.Convert.ToInt32(height) - 1;
        this.GenerateText1(goText, y);
        this.WriteEndElement();
    };
    TuTextSvgRenderer.prototype.GenerateText1 = function (t, rect) {
        var text = t.Text;
        if (text.length === 0) {
            return;
        }
        var font = t.Font;
        if (font == null) {
            return;
        }
        var lineHeight = this.getLineHeight(font);
        if (!t.Multiline) {
            var int32 = this.FindFirstLineBreak1(text, 0);
            if (int32 >= 0) {
                text = text.substr(0, int32);
            }
        }
        var stringFormat = this.getStringFormat(t, this.View);
        var lineLeading = -this.getLineLeading(font);
        var int321 = 0;
        var length = -1;
        var int322 = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.New.Out(-1);
        var flag = false;
        while (!flag) {
            length = this.FindFirstLineBreak(text, int321, int322);
            if (length == -1) {
                length = text.length;
                flag = true;
            }
            if (int321 <= length) {
                var str = text.substr(int321, length - int321);
                if (str.length <= 0) {
                    lineLeading += lineHeight;
                }
                else {
                    var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGRectangle(rect.X, rect.Y + lineLeading, rect.Width, rect.Height - lineLeading);
                    this.drawString(t, str, rectangleF, graphic, font, stringFormat);
                    if (!t.Wrapping) {
                        lineLeading += lineHeight;
                    }
                    else {
                        var ınt323 = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.New.Out(0);
                        var ınt324 = _tuval_core__WEBPACK_IMPORTED_MODULE_4__.New.Out(0);
                        var sizeF = graphic.MeasureString(str, font, new _tuval_cg__WEBPACK_IMPORTED_MODULE_0__.CGSize(rectangleF.Width, rectangleF.Height), stringFormat, ınt324, ınt323);
                        lineLeading += sizeF.Height;
                    }
                }
            }
            int321 = int322.value;
        }
    };
    TuTextSvgRenderer.prototype.getFirstWord = function (str) {
        var length = str.length;
        var int32 = 0;
        while (int32 < length) {
            if (!_tuval_core__WEBPACK_IMPORTED_MODULE_4__.TChar.IsWhiteSpace(str[int32].charCodeAt(0))) {
                int32++;
            }
            else {
                break;
            }
        }
        while (int32 < length && _tuval_core__WEBPACK_IMPORTED_MODULE_4__.TChar.IsWhiteSpace(str[int32].charCodeAt(0))) {
            int32++;
        }
        if (int32 >= length) {
            return str;
        }
        return str.substr(0, int32);
    };
    TuTextSvgRenderer.prototype.getLineHeight = function (font) {
        return font.GetHeight();
    };
    TuTextSvgRenderer.prototype.getLineLeading = function (font) {
        return 0;
    };
    TuTextSvgRenderer.prototype.getStringFormat = function (t, view) {
        var formatFlags;
        var stringFormat;
        var formatFlags1;
        var stringFormat1;
        var stringTrimming = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormat(_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormat.GenericTypographic);
        var formatFlags2 = stringTrimming;
        formatFlags2.FormatFlags = formatFlags2.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces;
        stringTrimming.Trimming = t.StringTrimming;
        if (t.StringTrimming != _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringTrimming.None) {
            var stringFormat2 = stringTrimming;
            stringFormat2.FormatFlags = stringFormat2.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit;
        }
        else {
            var formatFlags3 = stringTrimming;
            formatFlags3.FormatFlags = formatFlags3.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
        }
        var alignment = t.Alignment.ID;
        if (alignment <= 16) {
            switch (alignment) {
                case 1:
                    {
                        stringTrimming.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Center;
                        if (!this.isRightToLeft(t, view)) {
                            formatFlags = stringTrimming;
                            formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                        }
                        else {
                            stringFormat1 = stringTrimming;
                            stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft;
                        }
                        if (!t.Wrapping) {
                            stringFormat = stringTrimming;
                            stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap;
                        }
                        else {
                            formatFlags1 = stringTrimming;
                            formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                        }
                        return stringTrimming;
                    }
                case 2:
                case 3:
                    {
                        break;
                    }
                case 4:
                    {
                        stringTrimming.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Far;
                        if (!this.isRightToLeft(t, view)) {
                            formatFlags = stringTrimming;
                            formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                        }
                        else {
                            stringFormat1 = stringTrimming;
                            stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft;
                        }
                        if (!t.Wrapping) {
                            stringFormat = stringTrimming;
                            stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap;
                        }
                        else {
                            formatFlags1 = stringTrimming;
                            formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                        }
                        return stringTrimming;
                    }
                default:
                    {
                        if (alignment == 8) {
                            stringTrimming.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Far;
                            if (!this.isRightToLeft(t, view)) {
                                formatFlags = stringTrimming;
                                formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                            }
                            else {
                                stringFormat1 = stringTrimming;
                                stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft;
                            }
                            if (!t.Wrapping) {
                                stringFormat = stringTrimming;
                                stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap;
                            }
                            else {
                                formatFlags1 = stringTrimming;
                                formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                            }
                            return stringTrimming;
                        }
                        if (alignment == 16) {
                            break;
                        }
                        break;
                    }
            }
        }
        else if (alignment > 64) {
            if (alignment == 128) {
                stringTrimming.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Center;
                if (!this.isRightToLeft(t, view)) {
                    formatFlags = stringTrimming;
                    formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                }
                else {
                    stringFormat1 = stringTrimming;
                    stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft;
                }
                if (!t.Wrapping) {
                    stringFormat = stringTrimming;
                    stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap;
                }
                else {
                    formatFlags1 = stringTrimming;
                    formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                }
                return stringTrimming;
            }
        }
        else {
            if (alignment == 32) {
                stringTrimming.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Center;
                if (!this.isRightToLeft(t, view)) {
                    formatFlags = stringTrimming;
                    formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                }
                else {
                    stringFormat1 = stringTrimming;
                    stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft;
                }
                if (!t.Wrapping) {
                    stringFormat = stringTrimming;
                    stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap;
                }
                else {
                    formatFlags1 = stringTrimming;
                    formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                }
                return stringTrimming;
            }
            if (alignment == 64) {
                stringTrimming.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Far;
                if (!this.isRightToLeft(t, view)) {
                    formatFlags = stringTrimming;
                    formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                }
                else {
                    stringFormat1 = stringTrimming;
                    stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft;
                }
                if (!t.Wrapping) {
                    stringFormat = stringTrimming;
                    stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap;
                }
                else {
                    formatFlags1 = stringTrimming;
                    formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
                }
                return stringTrimming;
            }
        }
        stringTrimming.Alignment = _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringAlignment.Near;
        if (!this.isRightToLeft(t, view)) {
            formatFlags = stringTrimming;
            formatFlags.FormatFlags = formatFlags.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
        }
        else {
            stringFormat1 = stringTrimming;
            stringFormat1.FormatFlags = stringFormat1.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft;
        }
        if (!t.Wrapping) {
            stringFormat = stringTrimming;
            stringFormat.FormatFlags = stringFormat.FormatFlags | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoWrap;
        }
        else {
            formatFlags1 = stringTrimming;
            formatFlags1.FormatFlags = formatFlags1.FormatFlags & (_tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionRightToLeft | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DirectionVertical | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.FitBlackBox | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.DisplayFormatControl | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoFontFallback | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.MeasureTrailingSpaces | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.LineLimit | _tuval_graphics__WEBPACK_IMPORTED_MODULE_1__.StringFormatFlags.NoClip);
        }
        return stringTrimming;
    };
    TuTextSvgRenderer.prototype.getStringWidth = function (str, g, font, fmt) {
        /* const pointF: CGPoint = new CGPoint();
        return g.MeasureString(str, font, pointF, fmt).Width; */
        return (0,_SvgMesurements__WEBPACK_IMPORTED_MODULE_5__.GetTextWidth)(str, font);
    };
    TuTextSvgRenderer.prototype.GetXPos = function (t, swidth, rect) {
        if (swidth > rect.Width) {
            swidth = rect.Width;
        }
        var alignment = t.Alignment.ID;
        if (alignment <= 16) {
            switch (alignment) {
                case 1:
                    {
                        rect.X = rect.X + rect.Width / 2 - swidth / 2;
                        rect.Width = swidth;
                        return rect;
                    }
                case 2:
                case 3:
                    {
                        break;
                    }
                case 4:
                    {
                        rect.X = rect.X + rect.Width - swidth;
                        rect.Width = swidth;
                        return rect;
                    }
                default:
                    {
                        if (alignment == 8) {
                            rect.X = rect.X + rect.Width - swidth;
                            rect.Width = swidth;
                            return rect;
                        }
                        if (alignment == 16) {
                            break;
                        }
                        break;
                    }
            }
        }
        else if (alignment > 64) {
            if (alignment == 128) {
                rect.X = rect.X + rect.Width / 2 - swidth / 2;
                rect.Width = swidth;
                return rect;
            }
        }
        else {
            if (alignment == 32) {
                rect.X = rect.X + rect.Width / 2 - swidth / 2;
                rect.Width = swidth;
                return rect;
            }
            if (alignment == 64) {
                rect.X = rect.X + rect.Width - swidth;
                rect.Width = swidth;
                return rect;
            }
        }
        rect.Width = swidth;
        return rect;
    };
    /* internal */ TuTextSvgRenderer.prototype.isRightToLeft = function (t, view) {
        if (!t.RightToLeftFromView || view == null) {
            return t.RightToLeft;
        }
        return false; /* view.RightToLeft === RightToLeft.Yes */
        ;
    };
    return TuTextSvgRenderer;
}(_Xml_TuSvgRenderer__WEBPACK_IMPORTED_MODULE_2__.TuSvgRenderer));



/***/ }),

/***/ "./src/TuTool/TuTool.ts":
/*!******************************!*\
  !*** ./src/TuTool/TuTool.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuTool": () => (/* binding */ TuTool)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Forms_Keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Forms/Keys */ "./src/Forms/Keys.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TuTool = /** @class */ (function () {
    //#endregion
    function TuTool(view) {
        if (view == null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentNullException("view");
        }
        this.myView = view;
    }
    TuTool_1 = TuTool;
    Object.defineProperty(TuTool.prototype, "CurrentObject", {
        //#region [Property] CurrentObject
        /**
         * Gets or sets this tool's CurrentObject property.
         * <h4>Description</h4>
         * Often different methods of a tool will need to deal with the "current"
         * [[Node]] that the user is working with. This property is provided so each
         * tool doesn't need to define it. Not every tool uses this property.
         */
        get: function () {
            return this.getCurrentObject();
        },
        set: function (value) {
            /*  if (value == null) {
                 console.log('Current object : ' + value);
             } */
            this.setCurrentObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuTool.prototype.getCurrentObject = function () {
        return this.myCurrentObject;
    };
    TuTool.prototype.setCurrentObject = function (value) {
        this.myCurrentObject = value;
    };
    Object.defineProperty(TuTool.prototype, "CurrentObjectWasSelected", {
        //#endregion
        //#region [Property] CurrentObjectWasSelected
        get: function () {
            return this.getCurrentObjectWasSelected();
        },
        set: function (value) {
            this.setCurrentObjectWasSelected(value);
        },
        enumerable: false,
        configurable: true
    });
    TuTool.prototype.getCurrentObjectWasSelected = function () {
        return this.myCurrentObjectWasSelected;
    };
    TuTool.prototype.setCurrentObjectWasSelected = function (value) {
        this.myCurrentObjectWasSelected = value;
    };
    Object.defineProperty(TuTool, "DragSize", {
        //#endregion
        //#region [Property] DragSize
        /**
         *  Gets or sets the dimensions, in pixels, of the rectangle that a drag operation must extend
         * to be considered a drag operation.
         * This <c>Size</c> is in view coordinates, not in document coordinates.
         * The default value is 4x4.
         * The rectangle is centered on the mouse-down point.
         */
        get: function () {
            return TuTool_1.myDragSize;
        },
        set: function (value) {
            TuTool_1.myDragSize = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuTool.prototype, "FirstInput", {
        //#endregion
        //#region [Property] FirstInput
        /**
         * Gets this view's FirstInput property.
         */
        get: function () {
            return this.View.FirstInput;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuTool.prototype, "LastInput", {
        //#endregion
        //#region [Property] LastInput
        get: function () {
            return this.View.LastInput;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuTool.prototype, "Selection", {
        //#endregion
        //#region [Property] Selection
        get: function () {
            return this.View.Selection;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuTool.prototype, "View", {
        //#endregion
        //#region [Property] View
        get: function () {
            return this.getView();
        },
        set: function (value) {
            this.setView(value);
        },
        enumerable: false,
        configurable: true
    });
    TuTool.prototype.getView = function () {
        return this.myView;
    };
    TuTool.prototype.setView = function (value) {
        this.myView = value;
    };
    Object.defineProperty(TuTool.prototype, "TransactionResult", {
        //#endregion
        //#region [Property] TransactionResult
        get: function () {
            return this.getTransactionResult();
        },
        set: function (value) {
            this.setTransactionResult(value);
        },
        enumerable: false,
        configurable: true
    });
    TuTool.prototype.getTransactionResult = function () {
        return this.myTransactionResult;
    };
    TuTool.prototype.setTransactionResult = function (value) {
        this.myTransactionResult = value;
    };
    TuTool.prototype.canStart = function () {
        return true;
    };
    TuTool.prototype.doCancelMouse = function () {
        this.stopTool();
    };
    TuTool.prototype.doClick = function (evt) {
        if (evt.DoubleClick) {
            return this.View.doDoubleClick(evt);
        }
        return this.View.doSingleClick(evt);
    };
    TuTool.prototype.doKeyDown = function () {
        if (this.LastInput.Key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_3__.Keys.Escape) {
            this.doCancelMouse();
        }
    };
    TuTool.prototype.doMouseDown = function () {
    };
    TuTool.prototype.doMouseHover = function () {
    };
    TuTool.prototype.doMouseMove = function () {
    };
    TuTool.prototype.doMouseUp = function () {
        this.stopTool();
    };
    TuTool.prototype.doMouseWheel = function () {
    };
    TuTool.prototype.doSelect = function (evt) {
        this.CurrentObject = this.View.pickObject(true, false, evt.DocPoint, true);
        this.CurrentObjectWasSelected = this.View.Selection.Contains(this.CurrentObject);
        if (this.CurrentObject == null) {
            if (!evt.Control && !evt.Shift) {
                this.Selection.Clear();
            }
            return;
        }
        if (evt.Control) {
            this.Selection.toggle(this.CurrentObject);
            return;
        }
        if (evt.Shift) {
            this.Selection.Add(this.CurrentObject);
            return;
        }
        this.Selection.select(this.CurrentObject);
    };
    TuTool.prototype.isBeyondDragSize = function () {
        var viewPoint = this.View.FirstInput.ViewPoint;
        var point = this.View.LastInput.ViewPoint;
        if (Math.abs(point.X - viewPoint.X) > TuTool_1.DragSize.Width / 2) {
            return true;
        }
        return Math.abs(point.Y - viewPoint.Y) > TuTool_1.DragSize.Height / 2;
    };
    TuTool.prototype.start = function () {
    };
    TuTool.prototype.startTransaction = function () {
        this.TransactionResult = undefined;
        return this.View.startTransaction();
    };
    TuTool.prototype.stop = function () {
    };
    TuTool.prototype.stopTool = function () {
        if (this.View.Tool === this) {
            this.View.Tool = undefined;
        }
    };
    TuTool.prototype.stopTransaction = function () {
        if (this.TransactionResult == null) {
            return this.View.AbortTransaction();
        }
        return this.View.finishTransaction(this.TransactionResult);
    };
    TuTool.SubtractPoints = function (a, b) {
        if (a instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint && b instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(a.X - b.X, a.Y - b.Y);
        }
        if (a instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint && b instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(a.X - b.Width, a.Y - b.Height);
        }
        if (a instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize && b instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGPoint) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(a.Width - b.X, a.Height - b.Y);
        }
    };
    var TuTool_1;
    TuTool = TuTool_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuTool,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool
            ]
        })
    ], TuTool);
    return TuTool;
}());

(function staticConstructorTool() {
    TuTool.DragSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(4, 4);
})();


/***/ }),

/***/ "./src/TuTool/TuToolAction.ts":
/*!************************************!*\
  !*** ./src/TuTool/TuToolAction.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolAction": () => (/* binding */ TuToolAction)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuToolAction = /** @class */ (function (_super) {
    __extends(TuToolAction, _super);
    //#endregion
    function TuToolAction(view) {
        return _super.call(this, view) || this;
    }
    TuToolAction.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolAction);
    };
    Object.defineProperty(TuToolAction.prototype, "ActionObject", {
        //#region [Property] CurrentObjectWasSelected
        get: function () {
            return this.getActionObject();
        },
        set: function (value) {
            this.setActionObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolAction.prototype.getActionObject = function () {
        return this.myActionObject;
    };
    TuToolAction.prototype.setActionObject = function (value) {
        this.myActionObject = value;
    };
    Object.defineProperty(TuToolAction.prototype, "AdjustedAutomatically", {
        //#endregion
        //#region [Property] AdjustedAutomatically
        get: function () {
            return this.getAdjustedAutomatically();
        },
        set: function (value) {
            this.setAdjustedAutomatically(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolAction.prototype.getAdjustedAutomatically = function () {
        return this.myAdjustedAutomatically;
    };
    TuToolAction.prototype.setAdjustedAutomatically = function (value) {
        this.myAdjustedAutomatically = value;
    };
    TuToolAction.prototype.autoAdjust = function () {
        if (this.ActionObject != null) {
            this.AdjustedAutomatically = true;
            this.ActionObject.onActionAdjusted(this.View, this.LastInput);
            this.AdjustedAutomatically = false;
        }
    };
    TuToolAction.prototype.canStart = function () {
        if (this.FirstInput.IsContextButton) {
            return false;
        }
        return this.pickActionObject() != null;
    };
    TuToolAction.prototype.doCancelMouse = function () {
        if (this.ActionObject != null) {
            this.ActionObject.onActionCancelled(this.View);
        }
        _super.prototype.doCancelMouse.call(this);
    };
    TuToolAction.prototype.doMouseMove = function () {
        if (this.ActionObject != null) {
            this.ActionObject.onActionAdjusted(this.View, this.LastInput);
        }
    };
    TuToolAction.prototype.doMouseUp = function () {
        if (this.ActionObject != null) {
            this.ActionObject.onAction(this.View, this.LastInput);
        }
        this.stopTool();
    };
    TuToolAction.prototype.pickActionObject = function () {
        for (var i = this.View.pickObject(true, false, this.LastInput.DocPoint, false); i != null; i = i.Parent) {
            var goActionObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(i, _types__WEBPACK_IMPORTED_MODULE_1__.Types.IActionObject);
            if (goActionObject != null && goActionObject.ActionEnabled) {
                this.CurrentObject = i;
                return goActionObject;
            }
        }
        return undefined;
    };
    TuToolAction.prototype.start = function () {
        this.ActionObject = this.pickActionObject();
        if (this.ActionObject == null) {
            this.stopTool();
            return;
        }
        this.ActionObject.ActionActivated = true;
        this.ActionObject.onActionActivated(this.View, this.LastInput);
    };
    TuToolAction.prototype.startAutoAdjusting = function () {
        this.View.doAutoAction();
    };
    TuToolAction.prototype.stop = function () {
        this.stopAutoAdjusting();
        if (this.ActionObject != null) {
            this.ActionObject.ActionActivated = false;
        }
        this.ActionObject = undefined;
        this.CurrentObject = undefined;
    };
    TuToolAction.prototype.stopAutoAdjusting = function () {
        this.View.stopAutoScroll();
        this.AdjustedAutomatically = false;
    };
    TuToolAction = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolAction,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolAction,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuTool,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool
            ]
        })
    ], TuToolAction);
    return TuToolAction;
}(_TuTool__WEBPACK_IMPORTED_MODULE_2__.TuTool));



/***/ }),

/***/ "./src/TuTool/TuToolContext.ts":
/*!*************************************!*\
  !*** ./src/TuTool/TuToolContext.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolContext": () => (/* binding */ TuToolContext)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuToolContext = /** @class */ (function (_super) {
    __extends(TuToolContext, _super);
    //#endregion
    function TuToolContext(view) {
        var _this = _super.call(this, view) || this;
        _this.mySingleSelection = true;
        return _this;
    }
    TuToolContext.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolContext);
    };
    Object.defineProperty(TuToolContext.prototype, "BackgroundContextMenu", {
        //#region [Property] BackgroundContextMenu
        get: function () {
            return this.myBackgroundContextMenu;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuToolContext.prototype, "BackgroundContextMenuStrip", {
        //#endregion
        //#region [Property] BackgroundContextMenuStrip
        get: function () {
            return this.myBackgroundContextMenuStrip;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuToolContext.prototype, "SingleSelection", {
        //#endregion
        //#region [Property] SingleSelection
        get: function () {
            return this.getSingleSelection();
        },
        set: function (value) {
            this.setSingleSelection(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolContext.prototype.getSingleSelection = function () {
        return this.mySingleSelection;
    };
    TuToolContext.prototype.setSingleSelection = function (value) {
        this.mySingleSelection = value;
    };
    TuToolContext.prototype.canStart = function () {
        return this.LastInput.IsContextButton;
    };
    TuToolContext.prototype.doMouseUp = function () {
        this.doSelect(this.LastInput);
        this.View.doContextClick(this.LastInput);
        this.stopTool();
    };
    TuToolContext.prototype.doSelect = function (evt) {
        if (this.SingleSelection || evt.Control || evt.Shift) {
            _super.prototype.doSelect.call(this, evt);
            return;
        }
        this.CurrentObject = this.View.pickObject(true, false, evt.DocPoint, true);
        if (this.CurrentObject == null) {
            this.Selection.Clear();
            return;
        }
        if (!this.Selection.Contains(this.CurrentObject)) {
            this.Selection.select(this.CurrentObject);
        }
    };
    TuToolContext.prototype.start = function () {
        var contextMenu = this.View.ContextMenu;
        if (contextMenu == null) {
            var contextMenuStrip = this.View.ContextMenuStrip;
            if (contextMenuStrip != null) {
                this.CurrentObject = this.View.pickObject(true, false, this.LastInput.DocPoint, false);
                if (this.CurrentObject != null) {
                    this.myBackgroundContextMenuStrip = contextMenuStrip;
                    this.View.ContextMenuStrip = undefined;
                }
            }
        }
        else {
            this.CurrentObject = this.View.pickObject(true, false, this.LastInput.DocPoint, false);
            if (this.CurrentObject != null) {
                this.myBackgroundContextMenu = contextMenu;
                this.View.ContextMenu = null;
                return;
            }
        }
    };
    TuToolContext.prototype.stop = function () {
        if (this.myBackgroundContextMenu != null) {
            this.View.ContextMenu = this.myBackgroundContextMenu;
            this.myBackgroundContextMenu = undefined;
        }
        else if (this.myBackgroundContextMenuStrip != null) {
            this.View.ContextMenuStrip = this.myBackgroundContextMenuStrip;
            this.myBackgroundContextMenuStrip = undefined;
        }
        this.CurrentObject = null;
    };
    TuToolContext = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolContext,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolContext,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuTool,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool
            ]
        })
    ], TuToolContext);
    return TuToolContext;
}(_TuTool__WEBPACK_IMPORTED_MODULE_2__.TuTool));



/***/ }),

/***/ "./src/TuTool/TuToolDragging.ts":
/*!**************************************!*\
  !*** ./src/TuTool/TuToolDragging.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolDragging": () => (/* binding */ TuToolDragging)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TuSelection_TuSelection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TuSelection/TuSelection */ "./src/TuSelection/TuSelection.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuDragRectangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuDragRectangle */ "./src/TuDragRectangle.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
/* harmony import */ var _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../TuDocument/TuDocument */ "./src/TuDocument/TuDocument.ts");
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Forms/DragDropEffects */ "./src/Forms/DragDropEffects.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










var TuToolDragging = /** @class */ (function (_super) {
    __extends(TuToolDragging, _super);
    //#endregion
    function TuToolDragging(view) {
        var _this = _super.call(this, view) || this;
        _this.myCopiesEffectiveSelection = false;
        _this.myEffectiveSelectionIncludesLinks = true;
        _this.myHidesSelectionHandles = true;
        _this.myMoveOffset = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize();
        _this.mySelectionHidden = false;
        _this.mySelectsWhenStarts = true;
        _this.myModalDropped = false;
        return _this;
    }
    TuToolDragging.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolDragging);
    };
    Object.defineProperty(TuToolDragging.prototype, "CopiesEffectiveSelection", {
        //#region [Property] CopiesEffectiveSelection
        get: function () {
            return this.getCopiesEffectiveSelection();
        },
        set: function (value) {
            this.setCopiesEffectiveSelection(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getCopiesEffectiveSelection = function () {
        return this.myCopiesEffectiveSelection;
    };
    TuToolDragging.prototype.setCopiesEffectiveSelection = function (value) {
        this.myCopiesEffectiveSelection = value;
    };
    Object.defineProperty(TuToolDragging.prototype, "DragSelection", {
        //#endregion
        //#region [Property] DragSelection
        get: function () {
            return this.getDragSelection();
        },
        set: function (value) {
            this.setDragSelection(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getDragSelection = function () {
        return this.myDragSelection;
    };
    TuToolDragging.prototype.setDragSelection = function (value) {
        this.myDragSelection = value;
    };
    Object.defineProperty(TuToolDragging.prototype, "DragSelectionOriginalObject", {
        //#endregion
        //#region [Property] DragSelectionOriginalObject
        get: function () {
            return this.getDragSelectionOriginalObject();
        },
        set: function (value) {
            this.setDragSelectionOriginalObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getDragSelectionOriginalObject = function () {
        return this.myDragSelectionOrigObj;
    };
    TuToolDragging.prototype.setDragSelectionOriginalObject = function (value) {
        this.myDragSelectionOrigObj = value;
    };
    Object.defineProperty(TuToolDragging.prototype, "EffectiveSelection", {
        //#endregion
        //#region [Property] EffectiveSelection
        get: function () {
            return this.getEffectiveSelection();
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getEffectiveSelection = function () {
        return this.myEffectiveSelection;
    };
    Object.defineProperty(TuToolDragging.prototype, "EffectiveSelectionIncludesLinks", {
        //#endregion
        //#region [Property] EffectiveSelectionIncludesLinks
        get: function () {
            return this.getEffectiveSelectionIncludesLinks();
        },
        set: function (value) {
            this.setEffectiveSelectionIncludesLinks(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getEffectiveSelectionIncludesLinks = function () {
        return this.myEffectiveSelectionIncludesLinks;
    };
    TuToolDragging.prototype.setEffectiveSelectionIncludesLinks = function (value) {
        this.myEffectiveSelectionIncludesLinks = value;
    };
    Object.defineProperty(TuToolDragging.prototype, "HidesSelectionHandles", {
        //#endregion
        //#region [Property] HidesSelectionHandles
        get: function () {
            return this.getHidesSelectionHandles();
        },
        set: function (value) {
            this.setHidesSelectionHandles(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getHidesSelectionHandles = function () {
        return this.myHidesSelectionHandles;
    };
    TuToolDragging.prototype.setHidesSelectionHandles = function (value) {
        this.myHidesSelectionHandles = value;
    };
    Object.defineProperty(TuToolDragging.prototype, "MoveOffset", {
        //#endregion
        //#region [Property] MoveOffset
        get: function () {
            return this.getMoveOffset();
        },
        set: function (value) {
            this.setMoveOffset(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getMoveOffset = function () {
        return this.myMoveOffset;
    };
    TuToolDragging.prototype.setMoveOffset = function (value) {
        this.myMoveOffset = value;
    };
    Object.defineProperty(TuToolDragging.prototype, "SelectsWhenStarts", {
        //#endregion
        //#region [Property] SelectsWhenStarts
        get: function () {
            return this.getSelectsWhenStarts();
        },
        set: function (value) {
            this.setSelectsWhenStarts(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolDragging.prototype.getSelectsWhenStarts = function () {
        return this.mySelectsWhenStarts;
    };
    TuToolDragging.prototype.setSelectsWhenStarts = function (value) {
        this.mySelectsWhenStarts = value;
    };
    TuToolDragging.prototype.alreadyDragged = function (draggeds, o) {
        for (var i = o; i != null; i = i.Parent) {
            if (draggeds.ContainsKey(i)) {
                return true;
            }
        }
        return false;
    };
    TuToolDragging.prototype.canStart = function () {
        if (!this.View.CanMoveObjects() && !this.View.CanCopyObjects() && !this.View.AllowDragOut) {
            return false;
        }
        if (this.LastInput.IsContextButton) {
            return false;
        }
        if (!this.isBeyondDragSize()) {
            return false;
        }
        var goObject = this.View.pickObject(true, false, this.FirstInput.DocPoint, true);
        if (goObject == null) {
            return false;
        }
        if (!goObject.canMove() && !goObject.CanCopy()) {
            return false;
        }
        return true;
    };
    TuToolDragging.prototype.clearDragSelection = function () {
        if (this.DragSelection != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.DragSelection, function (dragSelection) {
                dragSelection.Remove();
            });
            this.DragSelection = undefined;
            this.CurrentObject = this.DragSelectionOriginalObject;
            this.DragSelectionOriginalObject = undefined;
        }
    };
    TuToolDragging.prototype.computeEffectiveSelection = function (coll, move) {
        var _this = this;
        var goObjects = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
        var goCollections = undefined;
        var goSelection = new _TuSelection_TuSelection__WEBPACK_IMPORTED_MODULE_1__.TuSelection(undefined);
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(coll, function (goObject) {
            var draggingObject = goObject.DraggingObject;
            if (draggingObject == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            if ((move ? !draggingObject.canMove() : !draggingObject.CanCopy()) || _this.alreadyDragged(goObjects, draggingObject)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            goObjects.Set(draggingObject, true);
            if (!draggingObject.IsTopLevel) {
                if (goCollections == null) {
                    goCollections = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
                }
                goCollections.Add(draggingObject);
            }
            goSelection.Add(draggingObject);
        });
        if (this.EffectiveSelectionIncludesLinks) {
            var goObjectArray = goSelection.CopyArray();
            for (var i = 0; i < goObjectArray.length; i++) {
                var goNode = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObjectArray[i], _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuNode);
                if (goNode != null) {
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goNode.DestinationLinks, function (destinationLink) {
                        if (_this.alreadyDragged(goObjects, destinationLink.TuObject) || destinationLink.ToPort != null
                            && !_this.alreadyDragged(goObjects, destinationLink.ToPort.TuObject)) {
                            return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                        }
                        goObjects.Set(destinationLink.TuObject, true);
                        goSelection.Add(destinationLink.TuObject);
                    });
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goNode.SourceLinks, function (sourceLink) {
                        if (_this.alreadyDragged(goObjects, sourceLink.TuObject) || sourceLink.FromPort != null
                            && !_this.alreadyDragged(goObjects, sourceLink.FromPort.TuObject)) {
                            return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                        }
                        goObjects.Set(sourceLink.TuObject, true);
                        goSelection.Add(sourceLink.TuObject);
                    });
                }
            }
        }
        if (goCollections != null) {
            var goCollections1_1 = undefined;
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goSelection, function (goObject1) {
                var draggingObject1 = goObject1.DraggingObject;
                if (!_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(draggingObject1, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuGroup)) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections, function (goCollection) {
                    if (!goCollection.isChildOf(draggingObject1)) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    if (goCollections1_1 == null) {
                        goCollections1_1 = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
                    }
                    goCollections1_1.Add(goCollection);
                });
            });
            if (goCollections1_1 != null) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections1_1, function (goCollection1) {
                    goSelection.Remove(goCollection1);
                });
            }
        }
        return goSelection;
    };
    TuToolDragging.prototype.createDragSelection = function () {
        var goSelection = new _TuSelection_TuSelection__WEBPACK_IMPORTED_MODULE_1__.TuSelection(undefined);
        var position = this.CurrentObject.Position;
        var sizeF = _TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(this.CurrentObject.Location, position);
        var goDragRectangle = new _TuDragRectangle__WEBPACK_IMPORTED_MODULE_5__.TuDragRectangle();
        goDragRectangle.Bounds = this.CurrentObject.Bounds,
            goDragRectangle.Offset = sizeF,
            goDragRectangle.Visible = false;
        this.View.Layers.Default.Add(goDragRectangle);
        goSelection.Add(goDragRectangle);
        var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_6__.TuCollection({
            internalChecksForDuplicates: false
        });
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)((this.EffectiveSelection != null ? this.EffectiveSelection : this.Selection), function (goObject) {
            goCollections.Add(goObject.DraggingObject);
        });
        this.View.Document.Layers.SortByZOrder(goCollections);
        var rectangleF = _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_7__.TuDocument.ComputeBounds(goCollections, this.View);
        var top = 1E+21;
        var left = 1E+21;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections, function (goCollection) {
            if (goCollection.Top < top) {
                top = goCollection.Top;
            }
            if (goCollection.Left >= left) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            left = goCollection.Left;
        });
        var width = this.View.WorldScale.Width;
        if (rectangleF.Width * width > 2000 || rectangleF.Height * width > 2000) {
            width = width * Math.min(2000 / (rectangleF.Width * width), 2000 / (rectangleF.Height * width));
        }
        // TODO: Süreklemede bitmap hatası olduğu için rectangle a çecrildi
        /*  const bitmapFromCollection: Bitmap = this.View.getBitmapFromCollection(goCollections, rectangleF, width, false);
         const goDragImage: TuDragImage = new TuDragImage();
         goDragImage.Image = CGImage.FromBitmap(bitmapFromCollection);
         goDragImage.Bounds = new RectangleF({ x: rectangleF.X, y: rectangleF.Y, width: bitmapFromCollection.Width / width, height: bitmapFromCollection.Height / width }); */
        var rect = new _TuDragRectangle__WEBPACK_IMPORTED_MODULE_5__.TuDragRectangle();
        rect.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle({ x: rectangleF.X, y: rectangleF.Y, width: rectangleF.Width, height: rectangleF.Height });
        if (top >= 1E+21 || left >= 1E+21) {
            rect.Offset = sizeF;
        }
        else {
            rect.Offset = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize({ width: left - rectangleF.X + sizeF.Width, height: top - rectangleF.Y + sizeF.Height });
        }
        this.View.Layers.Default.Add(rect);
        goSelection.Add(rect);
        return goSelection;
    };
    TuToolDragging.prototype.doCancelMouse = function () {
        if (this.CurrentObject != null && this.DragSelection == null) {
            var sizeF = _TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(_TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(this.FirstInput.DocPoint, this.MoveOffset), this.CurrentObject.Position);
            if (sizeF.Width !== 0 || sizeF.Height !== 0) {
                this.View.moveSelection((this.EffectiveSelection != null ? this.EffectiveSelection : this.Selection), sizeF, false);
            }
        }
        this.TransactionResult = undefined;
        this.stopTool();
    };
    TuToolDragging.prototype.doDragDrop = function (coll, allow) {
        this.View.doDragDrop(coll, allow);
    };
    TuToolDragging.prototype.doDragging = function (evttype) {
        var x;
        var location;
        var pointF;
        if (this.CurrentObject == null) {
            return;
        }
        var sizeF = _TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(this.LastInput.DocPoint, this.CurrentObject.Position);
        var width = sizeF.Width;
        var moveOffset = this.MoveOffset;
        var single = width - moveOffset.Width;
        var height = sizeF.Height;
        moveOffset = this.MoveOffset;
        var sizeF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize({ width: single, height: height - moveOffset.Height });
        var flag = (!this.mayBeCopying() ? false : this.mustBeCopying());
        var flag1 = this.mayBeMoving();
        var dragEventArgs = this.LastInput.DragEventArgs;
        if (dragEventArgs != null && !this.View.isInternalDragDrop(dragEventArgs)) {
            flag = false;
        }
        if (this.EffectiveSelection == null) {
            this.myEffectiveSelection = this.computeEffectiveSelection(this.Selection, !flag);
        }
        if (evttype === _TuInputState__WEBPACK_IMPORTED_MODULE_8__.TuInputState.Finish) {
            console.log('doDragging Finish.');
            var sizeF2 = sizeF1;
            if (this.DragSelection != null) {
                sizeF2 = _TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(this.CurrentObject.Position, this.DragSelectionOriginalObject.Position);
                this.clearDragSelection();
            }
            if (flag) {
                if (!this.CopiesEffectiveSelection) {
                    this.View.copySelection(this.Selection, sizeF2, true);
                    return;
                }
                this.myEffectiveSelection = this.computeEffectiveSelection(this.Selection, false);
                this.View.copySelection(this.EffectiveSelection, sizeF2, true);
                return;
            }
            if (flag1) {
                if (this.EffectiveSelection == null) {
                    this.myEffectiveSelection = this.computeEffectiveSelection(this.Selection, true);
                }
                this.View.moveSelection(this.EffectiveSelection, sizeF2, true);
            }
        }
        else {
            var dragSelection = undefined;
            if (flag || !this.View.DragsRealtime) {
                this.makeDragSelection();
                dragSelection = this.DragSelection;
            }
            else if (flag1) {
                var a = this.mayBeMoving();
                this.clearDragSelection();
                dragSelection = this.EffectiveSelection;
            }
            if (dragSelection != null) {
                var goObject = undefined;
                var enumerator = dragSelection.GetEnumerator();
                if (enumerator) {
                    while (enumerator.MoveNext()) {
                        var goObject1 = enumerator.Current;
                        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject1, _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuLink) || !goObject1.canMove()) {
                            continue;
                        }
                        goObject = goObject1;
                        x = sizeF1;
                        if (goObject != null) {
                            location = goObject.Location;
                            pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint({ x: location.X + sizeF1.Width, y: location.Y + sizeF1.Height });
                            pointF = this.View.snapPoint(pointF, goObject);
                            x.Width = pointF.X - location.X;
                            x.Height = pointF.Y - location.Y;
                        }
                        this.View.moveSelection(dragSelection, x, false);
                        return;
                    }
                }
                x = sizeF1;
                if (goObject != null) {
                    location = goObject.Location;
                    pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGPoint({ x: location.X + sizeF1.Width, y: location.Y + sizeF1.Height });
                    pointF = this.View.snapPoint(pointF, goObject);
                    x.Width = pointF.X - location.X;
                    x.Height = pointF.Y - location.Y;
                }
                this.View.moveSelection(dragSelection, x, false);
                return;
            }
        }
    };
    TuToolDragging.prototype.doMouseMove = function () {
        var dragEventArgs = this.LastInput.DragEventArgs;
        if (dragEventArgs != null) {
            if (this.mustBeCopying() && this.mayBeCopying()) {
                dragEventArgs.Effect = _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Copy;
            }
            else if (!this.mayBeMoving()) {
                dragEventArgs.Effect = _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.None;
            }
            else if (!this.View.PretendsInternalDrag) {
                dragEventArgs.Effect = _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Move;
            }
        }
        this.LastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_8__.TuInputState.Continue;
        if (dragEventArgs != null && this.View.doSelectionDropReject(this.LastInput)) {
            dragEventArgs.Effect = _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.None;
        }
        this.doDragging(_TuInputState__WEBPACK_IMPORTED_MODULE_8__.TuInputState.Continue);
        this.doMouseOver(this.LastInput);
        this.View.doAutoScroll(this.LastInput.ViewPoint);
        this.View.batchDraw();
    };
    TuToolDragging.prototype.doMouseOver = function (evt) {
        var goObject = this.myLastObject;
        var goObject1 = this.View.pickObjectExcluding(true, false, evt.DocPoint, false, this.Selection);
        if (goObject !== goObject1) {
            this.myLastObject = goObject1;
            this.View.doObjectEnterLeave(goObject, goObject1, evt);
        }
    };
    TuToolDragging.prototype.doMouseUp = function () {
        var flag;
        this.myModalDropped = true;
        this.LastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_8__.TuInputState.Finish;
        if (!this.View.doSelectionDropReject(this.LastInput)) {
            flag = (!this.mustBeCopying() ? false : this.mayBeCopying());
            var flag1 = this.mayBeMoving();
            this.doDragging(_TuInputState__WEBPACK_IMPORTED_MODULE_8__.TuInputState.Finish);
            this.View.doSelectionDropped(this.LastInput);
            if (flag) {
                this.TransactionResult = "Copy Selection";
                this.View.raiseSelectionCopied();
                this.stopTool();
            }
            else if (!flag1) {
                this.doCancelMouse();
            }
            else {
                this.TransactionResult = "Move Selection";
                this.View.raiseSelectionMoved();
                this.stopTool();
            }
            this.doMouseOver(this.LastInput);
        }
        else {
            this.doCancelMouse();
            var dragEventArgs = this.LastInput.DragEventArgs;
            if (dragEventArgs != null && this.View.ExternalDragDropsOnEnter && !this.View.isInternalDragDrop(dragEventArgs)) {
                this.View.deleteSelection(this.View.Selection);
                return;
            }
        }
        this.View.batchDraw();
    };
    TuToolDragging.prototype.makeDragSelection = function () {
        if (this.DragSelection == null) {
            this.DragSelectionOriginalObject = this.CurrentObject;
            this.DragSelection = this.createDragSelection();
            if (this.DragSelection == null || this.DragSelection.IsEmpty) {
                this.DragSelectionOriginalObject = undefined;
                this.DragSelection = undefined;
                return;
            }
            var sizeF = _TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(_TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(this.FirstInput.DocPoint, this.MoveOffset), this.DragSelectionOriginalObject.Position);
            if (sizeF.Width !== 0 || sizeF.Height !== 0) {
                this.View.moveSelection((this.EffectiveSelection != null ? this.EffectiveSelection : this.Selection), sizeF, false);
            }
            if (this.CurrentObject.View !== this.View) {
                this.CurrentObject = this.DragSelection.Primary;
            }
        }
    };
    TuToolDragging.prototype.mayBeCopying = function () {
        var flag;
        var dragEventArgs = this.LastInput.DragEventArgs;
        if (dragEventArgs != null && (dragEventArgs.AllowedEffect & _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Copy) !== _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Copy) {
            return false;
        }
        if (!this.View.CanInsertObjects()) {
            return false;
        }
        if (!this.View.CanCopyObjects()) {
            return false;
        }
        var enumerator = this.Selection.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                if (!enumerator.Current.CanCopy()) {
                    continue;
                }
                flag = true;
                return flag;
            }
            return false;
        }
        finally {
            enumerator.Dispose();
        }
        return flag;
    };
    TuToolDragging.prototype.mayBeMoving = function () {
        var flag;
        var dragEventArgs = this.LastInput.DragEventArgs;
        if (dragEventArgs != null && (dragEventArgs.AllowedEffect & _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Move) !== _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Move && !this.View.PretendsInternalDrag) {
            return false;
        }
        if (!this.View.CanMoveObjects()) {
            return false;
        }
        var enumerator = this.Selection.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                if (!enumerator.Current.canMove()) {
                    continue;
                }
                flag = true;
                return flag;
            }
            return false;
        }
        finally {
            enumerator.Dispose();
        }
        return flag;
    };
    TuToolDragging.prototype.mustBeCopying = function () {
        var dragEventArgs = this.LastInput.DragEventArgs;
        if (dragEventArgs != null && (dragEventArgs.AllowedEffect & _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Copy) !== _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Copy) {
            return false;
        }
        if (this.LastInput.Control) {
            return true;
        }
        return false;
    };
    TuToolDragging.prototype.mustBeMoving = function () {
        var dragEventArgs = this.LastInput.DragEventArgs;
        if (dragEventArgs != null && (dragEventArgs.AllowedEffect & _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Move) !== _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.Move && !this.View.PretendsInternalDrag) {
            return false;
        }
        if (this.LastInput.Shift) {
            return true;
        }
        return false;
    };
    TuToolDragging.prototype.start = function () {
        console.log('TuTool start');
        if (this.SelectsWhenStarts) {
            this.CurrentObject = this.View.pickObject(true, false, this.FirstInput.DocPoint, true);
            if (this.CurrentObject == null) {
                return;
            }
            this.MoveOffset = _TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(this.FirstInput.DocPoint, this.CurrentObject.Position);
        }
        this.startTransaction();
        if (this.SelectsWhenStarts && !this.Selection.Contains(this.CurrentObject)) {
            if (this.FirstInput.Shift || this.FirstInput.Control) {
                this.Selection.Add(this.CurrentObject);
            }
            else {
                this.Selection.select(this.CurrentObject);
            }
        }
        if (!this.View.DragRoutesRealtime && this.View.DragsRealtime) {
            this.View.Document.SuspendsRouting = true;
        }
        if (this.HidesSelectionHandles) {
            this.mySelectionHidden = true;
            this.Selection.removeAllSelectionHandles();
        }
        if (this.View.AllowDragOut) {
            this.myModalDropped = false;
            try {
                try {
                    if (this.Selection.Primary != null) {
                        var sizeF = _TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool.SubtractPoints(this.LastInput.DocPoint, this.Selection.Primary.Position);
                        this.Selection.HotSpot = sizeF;
                    }
                    this.doDragDrop(this.Selection, _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_9__.DragDropEffects.All);
                }
                catch (e) {
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("ToolDragging Start: ", e.toString()));
                }
            }
            finally {
                if (this.myModalDropped) {
                    this.stopTool();
                }
                else {
                    this.doCancelMouse();
                }
                this.Selection.HotSpot = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize({ width: 0, height: 0 });
            }
        }
    };
    TuToolDragging.prototype.stop = function () {
        console.log('TuTool stop');
        this.View.Document.SuspendsRouting = false;
        if (!this.View.DragRoutesRealtime && this.View.DragsRealtime && this.TransactionResult != null) {
            this.View.Document.DoDelayedRouting(this.EffectiveSelection);
        }
        this.View.stopAutoScroll();
        if (this.mySelectionHidden) {
            this.mySelectionHidden = false;
            this.Selection.addAllSelectionHandles();
        }
        this.clearDragSelection();
        this.myEffectiveSelection = undefined;
        this.MoveOffset = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize({ width: 0, height: 0 });
        this.CurrentObject = undefined;
        this.SelectsWhenStarts = true;
        this.stopTransaction();
    };
    TuToolDragging.test = 0;
    TuToolDragging = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolDragging,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolDragging,
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuTool,
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuTool
            ]
        })
    ], TuToolDragging);
    return TuToolDragging;
}(_TuTool__WEBPACK_IMPORTED_MODULE_3__.TuTool));



/***/ }),

/***/ "./src/TuTool/TuToolLinking.ts":
/*!*************************************!*\
  !*** ./src/TuTool/TuToolLinking.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolLinking": () => (/* binding */ TuToolLinking)
/* harmony export */ });
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuLink_TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../TuLink/TuLinkAdjustingStyle */ "./src/TuLink/TuLinkAdjustingStyle.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuPort_TuPortStyle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuPort/TuPortStyle */ "./src/TuPort/TuPortStyle.ts");
/* harmony import */ var _TuPort_TuPort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuPort/TuPort */ "./src/TuPort/TuPort.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _TuSubGraph_TuSubGraphBase__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuSubGraph/TuSubGraphBase */ "./src/TuSubGraph/TuSubGraphBase.ts");
/* harmony import */ var _Forms_CancelEventArgs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Forms/CancelEventArgs */ "./src/Forms/CancelEventArgs.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










var TuToolLinking = /** @class */ (function (_super) {
    __extends(TuToolLinking, _super);
    //#endregion
    function TuToolLinking(v) {
        var _this = _super.call(this, v) || this;
        _this.myForwardsOnly = false;
        _this.myLinkingNew = true;
        _this.myForwards = true;
        return _this;
    }
    TuToolLinking_1 = TuToolLinking;
    TuToolLinking.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolLinking);
    };
    Object.defineProperty(TuToolLinking.prototype, "EndPort", {
        //#region [Property] EndPort
        get: function () {
            return this.getEndPort();
        },
        set: function (value) {
            this.setEndPort(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getEndPort = function () {
        return this.myTempEndPort;
    };
    TuToolLinking.prototype.setEndPort = function (value) {
        this.myTempEndPort = value;
    };
    Object.defineProperty(TuToolLinking.prototype, "Forwards", {
        //#endregion
        //#region [Property] Forwards
        get: function () {
            return this.getForwards();
        },
        set: function (value) {
            this.setForwards(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getForwards = function () {
        return this.myForwards;
    };
    TuToolLinking.prototype.setForwards = function (value) {
        this.myForwards = value;
    };
    Object.defineProperty(TuToolLinking.prototype, "ForwardsOnly", {
        //#endregion
        //#region [Property] ForwardsOnly
        get: function () {
            return this.getForwardsOnly();
        },
        set: function (value) {
            this.setForwardsOnly(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getForwardsOnly = function () {
        return this.myForwards;
    };
    TuToolLinking.prototype.setForwardsOnly = function (value) {
        this.myForwards = value;
    };
    Object.defineProperty(TuToolLinking.prototype, "Link", {
        //#endregion
        //#region [Property] Link
        get: function () {
            return this.getLink();
        },
        set: function (value) {
            this.setLink(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getLink = function () {
        return this.myTempLink;
    };
    TuToolLinking.prototype.setLink = function (value) {
        this.myTempLink = value;
    };
    Object.defineProperty(TuToolLinking.prototype, "OriginalEndPort", {
        //#endregion
        //#region [Property] OriginalEndPort
        get: function () {
            return this.getOriginalEndPort();
        },
        set: function (value) {
            this.setOriginalEndPort(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getOriginalEndPort = function () {
        return this.myOrigEndPort;
    };
    TuToolLinking.prototype.setOriginalEndPort = function (value) {
        this.myOrigEndPort = value;
    };
    Object.defineProperty(TuToolLinking.prototype, "OriginalStartPort", {
        //#endregion
        //#region [Property] OriginalStartPort
        get: function () {
            return this.getOriginalStartPort();
        },
        set: function (value) {
            this.setOriginalStartPort(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getOriginalStartPort = function () {
        return this.myOrigStartPort;
    };
    TuToolLinking.prototype.setOriginalStartPort = function (value) {
        this.myOrigStartPort = value;
    };
    Object.defineProperty(TuToolLinking.prototype, "StartPort", {
        //#endregion
        //#region [Property] StartPort
        get: function () {
            return this.getStartPort();
        },
        set: function (value) {
            this.setStartPort(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getStartPort = function () {
        return this.myTempStartPort;
    };
    TuToolLinking.prototype.setStartPort = function (value) {
        this.myTempStartPort = value;
    };
    Object.defineProperty(TuToolLinking.prototype, "ValidPortsCache", {
        //#endregion
        //#region [Property] ValidPortsCache
        get: function () {
            return this.getValidPortsCache();
        },
        set: function (value) {
            this.setValidPortsCache(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolLinking.prototype.getValidPortsCache = function () {
        if (this.myValidPortsCache == null) {
            this.myValidPortsCache = new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.Dictionary();
        }
        return this.myValidPortsCache;
    };
    TuToolLinking.prototype.setValidPortsCache = function (value) {
        this.myValidPortsCache = value;
    };
    TuToolLinking.prototype.createTemporaryLink = function (fromPort, toPort) {
        var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(this.View.Document.createCopyDictionary().CopyComplete(this.View.NewLinkPrototype), _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuLink);
        if (goLink == null || goLink.TuObject == null) {
            return undefined;
        }
        goLink.FromPort = fromPort;
        goLink.ToPort = toPort;
        var goObject = goLink.TuObject;
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(goObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLink)) {
            goObject.AdjustingStyle = _TuLink_TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_3__.TuLinkAdjustingStyle.Calculate;
        }
        else if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(goObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLabeledLink)) {
            goObject.AdjustingStyle = _TuLink_TuLinkAdjustingStyle__WEBPACK_IMPORTED_MODULE_3__.TuLinkAdjustingStyle.Calculate;
        }
        this.View.Layers.Default.Add(goObject);
        return goLink;
    };
    TuToolLinking.prototype.createTemporaryPort = function (port, pnt, forToPort, atEnd) {
        var goTemporaryPort = new TemporaryPort();
        goTemporaryPort.Target = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(port, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuPort);
        if (port != null && port.TuObject != null) {
            goTemporaryPort.Size = port.TuObject.Size;
        }
        goTemporaryPort.Center = pnt;
        goTemporaryPort.Style = _TuPort_TuPortStyle__WEBPACK_IMPORTED_MODULE_5__.TuPortStyle.None;
        this.View.Layers.Default.Add(goTemporaryPort);
        return goTemporaryPort;
    };
    TuToolLinking.prototype.doCancelMouse = function () {
        if (this.myLinkingNew) {
            if (!this.Forwards) {
                this.doNoNewLink(undefined, this.StartPort);
            }
            else {
                this.doNoNewLink(this.StartPort, undefined);
            }
        }
        else if (this.OriginalEndPort == null) {
            if (!this.Forwards) {
                this.doNoRelink(this.Link, undefined, this.StartPort);
            }
            else {
                this.doNoRelink(this.Link, this.StartPort, undefined);
            }
        }
        else if (!this.Forwards) {
            this.doCancelRelink(this.Link, this.OriginalEndPort, this.OriginalStartPort);
        }
        else {
            this.doCancelRelink(this.Link, this.OriginalStartPort, this.OriginalEndPort);
        }
        this.View.CursorName = "default";
        _super.prototype.stopTool.call(this);
    };
    TuToolLinking.prototype.doCancelRelink = function (oldlink, fromPort, toPort) {
        oldlink.FromPort = fromPort;
        oldlink.ToPort = toPort;
        this.TransactionResult = undefined;
    };
    TuToolLinking.prototype.doLinking = function (dc) {
        var rectangleF;
        if (this.EndPort == null) {
            return;
        }
        var goObject = this.EndPort.TuObject;
        if (goObject == null) {
            return;
        }
        var goPort = this.pickNearestPort(dc);
        this.imitatePort(this.EndPort, goPort);
        rectangleF = (goPort == null || goPort.TuObject == null ? new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle({ x: dc.X, y: dc.Y, width: 0, height: 0 }) : goPort.TuObject.Bounds);
        goObject.Bounds = rectangleF;
    };
    TuToolLinking.prototype.doMouseMove = function () {
        this.doLinking(this.LastInput.DocPoint);
        this.View.doAutoScroll(this.LastInput.ViewPoint);
        this.View.batchDraw();
    };
    TuToolLinking.prototype.doMouseUp = function () {
        var goPort = this.pickNearestPort(this.LastInput.DocPoint);
        if (goPort == null) {
            var goPort1 = this.pickPort(this.LastInput.DocPoint);
            if (this.myLinkingNew) {
                if (!this.Forwards) {
                    this.doNoNewLink(goPort1, this.OriginalStartPort);
                }
                else {
                    this.doNoNewLink(this.OriginalStartPort, goPort1);
                }
            }
            else if (!this.Forwards) {
                this.doNoRelink(this.Link, goPort1, this.OriginalStartPort);
            }
            else {
                this.doNoRelink(this.Link, this.OriginalStartPort, goPort1);
            }
        }
        else if (this.myLinkingNew) {
            if (!this.Forwards) {
                this.doNewLink(goPort, this.OriginalStartPort);
            }
            else {
                this.doNewLink(this.OriginalStartPort, goPort);
            }
        }
        else if (!this.Forwards) {
            this.doRelink(this.Link, goPort, this.OriginalStartPort);
        }
        else {
            this.doRelink(this.Link, this.OriginalStartPort, goPort);
        }
        _super.prototype.stopTool.call(this);
    };
    TuToolLinking.prototype.doNewLink = function (fromPort, toPort) {
        var goLink = this.View.createLink(fromPort, toPort);
        if (goLink == null) {
            this.TransactionResult = undefined;
            return;
        }
        this.TransactionResult = "New Link";
        this.View.raiseLinkCreated(goLink.TuObject);
    };
    TuToolLinking.prototype.doNoNewLink = function (fromPort, toPort) {
        this.TransactionResult = undefined;
    };
    TuToolLinking.prototype.doNoRelink = function (oldlink, fromPort, toPort) {
        this.TransactionResult = undefined;
        var goObject = oldlink.TuObject;
        if (goObject != null && goObject.Layer != null) {
            if (goObject.Movable) {
                oldlink.FromPort = fromPort;
                oldlink.ToPort = toPort;
                this.TransactionResult = "Relink";
                this.View.raiseLinkRelinked(oldlink.TuObject);
                return;
            }
            if (goObject.CanDelete() && this.View.CanDeleteObjects()) {
                var cancelEventArg = new _Forms_CancelEventArgs__WEBPACK_IMPORTED_MODULE_9__.CancelEventArgs();
                this.View.raiseSelectionDeleting(cancelEventArg);
                if (cancelEventArg.Cancel) {
                    this.doCancelMouse();
                    return;
                }
                goObject.Remove();
                this.View.raiseSelectionDeleted();
                this.TransactionResult = "Relink";
                return;
            }
            if (this.OriginalEndPort == null) {
                this.View.CursorName = "default";
                this.TransactionResult = null;
                _super.prototype.stopTool.call(this);
                return;
            }
            this.doCancelMouse();
        }
    };
    TuToolLinking.prototype.doRelink = function (oldlink, fromPort, toPort) {
        var goObject;
        var goObject1;
        oldlink.FromPort = fromPort;
        oldlink.ToPort = toPort;
        var goObject2 = oldlink.TuObject;
        if (fromPort != null) {
            goObject = fromPort.TuObject;
        }
        else {
            goObject = undefined;
        }
        if (toPort != null) {
            goObject1 = toPort.TuObject;
        }
        else {
            goObject1 = undefined;
        }
        _TuSubGraph_TuSubGraphBase__WEBPACK_IMPORTED_MODULE_8__.TuSubGraphBase.ReparentToCommonSubGraph(goObject2, goObject, goObject1, true, this.View.Document.LinksLayer);
        this.TransactionResult = "Relink";
        this.View.raiseLinkRelinked(oldlink.TuObject);
    };
    TuToolLinking.prototype.imitatePort = function (endport, iport) {
        var goTemporaryPort = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(endport, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TemporaryPort);
        if (goTemporaryPort != null) {
            goTemporaryPort.Target = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(iport, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuPort);
        }
    };
    TuToolLinking.prototype.isValidFromPort = function (fromPort) {
        return fromPort.canLinkFrom();
    };
    TuToolLinking.prototype.isValidLink = function (fromPort, toPort) {
        if (fromPort == null && toPort == null) {
            return false;
        }
        if (fromPort != null && toPort == null) {
            return fromPort.canLinkFrom();
        }
        if (fromPort == null && toPort != null) {
            return toPort.canLinkTo();
        }
        if (this.Link != null) {
            if (fromPort != null && fromPort.TuObject != null && fromPort.TuObject.isChildOf(this.Link.TuObject)) {
                return false;
            }
            if (toPort != null && toPort.TuObject != null && toPort.TuObject.isChildOf(this.Link.TuObject)) {
                return false;
            }
        }
        return fromPort.isValidLink(toPort);
    };
    TuToolLinking.prototype.isValidToPort = function (toPort) {
        if (this.ForwardsOnly) {
            return false;
        }
        return toPort.canLinkTo();
    };
    TuToolLinking.prototype.pickNearestPort = function (dc) {
        var _this = this;
        var goPort = undefined;
        var portGravity = this.View.PortGravity;
        var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGRectangle({ x: dc.X - portGravity, y: dc.Y - portGravity, width: portGravity * 2, height: portGravity * 2 });
        var single = portGravity;
        var single1 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
        single1.value = single * single;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(this.View.Layers.Backwards, function (backward) {
            if (!backward.IsInDocument || !backward.CanViewObjects()) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_1__.CONTINUE;
            }
            var goLayerCache = backward.findCache(rectangleF);
            if (goLayerCache == null) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(backward.Backwards, function (goObject) {
                    goPort = _this._pickNearestPort(goObject, dc, goPort, single1);
                });
            }
            else {
                var objects = goLayerCache.Objects;
                for (var i = objects.Count - 1; i >= 0; i--) {
                    var ıtem = objects[i];
                    goPort = _this._pickNearestPort(ıtem, dc, goPort, single1);
                }
            }
        });
        return goPort;
    };
    TuToolLinking.prototype._pickNearestPort = function (obj, dc, bestPort, /*ref*/ bestDist) {
        var _this = this;
        var valid = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuPort);
        if (valid != null) {
            var pointF = this.portPoint(valid, dc);
            var x = dc.X - pointF.X;
            var y = dc.Y - pointF.Y;
            var single = x * x + y * y;
            if (single < bestDist.value) {
                var obj1 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.New.Out();
                if (this.ValidPortsCache != null) {
                    this.ValidPortsCache.TryGetValue(valid, obj1);
                }
                if (obj1 === TuToolLinking_1.Valid) {
                    bestPort = valid;
                    bestDist.value = single;
                }
                else if (obj1 !== TuToolLinking_1.Invalid) {
                    if (this.Forwards && this.isValidLink(this.OriginalStartPort, valid) || !this.Forwards && this.isValidLink(valid, this.OriginalStartPort)) {
                        if (this.ValidPortsCache != null) {
                            this.ValidPortsCache.Set(valid, TuToolLinking_1.Valid);
                        }
                        bestPort = valid;
                        bestDist.value = single;
                    }
                    else if (this.ValidPortsCache != null) {
                        this.ValidPortsCache.Set(valid, TuToolLinking_1.Invalid);
                    }
                }
            }
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                bestPort = _this._pickNearestPort(enumerator, dc, bestPort, bestDist);
            });
        }
        return bestPort;
    };
    TuToolLinking.prototype.pickPort = function (dc) {
        var goObject = this.View.pickObject(true, false, dc, false);
        if (goObject != null && this.Link != null && goObject.isChildOf(this.Link.TuObject)) {
            return undefined;
        }
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuPort);
    };
    TuToolLinking.prototype.portPoint = function (port, dc) {
        var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(port.TuObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuPort);
        if (goObject == null) {
            return port.TuObject.Center;
        }
        var portObject = goObject.PortObject;
        if (portObject == null || portObject.Layer == null) {
            portObject = goObject;
        }
        var size = portObject.Size;
        var width = 10 / this.View.WorldScale.Width;
        if (size.Width < width && size.Height < width) {
            return portObject.Center;
        }
        if (portObject.ContainsPoint(dc)) {
            return dc;
        }
        return goObject.getLinkPointFromPoint(dc);
    };
    TuToolLinking.prototype.startNewLink = function (port, dc) {
        if (port == null) {
            return;
        }
        _super.prototype.startTransaction.call(this);
        this.myLinkingNew = true;
        if (!this.isValidFromPort(port)) {
            this.Forwards = false;
            var goPort = port;
            this.StartPort = this.createTemporaryPort(goPort, goPort.TuObject.Center, true, false);
            this.EndPort = this.createTemporaryPort(port, dc, false, true);
            this.Link = this.createTemporaryLink(this.EndPort, this.StartPort);
        }
        else {
            this.Forwards = true;
            var goPort1 = port;
            this.StartPort = this.createTemporaryPort(goPort1, goPort1.TuObject.Center, false, false);
            this.EndPort = this.createTemporaryPort(port, dc, true, true);
            this.Link = this.createTemporaryLink(this.StartPort, this.EndPort);
        }
        this.View.CursorName = "hand";
    };
    TuToolLinking.prototype.startRelink = function (oldlink, forwards, dc) {
        if (oldlink == null) {
            return;
        }
        var goObject = oldlink.TuObject;
        if (goObject == null || goObject.Layer == null) {
            return;
        }
        _super.prototype.startTransaction.call(this);
        this.myLinkingNew = false;
        this.Link = oldlink;
        if (!forwards) {
            this.Forwards = false;
            this.OriginalStartPort = oldlink.ToPort;
            this.OriginalEndPort = oldlink.FromPort;
            var center = dc;
            if (this.OriginalStartPort != null) {
                center = this.OriginalStartPort.TuObject.Center;
            }
            else if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(oldlink, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLink)) {
                var goLink = oldlink;
                if (goLink.PointsCount > 0) {
                    var goLink1 = goLink;
                    center = goLink1.getPoint(goLink1.PointsCount - 1);
                }
            }
            else if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(oldlink, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLabeledLink)) {
                var goLabeledLink = oldlink;
                if (goLabeledLink.RealLink.PointsCount > 0) {
                    center = goLabeledLink.RealLink.getPoint(goLabeledLink.RealLink.PointsCount - 1);
                }
            }
            this.StartPort = this.createTemporaryPort(this.OriginalStartPort, center, true, false);
            oldlink.ToPort = this.StartPort;
            this.EndPort = this.createTemporaryPort(this.OriginalEndPort, dc, false, true);
            oldlink.FromPort = this.EndPort;
        }
        else {
            this.Forwards = true;
            this.OriginalStartPort = oldlink.FromPort;
            this.OriginalEndPort = oldlink.ToPort;
            var point = dc;
            if (this.OriginalStartPort != null) {
                point = this.OriginalStartPort.TuObject.Center;
            }
            else if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(oldlink, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLink)) {
                var goLink2 = oldlink;
                if (goLink2.PointsCount > 0) {
                    point = goLink2.getPoint(0);
                }
            }
            else if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(oldlink, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLabeledLink)) {
                var goLabeledLink1 = oldlink;
                if (goLabeledLink1.RealLink.PointsCount > 0) {
                    point = goLabeledLink1.RealLink.getPoint(0);
                }
            }
            this.StartPort = this.createTemporaryPort(this.OriginalStartPort, point, false, false);
            oldlink.FromPort = this.StartPort;
            this.EndPort = this.createTemporaryPort(this.OriginalEndPort, dc, true, true);
            oldlink.ToPort = this.EndPort;
        }
        this.View.CursorName = "hand";
    };
    TuToolLinking.prototype.stop = function () {
        this.View.stopAutoScroll();
        this.Forwards = true;
        this.OriginalStartPort = null;
        this.OriginalEndPort = null;
        if (this.Link != null) {
            var goObject = this.Link.TuObject;
            if (goObject != null && goObject.IsInView) {
                goObject.Remove();
            }
        }
        this.Link = null;
        if (this.StartPort != null) {
            var goObject1 = this.StartPort.TuObject;
            if (goObject1 != null && goObject1.IsInView) {
                goObject1.Remove();
            }
        }
        this.StartPort = null;
        if (this.EndPort != null) {
            var goObject2 = this.EndPort.TuObject;
            if (goObject2 != null && goObject2.IsInView) {
                goObject2.Remove();
            }
        }
        this.EndPort = undefined;
        if (this.ValidPortsCache != null) {
            this.ValidPortsCache.Clear();
        }
        _super.prototype.stopTransaction.call(this);
    };
    var TuToolLinking_1;
    TuToolLinking = TuToolLinking_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolLinking,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolLinking
            ]
        })
    ], TuToolLinking);
    return TuToolLinking;
}(_TuTool__WEBPACK_IMPORTED_MODULE_0__.TuTool));

function staticContructor() {
    TuToolLinking.Valid = "Valid";
    TuToolLinking.Invalid = "Invalid";
}
var TemporaryPort = /** @class */ (function (_super) {
    __extends(TemporaryPort, _super);
    function TemporaryPort() {
        var _this = _super.call(this) || this;
        _this.PortObject = undefined;
        _this.FromSpot = _Spot__WEBPACK_IMPORTED_MODULE_7__.NoSpot;
        _this.ToSpot = _Spot__WEBPACK_IMPORTED_MODULE_7__.NoSpot;
        _this.PenWidth = 2;
        _this.PenColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGColor.Blue;
        _this.Size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_4__.CGSize({ width: 100, height: 100 });
        return _this;
    }
    TemporaryPort.prototype.getEndSegmentLength = function () {
        if (this.Target == null) {
            return _super.prototype.getEndSegmentLength.call(this);
        }
        return this.Target.EndSegmentLength;
    };
    TemporaryPort.prototype.getFromSpot = function () {
        if (this.Target == null) {
            return _super.prototype.getFromSpot.call(this);
        }
        return this.Target.FromSpot;
    };
    TemporaryPort.prototype.getPortObject = function () {
        if (this.Target == null) {
            return _super.prototype.getPortObject.call(this);
        }
        return this.Target.PortObject;
    };
    Object.defineProperty(TemporaryPort.prototype, "Target", {
        //#region [Property] Target
        get: function () {
            return this.getTarget();
        },
        set: function (value) {
            this.setTarget(value);
        },
        enumerable: false,
        configurable: true
    });
    TemporaryPort.prototype.getTarget = function () {
        return this.myTargetPort;
    };
    TemporaryPort.prototype.setTarget = function (value) {
        this.myTargetPort = value;
        return this;
    };
    //#endregion
    TemporaryPort.prototype.getToSpot = function () {
        if (this.Target == null) {
            return _super.prototype.getToSpot.call(this);
        }
        return this.Target.ToSpot;
    };
    TemporaryPort.prototype.getFromLinkDir = function (link) {
        if (this.Target == null) {
            return _super.prototype.getFromLinkDir.call(this, link);
        }
        return this.Target.getFromLinkDir(link);
    };
    TemporaryPort.prototype.getFromLinkPoint = function (link) {
        if (this.Target == null) {
            return _super.prototype.getFromLinkPoint.call(this, link);
        }
        return this.Target.getFromLinkPoint(link);
    };
    TemporaryPort.prototype.getLinkPointFromPoint = function (p) {
        if (this.Target == null) {
            return _super.prototype.getLinkPointFromPoint.call(this, p);
        }
        return this.Target.getLinkPointFromPoint(p);
    };
    TemporaryPort.prototype.getToLinkDir = function (link) {
        if (this.Target == null) {
            return _super.prototype.getToLinkDir.call(this, link);
        }
        return this.Target.getToLinkDir(link);
    };
    TemporaryPort.prototype.getToLinkPoint = function (link) {
        if (this.Target == null) {
            return _super.prototype.getToLinkPoint.call(this, link);
        }
        return this.Target.getToLinkPoint(link);
    };
    TemporaryPort = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TemporaryPort,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TemporaryPort
            ]
        })
    ], TemporaryPort);
    return TemporaryPort;
}(_TuPort_TuPort__WEBPACK_IMPORTED_MODULE_6__.TuPort));


/***/ }),

/***/ "./src/TuTool/TuToolLinkingNew.ts":
/*!****************************************!*\
  !*** ./src/TuTool/TuToolLinkingNew.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolLinkingNew": () => (/* binding */ TuToolLinkingNew)
/* harmony export */ });
/* harmony import */ var _TuToolLinking__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuToolLinking */ "./src/TuTool/TuToolLinking.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuToolLinkingNew = /** @class */ (function (_super) {
    __extends(TuToolLinkingNew, _super);
    function TuToolLinkingNew(view) {
        return _super.call(this, view) || this;
    }
    TuToolLinkingNew.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolLinkingNew);
    };
    TuToolLinkingNew.prototype.canStart = function () {
        if (this.FirstInput.IsContextButton) {
            return false;
        }
        if (!this.View.CanLinkObjects()) {
            return false;
        }
        var goPort = this.pickPort(this.FirstInput.DocPoint);
        this.OriginalStartPort = goPort;
        if (goPort == null) {
            return false;
        }
        if (this.isValidFromPort(goPort)) {
            return true;
        }
        return this.isValidToPort(goPort);
    };
    TuToolLinkingNew.prototype.start = function () {
        _super.prototype.start.call(this);
        this.startNewLink(this.OriginalStartPort, this.LastInput.DocPoint);
    };
    TuToolLinkingNew = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolLinkingNew,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolLinkingNew
            ]
        })
    ], TuToolLinkingNew);
    return TuToolLinkingNew;
}(_TuToolLinking__WEBPACK_IMPORTED_MODULE_0__.TuToolLinking));



/***/ }),

/***/ "./src/TuTool/TuToolManager.ts":
/*!*************************************!*\
  !*** ./src/TuTool/TuToolManager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolManager": () => (/* binding */ TuToolManager)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Forms/Keys */ "./src/Forms/Keys.ts");
/* harmony import */ var _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../TuViewDisableKeys */ "./src/TuViewDisableKeys.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var TuToolManager = /** @class */ (function (_super) {
    __extends(TuToolManager, _super);
    function TuToolManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuToolManager.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolManager);
    };
    Object.defineProperty(TuToolManager.prototype, "Started", {
        //#region [Property] Started
        get: function () {
            return this.getStarted();
        },
        set: function (value) {
            this.setStarted(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolManager.prototype.getStarted = function () {
        return this.myStarted;
    };
    TuToolManager.prototype.setStarted = function (value) {
        this.myStarted = value;
    };
    //#endregion
    TuToolManager.prototype.doKeyDown = function () {
        var docPosition;
        var pointF;
        var worldScale;
        var lastInput = this.LastInput;
        var control = lastInput.Control;
        var shift = lastInput.Shift;
        var disableKeys = this.View.DisableKeys;
        var key = lastInput.Key;
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Delete && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Delete) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.editDelete();
            return;
        }
        if (control && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.A && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.SelectAll) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.selectAll();
            return;
        }
        if ((control && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.C || control && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Insert) && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Clipboard) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.editCopy();
            return;
        }
        if ((control && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.X || shift && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Delete) && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Clipboard) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.editCut();
            return;
        }
        if ((control && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.V || shift && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Insert) && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Clipboard) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.editPaste();
            return;
        }
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.F2 && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Edit) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.editEdit();
            return;
        }
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Next && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Page) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            if (shift) {
                this.View.scrollPage(1, 0);
                return;
            }
            this.View.scrollPage(0, 1);
            return;
        }
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Prior && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Page) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            if (shift) {
                this.View.scrollPage(-1, 0);
                return;
            }
            this.View.scrollPage(0, -1);
            return;
        }
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Home && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Home) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            var rectangleF = this.View.computeDocumentBounds();
            if (control) {
                this.View.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint({ x: rectangleF.X, y: rectangleF.Y });
                return;
            }
            var view = this.View;
            var x = rectangleF.X;
            docPosition = this.View.DocPosition;
            view.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint({ x: x, y: docPosition.Y });
            return;
        }
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.End && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.End) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            var rectangleF1 = this.View.computeDocumentBounds();
            var docExtentSize = this.View.DocExtentSize;
            if (!control) {
                var single = rectangleF1.X + rectangleF1.Width - docExtentSize.Width;
                docPosition = this.View.DocPosition;
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint({ x: single, y: docPosition.Y });
            }
            else {
                pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint({ x: rectangleF1.X + rectangleF1.Width - docExtentSize.Width, y: rectangleF1.Y + rectangleF1.Height - docExtentSize.Height });
            }
            this.View.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint({ x: Math.max(0, pointF.X), y: Math.max(0, pointF.Y) });
            return;
        }
        if (control && !shift && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Z && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Undo) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.undo();
            return;
        }
        if ((control && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Y || control && shift && key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Z) && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.Undo) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            this.View.redo();
            return;
        }
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Escape && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.CancelDeselects) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
            if (this.View.CanSelectObjects()) {
                this.Selection.Clear();
            }
            this.doKeyDown();
            return;
        }
        if (key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Up || key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Down || key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Left || key === _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Right) {
            var width = 0;
            var height = 0;
            switch (key) {
                case _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Left:
                    {
                        worldScale = this.View.WorldScale;
                        width = -worldScale.Width;
                        break;
                    }
                case _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Up:
                    {
                        worldScale = this.View.WorldScale;
                        height = -worldScale.Height;
                        break;
                    }
                case _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Right:
                    {
                        worldScale = this.View.WorldScale;
                        width = worldScale.Width;
                        break;
                    }
                case _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Down:
                    {
                        worldScale = this.View.WorldScale;
                        height = worldScale.Height;
                        break;
                    }
            }
            if (this.View.Selection.IsEmpty || !this.View.CanMoveObjects() || (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.ArrowMove) !== _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
                if ((disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.ArrowScroll) !== _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
                    this.doKeyDown();
                    return;
                }
                if (!control) {
                    this.View.scrollLine(width, height);
                    return;
                }
                var goView = this.View;
                docPosition = this.View.DocPosition;
                var x1 = docPosition.X + width;
                docPosition = this.View.DocPosition;
                goView.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint({ x: x1, y: docPosition.Y + height });
                return;
            }
            var single1 = 1;
            single1 = (!control ? this.View.ArrowMoveLarge : this.View.ArrowMoveSmall);
            var goToolDragging = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.View.findMouseTool((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolDragging), true), _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolDragging);
            if (goToolDragging != null) {
                var goSelection = goToolDragging.computeEffectiveSelection(this.View.Selection, true);
                this.View.moveSelection(goSelection, new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize({ width: width * single1, height: height * single1 }), true);
                this.View.raiseSelectionMoved();
                this.View.scrollRectangleToVisible(this.View.Selection.Primary.Bounds);
                return;
            }
        }
        else {
            var flag = false;
            if (!control && !lastInput.Alt && (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.SelectsByFirstChar) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_5__.TuViewDisableKeys.None) {
                var str = _Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys[_Forms_Keys__WEBPACK_IMPORTED_MODULE_4__.Keys.Alt]; // TypeDescriptor.GetConverter(typeof (Keys)).ConvertToString(null, CultureInfo.CurrentCulture, lastInput.Key);
                var chr = '\0';
                if (str.length === 1) {
                    chr = str[0];
                }
                else if (str.length === 2 && str[0] === 'D') {
                    chr = str[1];
                }
                if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TChar.IsLetterOrDigit(chr.charCodeAt(0))) {
                    flag = this.View.selectNextNode(chr);
                }
            }
            if (!flag) {
                this.doKeyDown();
            }
        }
    };
    TuToolManager.prototype.doMouseDown = function () {
        var _this = this;
        var mustStart = true;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.View.MouseDownTools, function (mouseDownTool) {
            var goTool = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(mouseDownTool, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool);
            if (goTool == null || !goTool.canStart()) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            _this.View.Tool = goTool;
            mustStart = false;
        });
        this.Started = mustStart;
    };
    TuToolManager.prototype.doMouseHover = function () {
        this.View.doHover(this.LastInput);
    };
    TuToolManager.prototype.doMouseMove = function () {
        var _this = this;
        if (this.Started) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.View.MouseMoveTools, function (mouseMoveTool) {
                var goTool = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(mouseMoveTool, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool);
                if (goTool == null || !goTool.canStart()) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                _this.View.Tool = goTool;
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.BREAK;
            });
        }
        this.doMouseOver(this.LastInput);
    };
    TuToolManager.prototype.doMouseOver = function (evt) {
        var currentObject = this.CurrentObject;
        var goObject = this.View.pickObject(true, false, evt.DocPoint, false);
        if (currentObject !== goObject) {
            this.CurrentObject = goObject;
            this.View.doObjectEnterLeave(currentObject, goObject, evt);
        }
        this.View.doMouseOver(evt);
    };
    TuToolManager.prototype.doMouseUp = function () {
        var _this = this;
        if (this.Started) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.View.MouseUpTools, function (mouseUpTool) {
                var goTool = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(mouseUpTool, _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool);
                if (goTool == null || !goTool.canStart()) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                _this.View.Tool = goTool;
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.BREAK;
            });
        }
    };
    TuToolManager.prototype.doMouseWheel = function () {
        this.View.doWheel(this.LastInput);
    };
    TuToolManager.prototype.stop = function () {
        this.Started = false;
    };
    TuToolManager = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolManager,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolManager
            ]
        })
    ], TuToolManager);
    return TuToolManager;
}(_TuTool__WEBPACK_IMPORTED_MODULE_2__.TuTool));



/***/ }),

/***/ "./src/TuTool/TuToolPanning.ts":
/*!*************************************!*\
  !*** ./src/TuTool/TuToolPanning.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PaintEventArgs": () => (/* binding */ PaintEventArgs),
/* harmony export */   "TuToolPanning": () => (/* binding */ TuToolPanning)
/* harmony export */ });
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Forms/MouseButtons */ "./src/Forms/MouseButtons.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var PaintEventArgs = /** @class */ (function () {
    //#endregion
    function PaintEventArgs(graphics, clipRect) {
        this.myGraphics = graphics;
        this.myClipRectangle = clipRect;
    }
    Object.defineProperty(PaintEventArgs.prototype, "ClipRectangle", {
        //#region [Property] ClipRectangle
        get: function () {
            return this.getClipRectangle();
        },
        set: function (value) {
            this.setClipRectangle(value);
        },
        enumerable: false,
        configurable: true
    });
    PaintEventArgs.prototype.getClipRectangle = function () {
        return this.myClipRectangle;
    };
    PaintEventArgs.prototype.setClipRectangle = function (value) {
        this.myClipRectangle = value;
    };
    Object.defineProperty(PaintEventArgs.prototype, "Graphics", {
        //#endregion
        //#region [Property] Graphics
        get: function () {
            return this.getGraphics();
        },
        set: function (value) {
            this.setGraphics(value);
        },
        enumerable: false,
        configurable: true
    });
    PaintEventArgs.prototype.getGraphics = function () {
        return this.myGraphics;
    };
    PaintEventArgs.prototype.setGraphics = function (value) {
        this.myGraphics = value;
    };
    return PaintEventArgs;
}());

var TuToolPanning = /** @class */ (function (_super) {
    __extends(TuToolPanning, _super);
    function TuToolPanning() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myAutoPan = true;
        _this.myModal = false;
        _this.myLastViewPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint();
        _this.myActive = false;
        _this.myOriginSet = false;
        _this.myOrigin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint();
        return _this;
    }
    TuToolPanning.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolPanning);
    };
    Object.defineProperty(TuToolPanning.prototype, "Active", {
        //#region [Property] Active
        get: function () {
            return this.getActive();
        },
        set: function (value) {
            this.setActive(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolPanning.prototype.getActive = function () {
        return this.myActive;
    };
    TuToolPanning.prototype.setActive = function (value) {
        if (this.myActive !== value) {
            this.myActive = value;
            if (value) {
                this.myLastViewPoint = this.LastInput.ViewPoint;
            }
        }
    };
    Object.defineProperty(TuToolPanning.prototype, "AutoPan", {
        //#endregion
        //#region [Property] AutoPan
        get: function () {
            return this.getAutoPan();
        },
        set: function (value) {
            this.setAutoPan(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolPanning.prototype.getAutoPan = function () {
        return this.myAutoPan;
    };
    TuToolPanning.prototype.setAutoPan = function (value) {
        this.myAutoPan = value;
    };
    Object.defineProperty(TuToolPanning.prototype, "Modal", {
        //#endregion
        //#region [Property] Modal
        get: function () {
            return this.getModal();
        },
        set: function (value) {
            this.setModal(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolPanning.prototype.getModal = function () {
        return this.myModal;
    };
    TuToolPanning.prototype.setModal = function (value) {
        this.myModal = value;
    };
    Object.defineProperty(TuToolPanning.prototype, "Origin", {
        //#endregion
        //#region [Property] Origin
        get: function () {
            return this.getOrigin();
        },
        set: function (value) {
            this.setOrigin(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolPanning.prototype.getOrigin = function () {
        return this.myOrigin;
    };
    TuToolPanning.prototype.setOrigin = function (value) {
        if (this.myOrigin !== value) {
            this.myOrigin = value;
            this.myOriginSet = true;
        }
    };
    Object.defineProperty(TuToolPanning.prototype, "OriginRect", {
        //#endregion
        //#region [Property] OriginRect
        get: function () {
            return this.getOriginRect();
        },
        enumerable: false,
        configurable: true
    });
    TuToolPanning.prototype.getOriginRect = function () {
        // Cursor noMove2D = Cursors.NoMove2D;
        var width = 20;
        var height = 20;
        var origin = this.Origin;
        var x = origin.X - width / 2;
        origin = this.Origin;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGRectangle({ x: x, y: origin.Y - height / 2, width: width, height: height });
    };
    //#endregion
    TuToolPanning.prototype.canStart = function () {
        var lastInput = this.LastInput;
        if (lastInput.Alt || lastInput.Control || lastInput.Shift) {
            return false;
        }
        if (this.AutoPan) {
            return lastInput.Buttons === _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_4__.MouseButtons.Middle;
        }
        if (lastInput.Buttons !== _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_4__.MouseButtons.Left) {
            return false;
        }
        return this.View.pickObject(true, true, lastInput.DocPoint, true) == null;
    };
    TuToolPanning.prototype.doKeyDown = function () {
        this.stopTool();
    };
    TuToolPanning.prototype.doManualPan = function () {
        var docPosition = this.View.DocPosition;
        var x = this.myLastViewPoint.X;
        var viewPoint = this.LastInput.ViewPoint;
        var ınt32 = x - viewPoint.X;
        var y = this.myLastViewPoint.Y;
        viewPoint = this.LastInput.ViewPoint;
        var size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize({ width: ınt32, height: y - viewPoint.Y });
        var doc = this.View.convertViewToDoc(size);
        this.myLastViewPoint = this.LastInput.ViewPoint;
        this.View.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint({ x: docPosition.X + doc.Width, y: docPosition.Y + doc.Height });
    };
    TuToolPanning.prototype.doMouseDown = function () {
        if (this.AutoPan) {
            this.doMouseDown();
            return;
        }
        this.Active = true;
    };
    TuToolPanning.prototype.doMouseMove = function () {
        if (!this.AutoPan) {
            if (this.Active) {
                this.doManualPan();
                return;
            }
            if (this.Modal) {
                return;
            }
            this.Active = true;
            return;
        }
        if (!this.myOriginSet) {
            return;
        }
        var size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize({ width: 16, height: 16 });
        var width = size.Width;
        var height = size.Height;
        var viewPoint = this.LastInput.ViewPoint;
        var x = viewPoint.X;
        viewPoint = this.Origin;
        var ınt32 = x - viewPoint.X;
        viewPoint = this.LastInput.ViewPoint;
        var y = viewPoint.Y;
        viewPoint = this.Origin;
        var y1 = y - viewPoint.Y;
        if (ınt32 < 0 - width) {
            if (y1 < 0 - height) {
                this.View.CursorName = "pannw";
            }
            else if (y1 <= height) {
                this.View.CursorName = "panwest";
            }
            else {
                this.View.CursorName = "pansw";
            }
        }
        else if (ınt32 > width) {
            if (y1 < 0 - height) {
                this.View.CursorName = "panne";
            }
            else if (y1 <= height) {
                this.View.CursorName = "paneast";
            }
            else {
                this.View.CursorName = "panse";
            }
        }
        else if (y1 < 0 - height) {
            this.View.CursorName = "pannorth";
        }
        else if (y1 <= height) {
            this.View.CursorName = "nomove2d";
        }
        else {
            this.View.CursorName = "pansouth";
        }
        this.View.doAutoPan(this.Origin, this.LastInput.ViewPoint);
    };
    TuToolPanning.prototype.doMouseUp = function () {
        if (this.AutoPan) {
            if (this.myOriginSet) {
                this.stopTool();
                return;
            }
            this.Origin = this.LastInput.ViewPoint;
            this.setPaintingOriginMarker(true);
            return;
        }
        if (!this.isBeyondDragSize()) {
            this.doSelect(this.LastInput);
            this.doClick(this.LastInput);
        }
        if (!this.Modal) {
            this.stopTool();
            return;
        }
        this.Active = false;
    };
    TuToolPanning.prototype.doMouseWheel = function () {
        this.stopTool();
    };
    TuToolPanning.prototype.handlePaint = function (sender, evt) {
        if (!this.myOriginSet) {
            return;
        }
        // TODO :
        // Cursors.NoMove2D.Draw(evt.Graphics, this.OriginRect);
    };
    TuToolPanning.prototype.setPaintingOriginMarker = function (b) {
        if (b) {
            this.myPaintHandler = this.handlePaint;
            // TODO:
            // this.View.Paint += this.myPaintHandler;
        }
        else if (this.myPaintHandler != null) {
            // TODO:
            //base.View.Paint -= this.myPaintHandler;
            this.myPaintHandler = undefined;
        }
        this.View.invalidate(this.OriginRect);
    };
    TuToolPanning.prototype.start = function () {
        if (!this.AutoPan) {
            this.View.CursorName = "move";
        }
        else {
            this.View.CursorName = "nomove2d";
            if (this.myOriginSet) {
                this.setPaintingOriginMarker(true);
                return;
            }
        }
    };
    TuToolPanning.prototype.stop = function () {
        if (!this.AutoPan) {
            this.Active = false;
        }
        else {
            this.myOriginSet = false;
            this.View.stopAutoScroll();
            this.setPaintingOriginMarker(false);
        }
        this.View.CursorName = "default";
    };
    TuToolPanning = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolPanning,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolPanning
            ]
        })
    ], TuToolPanning);
    return TuToolPanning;
}(_TuTool__WEBPACK_IMPORTED_MODULE_0__.TuTool));



/***/ }),

/***/ "./src/TuTool/TuToolRelinking.ts":
/*!***************************************!*\
  !*** ./src/TuTool/TuToolRelinking.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolRelinking": () => (/* binding */ TuToolRelinking)
/* harmony export */ });
/* harmony import */ var _TuToolLinking__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuToolLinking */ "./src/TuTool/TuToolLinking.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuToolRelinking = /** @class */ (function (_super) {
    __extends(TuToolRelinking, _super);
    function TuToolRelinking(v) {
        return _super.call(this, v) || this;
    }
    TuToolRelinking.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolRelinking);
    };
    TuToolRelinking.prototype.canStart = function () {
        if (this.FirstInput.IsContextButton) {
            return false;
        }
        if (!this.View.CanLinkObjects()) {
            return false;
        }
        var goHandle = this.pickRelinkHandle(this.FirstInput.DocPoint);
        if (goHandle == null) {
            return false;
        }
        if (goHandle.HandleID === 1024) {
            this.CurrentObject = goHandle.HandledObject;
            var selectedObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(goHandle.SelectedObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuLink);
            if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(selectedObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLink)) {
                var goLink = selectedObject;
                if (goLink.AbstractLink != null) {
                    selectedObject = goLink.AbstractLink;
                }
            }
            if (selectedObject == null) {
                return false;
            }
            this.Link = selectedObject;
            this.Forwards = false;
            return true;
        }
        if (goHandle.HandleID !== 1025) {
            return false;
        }
        this.CurrentObject = goHandle.HandledObject;
        var abstractLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(goHandle.SelectedObject, _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuLink);
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_1__.is.typeof(abstractLink, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuLink)) {
            var goLink1 = abstractLink;
            if (goLink1.AbstractLink != null) {
                abstractLink = goLink1.AbstractLink;
            }
        }
        if (abstractLink == null) {
            return false;
        }
        this.Link = abstractLink;
        this.Forwards = true;
        return true;
    };
    TuToolRelinking.prototype.pickRelinkHandle = function (dc) {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(this.View.pickObject(false, true, dc, true), _types__WEBPACK_IMPORTED_MODULE_2__.Types.ITuHandle);
    };
    TuToolRelinking.prototype.start = function () {
        _super.prototype.start.call(this);
        var currentObject = this.CurrentObject;
        if (currentObject != null && this.Selection.getHandleCount(currentObject) > 0) {
            this.mySelectionHidden = true;
            currentObject.RemoveSelectionHandles(this.Selection);
        }
        this.startRelink(this.Link, this.Forwards, this.LastInput.DocPoint);
    };
    TuToolRelinking.prototype.stop = function () {
        if (this.mySelectionHidden) {
            this.mySelectionHidden = false;
            var currentObject = this.CurrentObject;
            if (currentObject != null && currentObject.Document === this.View.Document) {
                var goObject = this.Link.TuObject;
                if (this.Selection.Contains(goObject)) {
                    currentObject.AddSelectionHandles(this.Selection, goObject);
                }
                else {
                    this.Selection.Add(goObject);
                }
            }
        }
        this.CurrentObject = undefined;
        _super.prototype.stop.call(this);
    };
    TuToolRelinking = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolRelinking,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolRelinking
            ]
        })
    ], TuToolRelinking);
    return TuToolRelinking;
}(_TuToolLinking__WEBPACK_IMPORTED_MODULE_0__.TuToolLinking));



/***/ }),

/***/ "./src/TuTool/TuToolResizing.ts":
/*!**************************************!*\
  !*** ./src/TuTool/TuToolResizing.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolResizing": () => (/* binding */ TuToolResizing)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var TuToolResizing = /** @class */ (function (_super) {
    __extends(TuToolResizing, _super);
    function TuToolResizing() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myMinimumSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize({ width: 1, height: 1 });
        _this.myMaximumSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize({ width: 1E+21, height: 1E+21 });
        _this.myHidesSelectionHandles = true;
        _this.myOriginalBounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGRectangle();
        _this.myOriginalPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGPoint();
        _this.mySelectionHidden = false;
        return _this;
    }
    TuToolResizing.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolResizing);
    };
    Object.defineProperty(TuToolResizing.prototype, "HidesSelectionHandles", {
        //#region [Property] HidesSelectionHandles
        get: function () {
            return this.getHidesSelectionHandles();
        },
        set: function (value) {
            this.setHidesSelectionHandles(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolResizing.prototype.getHidesSelectionHandles = function () {
        return this.myHidesSelectionHandles;
    };
    TuToolResizing.prototype.setHidesSelectionHandles = function (value) {
        this.myHidesSelectionHandles = value;
    };
    Object.defineProperty(TuToolResizing.prototype, "MaximumSize", {
        //#endregion
        //#region [Property] MaximumSize
        get: function () {
            return this.getMaximumSize();
        },
        set: function (value) {
            this.setMaximumSize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolResizing.prototype.getMaximumSize = function () {
        return this.myMaximumSize;
    };
    TuToolResizing.prototype.setMaximumSize = function (value) {
        this.myMaximumSize = value;
    };
    Object.defineProperty(TuToolResizing.prototype, "MinimumSize", {
        //#endregion
        //#region [Property] MinimumSize
        get: function () {
            return this.getMinimumSize();
        },
        set: function (value) {
            this.setMinimumSize(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolResizing.prototype.getMinimumSize = function () {
        return this.myMinimumSize;
    };
    TuToolResizing.prototype.setMinimumSize = function (value) {
        this.myMinimumSize = value;
    };
    Object.defineProperty(TuToolResizing.prototype, "OriginalBounds", {
        //#endregion
        //#region [Property] OriginalBounds
        get: function () {
            return this.getOriginalBounds();
        },
        set: function (value) {
            this.setOriginalBounds(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolResizing.prototype.getOriginalBounds = function () {
        return this.myOriginalBounds;
    };
    TuToolResizing.prototype.setOriginalBounds = function (value) {
        this.myOriginalBounds = value;
    };
    Object.defineProperty(TuToolResizing.prototype, "OriginalPoint", {
        //#endregion
        //#region [Property] OriginalPoint
        get: function () {
            return this.getOriginalPoint();
        },
        set: function (value) {
            this.setOriginalPoint(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolResizing.prototype.getOriginalPoint = function () {
        return this.myOriginalPoint;
    };
    TuToolResizing.prototype.setOriginalPoint = function (value) {
        this.myOriginalPoint = value;
    };
    Object.defineProperty(TuToolResizing.prototype, "RealObject", {
        //#endregion
        //#region [Property] RealObject
        get: function () {
            return this.getRealObject();
        },
        set: function (value) {
            this.setRealObject(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolResizing.prototype.getRealObject = function () {
        return this.myRealObject;
    };
    TuToolResizing.prototype.setRealObject = function (value) {
        this.myRealObject = value;
    };
    Object.defineProperty(TuToolResizing.prototype, "ResizeHandle", {
        //#endregion
        //#region [Property] ResizeHandle
        get: function () {
            return this.getResizeHandle();
        },
        set: function (value) {
            this.setResizeHandle(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolResizing.prototype.getResizeHandle = function () {
        return this.myResizeHandle;
    };
    TuToolResizing.prototype.setResizeHandle = function (value) {
        this.myResizeHandle = value;
    };
    //#endregion
    TuToolResizing.prototype.canStart = function () {
        if (this.FirstInput.IsContextButton) {
            return false;
        }
        if (!this.View.CanResizeObjects()) {
            return false;
        }
        var goHandle = this.pickResizeHandle(this.FirstInput.DocPoint);
        if (goHandle == null || goHandle.HandledObject == null) {
            return false;
        }
        if (goHandle.HandledObject.CanResize()) {
            return true;
        }
        return goHandle.HandledObject.CanReshape();
    };
    TuToolResizing.prototype.doCancelMouse = function () {
        if (this.CurrentObject != null) {
            this.LastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Cancel;
            this.CurrentObject.DoResize(this.View, this.OriginalBounds, this.OriginalPoint, this.ResizeHandle.HandleID, _TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Cancel, this.MinimumSize, this.MaximumSize);
        }
        this.TransactionResult = undefined;
        this.stopTool();
    };
    TuToolResizing.prototype.doMouseMove = function () {
        this.LastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Continue;
        this.doResizing(_TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Continue);
        this.View.batchDraw();
    };
    TuToolResizing.prototype.doMouseUp = function () {
        this.LastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Finish;
        this.doResizing(_TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Finish);
        this.TransactionResult = "Resize";
        this.View.raiseObjectResized(this.CurrentObject);
        this.stopTool();
        this.View.batchDraw();
    };
    TuToolResizing.prototype.doResizing = function (evttype) {
        if (this.CurrentObject == null) {
            return;
        }
        var lastInput = this.LastInput;
        lastInput.DocPoint = this.View.snapPoint(lastInput.DocPoint, this.CurrentObject);
        lastInput.ViewPoint = this.View.convertDocToView(lastInput.DocPoint);
        var currentObject = this.CurrentObject;
        var bounds = currentObject.Bounds;
        currentObject.DoResize(this.View, this.OriginalBounds, lastInput.DocPoint, this.ResizeHandle.HandleID, evttype, this.MinimumSize, this.MaximumSize);
        if (!this.mySelectionHidden && (bounds === currentObject.Bounds && currentObject.Document === this.View.Document || currentObject.View === this.View)) {
            currentObject.AddSelectionHandles(this.Selection, this.mySelectedObject);
        }
    };
    TuToolResizing.prototype.pickResizeHandle = function (dc) {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.View.pickObject(false, true, dc, true), _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuHandle);
    };
    TuToolResizing.prototype.start = function () {
        var goHandle = this.pickResizeHandle(this.FirstInput.DocPoint);
        if (goHandle == null) {
            return;
        }
        var handledObject = goHandle.HandledObject;
        if (handledObject == null) {
            return;
        }
        this.CurrentObject = handledObject;
        this.startTransaction();
        if (this.Selection.getHandleCount(handledObject) > 0) {
            this.mySelectedObject = goHandle.SelectedObject;
            if (this.HidesSelectionHandles) {
                this.mySelectionHidden = true;
                handledObject.RemoveSelectionHandles(this.Selection);
            }
        }
        this.ResizeHandle = goHandle;
        this.OriginalBounds = handledObject.Bounds;
        this.OriginalPoint = goHandle.TuObject.GetSpotLocation(_Spot__WEBPACK_IMPORTED_MODULE_5__.Middle);
        this.LastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Start;
        this.doResizing(_TuInputState__WEBPACK_IMPORTED_MODULE_4__.TuInputState.Start);
    };
    TuToolResizing.prototype.stop = function () {
        this.View.drawXorBox(new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGRectangle({ x: 0, y: 0, width: 0, height: 0 }), false);
        if (this.mySelectionHidden) {
            this.mySelectionHidden = false;
            var currentObject = this.CurrentObject;
            if (currentObject != null && currentObject.Document === this.View.Document) {
                if (this.Selection.Contains(this.mySelectedObject)) {
                    currentObject.AddSelectionHandles(this.Selection, this.mySelectedObject);
                }
                else {
                    this.Selection.Add(this.mySelectedObject);
                }
            }
        }
        this.mySelectedObject = undefined;
        this.CurrentObject = undefined;
        this.ResizeHandle = undefined;
        this.stopTransaction();
    };
    TuToolResizing = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolResizing,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolResizing,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuTool,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool
            ]
        })
    ], TuToolResizing);
    return TuToolResizing;
}(_TuTool__WEBPACK_IMPORTED_MODULE_2__.TuTool));



/***/ }),

/***/ "./src/TuTool/TuToolRubberBanding.ts":
/*!*******************************************!*\
  !*** ./src/TuTool/TuToolRubberBanding.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolRubberBanding": () => (/* binding */ TuToolRubberBanding)
/* harmony export */ });
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_3__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TuToolRubberBanding = /** @class */ (function (_super) {
    __extends(TuToolRubberBanding, _super);
    function TuToolRubberBanding() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myModal = false;
        _this.myAutoScrolling = false;
        _this.myBox = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGRectangle();
        _this.myActive = false;
        return _this;
    }
    TuToolRubberBanding.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolRubberBanding);
    };
    Object.defineProperty(TuToolRubberBanding.prototype, "Active", {
        //#region [Property] Active
        get: function () {
            return this.getActive();
        },
        set: function (value) {
            this.setActive(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolRubberBanding.prototype.getActive = function () {
        return this.myActive;
    };
    TuToolRubberBanding.prototype.setActive = function (value) {
        this.myActive = value;
    };
    Object.defineProperty(TuToolRubberBanding.prototype, "AutoScrolling", {
        //#endregion
        //#region [Property] AutoScrolling
        get: function () {
            return this.getAutoScrolling();
        },
        set: function (value) {
            this.setAutoScrolling(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolRubberBanding.prototype.getAutoScrolling = function () {
        return this.myAutoScrolling;
    };
    TuToolRubberBanding.prototype.setAutoScrolling = function (value) {
        this.myAutoScrolling = value;
        if (value && this.View != null) {
            this.View.DrawsXorMode = false;
        }
    };
    Object.defineProperty(TuToolRubberBanding.prototype, "Box", {
        //#endregion
        //#region [Property] Box
        get: function () {
            return this.getBox();
        },
        set: function (value) {
            this.setBox(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolRubberBanding.prototype.getBox = function () {
        return this.myBox;
    };
    TuToolRubberBanding.prototype.setBox = function (value) {
        this.myBox = value;
    };
    Object.defineProperty(TuToolRubberBanding.prototype, "Modal", {
        //#endregion
        //#region [Property] Modal
        get: function () {
            return this.getModal();
        },
        set: function (value) {
            this.setModal(value);
        },
        enumerable: false,
        configurable: true
    });
    TuToolRubberBanding.prototype.getModal = function () {
        return this.myModal;
    };
    TuToolRubberBanding.prototype.setModal = function (value) {
        this.myModal = value;
    };
    //#endregion
    TuToolRubberBanding.prototype.activate = function () {
        this.Active = true;
        var viewPoint = this.FirstInput.ViewPoint;
        var x = viewPoint.X;
        viewPoint = this.FirstInput.ViewPoint;
        this.Box = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGRectangle({ x: x, y: viewPoint.Y, width: 0, height: 0 });
        if (!this.FirstInput.Shift && !this.Selection.IsEmpty) {
            this.Selection.Clear();
            this.View.batchDraw();
        }
    };
    TuToolRubberBanding.prototype.canStart = function () {
        if (!this.View.CanSelectObjects()) {
            return false;
        }
        if (this.LastInput.IsContextButton) {
            return false;
        }
        if (!this.isBeyondDragSize()) {
            return false;
        }
        return this.View.pickObject(true, false, this.FirstInput.DocPoint, true) == null;
    };
    TuToolRubberBanding.prototype.computeRubberBandBox = function () {
        var docPoint = this.FirstInput.DocPoint;
        var pointF = this.LastInput.DocPoint;
        var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGRectangle({ x: Math.min(pointF.X, docPoint.X), y: Math.min(pointF.Y, docPoint.Y), width: Math.abs(pointF.X - docPoint.X), height: Math.abs(pointF.Y - docPoint.Y) });
        return this.View.convertDocToView(rectangleF);
    };
    TuToolRubberBanding.prototype.doMouseDown = function () {
        if (this.canStart()) {
            this.activate();
        }
    };
    TuToolRubberBanding.prototype.doMouseMove = function () {
        if (!this.Active) {
            if (this.Modal) {
                return;
            }
            this.activate();
            return;
        }
        this.Box = this.computeRubberBandBox();
        this.View.drawXorBox(this.Box, true);
        if (this.AutoScrolling) {
            this.View.doAutoScroll(this.LastInput.ViewPoint);
        }
    };
    TuToolRubberBanding.prototype.doMouseUp = function () {
        if (this.Active) {
            this.Box = this.computeRubberBandBox();
            this.doRubberBand(this.Box);
        }
        this.stopTool();
    };
    TuToolRubberBanding.prototype.doRubberBand = function (box) {
        if (!this.isBeyondDragSize()) {
            this.doSelect(this.LastInput);
            this.doClick(this.LastInput);
            return;
        }
        var doc = this.View.convertViewToDoc(box);
        this.View.selectInRectangle(doc);
    };
    TuToolRubberBanding.prototype.stop = function () {
        this.View.drawXorBox(this.Box, false);
        this.View.stopAutoScroll();
        this.Active = false;
    };
    TuToolRubberBanding = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolRubberBanding,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuToolRubberBanding
            ]
        })
    ], TuToolRubberBanding);
    return TuToolRubberBanding;
}(_TuTool__WEBPACK_IMPORTED_MODULE_0__.TuTool));



/***/ }),

/***/ "./src/TuTool/TuToolSelecting.ts":
/*!***************************************!*\
  !*** ./src/TuTool/TuToolSelecting.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuToolSelecting": () => (/* binding */ TuToolSelecting)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuTool__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuTool */ "./src/TuTool/TuTool.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TuToolSelecting = /** @class */ (function (_super) {
    __extends(TuToolSelecting, _super);
    function TuToolSelecting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuToolSelecting.prototype.GetType = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolSelecting);
    };
    TuToolSelecting.prototype.start = function () {
        this.doSelect(this.LastInput);
        this.doClick(this.LastInput);
        this.stopTool();
        this.View.batchDraw();
    };
    TuToolSelecting = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolSelecting,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuToolSelecting,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuTool,
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.ITuTool
            ]
        })
    ], TuToolSelecting);
    return TuToolSelecting;
}(_TuTool__WEBPACK_IMPORTED_MODULE_2__.TuTool));



/***/ }),

/***/ "./src/TuViewDisableKeys.ts":
/*!**********************************!*\
  !*** ./src/TuViewDisableKeys.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewDisableKeys": () => (/* binding */ TuViewDisableKeys)
/* harmony export */ });
var TuViewDisableKeys;
(function (TuViewDisableKeys) {
    TuViewDisableKeys[TuViewDisableKeys["None"] = 0] = "None";
    TuViewDisableKeys[TuViewDisableKeys["ArrowMove"] = 1] = "ArrowMove";
    TuViewDisableKeys[TuViewDisableKeys["CancelDeselects"] = 2] = "CancelDeselects";
    TuViewDisableKeys[TuViewDisableKeys["SelectAll"] = 4] = "SelectAll";
    TuViewDisableKeys[TuViewDisableKeys["SelectsByFirstChar"] = 8] = "SelectsByFirstChar";
    TuViewDisableKeys[TuViewDisableKeys["Delete"] = 16] = "Delete";
    TuViewDisableKeys[TuViewDisableKeys["Clipboard"] = 32] = "Clipboard";
    TuViewDisableKeys[TuViewDisableKeys["Edit"] = 64] = "Edit";
    TuViewDisableKeys[TuViewDisableKeys["Page"] = 128] = "Page";
    TuViewDisableKeys[TuViewDisableKeys["Home"] = 256] = "Home";
    TuViewDisableKeys[TuViewDisableKeys["End"] = 512] = "End";
    TuViewDisableKeys[TuViewDisableKeys["Undo"] = 1024] = "Undo";
    TuViewDisableKeys[TuViewDisableKeys["ArrowScroll"] = 2048] = "ArrowScroll";
    TuViewDisableKeys[TuViewDisableKeys["All"] = 4095] = "All";
})(TuViewDisableKeys || (TuViewDisableKeys = {}));


/***/ }),

/***/ "./src/TuView/Animation.ts":
/*!*********************************!*\
  !*** ./src/TuView/Animation.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tuvalRequestAnimFrame": () => (/* binding */ tuvalRequestAnimFrame),
/* harmony export */   "Animation": () => (/* binding */ Animation)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var now = (function () {
    if (window.performance && window.performance.now) {
        return function () {
            return window.performance.now();
        };
    }
    return function () {
        return new Date().getTime();
    };
})();
function FRAF(callback) {
    setTimeout(callback, 1000 / 60);
}
var RAF = (function () {
    return (window.requestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame ||
        window.oRequestAnimationFrame ||
        window.msRequestAnimationFrame ||
        FRAF);
})();
function requestAnimFrame() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return RAF.apply(window, arguments);
}
function tuvalRequestAnimFrame() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return RAF.apply(window, arguments);
}
var Animation = /** @class */ (function () {
    function Animation(func, layers) {
        this.myLayers = [];
        this.myFunc = func;
        this.setLayers(layers);
        this.id = Animation_1.animIdCounter++;
        this.frame = {
            time: 0,
            timeDiff: 0,
            lastTime: now()
        };
    }
    Animation_1 = Animation;
    Animation.prototype.setLayers = function (layers) {
        var lays = [];
        // if passing in no layers
        if (!layers) {
            lays = [];
        }
        else if (layers.length > 0) {
            // if passing in an array of Layers
            // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting
            // the length property to check for both cases
            lays = layers;
        }
        else {
            // if passing in a Layer
            lays = [layers];
        }
        this.myLayers = lays;
        return this;
    };
    Animation.prototype.getLayers = function () {
        return this.myLayers;
    };
    Animation.prototype.addLayer = function (layer) {
        var layers = this.myLayers;
        var len = layers.length;
        // don't add the layer if it already exists
        for (var n = 0; n < len; n++) {
            if (layers[n] === layer) {
                return false;
            }
        }
        this.myLayers.push(layer);
        return true;
    };
    Animation.prototype.isRunning = function () {
        var animations = Animation_1.animations;
        var len = animations.length;
        for (var n = 0; n < len; n++) {
            if (animations[n].id === this.id) {
                return true;
            }
        }
        return false;
    };
    Animation.prototype.start = function () {
        this.stop();
        this.frame.timeDiff = 0;
        this.frame.lastTime = now();
        Animation_1._addAnimation(this);
        return this;
    };
    Animation.prototype.stop = function () {
        Animation_1._removeAnimation(this);
        return this;
    };
    Animation.prototype._updateFrameObject = function (time) {
        this.frame.timeDiff = time - this.frame.lastTime;
        this.frame.lastTime = time;
        this.frame.time += this.frame.timeDiff;
        this.frame.frameRate = 1000 / this.frame.timeDiff;
    };
    Animation._addAnimation = function (anim) {
        this.animations.push(anim);
        Animation_1._handleAnimation();
    };
    Animation._removeAnimation = function (anim) {
        var id = anim.id;
        var animations = Animation_1.animations;
        var len = animations.length;
        for (var n = 0; n < len; n++) {
            if (animations[n].id === id) {
                this.animations.splice(n, 1);
                break;
            }
        }
    };
    Animation._runFrames = function () {
        var layerHash = {}, animations = Animation_1.animations, anim, layers, func, i, layersLen, layer, key, needRedraw;
        /*
         * loop through all animations and execute animation
         *  function.  if the animation object has specified node,
         *  we can add the node to the nodes hash to eliminate
         *  drawing the same node multiple times.  The node property
         *  can be the stage itself or a layer
         */
        /*
         * WARNING: don't cache animations.length because it could change while
         * the for loop is running, causing a JS error
         */
        for (var n = 0; n < animations.length; n++) {
            anim = animations[n];
            layers = anim.myLayers;
            func = anim.myFunc;
            anim._updateFrameObject(now());
            layersLen = layers.length;
            // if animation object has a function, execute it
            if (func) {
                // allow anim bypassing drawing
                needRedraw = func.call(anim, anim.frame) !== false;
            }
            else {
                needRedraw = true;
            }
            if (!needRedraw) {
                continue;
            }
            for (i = 0; i < layersLen; i++) {
                layer = layers[i];
                layer.drawView(true);
                /*  if (layer._id !== undefined) {
                     layerHash[layer._id] = layer;
                 } */
            }
        }
        /*   for (key in layerHash) {
              if (!layerHash.hasOwnProperty(key)) {
                  continue;
              }
              layerHash[key].draw();
          } */
    };
    ;
    Animation._animationLoop = function () {
        if (Animation_1.animations.length) {
            Animation_1._runFrames();
            requestAnimFrame(Animation_1._animationLoop);
        }
        else {
            Animation_1.animRunning = false;
        }
    };
    Animation._handleAnimation = function () {
        if (!Animation_1.animRunning) {
            Animation_1.animRunning = true;
            requestAnimFrame(Animation_1._animationLoop);
        }
    };
    var Animation_1;
    Animation.animations = [];
    Animation.animIdCounter = 0;
    Animation.animRunning = false;
    Animation = Animation_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_1__.Types.Animation,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_1__.Types.Animation
            ]
        })
    ], Animation);
    return Animation;
}());



/***/ }),

/***/ "./src/TuView/TuView.tsx":
/*!*******************************!*\
  !*** ./src/TuView/TuView.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuView": () => (/* binding */ TuView)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../TuDocument/TuDocument */ "./src/TuDocument/TuDocument.ts");
/* harmony import */ var _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../GeomUtilities */ "./src/GeomUtilities.ts");
/* harmony import */ var _TuLink_TuLink__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../TuLink/TuLink */ "./src/TuLink/TuLink.ts");
/* harmony import */ var _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TuViewSheetStyle */ "./src/TuView/TuViewSheetStyle.ts");
/* harmony import */ var _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TuInputEventArgs */ "./src/TuInputEventArgs.ts");
/* harmony import */ var _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../TuGrid/TuGrid */ "./src/TuGrid/TuGrid.ts");
/* harmony import */ var _TuSheet_TuSheet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../TuSheet/TuSheet */ "./src/TuSheet/TuSheet.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../TuRectangle/TuRectangle */ "./src/TuRectangle/TuRectangle.tsx");
/* harmony import */ var _TuSelection_TuSelection__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../TuSelection/TuSelection */ "./src/TuSelection/TuSelection.ts");
/* harmony import */ var _TuPickInRectangleStyle__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../TuPickInRectangleStyle */ "./src/TuPickInRectangleStyle.ts");
/* harmony import */ var _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../TuViewDisableKeys */ "./src/TuViewDisableKeys.ts");
/* harmony import */ var _TuLayer_TuLayerCollection__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../TuLayer/TuLayerCollection */ "./src/TuLayer/TuLayerCollection.ts");
/* harmony import */ var _TuTool_TuToolContext__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../TuTool/TuToolContext */ "./src/TuTool/TuToolContext.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../Spot */ "./src/Spot.ts");
/* harmony import */ var _TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./TuViewSnapStyle */ "./src/TuView/TuViewSnapStyle.ts");
/* harmony import */ var _TuGrid_TuViewGridStyle__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../TuGrid/TuViewGridStyle */ "./src/TuGrid/TuViewGridStyle.ts");
/* harmony import */ var _TuTool_TuToolAction__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../TuTool/TuToolAction */ "./src/TuTool/TuToolAction.ts");
/* harmony import */ var _TuTool_TuToolPanning__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../TuTool/TuToolPanning */ "./src/TuTool/TuToolPanning.ts");
/* harmony import */ var _TuTool_TuToolRelinking__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../TuTool/TuToolRelinking */ "./src/TuTool/TuToolRelinking.ts");
/* harmony import */ var _TuTool_TuToolResizing__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../TuTool/TuToolResizing */ "./src/TuTool/TuToolResizing.ts");
/* harmony import */ var _TuTool_TuToolLinkingNew__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../TuTool/TuToolLinkingNew */ "./src/TuTool/TuToolLinkingNew.ts");
/* harmony import */ var _TuTool_TuToolRubberBanding__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../TuTool/TuToolRubberBanding */ "./src/TuTool/TuToolRubberBanding.ts");
/* harmony import */ var _TuTool_TuToolDragging__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../TuTool/TuToolDragging */ "./src/TuTool/TuToolDragging.ts");
/* harmony import */ var _TuTool_TuToolSelecting__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../TuTool/TuToolSelecting */ "./src/TuTool/TuToolSelecting.ts");
/* harmony import */ var _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../TuTool/TuTool */ "./src/TuTool/TuTool.ts");
/* harmony import */ var _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./TuViewScrollBarVisibility */ "./src/TuView/TuViewScrollBarVisibility.ts");
/* harmony import */ var _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../TuCollection/TuCollection */ "./src/TuCollection/TuCollection.ts");
/* harmony import */ var _TuSubGraph_TuSubGraphBase__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../TuSubGraph/TuSubGraphBase */ "./src/TuSubGraph/TuSubGraphBase.ts");
/* harmony import */ var _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../TuObject/TuObjectEventArgs */ "./src/TuObject/TuObjectEventArgs.ts");
/* harmony import */ var _TuInputState__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../TuInputState */ "./src/TuInputState.ts");
/* harmony import */ var _TuDocument_TuUndoManagerCompoundEdit__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../TuDocument/TuUndoManagerCompoundEdit */ "./src/TuDocument/TuUndoManagerCompoundEdit.ts");
/* harmony import */ var _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../TuShape/TuShape */ "./src/TuShape/TuShape.tsx");
/* harmony import */ var _TuChangedEventArgs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../TuChangedEventArgs */ "./src/TuChangedEventArgs.ts");
/* harmony import */ var _TuSelection_TuSelectionEventArgs__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../TuSelection/TuSelectionEventArgs */ "./src/TuSelection/TuSelectionEventArgs.ts");
/* harmony import */ var _Forms_DragEventArgs__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../Forms/DragEventArgs */ "./src/Forms/DragEventArgs.ts");
/* harmony import */ var _Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../Forms/EventArgs */ "./src/Forms/EventArgs.ts");
/* harmony import */ var _Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../Forms/DataObject */ "./src/Forms/DataObject.ts");
/* harmony import */ var _Forms_Clipboard__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../Forms/Clipboard */ "./src/Forms/Clipboard.ts");
/* harmony import */ var _Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../Forms/SystemInformation */ "./src/Forms/SystemInformation.ts");
/* harmony import */ var _Forms_Border3DStyle__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../Forms/Border3DStyle */ "./src/Forms/Border3DStyle.ts");
/* harmony import */ var _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../Forms/Cursors */ "./src/Forms/Cursors.ts");
/* harmony import */ var _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../Forms/BorderStyle */ "./src/Forms/BorderStyle.ts");
/* harmony import */ var _Forms_FormWindowState__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../Forms/FormWindowState */ "./src/Forms/FormWindowState.ts");
/* harmony import */ var _Forms_DataFormats__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../Forms/DataFormats */ "./src/Forms/DataFormats.ts");
/* harmony import */ var _TuTool_TuToolManager__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../TuTool/TuToolManager */ "./src/TuTool/TuToolManager.ts");
/* harmony import */ var _Forms_PrintDocument__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../Forms/PrintDocument */ "./src/Forms/PrintDocument.ts");
/* harmony import */ var _Forms_CancelEventArgs__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../Forms/CancelEventArgs */ "./src/Forms/CancelEventArgs.ts");
/* harmony import */ var _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../Forms/DragDropEffects */ "./src/Forms/DragDropEffects.ts");
/* harmony import */ var _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../Forms/Keys */ "./src/Forms/Keys.ts");
/* harmony import */ var _TuDocument_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../TuDocument/TuDocumentEvents */ "./src/TuDocument/TuDocumentEvents.ts");
/* harmony import */ var _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../Forms/MouseEventArgs */ "./src/Forms/MouseEventArgs.ts");
/* harmony import */ var _Forms_PrintPageEventHandler__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../Forms/PrintPageEventHandler */ "./src/Forms/PrintPageEventHandler.ts");
/* harmony import */ var _Forms_DialogResult__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../Forms/DialogResult */ "./src/Forms/DialogResult.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _TuInvalidateCollection__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../TuInvalidateCollection */ "./src/TuInvalidateCollection.ts");
/* harmony import */ var _TuChangedEventHandler__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../TuChangedEventHandler */ "./src/TuChangedEventHandler.ts");
/* harmony import */ var _TuDragImage__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../TuDragImage */ "./src/TuDragImage.ts");
/* harmony import */ var _Forms_FrameStyle__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../Forms/FrameStyle */ "./src/Forms/FrameStyle.ts");
/* harmony import */ var _Forms_ScrollEventType__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../Forms/ScrollEventType */ "./src/Forms/ScrollEventType.ts");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../Forms/MouseButtons */ "./src/Forms/MouseButtons.ts");
/* harmony import */ var _Forms_ControlPaint__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../Forms/ControlPaint */ "./src/Forms/ControlPaint.ts");
/* harmony import */ var _Forms_PropertyChangedEventArgs__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../Forms/PropertyChangedEventArgs */ "./src/Forms/PropertyChangedEventArgs.ts");
/* harmony import */ var _TuObjectEnterLeaveEventArgs__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../TuObjectEnterLeaveEventArgs */ "./src/TuObjectEnterLeaveEventArgs.ts");
/* harmony import */ var _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./ViewRenderingMode */ "./src/TuView/ViewRenderingMode.ts");
/* harmony import */ var _TuViewSvgRenderrer__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./TuViewSvgRenderrer */ "./src/TuView/TuViewSvgRenderrer.tsx");
/* harmony import */ var _TuViewCanvasRenderrer__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./TuViewCanvasRenderrer */ "./src/TuView/TuViewCanvasRenderrer.tsx");
/* harmony import */ var _TuViewHtmlRenderrer__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./TuViewHtmlRenderrer */ "./src/TuView/TuViewHtmlRenderrer.tsx");
/* harmony import */ var _Animation__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./Animation */ "./src/TuView/Animation.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};











































































var doubleClickTimerHandle;
var switchCount = 0;
var TuView = /** @class */ (function (_super) {
    __extends(TuView, _super);
    function TuView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myUpdatingScrollBars = true;
        _this.myShowVertScroll = _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.IfNeeded;
        _this.myShowHorizScroll = _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.IfNeeded;
        _this.mySuppressPaint = 0;
        _this.myAutoScrollRegion = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(_Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.VerticalScrollBarWidth, _Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.HorizontalScrollBarHeight);
        _this.myAutoScrollTime = 100;
        _this.myAutoScrollDelay = 1000;
        _this.myAutoScrollTimerEnabled = false;
        _this.myAutoScrollPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(0, 0);
        _this.myActioning = false;
        _this.myPanning = false;
        _this.myPanningOrigin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint();
        _this.myToolTipText = "";
        _this.myHoverTimerEnabled = false;
        _this.myHoverDelay = 1000;
        _this.myHoverPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint();
        _this.myWindowState = _Forms_FormWindowState__WEBPACK_IMPORTED_MODULE_47__.FormWindowState.Normal;
        _this.BackgroundHover$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        _this.InvokeRequired = false;
        return _this;
        /*  @State()
         public myRenderers: List<TuXmlTransformer<any>>;
         public RegisterRenderer(renderer: TuXmlTransformer<any>) {
             this.myRenderers.Add(renderer);
         } */
    }
    TuView_1 = TuView;
    Object.defineProperty(TuView.prototype, "FrameWidth", {
        get: function () {
            return this.myFrameWidth;
        },
        set: function (value) {
            this.myFrameWidth = value;
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "FrameHeight", {
        get: function () {
            return this.myFrameHeight;
        },
        set: function (value) {
            this.myFrameHeight = value;
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "RenderingMode", {
        get: function () {
            return this.myRenderingMode;
        },
        set: function (value) {
            this.myRenderingMode = value;
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "BackColor", {
        get: function () {
            return this.myBackColor;
        },
        set: function (value) {
            this.myBackColor = value;
            ;
        },
        enumerable: false,
        configurable: true
    });
    TuView.prototype._renderView = function () {
        if (this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
            var result = [];
            return _TuViewSvgRenderrer__WEBPACK_IMPORTED_MODULE_70__.TuViewSvgRenderrer.Apply(this);
        }
        else if (this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Canvas) {
            var result = [];
            return _TuViewCanvasRenderrer__WEBPACK_IMPORTED_MODULE_71__.TuViewCanvasRenderrer.Apply(this);
        }
        else if (this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
            var result = [];
            return _TuViewHtmlRenderrer__WEBPACK_IMPORTED_MODULE_72__.TuViewHtmlRenderrer.Apply(this);
        }
    };
    TuView.prototype.CreateElements = function () {
        var _this = this;
        var style = {};
        style['width'] = this.Width + 'px';
        style['height'] = this.Height + 'px';
        style['cursor'] = this.Cursor.Name;
        //style['overflow'] = 'scroll';
        return (_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Teact.createElement("div", { style: style, 
            /* ondblclick={(evt: MouseEvent) => {
                let mouseButtons: MouseButtons;
                if (evt.button === 0) {
                    mouseButtons = MouseButtons.Left;
                } else if (evt.button === 2) {
                    mouseButtons = MouseButtons.Right;
                }
                let mouseEvent;
                if (this.RenderingMode === ViewRenderingMode.Canvas || this.RenderingMode === ViewRenderingMode.Svg) {
                    mouseEvent = new MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);

                } else if (this.RenderingMode === ViewRenderingMode.Html) {
                    const rect: DOMRect = (this.Ref as any).getBoundingClientRect();
                    mouseEvent = new MouseEventArgs(mouseButtons, 1, evt.clientX - rect.x, evt.clientY - rect.y, 0, evt);
                }

                this.OnDoubleClick(mouseEvent);
            }} */
            ondragenter: function (evt) {
                if (_this.myDragEntered) {
                    return;
                }
                _this.myDragEntered = true;
                var dataTransfer = evt.dataTransfer;
                //  const id = currentDataObject; //evt.dataTransfer.getData('text');
                if (_Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject.CurrentDataObject == null) {
                    dataTransfer.effectAllowed = 'none';
                    return;
                }
                var dataObject = _Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject.CurrentDataObject; //new DataObject(id, dataTransfer);
                var mouseButtons;
                if (evt.button === 0) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Left;
                }
                else if (evt.button === 2) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Right;
                }
                var mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Canvas || _this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                }
                else if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                    var rect = _this.Ref.getBoundingClientRect();
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.clientX - rect.x, evt.clientY - rect.y, 0, evt);
                    //console.log(evt.clientX - rect.x, evt.clientY - rect.y);
                }
                var dragEventArgs = new _Forms_DragEventArgs__WEBPACK_IMPORTED_MODULE_39__.DragEventArgs(dataObject, 0, mouseEvent.X, mouseEvent.Y, _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.All, _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.All);
                _this.onDragEnter(dragEventArgs);
            }, ondragover: function (evt) {
                var dataTransfer = evt.dataTransfer;
                //const id = currentDataObject; //evt.dataTransfer.getData('text');
                if (_Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject.CurrentDataObject == null) {
                    dataTransfer.effectAllowed = 'none';
                    return;
                }
                var dataObject = _Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject.CurrentDataObject; //new DataObject(id, dataTransfer);
                var mouseButtons;
                if (evt.button === 0) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Left;
                }
                else if (evt.button === 2) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Right;
                }
                var mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Canvas || _this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                }
                else if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                    var rect = _this.Ref.getBoundingClientRect();
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.clientX - rect.x, evt.clientY - rect.y, 0, evt);
                    //console.log(evt.clientX - rect.x, evt.clientY - rect.y);
                }
                var dragEventArgs = new _Forms_DragEventArgs__WEBPACK_IMPORTED_MODULE_39__.DragEventArgs(dataObject, 0, mouseEvent.X, mouseEvent.Y, _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.All, _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.All);
                _this.onDragOver(dragEventArgs);
                if (evt.preventDefault) {
                    evt.preventDefault(); // Necessary. Allows us to drop.
                }
                return false;
            }, ondrop: function (evt) {
                _this.myDragEntered = false;
                var dataTransfer = evt.dataTransfer;
                // const id = currentDataObject; //evt.dataTransfer.getData('text');
                if (_Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject.CurrentDataObject == null) {
                    dataTransfer.effectAllowed = 'none';
                    return;
                }
                var dataObject = _Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject.CurrentDataObject; //new DataObject(id, dataTransfer);
                var mouseButtons;
                if (evt.button === 0) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Left;
                }
                else if (evt.button === 2) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Right;
                }
                var mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Canvas || _this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                }
                else if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                    var rect = _this.Ref.getBoundingClientRect();
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.clientX - rect.x, evt.clientY - rect.y, 0, evt);
                    //console.log(evt.clientX - rect.x, evt.clientY - rect.y);
                }
                var dragEventArgs = new _Forms_DragEventArgs__WEBPACK_IMPORTED_MODULE_39__.DragEventArgs(dataObject, 0, mouseEvent.X, mouseEvent.Y, _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.All, _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.All);
                _this.onDragDrop(dragEventArgs);
                _Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject.CurrentDataObject = null; // reset data object
            }, onmousedown: function (evt) {
                var mouseButtons;
                if (evt.button === 0) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Left;
                }
                else if (evt.button === 2) {
                    mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Right;
                }
                // const mouseEvent = new MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                var mouseEvent;
                if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Canvas || _this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                }
                else if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                    var rect = _this.Ref.getBoundingClientRect();
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.clientX - rect.x, evt.clientY - rect.y, 0, evt);
                    //console.log(evt.clientX - rect.x, evt.clientY - rect.y);
                }
                _this.onMouseDown(mouseEvent);
                if (switchCount === 0) {
                    doubleClickTimerHandle = setTimeout(function () {
                        switchCount = 0;
                    }, 500);
                    switchCount++;
                }
                else {
                    switchCount++;
                }
            }, onmousemove: function (evt) {
                var mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Left;
                var mouseEvent;
                if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Canvas || _this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                }
                else if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                    var rect = _this.Ref.getBoundingClientRect();
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.clientX - rect.x, evt.clientY - rect.y, 0, evt);
                    //console.log(evt.clientX - rect.x, evt.clientY - rect.y);
                }
                //if (evt.shiftKey) {
                _this.onMouseMove(mouseEvent);
            }, onmouseup: function (evt) {
                var mouseButtons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Left;
                var mouseEvent;
                //const mouseEvent = new MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Canvas || _this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.offsetX, evt.offsetY, 0, evt);
                }
                else if (_this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                    var rect = _this.Ref.getBoundingClientRect();
                    mouseEvent = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(mouseButtons, 1, evt.clientX - rect.x, evt.clientY - rect.y, 0, evt);
                    // console.log(evt.clientX - rect.x, evt.clientY - rect.y);
                }
                if (switchCount === 0) { // timer is reseted.
                    _this.onMouseUp(mouseEvent);
                }
                else if (switchCount === 1) {
                    switchCount++;
                    _this.onMouseUp(mouseEvent);
                }
                else if (switchCount === 3) {
                    clearTimeout(doubleClickTimerHandle);
                    switchCount = 0;
                    _this.OnDoubleClick(mouseEvent);
                }
            } }, this._renderView()));
        /*  return (
             <svg ref={(e) => this.Ref = e} width={this.Width} height={this.Height} viewBox={`0 0 ${this.Width} ${this.Height}`} xmlns="http://www.w3.org/2000/svg">
                 <defs>
                     <filter id="drop-shadow" height="200%" width="200%" x="-50%" y="-50%" filterUnits="objectBoundingBox">
                         <feOffset dx="0" dy="2" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>
                         <feGaussianBlur stdDeviation="1.5" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>
                         <feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.075 0" in="shadowBlurOuter1" type="matrix" result="shadowMatrixOuter1"></feColorMatrix>
                         <feMerge><feMergeNode in="shadowMatrixOuter1"></feMergeNode>
                             <feMergeNode in="SourceGraphic"></feMergeNode></feMerge>
                     </filter>
                 </defs>
                 {this.renderCanvas()}
             </svg>
         ); */
    };
    Object.defineProperty(TuView.prototype, "BorderSize", {
        get: function () {
            return this.myBorderSize;
        },
        set: function (value) {
            this.myBorderSize = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "BackgroundBrush", {
        get: function () {
            return this.myBackgroundBrush;
        },
        set: function (value) {
            this.myBackgroundBrush = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "ClientRectangle", {
        get: function () {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(0, 0, this.Width, this.Height);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "Visible", {
        get: function () {
            return this.myVisible;
        },
        set: function (value) {
            this.myVisible = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "Width", {
        get: function () {
            return this.myWidth;
        },
        set: function (value) {
            this.myWidth = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "Height", {
        get: function () {
            return this.myHeight;
        },
        set: function (value) {
            this.myHeight = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "Controls", {
        get: function () {
            return this.myControls;
        },
        set: function (value) {
            this.myControls = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "Cursor", {
        get: function () {
            return this.myCursor;
        },
        set: function (value) {
            this.myCursor = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "DefaultCursor", {
        get: function () {
            return this.getDefaultCursor();
        },
        set: function (value) {
            this.setDefaultCursor(value);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "DisplayRectangle", {
        get: function () {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(0, 0, this.Width, this.Height);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "AllowCopy", {
        //#region [Property] AllowCopy
        get: function () {
            return this.getAllowCopy();
        },
        set: function (value) {
            this.setAllowCopy(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowCopy = function () {
        return this.myAllowCopy;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowCopy = function (value) {
        if (this.myAllowCopy !== value) {
            this.myAllowCopy = value;
            this.raisePropertyChangedEvent("AllowCopy");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowDelete", {
        //#endregion
        //#region [Property] AllowDelete
        get: function () {
            return this.getAllowDelete();
        },
        set: function (value) {
            this.setAllowDelete(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowDelete = function () {
        return this.myAllowDelete;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowDelete = function (value) {
        if (this.myAllowDelete !== value) {
            this.myAllowDelete = value;
            this.raisePropertyChangedEvent("AllowDelete");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowDragOut", {
        //#endregion
        //#region [Property] AllowDragOut
        get: function () {
            return this.getAllowDragOut();
        },
        set: function (value) {
            this.setAllowDragOut(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowDragOut = function () {
        return this.myAllowDragOut;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowDragOut = function (value) {
        if (this.myAllowDragOut !== value) {
            this.myAllowDragOut = value;
            this.raisePropertyChangedEvent("AllowDragOut");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowDrop", {
        //#endregion
        //#region [Property] AllowDrop
        get: function () {
            return this.getAllowDrop();
        },
        set: function (value) {
            this.setAllowDrop(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowDrop = function () {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('getAllowDrop');
        // return super.GetAllowDrop();
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowDrop = function (value) {
        try {
            this.AllowDragOut = false;
            //this.initAllowDrop2(value);
        }
        catch (exception) {
            this.AllowDragOut = false;
        }
    };
    Object.defineProperty(TuView.prototype, "AllowEdit", {
        //#endregion
        //#region [Property] AllowEdit
        get: function () {
            return this.getAllowEdit();
        },
        set: function (value) {
            this.setAllowEdit(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowEdit = function () {
        return this.myAllowEdit;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowEdit = function (value) {
        if (this.myAllowEdit !== value) {
            this.myAllowEdit = value;
            this.raisePropertyChangedEvent("AllowEdit");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowInsert", {
        //#endregion
        //#region [Property] AllowInsert
        get: function () {
            return this.getAllowInsert();
        },
        set: function (value) {
            this.setAllowInsert(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowInsert = function () {
        return this.myAllowInsert;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowInsert = function (value) {
        if (this.myAllowInsert !== value) {
            this.myAllowInsert = value;
            this.raisePropertyChangedEvent("AllowInsert");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowKey", {
        //#endregion
        //#region [Property] AllowKey
        get: function () {
            return this.getAllowKey();
        },
        set: function (value) {
            this.setAllowKey(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowKey = function () {
        return this.myAllowKey;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowKey = function (value) {
        if (this.myAllowKey !== value) {
            this.myAllowKey = value;
            this.raisePropertyChangedEvent("AllowKey");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowLink", {
        //#endregion
        //#region [Property] AllowLink
        get: function () {
            return this.getAllowLink();
        },
        set: function (value) {
            this.setAllowLink(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowLink = function () {
        return this.myAllowLink;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowLink = function (value) {
        if (this.myAllowLink !== value) {
            this.myAllowLink = value;
            this.raisePropertyChangedEvent("AllowLink");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowMouse", {
        //#endregion
        //#region [Property] AllowMouse
        get: function () {
            return this.getAllowMouse();
        },
        set: function (value) {
            this.setAllowMouse(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowMouse = function () {
        return this.myAllowMouse;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowMouse = function (value) {
        if (this.myAllowMouse !== value) {
            this.myAllowMouse = value;
            this.raisePropertyChangedEvent("AllowMouse");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowMove", {
        //#endregion
        //#region [Property] AllowMove
        get: function () {
            return this.getAllowMove();
        },
        set: function (value) {
            this.setAllowMove(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowMove = function () {
        return this.myAllowMove;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowMove = function (value) {
        if (this.myAllowMove !== value) {
            this.myAllowMove = value;
            this.raisePropertyChangedEvent("AllowMove");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowReshape", {
        //#endregion
        //#region [Property] AllowReshape
        get: function () {
            return this.getAllowReshape();
        },
        set: function (value) {
            this.setAllowReshape(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowReshape = function () {
        return this.myAllowReshape;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowReshape = function (value) {
        if (this.myAllowReshape !== value) {
            this.myAllowReshape = value;
            this.raisePropertyChangedEvent("AllowReshape");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowResize", {
        //#endregion
        //#region [Property] AllowResize
        get: function () {
            return this.getAllowResize();
        },
        set: function (value) {
            this.setAllowResize(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowResize = function () {
        return this.myAllowResize;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowResize = function (value) {
        if (this.myAllowResize !== value) {
            this.myAllowResize = value;
            this.raisePropertyChangedEvent("AllowResize");
        }
    };
    Object.defineProperty(TuView.prototype, "AllowSelect", {
        //#endregion
        //#region [Property] AllowSelect
        get: function () {
            return this.getAllowSelect();
        },
        set: function (value) {
            this.setAllowSelect(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAllowSelect = function () {
        return this.myAllowSelect;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAllowSelect = function (value) {
        if (this.myAllowSelect !== value) {
            this.myAllowSelect = value;
            this.raisePropertyChangedEvent("AllowSelect");
        }
    };
    Object.defineProperty(TuView.prototype, "ArrowMoveLarge", {
        //#endregion
        //#region [Property] ArrowMoveLarge
        get: function () {
            return this.getArrowMoveLarge();
        },
        set: function (value) {
            this.setArrowMoveLarge(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getArrowMoveLarge = function () {
        return this.myArrowMoveLarge;
    };
    /**
    * @hidden
    */
    TuView.prototype.setArrowMoveLarge = function (value) {
        if (this.myArrowMoveLarge !== value) {
            this.myArrowMoveLarge = value;
            this.raisePropertyChangedEvent("ArrowMoveLarge");
        }
    };
    Object.defineProperty(TuView.prototype, "ArrowMoveSmall", {
        //#endregion
        //#region [Property] ArrowMoveSmall
        get: function () {
            return this.getArrowMoveSmall();
        },
        set: function (value) {
            this.setArrowMoveSmall(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getArrowMoveSmall = function () {
        return this.myArrowMoveSmall;
    };
    /**
    * @hidden
    */
    TuView.prototype.setArrowMoveSmall = function (value) {
        if (this.myArrowMoveSmall !== value) {
            this.myArrowMoveSmall = value;
            this.raisePropertyChangedEvent("ArrowMoveSmall");
        }
    };
    Object.defineProperty(TuView.prototype, "AutoPanRegion", {
        //#endregion
        //#region [Property] AutoPanRegion
        get: function () {
            return this.getAutoPanRegion();
        },
        set: function (value) {
            this.setAutoPanRegion(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAutoPanRegion = function () {
        return this.myAutoPanRegion;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAutoPanRegion = function (value) {
        if (this.myAutoPanRegion.NotEquals(value)) {
            if (value.Width < 0 || value.Height < 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("New Size value for TuView.AutoPanRegion must have non-negative dimensions");
            }
            this.myAutoPanRegion = value;
            this.raisePropertyChangedEvent("AutoPanRegion");
        }
    };
    Object.defineProperty(TuView.prototype, "AutoScrollDelay", {
        //#endregion
        //#region [Property] AutoScrollDelay
        get: function () {
            return this.getAutoScrollDelay();
        },
        set: function (value) {
            this.setAutoScrollDelay(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAutoScrollDelay = function () {
        return this.myAutoScrollDelay;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAutoScrollDelay = function (value) {
        if (this.myAutoScrollDelay != value && value >= 0) {
            this.myAutoScrollDelay = value;
            this.raisePropertyChangedEvent("AutoScrollDelay");
        }
    };
    Object.defineProperty(TuView.prototype, "AutoScrollRegion", {
        //#endregion
        //#region [Property] AutoScrollRegion
        get: function () {
            return this.getAutoScrollRegion();
        },
        set: function (value) {
            this.setAutoScrollRegion(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAutoScrollRegion = function () {
        return this.myAutoScrollRegion;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAutoScrollRegion = function (value) {
        if (this.myAutoScrollRegion.NotEquals(value)) {
            if (value.Width < 0 || value.Height < 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("New Size value for TuView.AutoScrollRegion must have non-negative dimensions");
            }
            this.myAutoScrollRegion = value;
            this.raisePropertyChangedEvent("AutoScrollRegion");
        }
    };
    Object.defineProperty(TuView.prototype, "AutoScrollTime", {
        //#endregion
        //#region [Property] AutoScrollTime
        get: function () {
            return this.getAutoScrollTime();
        },
        set: function (value) {
            this.setAutoScrollTime(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getAutoScrollTime = function () {
        return this.myAutoScrollTime;
    };
    /**
    * @hidden
    */
    TuView.prototype.setAutoScrollTime = function (value) {
        if (this.myAutoScrollTime !== value && value >= 0) {
            this.myAutoScrollTime = value;
            this.raisePropertyChangedEvent("AutoScrollTime");
        }
    };
    Object.defineProperty(TuView.prototype, "BackgroundGrid", {
        //#endregion
        //#region [Property] BackgroundGrid
        get: function () {
            return this.getBackgroundGrid();
        },
        set: function (value) {
            this.setBackgroundGrid(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getBackgroundGrid = function () {
        return this.myBackgroundGrid;
    };
    /**
    * @hidden
    */
    TuView.prototype.setBackgroundGrid = function (value) {
        var goGrid = this.myBackgroundGrid;
        if (goGrid !== value) {
            var backgroundLayer = this.BackgroundLayer;
            if (goGrid != null) {
                if (goGrid.Layer != null) {
                    backgroundLayer = goGrid.Layer;
                }
                goGrid.Remove();
            }
            this.myBackgroundGrid = value;
            backgroundLayer.Add(this.myBackgroundGrid);
            if (goGrid != null && value != null) {
                value.Visible = goGrid.Visible;
                value.Printable = goGrid.Printable;
                value.Selectable = goGrid.Selectable;
            }
            this.raisePropertyChangedEvent("Grid");
        }
    };
    Object.defineProperty(TuView.prototype, "BackgroundHasSheet", {
        //#endregion
        //#region [Property] BackgroundHasSheet
        get: function () {
            return this.getBackgroundHasSheet();
        },
        set: function (value) {
            this.setBackgroundHasSheet(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getBackgroundHasSheet = function () {
        return this.Sheet != null;
    };
    /**
    * @hidden
    */
    TuView.prototype.setBackgroundHasSheet = function (value) {
        if (!value) {
            this.Sheet = null;
        }
        else if (this.Sheet == null) {
            this.Sheet = this.createSheet();
            if (this.Sheet != null) {
                this.myPreviousCenter = this.Sheet.Center;
            }
            this.updateExtent();
            return;
        }
    };
    Object.defineProperty(TuView.prototype, "BackgroundLayer", {
        //#endregion
        //#region [Property] BackgroundLayer
        get: function () {
            return this.getBackgroundLayer();
        },
        set: function (value) {
            this.setBackgroundLayer(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
    * @hidden
    */
    TuView.prototype.getBackgroundLayer = function () {
        return this.myBackgroundLayer;
    };
    /**
    * @hidden
    */
    TuView.prototype.setBackgroundLayer = function (value) {
        if (this.myBackgroundLayer !== value) {
            if (value == null || value.View != this) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("The new value for TuView.BackgroundLayer must belong to this view.");
            }
            this.myBackgroundLayer = value;
            this.raisePropertyChangedEvent("BackgroundLayer");
        }
    };
    Object.defineProperty(TuView.prototype, "Border3DStyle", {
        //#endregion
        //#region [Property] Border3DStyle
        get: function () {
            return this.getBorder3DStyle();
        },
        set: function (value) {
            this.setBorder3DStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getBorder3DStyle = function () {
        return this.myBorder3DStyle;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setBorder3DStyle = function (value) {
        if (this.myBorder3DStyle != value) {
            this.myBorder3DStyle = value;
            this.raisePropertyChangedEvent("Border3DStyle");
        }
    };
    Object.defineProperty(TuView.prototype, "BorderStyle", {
        //#endregion
        //#region [Property] BorderStyle
        get: function () {
            return this.getBorderStyle();
        },
        set: function (value) {
            this.setBorderStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getBorderStyle = function () {
        return this.myBorderStyle;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setBorderStyle = function (value) {
        if (this.myBorderStyle != value) {
            this.myBorderStyle = value;
            this.updateBorderWidths();
            this.raisePropertyChangedEvent("BorderStyle");
        }
    };
    Object.defineProperty(TuView.prototype, "BottomBar", {
        //#endregion
        //#region [Property] BottomBar
        get: function () {
            return this.getBottomBar();
        },
        set: function (value) {
            this.setBottomBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getBottomBar = function () {
        return this.myBottomBar;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setBottomBar = function (value) {
        var control = this.myBottomBar;
        if (control !== value) {
            if (value != null && value.Parent != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("new Control already belongs to a Control; remove it from there first");
            }
            if (control != null) {
                var hScrollBar = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(control, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuHScrollBarElement);
                if (hScrollBar != null) {
                    hScrollBar.Scroll.remove(this.myHorizScrollHandler);
                }
                this.Controls.Remove(control);
            }
            this.myBottomBar = value;
            if (value != null) {
                this.Controls.Add(value);
                var width = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(value, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuHScrollBarElement);
                if (width != null) {
                    width.SmallChange = this.ScrollSmallChange.Width;
                    width.Scroll.add(this.myHorizScrollHandler);
                }
            }
            this.layoutScrollBars(true);
            this.raisePropertyChangedEvent("BottomBar");
        }
    };
    Object.defineProperty(TuView.prototype, "BottomLeftCorner", {
        //#endregion
        //#region [Property] BottomLeftCorner
        get: function () {
            return this.getBottomLeftCorner();
        },
        set: function (value) {
            this.setBottomLeftCorner(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getBottomLeftCorner = function () {
        return this.myBottomLeftCorner;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setBottomLeftCorner = function (value) {
        var control = this.myBottomLeftCorner;
        if (control !== value) {
            if (value != null && value.Parent != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("new Control already belongs to a Control; remove it from there first");
            }
            if (control != null) {
                this.Controls.Remove(control);
            }
            this.myBottomLeftCorner = value;
            if (value != null) {
                // TODO
                this.Controls.Add(value);
            }
            this.layoutScrollBars(true);
            this.raisePropertyChangedEvent("BottomLeftCorner");
        }
    };
    Object.defineProperty(TuView.prototype, "BottomRightCorner", {
        //#endregion
        //#region [Property] BottomRightCorner
        get: function () {
            return this.getBottomRightCorner();
        },
        set: function (value) {
            this.setBottomRightCorner(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getBottomRightCorner = function () {
        return this.myBottomLeftCorner;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setBottomRightCorner = function (value) {
        var control = this.myBottomRightCorner;
        if (control !== value) {
            if (value != null && value.Parent != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("new Control already belongs to a Control; remove it from there first");
            }
            if (control != null) {
                this.Controls.Remove(control);
            }
            this.myBottomRightCorner = value;
            if (value != null) {
                this.Controls.Add(value);
            }
            this.layoutScrollBars(true);
            this.raisePropertyChangedEvent("BottomRightCorner");
        }
    };
    Object.defineProperty(TuView.prototype, "BoundingHandlePenWidth", {
        //#endregion
        //#region [Property] BoundingHandlePenWidth
        get: function () {
            return this.getBoundingHandlePenWidth();
        },
        set: function (value) {
            this.setBoundingHandlePenWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getBoundingHandlePenWidth = function () {
        return this.myBoundingHandlePenWidth;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setBoundingHandlePenWidth = function (value) {
        if (this.myBoundingHandlePenWidth !== value) {
            this.myBoundingHandlePenWidth = value;
            this.raisePropertyChangedEvent("BoundingHandlePenWidth");
        }
    };
    Object.defineProperty(TuView.prototype, "CompositingQuality", {
        //#endregion
        //#region [Property] CompositingQuality
        get: function () {
            return this.getCompositingQuality();
        },
        set: function (value) {
            this.setCompositingQuality(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getCompositingQuality = function () {
        return this.myCompositingQuality;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setCompositingQuality = function (value) {
        if (this.myCompositingQuality !== value && value !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.CompositingQuality.Invalid) {
            this.myCompositingQuality = value;
            this.raisePropertyChangedEvent("CompositingQuality");
        }
    };
    Object.defineProperty(TuView.prototype, "ContextClickSingleSelection", {
        //#endregion
        //#region [Property] ContextClickSingleSelection
        get: function () {
            return this.getContextClickSingleSelection();
        },
        set: function (value) {
            this.setContextClickSingleSelection(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getContextClickSingleSelection = function () {
        var goToolContext = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.findMouseTool((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolContext), true), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolContext);
        if (goToolContext == null) {
            return true;
        }
        return goToolContext.SingleSelection;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setContextClickSingleSelection = function (value) {
        var goToolContext = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.findMouseTool((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolContext), true), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolContext);
        if (goToolContext != null) {
            goToolContext.SingleSelection = value;
        }
    };
    Object.defineProperty(TuView.prototype, "CursorName", {
        //#endregion
        //#region [Property] CursorName
        get: function () {
            return this.getCursorName();
        },
        set: function (value) {
            this.setCursorName(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getCursorName = function () {
        var cursor = this.Cursor;
        if (cursor == this.DefaultCursor) {
            return "default";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.AppStarting) {
            return "appstarting";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Arrow) {
            return "arrow";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Cross) {
            return "crosshair";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Hand) {
            return "pointer";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Help) {
            return "help";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.HSplit) {
            return "row-resize";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.IBeam) {
            return "text";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.No) {
            return "not-allowed";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.NoMove2D) {
            return "nomove2d";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.NoMoveHoriz) {
            return "nomovehoriz";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.NoMoveVert) {
            return "nomovevert";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanEast) {
            return "paneast";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanNE) {
            return "panne";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanNorth) {
            return "pannorth";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanNW) {
            return "pannw";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanSE) {
            return "panse";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanSouth) {
            return "pansouth";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanSW) {
            return "pansw";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanWest) {
            return "panwest";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeAll) {
            return "move";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNESW) {
            return "ne-resize";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNS) {
            return "s-resize";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNWSE) {
            return "se-resize";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeWE) {
            return "e-resize";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.UpArrow) {
            return "uparrow";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.VSplit) {
            return "col-resize";
        }
        if (cursor == _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.WaitCursor) {
            return "wait";
        }
        return undefined;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setCursorName = function (value) {
        var noMove2D = undefined;
        var str = this.standardizeCursorName(value);
        if (str == "nomove2d") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.NoMove2D;
        }
        else if (str == "move") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeAll;
        }
        else if (str == "help") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Help;
        }
        else if (str == "n-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNS;
        }
        else if (str == "appstarting") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.AppStarting;
        }
        else if (str == "pannorth") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanNorth;
        }
        else if (str == "sw-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNESW;
        }
        else if (str == "s-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNS;
        }
        else if (str == "nomovevert") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.NoMoveVert;
        }
        else if (str == "se-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNWSE;
        }
        else if (str == "wait") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.WaitCursor;
        }
        else if (str == "arrow") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Arrow;
        }
        else if (str == "default") {
            noMove2D = this.DefaultCursor;
        }
        else if (str == "e-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeWE;
        }
        else if (str == "pointer") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Hand;
        }
        else if (str == "paneast") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanEast;
        }
        else if (str == "nw-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNWSE;
        }
        else if (str == "nomovehoriz") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.NoMoveHoriz;
        }
        else if (str == "row-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.HSplit;
        }
        else if (str == "panwest") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanWest;
        }
        else if (str == "panne") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanNE;
        }
        else if (str == "text") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.IBeam;
        }
        else if (str == "crosshair") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Cross;
        }
        else if (str == "hand") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Hand;
        }
        else if (str == "pannw") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanNW;
        }
        else if (str == "panse") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanSE;
        }
        else if (str == "pansouth") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanSouth;
        }
        else if (str == "not-allowed") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.No;
        }
        else if (str == "ne-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeNESW;
        }
        else if (str == "col-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.VSplit;
        }
        else if (str == "pansw") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.PanSW;
        }
        else if (str == "w-resize") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.SizeWE;
        }
        else if (str == "uparrow") {
            noMove2D = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.UpArrow;
        }
        this.Cursor = noMove2D;
    };
    //#endregion
    //#region [Property] DefaultCursor
    /**
  * @hidden
  */
    TuView.prototype.getDefaultCursor = function () {
        //throw new NotImplementedException('getDefaultCursor');
        if (this.myDefaultCursor == null) {
            return _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Default;
        }
        return this.myDefaultCursor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDefaultCursor = function (value) {
        if (this.myDefaultCursor !== value) {
            this.myDefaultCursor = value;
            this.raisePropertyChangedEvent("DefaultCursor");
        }
    };
    Object.defineProperty(TuView.prototype, "DefaultTool", {
        //#endregion
        //#region [Property] DefaultTool
        get: function () {
            return this.getDefaultTool();
        },
        set: function (value) {
            this.setDefaultTool(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDefaultTool = function () {
        return this.myDefaultTool;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDefaultTool = function (value) {
        if (this.myDefaultTool !== value) {
            if (value == null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("New value for TuView.DefaultTool must not be null");
            }
            this.myDefaultTool = value;
            this.raisePropertyChangedEvent("DefaultTool");
        }
    };
    Object.defineProperty(TuView.prototype, "DisableKeys", {
        //#endregion
        //#region [Property] DisableKeys
        get: function () {
            return this.getDisableKeys();
        },
        set: function (value) {
            this.setDisableKeys(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDisableKeys = function () {
        return this.myDisableKeys;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDisableKeys = function (value) {
        if (this.myDisableKeys !== value) {
            this.myDisableKeys = value;
            this.raisePropertyChangedEvent("DisableKeys");
        }
    };
    //#endregion
    //#region [Property] DisplayRectangle
    /**
     * @hidden
     */
    TuView.prototype.getDisplayRectangle = function () {
        if (this.myViewSize.Width >= 0 && this.myViewSize.Height >= 0) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(this.myDisplayRectangle.X, this.myDisplayRectangle.Y, this.myViewSize.Width, this.myViewSize.Height);
        }
        if (this.myDisplayRectangle.Width >= 0 && this.myDisplayRectangle.Height >= 0) {
            return this.myDisplayRectangle;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(0, 0, this.Width, this.Height);
    };
    Object.defineProperty(TuView.prototype, "DocExtent", {
        //#endregion
        //#region [Property] DocExtent
        get: function () {
            return this.getDocExtent();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocExtent = function () {
        var docPosition = this.DocPosition;
        var docExtentSize = this.DocExtentSize;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(docPosition.X, docPosition.Y, docExtentSize.Width, docExtentSize.Height);
    };
    Object.defineProperty(TuView.prototype, "DocExtentCenter", {
        //#endregion
        //#region [Property] DocExtentCenter
        get: function () {
            return this.getDocExtentCenter();
        },
        set: function (value) {
            this.setDocExtentCenter(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocExtentCenter = function () {
        var docPosition = this.DocPosition;
        var docExtentSize = this.DocExtentSize;
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(docPosition.X + docExtentSize.Width / 2, docPosition.Y + docExtentSize.Height / 2);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDocExtentCenter = function (value) {
        var docExtentSize = this.DocExtentSize;
        this.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(value.X - docExtentSize.Width / 2, value.Y - docExtentSize.Height / 2);
    };
    Object.defineProperty(TuView.prototype, "DocExtentSize", {
        //#endregion
        //#region [Property] DocExtentSize
        get: function () {
            return this.getDocExtentSize();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocExtentSize = function () {
        return this.convertViewToDoc(this.DisplayRectangle.Size);
    };
    Object.defineProperty(TuView.prototype, "DocPosition", {
        //#endregion
        //#region [Property] DocPosition
        get: function () {
            return this.getDocPosition();
        },
        set: function (value) {
            this.setDocPosition(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocPosition = function () {
        return this.myOrigin.clone();
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDocPosition = function (value) {
        var pointF = this.myOrigin.clone();
        var pointF1 = this.limitDocPosition(value.clone());
        if (pointF.notEquals(pointF1)) {
            this.myOrigin = pointF1.clone();
            this.raisePropertyChangedEvent("DocPosition");
            var docExtent = this.DocExtent.clone();
            this.myPreviousCenter = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(docExtent.X + docExtent.Width / 2, docExtent.Y + docExtent.Height / 2);
        }
    };
    Object.defineProperty(TuView.prototype, "DocScale", {
        //#endregion
        //#region [Property] DocScale
        get: function () {
            return this.getDocScale();
        },
        set: function (value) {
            this.setDocScale(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocScale = function () {
        return this.myHorizScale;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDocScale = function (value) {
        var single = this.myHorizScale;
        var single1 = Math.max(9E-09, this.limitDocScale(value));
        if (single !== single1 || this.myVertScale !== single1) {
            this.myHorizScale = single1;
            this.myVertScale = single1;
            this.raisePropertyChangedEvent("DocScale");
            var docExtent = this.DocExtent;
            this.myPreviousCenter = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(docExtent.X + docExtent.Width / 2, docExtent.Y + docExtent.Height / 2);
            if (this.myMarquee != null) {
                this.myMarquee.Pen = undefined;
            }
        }
    };
    Object.defineProperty(TuView.prototype, "Document", {
        //#endregion
        //#region [Property] Document
        get: function () {
            return this.getDocument();
        },
        set: function (value) {
            this.setDocument(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocument = function () {
        return this.myDocument;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDocument = function (value) {
        if (value == null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("New value for TuView.Document must not be null");
        }
        var document = this.Document;
        if (value !== document) {
            if (document != null && this.myDocChangedEventHandler != null) {
                this.documentChangedSubscription.unsubscribe();
            }
            if (this.Tool != null) {
                this.doCancelMouse();
            }
            this.myCancelMouseDown = false;
            this.doEndEdit();
            if (this.Selection != null) {
                this.Selection.Clear();
            }
            this.myDocument = value;
            this.myDocumentChangedSubscription = value.Changed$.add(this.myDocChangedEventHandler.bind(this));
            this.raisePropertyChangedEvent("Document");
            this.initializeLayersFromDocument();
        }
    };
    Object.defineProperty(TuView.prototype, "DocumentSize", {
        //#endregion
        //#region [Property] DocumentSize
        get: function () {
            return this.getDocumentSize();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocumentSize = function () {
        var size = this.Document.Size;
        var width = size.Width;
        var shadowOffset = this.ShadowOffset;
        size.Width = width + Math.abs(shadowOffset.Width);
        var height = size.Height;
        shadowOffset = this.ShadowOffset;
        size.Height = height + Math.abs(shadowOffset.Height);
        if (this.SheetStyle === _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None) {
            if (!this.ShowsNegativeCoordinates) {
                var topLeft = this.Document.TopLeft;
                if (topLeft.X < 0) {
                    size.Width = size.Width + topLeft.X;
                }
                if (topLeft.Y < 0) {
                    size.Height = size.Height + topLeft.Y;
                }
            }
            return size;
        }
        if (this.Sheet == null) {
            var docExtentSize = this.DocExtentSize;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(size.Width + docExtentSize.Width, size.Height + docExtentSize.Height);
        }
        var center = this.Sheet.Center;
        var doc = this.convertViewToDoc(this.DisplayRectangle.Size);
        var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(center.X - doc.Width, center.Y - doc.Height, doc.Width * 2, doc.Height * 2);
        var pointF = this.Document.TopLeft;
        var rectangleF1 = _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.UnionRect(_GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.UnionRect(rectangleF, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(pointF.X, pointF.Y, size.Width, size.Height)), this.Sheet.Bounds.clone());
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(rectangleF1.Width, rectangleF1.Height);
    };
    Object.defineProperty(TuView.prototype, "DocumentTopLeft", {
        //#endregion
        //#region [Property] DocumentTopLeft
        get: function () {
            return this.getDocumentTopLeft();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDocumentTopLeft = function () {
        if (this.SheetStyle === _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None) {
            if (!this.ShowsNegativeCoordinates) {
                return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint();
            }
            var topLeft = this.Document.TopLeft;
            var shadowOffset = this.ShadowOffset;
            if (shadowOffset.Width < 0) {
                topLeft.X = topLeft.X + shadowOffset.Width;
            }
            if (shadowOffset.Height < 0) {
                topLeft.Y = topLeft.Y + shadowOffset.Height;
            }
            return topLeft;
        }
        if (this.Sheet == null) {
            var pointF = this.Document.TopLeft;
            var docExtentSize = this.DocExtentSize;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF.X - docExtentSize.Width / 2, pointF.Y - docExtentSize.Height / 2);
        }
        var size = this.Document.Size;
        var width = size.Width;
        var sizeF = this.ShadowOffset;
        size.Width = width + Math.abs(sizeF.Width);
        var height = size.Height;
        sizeF = this.ShadowOffset;
        size.Height = height + Math.abs(sizeF.Height);
        var center = this.Sheet.Center;
        var size1 = this.DisplayRectangle.Size;
        if (this.HorizontalScrollBar != null && this.HorizontalScrollBar.Visible && this.VerticalScrollBar != null) {
            size1.Width = size1.Width + this.VerticalScrollBar.Width;
        }
        if (this.VerticalScrollBar != null && this.VerticalScrollBar.Visible && this.HorizontalScrollBar != null) {
            size1.Height = size1.Height + this.HorizontalScrollBar.Height;
        }
        var doc = this.convertViewToDoc(size1);
        var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(center.X - doc.Width, center.Y - doc.Height, doc.Width * 2, doc.Height * 2);
        var topLeft1 = this.Document.TopLeft;
        var rectangleF1 = _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.UnionRect(_GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.UnionRect(rectangleF, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(topLeft1.X, topLeft1.Y, size.Width, size.Height)), this.Sheet.Bounds.clone());
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(rectangleF1.X, rectangleF1.Y);
    };
    Object.defineProperty(TuView.prototype, "DragRoutesRealtime", {
        //#endregion
        //#region [Property] DragRoutesRealtime
        get: function () {
            return this.getDragRoutesRealtime();
        },
        set: function (value) {
            this.setDragRoutesRealtime(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDragRoutesRealtime = function () {
        return this.myDragRoutesRealtime;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDragRoutesRealtime = function (value) {
        this.myDragRoutesRealtime = value;
    };
    Object.defineProperty(TuView.prototype, "DragsRealtime", {
        //#endregion
        //#region [Property] DragsRealtime
        get: function () {
            return this.getDragsRealtime();
        },
        set: function (value) {
            this.setDragsRealtime(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDragsRealtime = function () {
        return this.myDragsRealtime;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDragsRealtime = function (value) {
        if (this.myDragsRealtime != value) {
            this.myDragsRealtime = value;
            this.raisePropertyChangedEvent("DragsRealtime");
        }
    };
    Object.defineProperty(TuView.prototype, "DrawsXorMode", {
        //#endregion
        //#region [Property] DrawsXorMode
        get: function () {
            return this.getDrawsXorMode();
        },
        set: function (value) {
            this.setDrawsXorMode(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getDrawsXorMode = function () {
        return this.myDrawsXorMode;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setDrawsXorMode = function (value) {
        if (this.myDrawsXorMode !== value) {
            this.myDrawsXorMode = value;
            this.raisePropertyChangedEvent("DrawsXorMode");
        }
    };
    Object.defineProperty(TuView.prototype, "EditControl", {
        //#endregion
        //#region [Property] EditControl
        get: function () {
            return this.getEditControl();
        },
        set: function (value) {
            this.setEditControl(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getEditControl = function () {
        return this.myEditControl;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setEditControl = function (value) {
        var goControl = this.myEditControl;
        if (goControl != value) {
            if (goControl != null && goControl.View === this) {
                goControl.Remove();
            }
            if (value != null) {
                this.myEditControl = value;
                this.Layers.Default.Add(value);
                this.myModalControl = value.getControl(this);
            }
        }
    };
    Object.defineProperty(TuView.prototype, "ExternalDragDropsOnEnter", {
        //#endregion
        //#region [Property] ExternalDragDropsOnEnter
        get: function () {
            return this.getExternalDragDropsOnEnter();
        },
        set: function (value) {
            this.setExternalDragDropsOnEnter(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getExternalDragDropsOnEnter = function () {
        return this.myExternalDragDropsOnEnter;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setExternalDragDropsOnEnter = function (value) {
        if (this.myExternalDragDropsOnEnter != value) {
            this.myExternalDragDropsOnEnter = value;
            this.raisePropertyChangedEvent("ExternalDragDropsOnEnter");
        }
    };
    Object.defineProperty(TuView.prototype, "FirstInput", {
        //#endregion
        //#region [Property] FirstInput
        get: function () {
            return this.getFirstInput();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getFirstInput = function () {
        return this.myFirstInput;
    };
    Object.defineProperty(TuView.prototype, "Grid", {
        //#endregion
        //#region [Property] Grid
        get: function () {
            return this.getGrid();
        },
        set: function (value) {
            this.setGrid(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGrid = function () {
        var grid = undefined;
        var sheet = this.Sheet;
        if (sheet != null) {
            grid = sheet.Grid;
        }
        if (grid == null) {
            grid = this.BackgroundGrid;
        }
        return grid;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGrid = function (value) {
        var sheet = this.Sheet;
        if (sheet != null) {
            sheet.Grid = value;
            return;
        }
        this.BackgroundGrid = value;
    };
    Object.defineProperty(TuView.prototype, "GridCellSize", {
        //#endregion
        //#region [Property] GridCellSize
        get: function () {
            return this.getGridCellSize();
        },
        set: function (value) {
            this.setGridCellSize(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridCellSize = function () {
        if (this.Grid != null) {
            return this.Grid.CellSize;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(50, 50);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridCellSize = function (value) {
        if (this.Grid != null) {
            this.Grid.CellSize = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridCellSizeHeight", {
        //#endregion
        //#region [Property] GridCellSizeHeight
        get: function () {
            return this.getGridCellSizeHeight();
        },
        set: function (value) {
            this.setGridCellSizeHeight(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridCellSizeHeight = function () {
        if (this.Grid == null) {
            return 50;
        }
        return this.Grid.CellSize.Height;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridCellSizeHeight = function (value) {
        if (this.Grid != null) {
            var grid = this.Grid;
            var cellSize = this.Grid.CellSize;
            grid.CellSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(cellSize.Width, value);
        }
    };
    Object.defineProperty(TuView.prototype, "GridCellSizeWidth", {
        //#endregion
        //#region [Property] GridCellSizeWidth
        get: function () {
            return this.getGridCellSizeWidth();
        },
        set: function (value) {
            this.setGridCellSizeWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridCellSizeWidth = function () {
        if (this.Grid == null) {
            return 50;
        }
        return this.Grid.CellSize.Width;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridCellSizeWidth = function (value) {
        if (this.Grid != null) {
            var grid = this.Grid;
            var cellSize = this.Grid.CellSize;
            grid.CellSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(value, cellSize.Height);
        }
    };
    Object.defineProperty(TuView.prototype, "GridLineColor", {
        //#endregion
        //#region [Property] GridLineColor
        get: function () {
            return this.getGridLineColor();
        },
        set: function (value) {
            this.setGridLineColor(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridLineColor = function () {
        if (this.Grid == null) {
            return _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray;
        }
        return this.Grid.LineColor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridLineColor = function (value) {
        if (this.Grid != null) {
            this.Grid.LineColor = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridLineDashPattern", {
        //#endregion
        //#region [Property] GridLineDashPattern
        get: function () {
            return this.getGridLineDashPattern();
        },
        set: function (value) {
            this.setGridLineDashPattern(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridLineDashPattern = function () {
        if (this.Grid == null) {
            return _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__.TuGrid.DefaultLineDashPattern;
        }
        return this.Grid.LineDashPattern;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridLineDashPattern = function (value) {
        if (this.Grid != null) {
            this.Grid.LineDashPattern = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridLineDashStyle", {
        //#endregion
        //#region [Property] GridLineDashStyle
        get: function () {
            return this.getGridLineDashStyle();
        },
        set: function (value) {
            this.setGridLineDashStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridLineDashStyle = function () {
        if (this.Grid == null) {
            return _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.DashStyle.Solid;
        }
        return this.Grid.LineDashStyle;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridLineDashStyle = function (value) {
        if (this.Grid != null) {
            this.Grid.LineDashStyle = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridLineWidth", {
        //#endregion
        //#region [Property] GridLineWidth
        get: function () {
            return this.getGridLineWidth();
        },
        set: function (value) {
            this.setGridLineWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridLineWidth = function () {
        if (this.Grid == null) {
            return 0;
        }
        return this.Grid.LineWidth;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridLineWidth = function (value) {
        if (this.Grid != null) {
            this.Grid.LineWidth = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridMajorLineColor", {
        //#endregion
        //#region [Property] GridMajorLineColor
        get: function () {
            return this.getGridMajorLineColor();
        },
        set: function (value) {
            this.setGridMajorLineColor(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridMajorLineColor = function () {
        if (this.Grid == null) {
            return _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Gray;
        }
        return this.Grid.MajorLineColor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridMajorLineColor = function (value) {
        if (this.Grid != null) {
            this.Grid.MajorLineColor = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridMajorLineDashPattern", {
        //#endregion
        //#region [Property] GridMajorLineDashPattern
        get: function () {
            return this.getGridMajorLineDashPattern();
        },
        set: function (value) {
            this.setGridMajorLineDashPattern(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridMajorLineDashPattern = function () {
        if (this.Grid == null) {
            return _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__.TuGrid.DefaultMajorLineDashPattern;
        }
        return this.Grid.MajorLineDashPattern;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridMajorLineDashPattern = function (value) {
        if (this.Grid != null) {
            this.Grid.MajorLineDashPattern = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridMajorLineDashStyle", {
        //#endregion
        //#region [Property] GridMajorLineDashStyle
        get: function () {
            return this.getGridMajorLineDashStyle();
        },
        set: function (value) {
            this.setGridMajorLineDashStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridMajorLineDashStyle = function () {
        if (this.Grid == null) {
            return _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.DashStyle.Solid;
        }
        return this.Grid.MajorLineDashStyle;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridMajorLineDashStyle = function (value) {
        if (this.Grid != null) {
            this.Grid.MajorLineDashStyle = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridMajorLineFrequency", {
        //#endregion
        //#region [Property] GridMajorLineFrequency
        get: function () {
            return this.getGridMajorLineFrequency();
        },
        set: function (value) {
            this.setGridMajorLineFrequency(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridMajorLineFrequency = function () {
        if (this.Grid != null) {
            return this.Grid.MajorLineFrequency;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(0, 0);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridMajorLineFrequency = function (value) {
        if (this.Grid != null) {
            this.Grid.MajorLineFrequency = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridMajorLineWidth", {
        //#endregion
        //#region [Property] GridMajorLineWidth
        get: function () {
            return this.getGridMajorLineWidth();
        },
        set: function (value) {
            this.setGridMajorLineWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridMajorLineWidth = function () {
        if (this.Grid == null) {
            return 0;
        }
        return this.Grid.MajorLineWidth;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridMajorLineWidth = function (value) {
        if (this.Grid != null) {
            this.Grid.MajorLineWidth = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridOrigin", {
        //#endregion
        //#region [Property] GridOrigin
        get: function () {
            return this.getGridOrigin();
        },
        set: function (value) {
            this.setGridOrigin(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridOrigin = function () {
        if (this.Grid != null) {
            return this.Grid.Origin;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(0, 0);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridOrigin = function (value) {
        if (this.Grid != null) {
            this.Grid.Origin = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridOriginRelative", {
        //#endregion
        //#region [Property] GridOriginRelative
        get: function () {
            return this.getGridOriginRelative();
        },
        set: function (value) {
            this.setGridOriginRelative(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridOriginRelative = function () {
        if (this.Grid == null) {
            return false;
        }
        return this.Grid.OriginRelative;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridOriginRelative = function (value) {
        if (this.Grid != null) {
            this.Grid.OriginRelative = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridOriginX", {
        //#endregion
        //#region [Property] GridOriginX
        get: function () {
            return this.getGridOriginX();
        },
        set: function (value) {
            this.setGridOriginX(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridOriginX = function () {
        if (this.Grid == null) {
            return 0;
        }
        return this.Grid.Origin.X;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridOriginX = function (value) {
        if (this.Grid != null) {
            var grid = this.Grid;
            var origin_1 = this.Grid.Origin;
            grid.Origin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(value, origin_1.Y);
        }
    };
    Object.defineProperty(TuView.prototype, "GridOriginY", {
        //#endregion
        //#region [Property] GridOriginY
        get: function () {
            return this.getGridOriginY();
        },
        set: function (value) {
            this.setGridOriginY(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridOriginY = function () {
        if (this.Grid == null) {
            return 0;
        }
        return this.Grid.Origin.Y;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridOriginY = function (value) {
        if (this.Grid != null) {
            var grid = this.Grid;
            var origin_2 = this.Grid.Origin;
            grid.Origin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(origin_2.X, value);
        }
    };
    Object.defineProperty(TuView.prototype, "GridSnapCellSpot", {
        //#endregion
        //#region [Property] GridSnapCellSpot
        get: function () {
            return this.getGridSnapCellSpot();
        },
        set: function (value) {
            this.setGridSnapCellSpot(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridSnapCellSpot = function () {
        if (this.Grid == null) {
            return _Spot__WEBPACK_IMPORTED_MODULE_18__.TopLeft;
        }
        return this.Grid.SnapCellSpot;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridSnapCellSpot = function (value) {
        if (this.Grid != null) {
            this.Grid.SnapCellSpot = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridSnapDrag", {
        //#endregion
        //#region [Property] GridSnapDrag
        get: function () {
            return this.getGridSnapDrag();
        },
        set: function (value) {
            this.setGridSnapDrag(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridSnapDrag = function () {
        if (this.Grid == null) {
            return _TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_19__.TuViewSnapStyle.None;
        }
        return this.Grid.SnapDrag;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridSnapDrag = function (value) {
        if (this.Grid != null) {
            this.Grid.SnapDrag = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridSnapOpaque", {
        //#endregion
        //#region [Property] GridSnapOpaque
        get: function () {
            return this.getGridSnapOpaque();
        },
        set: function (value) {
            this.setGridSnapOpaque(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridSnapOpaque = function () {
        if (this.Grid == null) {
            return true;
        }
        return this.Grid.SnapOpaque;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridSnapOpaque = function (value) {
        if (this.Grid != null) {
            this.Grid.SnapOpaque = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridSnapResize", {
        //#endregion
        //#region [Property] GridSnapResize
        get: function () {
            return this.getGridSnapResize();
        },
        set: function (value) {
            this.setGridSnapResize(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridSnapResize = function () {
        if (this.Grid == null) {
            return _TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_19__.TuViewSnapStyle.None;
        }
        return this.Grid.SnapResize;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridSnapResize = function (value) {
        if (this.Grid != null) {
            this.Grid.SnapResize = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridStyle", {
        //#endregion
        //#region [Property] GridStyle
        get: function () {
            return this.getGridStyle();
        },
        set: function (value) {
            this.setGridStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridStyle = function () {
        if (this.Grid == null) {
            return _TuGrid_TuViewGridStyle__WEBPACK_IMPORTED_MODULE_20__.TuViewGridStyle.None;
        }
        return this.Grid.Style;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridStyle = function (value) {
        if (this.Grid != null) {
            this.Grid.Style = value;
        }
    };
    Object.defineProperty(TuView.prototype, "GridUnboundedSpots", {
        //#endregion
        //#region [Property] GridUnboundedSpots
        get: function () {
            return this.getGridUnboundedSpots();
        },
        set: function (value) {
            this.setGridUnboundedSpots(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getGridUnboundedSpots = function () {
        if (this.Grid == null) {
            return new _Spot__WEBPACK_IMPORTED_MODULE_18__.Spot(-1, -1, 10);
        }
        return this.Grid.UnboundedSpots;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setGridUnboundedSpots = function (value) {
        if (this.Grid != null) {
            this.Grid.UnboundedSpots = value;
        }
    };
    Object.defineProperty(TuView.prototype, "HidesSelection", {
        //#endregion
        //#region [Property] HidesSelection
        get: function () {
            return this.getHidesSelection();
        },
        set: function (value) {
            this.setHidesSelection(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getHidesSelection = function () {
        return this.myHidesSelection;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setHidesSelection = function (value) {
        if (this.myHidesSelection !== value) {
            this.myHidesSelection = value;
            this.raisePropertyChangedEvent("HidesSelection");
        }
    };
    Object.defineProperty(TuView.prototype, "HorizontalScrollBar", {
        //#endregion
        //#region [Property] HorizontalScrollBar
        get: function () {
            return this.getHorizontalScrollBar();
        },
        set: function (value) {
            this.setHorizontalScrollBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getHorizontalScrollBar = function () {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(this.BottomBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider)) {
            return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.BottomBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider);
        }
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.TopBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setHorizontalScrollBar = function (value) {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(this.BottomBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider)) {
            this.BottomBar = value;
            return;
        }
        this.TopBar = value;
    };
    Object.defineProperty(TuView.prototype, "HoverDelay", {
        //#endregion
        //#region [Property] HoverDelay
        get: function () {
            return this.getHoverDelay();
        },
        set: function (value) {
            this.setHoverDelay(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getHoverDelay = function () {
        return this.myHoverDelay;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setHoverDelay = function (value) {
        if (this.myHoverDelay !== value) {
            this.myHoverDelay = value;
            this.raisePropertyChangedEvent("HoverDelay");
        }
    };
    Object.defineProperty(TuView.prototype, "ImageList", {
        //#endregion
        //#region [Property] ImageList
        get: function () {
            return this.getImageList();
        },
        set: function (value) {
            this.setImageList(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getImageList = function () {
        return this.myImageList;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setImageList = function (value) {
        if (this.myImageList !== value) {
            this.myImageList = value;
            this.raisePropertyChangedEvent("ImageList");
        }
    };
    Object.defineProperty(TuView.prototype, "InterpolationMode", {
        //#endregion
        //#region [Property] InterpolationMode
        get: function () {
            return this.getInterpolationMode();
        },
        set: function (value) {
            this.setInterpolationMode(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getInterpolationMode = function () {
        return this.myInterpolationMode;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setInterpolationMode = function (value) {
        if (this.myInterpolationMode != value && value !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.InterpolationMode.Invalid) {
            this.myInterpolationMode = value;
            this.raisePropertyChangedEvent("InterpolationMode");
        }
    };
    Object.defineProperty(TuView.prototype, "IsEditing", {
        //#endregion
        //#region [Property] IsEditing
        get: function () {
            return this.getIsEditing();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getIsEditing = function () {
        return this.EditControl != null;
    };
    Object.defineProperty(TuView.prototype, "IsPrinting", {
        //#endregion
        //#region [Property] IsPrinting
        get: function () {
            return this.getIsPrinting();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getIsPrinting = function () {
        return this.myPrintInfo != null;
    };
    Object.defineProperty(TuView.prototype, "IsRenderingBitmap", {
        //#endregion
        //#region [Property] IsRenderingBitmap
        get: function () {
            return this.getIsRenderingBitmap();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getIsRenderingBitmap = function () {
        return this.myIsRenderingBitmap;
    };
    Object.defineProperty(TuView.prototype, "LastInput", {
        //#endregion
        //#region [Property] LastInput
        get: function () {
            return this.getLastInput();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getLastInput = function () {
        return this.myLastInput;
    };
    Object.defineProperty(TuView.prototype, "Layers", {
        //#endregion
        //#region [Property] Layers
        get: function () {
            return this.getLayers();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getLayers = function () {
        return this.myLayers;
    };
    Object.defineProperty(TuView.prototype, "LeftBar", {
        //#endregion
        //#region [Property] LeftBar
        get: function () {
            return this.getLeftBar();
        },
        set: function (value) {
            this.setLeftBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getLeftBar = function () {
        return this.myLeftBar;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setLeftBar = function (value) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('setLeftBar');
        /*  const control: Component = this.myLeftBar;
         if (control !== value) {
             if (value != null && value.Parent != null) {
                 throw new ArgumentException("new Control already belongs to a Control; remove it from there first");
             }
             if (control != null) {
                 const vScrollBar: TuVScrollBarElement = as(control, TuVScrollBarElement);
                 if (vScrollBar != null) {
                     vScrollBar.Scroll.remove(this.myVertScrollHandler);
                 }
                 this.Controls.Remove(control);
             }
             this.myLeftBar = value;
             if (value != null) {
                 this.Controls.Add(value);
                 const height: TuVScrollBarElement = as(value, TuVScrollBarElement);
                 if (height != null) {
                     height.SmallChange = this.ScrollSmallChange.Height;
                     height.Scroll.add(this.myVertScrollHandler);
                 }
             }
             this.layoutScrollBars(true);
             this.raisePropertyChangedEvent("LeftBar");
         } */
    };
    Object.defineProperty(TuView.prototype, "MaximumSelectionCount", {
        //#endregion
        //#region [Property] MaximumSelectionCount
        get: function () {
            return this.getMaximumSelectionCount();
        },
        set: function (value) {
            this.setMaximumSelectionCount(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getMaximumSelectionCount = function () {
        return this.myMaximumSelectionCount;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setMaximumSelectionCount = function (value) {
        if (value !== this.myMaximumSelectionCount && value >= 0) {
            this.myMaximumSelectionCount = value;
            this.raisePropertyChangedEvent("MaximumSelectionCount");
            if (this.Selection.Count > value) {
                this.raiseSelectionStarting();
                while (this.Selection.Count > value) {
                    var last = this.Selection.Last;
                    this.Selection.Remove(last);
                }
                this.raiseSelectionFinished();
            }
        }
    };
    Object.defineProperty(TuView.prototype, "MouseDownTools", {
        //#endregion
        //#region [Property] MouseDownTools
        get: function () {
            return this.getMouseDownTools();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getMouseDownTools = function () {
        if (this.myMouseDownTools == null) {
            this.myMouseDownTools = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
            this.myMouseDownTools.Add(new _TuTool_TuToolAction__WEBPACK_IMPORTED_MODULE_21__.TuToolAction(this));
            this.myMouseDownTools.Add(new _TuTool_TuToolContext__WEBPACK_IMPORTED_MODULE_17__.TuToolContext(this));
            this.myMouseDownTools.Add(new _TuTool_TuToolPanning__WEBPACK_IMPORTED_MODULE_22__.TuToolPanning(this));
            this.myMouseDownTools.Add(new _TuTool_TuToolRelinking__WEBPACK_IMPORTED_MODULE_23__.TuToolRelinking(this));
            this.myMouseDownTools.Add(new _TuTool_TuToolResizing__WEBPACK_IMPORTED_MODULE_24__.TuToolResizing(this));
        }
        return this.myMouseDownTools;
    };
    Object.defineProperty(TuView.prototype, "MouseMoveTools", {
        //#endregion
        //#region [Property] MouseMoveTools
        get: function () {
            return this.getMouseMoveTools();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getMouseMoveTools = function () {
        if (this.myMouseMoveTools == null) {
            this.myMouseMoveTools = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
            this.myMouseMoveTools.Add(new _TuTool_TuToolLinkingNew__WEBPACK_IMPORTED_MODULE_25__.TuToolLinkingNew(this));
            this.myMouseMoveTools.Add(new _TuTool_TuToolDragging__WEBPACK_IMPORTED_MODULE_27__.TuToolDragging(this));
            this.myMouseMoveTools.Add(new _TuTool_TuToolRubberBanding__WEBPACK_IMPORTED_MODULE_26__.TuToolRubberBanding(this));
        }
        return this.myMouseMoveTools;
    };
    Object.defineProperty(TuView.prototype, "MouseUpTools", {
        //#endregion
        //#region [Property] MouseUpTools
        get: function () {
            return this.getMouseUpTools();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getMouseUpTools = function () {
        if (this.myMouseUpTools == null) {
            this.myMouseUpTools = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
            this.myMouseUpTools.Add(new _TuTool_TuToolSelecting__WEBPACK_IMPORTED_MODULE_28__.TuToolSelecting(this));
        }
        return this.myMouseUpTools;
    };
    Object.defineProperty(TuView.prototype, "NewGoLabeledLink", {
        //#endregion
        //#region [Property] NewGoLabeledLink
        get: function () {
            return this.getNewGoLabeledLink();
        },
        set: function (value) {
            this.setNewGoLabeledLink(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getNewGoLabeledLink = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.NewLinkPrototype, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLabeledLink);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setNewGoLabeledLink = function (value) {
        this.NewLinkPrototype = value;
    };
    Object.defineProperty(TuView.prototype, "NewGoLink", {
        //#endregion
        //#region [Property] NewGoLink
        get: function () {
            return this.getNewGoLink();
        },
        set: function (value) {
            this.setNewGoLink(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getNewGoLink = function () {
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.NewLinkPrototype, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLink);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setNewGoLink = function (value) {
        this.NewLinkPrototype = value;
    };
    Object.defineProperty(TuView.prototype, "NewLinkClass", {
        //#endregion
        //#region [Property] NewLinkClass
        get: function () {
            return this.getNewLinkClass();
        },
        set: function (value) {
            this.setNewLinkClass(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getNewLinkClass = function () {
        var newLinkPrototype = this.NewLinkPrototype;
        if (newLinkPrototype == null) {
            return null;
        }
        return newLinkPrototype.GetType();
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setNewLinkClass = function (value) {
        if (value != null) {
            this.NewLinkPrototype = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Activator.CreateInstance(value);
        }
    };
    Object.defineProperty(TuView.prototype, "NewLinkPrototype", {
        //#endregion
        //#region [Property] NewLinkPrototype
        get: function () {
            return this.getNewLinkPrototype();
        },
        set: function (value) {
            this.setNewLinkPrototype(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getNewLinkPrototype = function () {
        return this.myNewLinkPrototype;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setNewLinkPrototype = function (value) {
        if (this.myNewLinkPrototype != value && value != null) {
            if (!(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(value, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink))) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("New prototype object for GoView.NewLinkPrototype must implement ITuLink");
            }
            this.myNewLinkPrototype = value;
            this.raisePropertyChangedEvent("NewLinkPrototype");
        }
    };
    Object.defineProperty(TuView.prototype, "NoFocusSelectionColor", {
        //#endregion
        //#region [Property] NoFocusSelectionColor
        get: function () {
            return this.getNoFocusSelectionColor();
        },
        set: function (value) {
            this.setNoFocusSelectionColor(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getNoFocusSelectionColor = function () {
        return this.myNoFocusSelectionColor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setNoFocusSelectionColor = function (value) {
        if (this.myNoFocusSelectionColor.notEquals(value)) {
            this.myNoFocusSelectionColor = value;
            this.raisePropertyChangedEvent("NoFocusSelectionColor");
        }
    };
    Object.defineProperty(TuView.prototype, "PaintGreekScale", {
        //#endregion
        //#region [Property] PaintGreekScale
        get: function () {
            return this.getPaintGreekScale();
        },
        set: function (value) {
            this.setPaintGreekScale(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPaintGreekScale = function () {
        return this.myPaintGreekScale;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setPaintGreekScale = function (value) {
        if (this.myPaintGreekScale != value) {
            this.myPaintGreekScale = value;
            this.raisePropertyChangedEvent("PaintGreekScale");
        }
    };
    Object.defineProperty(TuView.prototype, "PaintNothingScale", {
        //#endregion
        //#region [Property] PaintNothingScale
        get: function () {
            return this.getPaintNothingScale();
        },
        set: function (value) {
            this.setPaintNothingScale(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPaintNothingScale = function () {
        return this.myPaintNothingScale;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setPaintNothingScale = function (value) {
        if (this.myPaintNothingScale !== value) {
            this.myPaintNothingScale = value;
            this.raisePropertyChangedEvent("PaintNothingScale");
        }
    };
    Object.defineProperty(TuView.prototype, "PixelOffsetMode", {
        //#endregion
        //#region [Property] PixelOffsetMode
        get: function () {
            return this.getPixelOffsetMode();
        },
        set: function (value) {
            this.setPixelOffsetMode(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPixelOffsetMode = function () {
        return this.myPixelOffsetMode;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setPixelOffsetMode = function (value) {
        if (this.myPixelOffsetMode !== value && value !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.PixelOffsetMode.Invalid) {
            this.myPixelOffsetMode = value;
            this.raisePropertyChangedEvent("PixelOffsetMode");
        }
    };
    Object.defineProperty(TuView.prototype, "PortGravity", {
        //#endregion
        //#region [Property] PortGravity
        get: function () {
            return this.getPortGravity();
        },
        set: function (value) {
            this.setPortGravity(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPortGravity = function () {
        return this.myPortGravity;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setPortGravity = function (value) {
        if (this.myPortGravity !== value) {
            if (value <= 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("New distance value for TuView.PortGravity must be positive");
            }
            this.myPortGravity = value;
            this.raisePropertyChangedEvent("PortGravity");
        }
    };
    Object.defineProperty(TuView.prototype, "PretendsInternalDrag", {
        //#endregion
        //#region [Property] PretendsInternalDrag
        get: function () {
            return this.myPretendsInternalDrag;
        },
        set: function (value) {
            this.myPretendsInternalDrag = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "PrimarySelectionColor", {
        //#endregion
        //#region [Property] PrimarySelectionColor
        get: function () {
            return this.getPrimarySelectionColor();
        },
        set: function (value) {
            this.setPrimarySelectionColor(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPrimarySelectionColor = function () {
        return this.myPrimarySelectionColor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setPrimarySelectionColor = function (value) {
        if (this.myPrimarySelectionColor.notEquals(value)) {
            this.myPrimarySelectionColor = value;
            this.raisePropertyChangedEvent("PrimarySelectionColor");
        }
    };
    Object.defineProperty(TuView.prototype, "PrintDocumentSize", {
        //#endregion
        //#region [Property] PrintDocumentSize
        get: function () {
            return this.getPrintDocumentSize();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPrintDocumentSize = function () {
        if (this.SheetStyle !== _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None && this.Sheet != null) {
            var marginBounds = this.Sheet.MarginBounds;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(marginBounds.Width, marginBounds.Height);
        }
        var rectangleF = this.computeDocumentBounds();
        return _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_29__.TuTool.SubtractPoints(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(rectangleF.X + rectangleF.Width, rectangleF.Y + rectangleF.Height), this.PrintDocumentTopLeft);
    };
    Object.defineProperty(TuView.prototype, "PrintDocumentTopLeft", {
        //#endregion
        //#region [Property] PrintDocumentTopLeft
        get: function () {
            return this.getPrintDocumentTopLeft();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPrintDocumentTopLeft = function () {
        if (this.SheetStyle !== _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None && this.Sheet != null) {
            var marginBounds = this.Sheet.MarginBounds;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(marginBounds.X, marginBounds.Y);
        }
        if (!this.ShowsNegativeCoordinates) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint();
        }
        return this.computeDocumentBounds().Location;
    };
    Object.defineProperty(TuView.prototype, "PrintScale", {
        //#endregion
        //#region [Property] PrintScale
        get: function () {
            return this.getPrintScale();
        },
        set: function (value) {
            this.setPrintScale(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPrintScale = function () {
        return this.myPrintScale;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setPrintScale = function (value) {
        var single = this.myPrintScale;
        if (single != value) {
            if (value <= 0) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("New value for TuView.PrintScale must be positive");
            }
            this.myPrintScale = value;
            this.raisePropertyChangedEvent("PrintScale");
            var sheet = this.Sheet;
            if (sheet != null) {
                var single1 = single / value;
                var sizeF = sheet;
                sizeF.Size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(sizeF.Width * single1, sheet.Height * single1);
                var goSheet = sheet;
                var topLeftMargin = goSheet.TopLeftMargin;
                var width = topLeftMargin.Width * single1;
                topLeftMargin = sheet.TopLeftMargin;
                goSheet.TopLeftMargin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(width, topLeftMargin.Height * single1);
                var sizeF1 = sheet;
                topLeftMargin = sizeF1.BottomRightMargin;
                var width1 = topLeftMargin.Width * single1;
                topLeftMargin = sheet.BottomRightMargin;
                sizeF1.BottomRightMargin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(width1, topLeftMargin.Height * single1);
            }
            this.updateExtent();
        }
    };
    Object.defineProperty(TuView.prototype, "PrintsViewObjects", {
        //#endregion
        //#region [Property] PrintsViewObjects
        get: function () {
            return this.getPrintsViewObjects();
        },
        set: function (value) {
            this.setPrintsViewObjects(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getPrintsViewObjects = function () {
        return this.myPrintsViewObjects;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setPrintsViewObjects = function (value) {
        if (this.myPrintsViewObjects !== value) {
            this.myPrintsViewObjects = value;
            this.raisePropertyChangedEvent("PrintsViewObjects");
        }
    };
    Object.defineProperty(TuView.prototype, "ResizeHandleHeight", {
        //#endregion
        //#region [Property] ResizeHandleHeight
        get: function () {
            return this.getResizeHandleHeight();
        },
        set: function (value) {
            this.setResizeHandleHeight(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getResizeHandleHeight = function () {
        return this.ResizeHandleSize.Height;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setResizeHandleHeight = function (value) {
        this.ResizeHandleSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(this.ResizeHandleSize.Width, value);
    };
    Object.defineProperty(TuView.prototype, "ResizeHandlePenWidth", {
        //#endregion
        //#region [Property] ResizeHandlePenWidth
        get: function () {
            return this.getResizeHandlePenWidth();
        },
        set: function (value) {
            this.setResizeHandlePenWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getResizeHandlePenWidth = function () {
        return this.myResizeHandlePenWidth;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setResizeHandlePenWidth = function (value) {
        if (this.myResizeHandlePenWidth !== value) {
            this.myResizeHandlePenWidth = value;
            this.raisePropertyChangedEvent("ResizeHandlePenWidth");
        }
    };
    Object.defineProperty(TuView.prototype, "ResizeHandleSize", {
        //#endregion
        //#region [Property] ResizeHandleSize
        get: function () {
            return this.getResizeHandleSize();
        },
        set: function (value) {
            this.setResizeHandleSize(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getResizeHandleSize = function () {
        return this.myResizeHandleSize;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setResizeHandleSize = function (value) {
        if (this.myResizeHandleSize != value) {
            this.myResizeHandleSize = value;
            this.raisePropertyChangedEvent("ResizeHandleSize");
        }
    };
    Object.defineProperty(TuView.prototype, "ResizeHandleWidth", {
        //#endregion
        //#region [Property] ResizeHandleWidth
        get: function () {
            return this.getResizeHandleWidth();
        },
        set: function (value) {
            this.setResizeHandleWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getResizeHandleWidth = function () {
        return this.ResizeHandleSize.Width;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setResizeHandleWidth = function (value) {
        this.ResizeHandleSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(value, this.ResizeHandleSize.Height);
    };
    Object.defineProperty(TuView.prototype, "RightBar", {
        //#endregion
        //#region [Property] RightBar
        get: function () {
            return this.getRightBar();
        },
        set: function (value) {
            this.setRightBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getRightBar = function () {
        return this.myRightBar;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setRightBar = function (value) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('setRightBar');
        /*  const control: Component = this.myRightBar;
         if (control !== value) {
             if (value != null && value.Parent != null) {
                 throw new ArgumentException("new Control already belongs to a Control; remove it from there first");
             }
             if (control != null) {
                 const vScrollBar: TuVScrollBarElement = as(control, TuVScrollBarElement);
                 if (vScrollBar != null) {
                     vScrollBar.Scroll.remove(this.myVertScrollHandler);
                 }
                 this.Controls.Remove(control);
             }
             this.myRightBar = value;
             if (value != null) {
                 this.Controls.Add(value);
                 const height: TuVScrollBarElement = as(value, TuVScrollBarElement);
                 if (height != null) {
                     height.SmallChange = this.ScrollSmallChange.Height;
                     height.Scroll.add(this.myVertScrollHandler);
                 }
             }
             this.layoutScrollBars(true);
             this.raisePropertyChangedEvent("RightBar");
         } */
    };
    Object.defineProperty(TuView.prototype, "ScrollSmallChange", {
        //#endregion
        //#region [Property] ScrollSmallChange
        get: function () {
            return this.getScrollSmallChange();
        },
        set: function (value) {
            this.setScrollSmallChange(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getScrollSmallChange = function () {
        return this.myScrollSmallChange;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setScrollSmallChange = function (value) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('setScrollSmallChange');
        /* if (this.myScrollSmallChange != value) {
            if (value.Width <= 0 || value.Height <= 0) {
                throw new ArgumentException("New Size value for TuView.ScrollSmallChange must have positive dimensions");
            }
            this.myScrollSmallChange = value;
            const horizontalScrollBar: Slider = this.HorizontalScrollBar;
            if (horizontalScrollBar != null && horizontalScrollBar.SmallChange != this.myScrollSmallChange.Width) {
                horizontalScrollBar.SmallChange = this.myScrollSmallChange.Width;
            }
            const verticalScrollBar: Slider = this.VerticalScrollBar;
            if (verticalScrollBar != null && verticalScrollBar.SmallChange != this.myScrollSmallChange.Height) {
                verticalScrollBar.SmallChange = this.myScrollSmallChange.Height;
            }
            this.raisePropertyChangedEvent("ScrollSmallChange");
        } */
    };
    Object.defineProperty(TuView.prototype, "SecondarySelectionColor", {
        //#endregion
        //#region [Property] SecondarySelectionColor
        get: function () {
            return this.getSecondarySelectionColor();
        },
        set: function (value) {
            this.setSecondarySelectionColor(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSecondarySelectionColor = function () {
        return this.mySecondarySelectionColor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSecondarySelectionColor = function (value) {
        if (this.mySecondarySelectionColor.notEquals(value)) {
            this.mySecondarySelectionColor = value;
            this.raisePropertyChangedEvent("SecondarySelectionColor");
        }
    };
    Object.defineProperty(TuView.prototype, "SelectInRectangleStyle", {
        //#endregion
        //#region [Property] SelectInRectangleStyle
        get: function () {
            return this.getSelectInRectangleStyle();
        },
        set: function (value) {
            this.setSelectInRectangleStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSelectInRectangleStyle = function () {
        return this.mySelectInRectangleStyle;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSelectInRectangleStyle = function (value) {
        if (this.mySelectInRectangleStyle != value && (value === _TuPickInRectangleStyle__WEBPACK_IMPORTED_MODULE_14__.TuPickInRectangleStyle.SelectableOnlyContained ||
            value === _TuPickInRectangleStyle__WEBPACK_IMPORTED_MODULE_14__.TuPickInRectangleStyle.SelectableOnlyIntersectsBounds)) {
            this.mySelectInRectangleStyle = value;
            this.raisePropertyChangedEvent("SelectInRectangleStyle");
        }
    };
    TuView.prototype.selectInRectangleStyle = function (value) { throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('Will Implement getter and setters'); };
    Object.defineProperty(TuView.prototype, "Selection", {
        //#endregion
        //#region [Property] Selection
        get: function () {
            return this.getSelection();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSelection = function () {
        return this.mySelection;
    };
    Object.defineProperty(TuView.prototype, "ShadowColor", {
        //#endregion
        //#region [Property] ShadowColor
        get: function () {
            return this.getShadowColor();
        },
        set: function (value) {
            this.setShadowColor(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getShadowColor = function () {
        return this.myShadowColor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setShadowColor = function (value) {
        if (this.myShadowColor.notEquals(value)) {
            this.myShadowColor = value;
            this.raisePropertyChangedEvent("ShadowColor");
        }
    };
    Object.defineProperty(TuView.prototype, "ShadowHeight", {
        //#endregion
        //#region [Property] ShadowHeight
        get: function () {
            return this.getShadowHeight();
        },
        set: function (value) {
            this.setShadowHeight(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getShadowHeight = function () {
        return this.ShadowOffset.Height;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setShadowHeight = function (value) {
        this.ShadowOffset = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(this.ShadowOffset.Width, value);
    };
    Object.defineProperty(TuView.prototype, "ShadowOffset", {
        //#endregion
        //#region [Property] ShadowOffset
        get: function () {
            return this.getShadowOffset();
        },
        set: function (value) {
            this.setShadowOffset(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getShadowOffset = function () {
        return this.myShadowOffset;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setShadowOffset = function (value) {
        if (this.myShadowOffset.NotEquals(value)) {
            this.myShadowOffset = value;
            this.raisePropertyChangedEvent("ShadowOffset");
        }
    };
    Object.defineProperty(TuView.prototype, "ShadowWidth", {
        //#endregion
        //#region [Property] ShadowWidth
        get: function () {
            return this.getShadowWidth();
        },
        set: function (value) {
            this.setShadowWidth(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getShadowWidth = function () {
        return this.ShadowOffset.Width;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setShadowWidth = function (value) {
        this.ShadowOffset = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(value, this.ShadowOffset.Height);
    };
    Object.defineProperty(TuView.prototype, "Sheet", {
        //#endregion
        //#region [Property] Sheet
        get: function () {
            return this.getSheet();
        },
        set: function (value) {
            this.setSheet(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheet = function () {
        return this.mySheet;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheet = function (value) {
        var goSheet = this.mySheet;
        if (goSheet !== value) {
            var backgroundLayer = this.BackgroundLayer;
            if (goSheet != null) {
                if (goSheet.Layer != null) {
                    backgroundLayer = goSheet.Layer;
                }
                goSheet.Remove();
            }
            this.mySheet = value;
            backgroundLayer.Add(this.mySheet);
            if (goSheet != null && value != null) {
                value.Visible = goSheet.Visible;
                value.Printable = goSheet.Printable;
                value.Selectable = goSheet.Selectable;
            }
            this.raisePropertyChangedEvent("Sheet");
        }
    };
    Object.defineProperty(TuView.prototype, "SheetBackgroundImageSpot", {
        //#endregion
        //#region [Property] SheetBackgroundImageSpot
        get: function () {
            return this.getSheetBackgroundImageSpot();
        },
        set: function (value) {
            this.setSheetBackgroundImageSpot(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetBackgroundImageSpot = function () {
        if (this.Sheet == null) {
            return _Spot__WEBPACK_IMPORTED_MODULE_18__.Middle;
        }
        return this.Sheet.BackgroundImageSpot;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetBackgroundImageSpot = function (value) {
        if (this.Sheet != null) {
            this.Sheet.BackgroundImageSpot = value;
        }
    };
    Object.defineProperty(TuView.prototype, "SheetBottomRightMargin", {
        //#endregion
        //#region [Property] SheetBottomRightMargin
        get: function () {
            return this.getSheetBottomRightMargin();
        },
        set: function (value) {
            this.setSheetBottomRightMargin(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetBottomRightMargin = function () {
        if (this.Sheet != null) {
            return this.Sheet.BottomRightMargin;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize();
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetBottomRightMargin = function (value) {
        if (this.Sheet != null) {
            this.Sheet.BottomRightMargin = value;
        }
    };
    Object.defineProperty(TuView.prototype, "SheetMarginBounds", {
        //#endregion
        //#region [Property] SheetMarginBounds
        get: function () {
            return this.getSheetMarginBounds();
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetMarginBounds = function () {
        if (this.Sheet != null) {
            return this.Sheet.MarginBounds;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle();
    };
    Object.defineProperty(TuView.prototype, "SheetMarginColor", {
        //#endregion
        //#region [Property] SheetMarginColor
        get: function () {
            return this.getSheetMarginColor();
        },
        set: function (value) {
            this.setSheetMarginColor(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetMarginColor = function () {
        if (this.Sheet == null) {
            return _TuSheet_TuSheet__WEBPACK_IMPORTED_MODULE_10__.TuSheet.DefaultMarginColor;
        }
        return this.Sheet.MarginColor;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetMarginColor = function (value) {
        if (this.Sheet != null) {
            this.Sheet.MarginColor = value;
        }
    };
    Object.defineProperty(TuView.prototype, "SheetPaperBounds", {
        //#endregion
        //#region [Property] SheetPaperBounds
        get: function () {
            return this.getSheetPaperBounds();
        },
        set: function (value) {
            this.setSheetPaperBounds(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetPaperBounds = function () {
        if (this.Sheet == null) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle();
        }
        return this.Sheet.Paper.Bounds.clone();
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetPaperBounds = function (value) {
        if (this.Sheet != null) {
            this.Sheet.Paper.Bounds = value;
        }
    };
    Object.defineProperty(TuView.prototype, "SheetRoom", {
        //#endregion
        //#region [Property] SheetRoom
        get: function () {
            return this.getSheetRoom();
        },
        set: function (value) {
            this.setSheetRoom(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetRoom = function () {
        return this.mySheetRoom;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetRoom = function (value) {
        if (this.mySheetRoom.NotEquals(value)) {
            this.mySheetRoom = value;
            this.raisePropertyChangedEvent("SheetRoom");
            this.updateExtent();
        }
    };
    Object.defineProperty(TuView.prototype, "SheetShowsMargins", {
        //#endregion
        //#region [Property] SheetShowsMargins
        get: function () {
            return this.getSheetShowsMargins();
        },
        set: function (value) {
            this.setSheetShowsMargins(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetShowsMargins = function () {
        if (this.Sheet == null) {
            return true;
        }
        return this.Sheet.ShowsMargins;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetShowsMargins = function (value) {
        if (this.Sheet != null) {
            this.Sheet.ShowsMargins = value;
        }
    };
    Object.defineProperty(TuView.prototype, "SheetStyle", {
        //#endregion
        //#region [Property] SheetStyle
        get: function () {
            return this.getSheetStyle();
        },
        set: function (value) {
            this.setSheetStyle(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetStyle = function () {
        return this.mySheetStyle;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetStyle = function (value) {
        if (this.mySheetStyle !== value) {
            this.mySheetStyle = value;
            this.raisePropertyChangedEvent("SheetStyle");
            if (this.Sheet != null) {
                this.Sheet.Visible = value !== _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None;
                this.myPreviousCenter = this.Sheet.Center;
            }
            this.updateExtent();
        }
    };
    Object.defineProperty(TuView.prototype, "SheetTopLeftMargin", {
        //#endregion
        //#region [Property] SheetTopLeftMargin
        get: function () {
            return this.getSheetTopLeftMargin();
        },
        set: function (value) {
            this.setSheetTopLeftMargin(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSheetTopLeftMargin = function () {
        if (this.Sheet != null) {
            return this.Sheet.TopLeftMargin;
        }
        return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize();
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSheetTopLeftMargin = function (value) {
        if (this.Sheet != null) {
            this.Sheet.TopLeftMargin = value;
        }
    };
    Object.defineProperty(TuView.prototype, "ShowHorizontalScrollBar", {
        //#endregion
        //#region [Property] ShowHorizontalScrollBar
        get: function () {
            return this.getShowHorizontalScrollBar();
        },
        set: function (value) {
            this.setShowHorizontalScrollBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getShowHorizontalScrollBar = function () {
        return this.myShowHorizScroll;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setShowHorizontalScrollBar = function (value) {
        if (this.myShowHorizScroll != value) {
            this.myShowHorizScroll = value;
            this.layoutScrollBars(true);
            this.raisePropertyChangedEvent("ShowHorizontalScrollBar");
        }
    };
    Object.defineProperty(TuView.prototype, "ShowsNegativeCoordinates", {
        //#endregion
        //#region [Property] ShowsNegativeCoordinates
        get: function () {
            return this.getShowsNegativeCoordinates();
        },
        set: function (value) {
            this.setShowsNegativeCoordinates(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getShowsNegativeCoordinates = function () {
        return this.myShowsNegativeCoordinates;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setShowsNegativeCoordinates = function (value) {
        if (this.myShowsNegativeCoordinates !== value) {
            this.myShowsNegativeCoordinates = value;
            this.raisePropertyChangedEvent("ShowsNegativeCoordinates");
        }
    };
    Object.defineProperty(TuView.prototype, "ShowVerticalScrollBar", {
        //#endregion
        //#region [Property] ShowVerticalScrollBar
        get: function () {
            return this.getShowVerticalScrollBar();
        },
        set: function (value) {
            this.setShowVerticalScrollBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getShowVerticalScrollBar = function () {
        return this.myShowVertScroll;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setShowVerticalScrollBar = function (value) {
        if (this.myShowVertScroll !== value) {
            this.myShowVertScroll = value;
            this.layoutScrollBars(true);
            this.raisePropertyChangedEvent("ShowVerticalScrollBar");
        }
    };
    Object.defineProperty(TuView.prototype, "SmoothingMode", {
        //#endregion
        //#region [Property] SmoothingMode
        get: function () {
            return this.getSmoothingMode();
        },
        set: function (value) {
            this.setSmoothingMode(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getSmoothingMode = function () {
        return this.mySmoothingMode;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setSmoothingMode = function (value) {
        if (this.mySmoothingMode !== value && value != _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.SmoothingMode.Invalid) {
            this.mySmoothingMode = value;
            this.raisePropertyChangedEvent("SmoothingMode");
        }
    };
    Object.defineProperty(TuView.prototype, "SuppressingPaint", {
        //#endregion
        get: function () {
            return this.mySuppressPaint > 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "TextRenderingHint", {
        //#region [Property] TextRenderingHint
        get: function () {
            return this.getTextRenderingHint();
        },
        set: function (value) {
            this.setTextRenderingHint(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getTextRenderingHint = function () {
        return this.myTextRenderingHint;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setTextRenderingHint = function (value) {
        if (this.myTextRenderingHint !== value) {
            this.myTextRenderingHint = value;
            this.raisePropertyChangedEvent("TextRenderingHint");
        }
    };
    TuView.prototype.textRenderingHint = function (value) { throw (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.error)('Will Implement getter and setters'); };
    Object.defineProperty(TuView.prototype, "Tool", {
        //#endregion
        //#region [Property] Tool
        get: function () {
            return this.getTool();
        },
        set: function (value) {
            this.setTool(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getTool = function () {
        return this.myTool;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setTool = function (value) {
        if (this.myTool == value) {
            return;
        }
        if (this.myTool != null) {
            this.myTool.stop();
        }
        if (value != null) {
            this.myTool = value;
        }
        else {
            this.myTool = this.DefaultTool;
        }
        if (this.myTool != null) {
            this.myTool.start();
        }
        this.raisePropertyChangedEvent("Tool");
    };
    Object.defineProperty(TuView.prototype, "ToolTip", {
        //#endregion
        //#region [Property] ToolTip
        get: function () {
            return this._getToolTip();
        },
        set: function (value) {
            this._setToolTip(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype._getToolTip = function () {
        return this.myToolTip;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype._setToolTip = function (value) {
        if (this.myToolTip != value) {
            this.myToolTip = value;
            this.raisePropertyChangedEvent("ToolTip");
        }
    };
    Object.defineProperty(TuView.prototype, "ToolTipText", {
        //#endregion
        //#region [Property] ToolTipText
        get: function () {
            return this._getToolTipText();
        },
        set: function (value) {
            this._setToolTipText(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype._getToolTipText = function () {
        return this.myToolTipText;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype._setToolTipText = function (value) {
        if (this.myToolTipText != value) {
            this.myToolTipText = value;
            this.raisePropertyChangedEvent("ToolTipText");
        }
    };
    Object.defineProperty(TuView.prototype, "TopBar", {
        //#endregion
        //#region [Property] TopBar
        get: function () {
            return this.getTopBar();
        },
        set: function (value) {
            this.setTopBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getTopBar = function () {
        return this.myTopBar;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setTopBar = function (value) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('setTopBar');
        /*  const control: Component = this.myTopBar;
         if (control != value) {
             if (value != null && value.Parent != null) {
                 throw new ArgumentException("new Control already belongs to a Control; remove it from there first");
             }
             if (control != null) {
                 const hScrollBar: TuHScrollBarElement = as(control, TuHScrollBarElement);
                 if (hScrollBar != null) {
                     hScrollBar.Scroll.remove(this.myHorizScrollHandler);
                 }
                 this.Controls.Remove(control);
             }
             this.myTopBar = value;
             if (value != null) {
                 this.Controls.Add(value);
                 const width: TuHScrollBarElement = as(value, TuHScrollBarElement);
                 if (width != null) {
                     width.SmallChange = this.ScrollSmallChange.Width;
                     width.Scroll.add(this.myHorizScrollHandler);
                 }
             }
             this.layoutScrollBars(true);
             this.raisePropertyChangedEvent("TopBar");
         } */
    };
    Object.defineProperty(TuView.prototype, "TopLeftCorner", {
        //#endregion
        //#region [Property] TopLeftCorner
        get: function () {
            return this.getTopLeftCorner();
        },
        set: function (value) {
            this.setTopLeftCorner(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getTopLeftCorner = function () {
        return this.myTopLeftCorner;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setTopLeftCorner = function (value) {
        var control = this.myTopLeftCorner;
        if (control != value) {
            if (value != null && value.Parent != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("new Control already belongs to a Control; remove it from there first");
            }
            if (control != null) {
                this.Controls.Remove(control);
            }
            this.myTopLeftCorner = value;
            if (value != null) {
                this.Controls.Add(value);
            }
            this.layoutScrollBars(true);
            this.raisePropertyChangedEvent("TopLeftCorner");
        }
    };
    Object.defineProperty(TuView.prototype, "TopRightCorner", {
        //#endregion
        //#region [Property] TopRightCorner
        get: function () {
            return this.getTopRightCorner();
        },
        set: function (value) {
            this.setTopRightCorner(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getTopRightCorner = function () {
        return this.myTopRightCorner;
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setTopRightCorner = function (value) {
        var control = this.myTopRightCorner;
        if (control != value) {
            if (value != null && value.Parent != null) {
                throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentException("new Control already belongs to a Control; remove it from there first");
            }
            if (control != null) {
                this.Controls.Remove(control);
            }
            this.myTopRightCorner = value;
            if (value != null) {
                this.Controls.Add(value);
            }
            this.layoutScrollBars(true);
            this.raisePropertyChangedEvent("TopRightCorner");
        }
    };
    Object.defineProperty(TuView, "Version", {
        //#endregion
        //#region [Property] Version
        get: function () {
            if (TuView_1.myVersion < 0) {
                var versionName = TuView_1.VersionName;
                var int32 = versionName.indexOf('.');
                if (int32 >= 0) {
                    var int321 = versionName.indexOf('.', int32 + 1);
                    if (int321 > 0) {
                        versionName = versionName.substring(0, int321);
                    }
                }
                try {
                    TuView_1.myVersion = Number.parseFloat(versionName);
                }
                catch (arithmeticException) {
                    console.error(arithmeticException);
                }
            }
            return TuView_1.myVersion;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView, "VersionName", {
        //#endregion
        //#region [Property] Version
        get: function () {
            if (TuView_1.myVersionAssembly == null || TuView_1.myVersionAssembly.length == 0) {
                var fullName = ''; // Assembly.GetExecutingAssembly().FullName;
                TuView_1.myVersionAssembly = fullName.substring(0, fullName.indexOf(','));
                var versionName = '1.0.0.0';
                var int32 = versionName.indexOf('.');
                var int321 = versionName.indexOf('.', int32 + 1);
                TuView_1.myVersionMajor = Number.parseInt(versionName.substring(0, int32));
                TuView_1.myVersionMinor = Number.parseInt(versionName.substring(int32 + 1, (int321 - (int32 + 1))));
            }
            return "1.0.0.0";
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TuView.prototype, "VerticalScrollBar", {
        //#endregion
        //#region [Property] VerticalScrollBar
        get: function () {
            return this.getVerticalScrollBar();
        },
        set: function (value) {
            this.setVerticalScrollBar(value);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @hidden
     */
    TuView.prototype.getVerticalScrollBar = function () {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(this.RightBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider)) {
            return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.RightBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider);
        }
        return (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.LeftBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider);
    };
    /**
     * @hidden
     * @param style
     */
    TuView.prototype.setVerticalScrollBar = function (value) {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(this.RightBar, _types__WEBPACK_IMPORTED_MODULE_11__.Types.Slider)) {
            this.RightBar = value;
            return;
        }
        this.LeftBar = value;
    };
    Object.defineProperty(TuView.prototype, "WorldScale", {
        //#endregion
        get: function () {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(this.myHorizWorld, this.myVertWorld);
        },
        enumerable: false,
        configurable: true
    });
    TuView.prototype.SetupControlDefaults = function () {
        this.myFrameWidth = 300;
        this.myFrameHeight = 300;
        this.myDragEntered = false;
        this.myAllowDragOut = false;
        this.myPretendsInternalDrag = true;
        this.myExternalDragDropsOnEnter = true;
        this.mySuppressPaint = 0;
        this.myDefaultCursor = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Default;
        this.myPrintScale = 0.8;
        this.myPrintsViewObjects = false;
        this.myDrawsXorMode = false;
        this.myPrevXorRect = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle();
        this.myPrevXorRectValid = false;
        this.myBorderStyle = _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.Fixed3D;
        this.myBorder3DStyle = _Forms_Border3DStyle__WEBPACK_IMPORTED_MODULE_44__.Border3DStyle.Etched;
        this.myBorderSize = _Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.Border3DSize;
        this.myDocChangedEventHandler = new _TuChangedEventHandler__WEBPACK_IMPORTED_MODULE_60__.TuChangedEventHandler();
        this.myMaximumSelectionCount = 999999;
        this.mySelectInRectangleStyle = _TuPickInRectangleStyle__WEBPACK_IMPORTED_MODULE_14__.TuPickInRectangleStyle.SelectableOnlyContained;
        this.myPrimarySelectionColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Chartreuse;
        this.mySecondarySelectionColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Cyan;
        this.myNoFocusSelectionColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray;
        this.myResizeHandleSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(6, 6);
        this.myResizeHandlePenWidth = 1;
        this.myBoundingHandlePenWidth = 2;
        this.myHidesSelection = false;
        this.myDisableKeys = _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_15__.TuViewDisableKeys.ArrowMove;
        this.myArrowMoveSmall = 1;
        this.myArrowMoveLarge = 10;
        this.myScrollSmallChange = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(16, 16);
        this.myAutoPanRegion = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(16, 16);
        this.myShowsNegativeCoordinates = true;
        this.myOrigin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(0, 0);
        this.myHorizScale = 1;
        this.myVertScale = 1;
        this.myViewSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-1, -1);
        this.myDisplayRectangle = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(1, 1, -999999, -999999);
        this.myHorizWorld = 1;
        this.myVertWorld = 1;
        this.myPreviousCenter = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(0, 0);
        this.mySmoothingMode = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.SmoothingMode.HighQuality;
        this.myTextRenderingHint = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.TextRenderingHint.ClearTypeGridFit;
        this.myInterpolationMode = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.InterpolationMode.HighQualityBicubic;
        this.myCompositingQuality = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.CompositingQuality.AssumeLinear;
        this.myPixelOffsetMode = 2;
        this.myAllowSelect = true;
        this.myAllowMove = true;
        this.myAllowCopy = true;
        this.myAllowResize = true;
        this.myAllowReshape = true;
        this.myAllowDelete = true;
        this.myAllowInsert = true;
        this.myAllowLink = true;
        this.myAllowEdit = true;
        this.myAllowMouse = true;
        this.myAllowKey = true;
        this.myUpdateHandles = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        this.myIsRenderingBitmap = false;
        this.myFirstInput = new _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_8__.TuInputEventArgs();
        this.myLastInput = new _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_8__.TuInputEventArgs();
        this.myDragsRealtime = true;
        this.myDragRoutesRealtime = true;
        this.myPortGravity = 100;
        this.myNewLinkPrototype = new _TuLink_TuLink__WEBPACK_IMPORTED_MODULE_6__.TuLink();
        this.mySheetStyle = _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None;
        this.mySheetRoom = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(10, 10);
        this.myShadowOffset = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(5, 5);
        this.myShadowColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.FromRgba(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Gray, 127);
        this.myPaintNothingScale = 0.13;
        this.myPaintGreekScale = 0.24;
        this.myVisible = true;
        this.myWidth = 100;
        this.myHeight = 100;
        this.myControls = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        this.myCursor = _Forms_Cursors__WEBPACK_IMPORTED_MODULE_45__.Cursors.Default;
        this.SelectionStarting = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.SelectionMoved = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.SelectionFinished = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.SelectionDeleting = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.SelectionDeleted = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.SelectionCopied = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectSingleClicked = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectSelectionDropReject = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectSelectionDropped = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectResized = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectLostSelection = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectHover = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectGotSelection = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectEnterLeave = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectEdited = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectContextClicked = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ObjectDoubleClicked = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.LinkCreated = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.LinkRelinked = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.BackgroundContextClicked$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.BackgroundDoubleClicked$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.BackgroundHover$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.BackgroundSelectionDropped$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.BackgroundSelectionDropReject$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.BackgroundSingleClicked$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ClipboardCopied$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.ClipboardPasted$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.DocumentChanged$ = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Event();
        this.invalidateRects = new _TuInvalidateCollection__WEBPACK_IMPORTED_MODULE_59__.TuInvalidateCollection();
        this.myRenderingMode = _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html;
        this.mySuppressPaint = 0;
        this.myCancelMouseDown = false;
        this.initView(undefined);
    };
    /* public constructor(doc?: TuDocument) {
        super();
        this.initView(doc);
    } */
    TuView.prototype.AbortTransaction = function () {
        return this.Document.AbortTransaction();
    };
    /* internal */ TuView.prototype.addTuControl = function (g, c) {
        if (this.myGoControls == null) {
            this.myGoControls = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
        }
        this.myGoControls.Add(g);
        this.Controls.Add(c);
    };
    /* internal */ TuView.prototype.allocTempPointArray = function (len) {
        if (this.myTempArrays == null || len >= this.myTempArrays.length) {
            this.myTempArrays = new Array(Math.max((len + 1), 10));
            for (var i = 0; i < this.myTempArrays.length; i++) {
                this.myTempArrays[i] = undefined;
            }
        }
        var pointFArray = this.myTempArrays[len];
        if (pointFArray != null) {
            this.myTempArrays[len] = undefined;
        }
        else {
            pointFArray = new Array(len);
            for (var i = 0; i < pointFArray.length; i++) {
                pointFArray[i] = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint();
            }
        }
        return pointFArray;
    };
    TuView.prototype.autoScrollCallback = function (obj) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('autoScrollCallback');
        /*  if (this.IsHandleCreated) {
             this.invoke(obj);
         } */
    };
    TuView.prototype.autoScrollTick = function (sender, evt) {
        if (this.myAutoScrollTimerEnabled) {
            if (this.myActioning) {
                var tool = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.Tool, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolAction);
                if (tool != null && tool.ActionObject != null) {
                    tool.autoAdjust();
                    this.myAutoScrollTimer.change(this.AutoScrollTime, -1);
                }
                return;
            }
            var pointF = (this.myPanning ? this.computeAutoPanDocPosition(this.myPanningOrigin, this.myAutoScrollPoint) : this.computeAutoScrollDocPosition(this.myAutoScrollPoint));
            if (pointF === this.DocPosition) {
                this.myAutoScrollTimer.change(this.AutoScrollDelay, -1);
                return;
            }
            if (this.DocPosition != pointF && this.DrawsXorMode) {
                this.drawXorBox(this.myPrevXorRect, false);
            }
            this.DocPosition = pointF;
            this.myAutoScrollTimer.change(this.AutoScrollTime, -1);
        }
    };
    TuView.prototype.beginUpdate = function () {
        this.mySuppressPaint = (this.mySuppressPaint + 1);
    };
    TuView.prototype.CanCopyObjects = function () {
        if (!this.AllowCopy) {
            return false;
        }
        return this.Document.CanCopyObjects();
    };
    TuView.prototype.CanDeleteObjects = function () {
        if (!this.AllowDelete) {
            return false;
        }
        return this.Document.CanDeleteObjects();
    };
    TuView.prototype.canEditCopy = function () {
        if (!this.CanCopyObjects()) {
            return false;
        }
        if (this.Selection.IsEmpty) {
            return false;
        }
        if (!this.Selection.Primary.CanCopy()) {
            return false;
        }
        return true;
    };
    TuView.prototype.canEditCut = function () {
        if (!this.CanCopyObjects()) {
            return false;
        }
        if (!this.CanDeleteObjects()) {
            return false;
        }
        if (this.Selection.IsEmpty) {
            return false;
        }
        var primary = this.Selection.Primary;
        if (!primary.CanCopy()) {
            return false;
        }
        if (!primary.CanDelete()) {
            return false;
        }
        return true;
    };
    TuView.prototype.canEditDelete = function () {
        if (!this.CanDeleteObjects()) {
            return false;
        }
        if (this.Selection.IsEmpty) {
            return false;
        }
        if (!this.Selection.Primary.CanDelete()) {
            return false;
        }
        return true;
    };
    TuView.prototype.canEditEdit = function () {
        if (!this.CanEditObjects()) {
            return false;
        }
        if (this.Selection.IsEmpty) {
            return false;
        }
        if (!this.Selection.Primary.CanEdit()) {
            return false;
        }
        return true;
    };
    TuView.prototype.CanEditObjects = function () {
        if (!this.AllowEdit) {
            return false;
        }
        return this.Document.CanEditObjects();
    };
    TuView.prototype.canEditPaste = function () {
        var flag;
        if (!this.CanInsertObjects()) {
            return false;
        }
        var document = this.Document;
        if (document == null) {
            return false;
        }
        try {
            var dataObject = _Forms_Clipboard__WEBPACK_IMPORTED_MODULE_42__.Clipboard.GetDataObject();
            flag = (dataObject != null ? dataObject.GetDataPresent(document.DataFormat) : false);
        }
        catch (verificationException) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("TuView.CanEditPaste: ", verificationException.toString()));
            flag = TuView_1.myClipboard.ContainsKey(document.DataFormat);
        }
        return flag;
    };
    TuView.prototype.CanInsertObjects = function () {
        if (!this.AllowInsert) {
            return false;
        }
        return this.Document.CanInsertObjects();
    };
    TuView.prototype.CanLinkObjects = function () {
        if (!this.AllowLink) {
            return false;
        }
        return this.Document.CanLinkObjects();
    };
    TuView.prototype.CanMoveObjects = function () {
        if (!this.AllowMove) {
            return false;
        }
        return this.Document.CanMoveObjects();
    };
    TuView.prototype.canRedo = function () {
        return this.Document.CanRedo();
    };
    TuView.prototype.CanReshapeObjects = function () {
        if (!this.AllowReshape) {
            return false;
        }
        return this.Document.CanReshapeObjects();
    };
    TuView.prototype.CanResizeObjects = function () {
        if (!this.AllowResize) {
            return false;
        }
        return this.Document.CanResizeObjects();
    };
    TuView.prototype.canScroll = function (down, vertical) {
        var docPosition = this.DocPosition;
        var docExtentSize = this.DocExtentSize;
        var documentTopLeft = this.DocumentTopLeft;
        var documentSize = this.DocumentSize;
        if (vertical) {
            if (!down) {
                docPosition.Y = docPosition.Y - 1;
                docPosition.Y = Math.max(docPosition.Y, documentTopLeft.Y);
            }
            else {
                docPosition.Y = docPosition.Y + 1;
                docPosition.Y = Math.min(docPosition.Y, Math.max(documentTopLeft.Y, documentTopLeft.Y + documentSize.Height - docExtentSize.Height));
            }
        }
        else if (!down) {
            docPosition.X = docPosition.X - 1;
            docPosition.X = Math.max(docPosition.X, documentTopLeft.X);
        }
        else {
            docPosition.X = docPosition.X + 1;
            docPosition.X = Math.min(docPosition.X, Math.max(documentTopLeft.X, documentTopLeft.X + documentSize.Width - docExtentSize.Width));
        }
        return docPosition.notEquals(this.DocPosition);
    };
    TuView.prototype.CanSelectObjects = function () {
        if (!this.AllowSelect) {
            return false;
        }
        return this.Document.CanSelectObjects();
    };
    TuView.prototype.canUndo = function () {
        return this.Document.CanUndo();
    };
    TuView.prototype.cleanUpModalControl = function () {
        if (this.myEditControl != null && this.myModalControl != null) {
            var goControl = this.myEditControl;
            var control = this.myModalControl;
            this.myEditControl = null;
            this.myModalControl = null;
            goControl.disposeControl(control, this);
        }
    };
    TuView.prototype.computeAutoPanDocPosition = function (originPnt, viewPnt) {
        var view = this.convertDocToView(this.DocPosition);
        var autoPanRegion = this.AutoPanRegion;
        var width = this.ScrollSmallChange.Width;
        var height = this.ScrollSmallChange.Height;
        var displayRectangle = this.DisplayRectangle;
        var x = viewPnt.X - originPnt.X;
        var y = viewPnt.Y - originPnt.Y;
        var int32 = autoPanRegion.Width;
        var height1 = autoPanRegion.Height;
        var int321 = (2 * int32);
        var int322 = (2 * height1);
        if (x < (0 - int321)) {
            var int323 = ((x + int32) * (x + int32)) / 100;
            view.X = (view.X - Math.min(displayRectangle.Width, (width * int323)));
        }
        else if (x < (0 - int32)) {
            view.X = (view.X - width);
        }
        else if (x > int321) {
            var int324 = ((x - int32) * (x - int32)) / 100;
            view.X = (view.X + Math.min(displayRectangle.Width, (width * int324)));
        }
        else if (x > int32) {
            view.X = (view.X + width);
        }
        if (y < (0 - int322)) {
            var int325 = ((y + height1) * (y + height1)) / 100;
            view.Y = (view.Y - Math.min(displayRectangle.Height, (height * int325)));
        }
        else if (y < (0 - height1)) {
            view.Y = (view.Y - height);
        }
        else if (y > int322) {
            var int326 = ((y - height1) * (y - height1)) / 100;
            view.Y = (view.Y + Math.min(displayRectangle.Height, (height * int326)));
        }
        else if (y > height1) {
            view.Y = (view.Y + height);
        }
        return this.convertViewToDoc(view);
    };
    TuView.prototype.computeAutoScrollDocPosition = function (viewPnt) {
        var view = this.convertDocToView(this.DocPosition);
        var autoScrollRegion = this.AutoScrollRegion;
        var width = this.ScrollSmallChange.Width;
        var height = this.ScrollSmallChange.Height;
        var displayRectangle = this.DisplayRectangle;
        if (viewPnt.X >= displayRectangle.X && viewPnt.X < (displayRectangle.X + autoScrollRegion.Width)) {
            view.X = (view.X - width);
            if (viewPnt.X < (displayRectangle.X + autoScrollRegion.Width / 2)) {
                view.X = (view.X - width);
            }
            if (viewPnt.X < (displayRectangle.X + autoScrollRegion.Width / 4)) {
                view.X = (view.X - (4 * width));
            }
        }
        else if (viewPnt.X <= (displayRectangle.X + displayRectangle.Width) && viewPnt.X > ((displayRectangle.X + displayRectangle.Width) - autoScrollRegion.Width)) {
            view.X = (view.X + width);
            if (viewPnt.X > ((displayRectangle.X + displayRectangle.Width) - autoScrollRegion.Width / 2)) {
                view.X = (view.X + width);
            }
            if (viewPnt.X > ((displayRectangle.X + displayRectangle.Width) - autoScrollRegion.Width / 4)) {
                view.X = (view.X + (4 * width));
            }
        }
        if (viewPnt.Y >= displayRectangle.Y && viewPnt.Y < (displayRectangle.Y + autoScrollRegion.Height)) {
            view.Y = (view.Y - height);
            if (viewPnt.Y < (displayRectangle.Y + autoScrollRegion.Height / 2)) {
                view.Y = (view.Y - height);
            }
            if (viewPnt.Y < (displayRectangle.Y + autoScrollRegion.Height / 4)) {
                view.Y = (view.Y - (4 * height));
            }
        }
        else if (viewPnt.Y <= (displayRectangle.Y + displayRectangle.Height) && viewPnt.Y > ((displayRectangle.Y + displayRectangle.Height) - autoScrollRegion.Height)) {
            view.Y = (view.Y + height);
            if (viewPnt.Y > ((displayRectangle.Y + displayRectangle.Height) - autoScrollRegion.Height / 2)) {
                view.Y = (view.Y + height);
            }
            if (viewPnt.Y > ((displayRectangle.Y + displayRectangle.Height) - autoScrollRegion.Height / 4)) {
                view.Y = (view.Y + (4 * height));
            }
        }
        return this.convertViewToDoc(view);
    };
    TuView.prototype.computeDocumentBounds = function () {
        return _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_4__.TuDocument.ComputeBounds(this.Document, this);
    };
    TuView.prototype.convertDocToView = function (p) {
        var docPosition = this.DocPosition;
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(p, _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CoreGraphicTypes.CGPoint)) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(((~~Math.floor(((p.X - docPosition.X) * this.myHorizScale * this.myHorizWorld))) + this.myDisplayRectangle.X), ((~~Math.floor(((p.Y - docPosition.Y) * this.myVertScale * this.myVertWorld))) + this.myDisplayRectangle.Y));
        }
        else if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(p, _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CoreGraphicTypes.CGSize)) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize((~~Math.ceil((p.Width * this.myHorizScale * this.myHorizWorld))), (~~Math.ceil((p.Height * this.myVertScale * this.myVertWorld))));
        }
        else if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(p, _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CoreGraphicTypes.CGRectangle)) {
            var docPosition_1 = this.DocPosition;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(((~~Math.floor(((p.X - docPosition_1.X) * this.myHorizScale * this.myHorizWorld))) + this.myDisplayRectangle.X), ((~~Math.floor(((p.Y - docPosition_1.Y) * this.myVertScale * this.myVertWorld))) + this.myDisplayRectangle.Y), (~~Math.ceil((p.Width * this.myHorizScale * this.myHorizWorld))), (~~Math.ceil((p.Height * this.myVertScale * this.myVertWorld))));
        }
    };
    TuView.prototype.convertViewToDoc = function (p) {
        if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(p, _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CoreGraphicTypes.CGPoint)) {
            var docPosition = this.DocPosition;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint((p.X - this.myDisplayRectangle.X) / this.myHorizWorld / this.myHorizScale + docPosition.X, (p.Y - this.myDisplayRectangle.Y) / this.myVertWorld / this.myVertScale + docPosition.Y);
        }
        else if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(p, _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CoreGraphicTypes.CGSize)) {
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(p.Width / this.myHorizWorld / this.myHorizScale, p.Height / this.myVertWorld / this.myVertScale);
        }
        else if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(p, _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CoreGraphicTypes.CGRectangle)) {
            var docPosition = this.DocPosition;
            return new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle((p.X - this.myDisplayRectangle.X) / this.myHorizWorld / this.myHorizScale + docPosition.X, (p.Y - this.myDisplayRectangle.Y) / this.myVertWorld / this.myVertScale + docPosition.Y, p.Width / this.myHorizWorld / this.myHorizScale, p.Height / this.myVertWorld / this.myVertScale);
        }
    };
    TuView.prototype.copySelection = function (sel, offset, grid) {
        var _this = this;
        if (sel == null) {
            sel = this.Selection;
        }
        if (sel === this.Selection && !this.CanCopyObjects()) {
            return;
        }
        if (sel.IsEmpty) {
            return;
        }
        var document = this.Document;
        var str = undefined;
        var suspendsRouting = document.SuspendsRouting;
        try {
            this.startTransaction();
            document.SuspendsRouting = true;
            var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__.TuCollection({
                internalChecksForDuplicates: false
            });
            goCollections.AddRange(sel);
            this.Layers.SortByZOrder(goCollections);
            var goCopyDictionary_1 = document.createCopyDictionary();
            document.CopyFromCollection(goCollections, true, true, offset, goCopyDictionary_1);
            this.Selection.Clear();
            this.raiseSelectionStarting();
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections, function (goCollection) {
                var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goCopyDictionary_1.Get(goCollection), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                if (item == null || !item.IsTopLevel || item.Document !== document) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                _this.Selection.Add(item);
            });
            this.raiseSelectionFinished();
            if (grid) {
                var goObject_1 = undefined;
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Selection, function (selection) {
                    if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(selection, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink)) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    goObject_1 = selection;
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.BREAK;
                });
                var x_1 = offset;
                if (goObject_1 != null) {
                    var location_1 = goObject_1.Location;
                    var pointF = this.snapPoint(location_1, goObject_1);
                    x_1.Width = pointF.X - location_1.X;
                    x_1.Height = pointF.Y - location_1.Y;
                    (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Selection, function (selection1) {
                        if (!(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(selection1, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink))) {
                            return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                        }
                        var pointF1 = selection1;
                        pointF1.Position = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(pointF1.Left + x_1.Width, selection1.Top + x_1.Height);
                    });
                }
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Selection, function (goObject1) {
                    if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject1, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink)) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    var tuObject = goObject1;
                    var location1 = tuObject.Location;
                    tuObject.DoMove(_this, location1, _this.snapPoint(location1, goObject1));
                });
            }
            document.ResumeRouting(suspendsRouting, this.Selection);
            str = "Copy Selection";
        }
        finally {
            document.SuspendsRouting = suspendsRouting;
            this.finishTransaction(str);
        }
    };
    TuView.prototype.copyToClipboard = function (coll) {
        if (coll == null || coll.Count === 0) {
            try {
                _Forms_Clipboard__WEBPACK_IMPORTED_MODULE_42__.Clipboard.SetDataObject(new _Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject());
            }
            catch (verificationException) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("GoView.CopyToClipboard: ", verificationException.toString()));
                TuView_1.myClipboard.Clear();
            }
            return;
        }
        var document = this.Document;
        if (document != null) {
            var goDocuments = _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Activator.CreateInstance(document.GetType());
            goDocuments.UndoManager = null;
            goDocuments.MergeLayersFrom(document);
            var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__.TuCollection();
            /* {
                InternalChecksForDuplicates = false
            }; */
            goCollections.AddRange(coll);
            document.Layers.SortByZOrder(goCollections);
            var sizeF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize();
            goDocuments.CopyFromCollection(goCollections, true, true, sizeF, null);
            try {
                _Forms_Clipboard__WEBPACK_IMPORTED_MODULE_42__.Clipboard.SetDataObject(this.createDataObject(coll, goDocuments));
            }
            catch (verificationException1) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("TuView.CopyToClipboard: ", verificationException1.toString()));
                TuView_1.myClipboard.Clear();
                TuView_1.myClipboard[goDocuments.DataFormat] = goDocuments;
            }
        }
    };
    TuView.prototype.createDataObject = function (coll, clipdoc) {
        var dataObject = new _Forms_DataObject__WEBPACK_IMPORTED_MODULE_41__.DataObject();
        dataObject.SetData(clipdoc.DataFormat, clipdoc);
        var bitmapFromCollection = this.getBitmapFromCollection(clipdoc);
        dataObject.SetData(_Forms_DataFormats__WEBPACK_IMPORTED_MODULE_48__.DataFormats.Bitmap, true, bitmapFromCollection);
        var stringBuilder = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.StringBuilder();
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(clipdoc, function (goObject) {
            var text = undefined;
            var goLabeledPart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLabeledPart);
            if (goLabeledPart == null) {
                var goText = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuText);
                if (goText != null) {
                    text = goText.Text;
                }
            }
            else {
                text = goLabeledPart.Text;
            }
            if (text == null) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            if (stringBuilder.Length > 0) {
                stringBuilder.Append('<br\>');
            }
            stringBuilder.Append(text);
        });
        if (stringBuilder.Length > 0) {
            dataObject.SetData(_Forms_DataFormats__WEBPACK_IMPORTED_MODULE_48__.DataFormats.UnicodeText, true, stringBuilder.ToString());
        }
        return dataObject;
    };
    TuView.prototype.createDefaultTool = function () {
        return new _TuTool_TuToolManager__WEBPACK_IMPORTED_MODULE_49__.TuToolManager(this);
    };
    TuView.prototype.createDocument = function () {
        return new _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_4__.TuDocument();
    };
    TuView.prototype.createGrid = function () {
        var grid = new _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__.TuGrid();
        grid.OriginRelative = false;
        grid.UnboundedSpots = new _Spot__WEBPACK_IMPORTED_MODULE_18__.Spot(-1, -1, 10);
        grid.Selectable = false;
        return grid;
    };
    TuView.prototype.createLink = function (fromPort, toPort) {
        if (fromPort == null || toPort == null || fromPort.TuObject == null || toPort.TuObject == null) {
            return undefined;
        }
        if (this.NewLinkPrototype == null) {
            return undefined;
        }
        var goLink = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.Document.createCopyDictionary().CopyComplete(this.NewLinkPrototype), _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink);
        if (goLink == null || goLink.TuObject == null) {
            return undefined;
        }
        goLink.FromPort = fromPort;
        goLink.ToPort = toPort;
        _TuSubGraph_TuSubGraphBase__WEBPACK_IMPORTED_MODULE_32__.TuSubGraphBase.ReparentToCommonSubGraph(goLink.TuObject, fromPort.TuObject, toPort.TuObject, true, this.Document.LinksLayer);
        var goRoutable = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goLink, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuRoutable);
        if (goRoutable != null) {
            goRoutable.updateRoute();
        }
        return goLink;
    };
    TuView.prototype.createSelection = function () {
        return new _TuSelection_TuSelection__WEBPACK_IMPORTED_MODULE_13__.TuSelection(this);
    };
    TuView.prototype.createSheet = function () {
        var goSheet = new _TuSheet_TuSheet__WEBPACK_IMPORTED_MODULE_10__.TuSheet();
        goSheet.Visible = this.SheetStyle !== _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None;
        goSheet.Printable = false;
        goSheet.Selectable = false;
        try {
            goSheet.updateBounds((new _Forms_PrintDocument__WEBPACK_IMPORTED_MODULE_50__.PrintDocument()).DefaultPageSettings, this.PrintScale);
        }
        catch (exception) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("CreateSheet: ", exception.toString()));
            goSheet.Bounds = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(0, 0, 850, 1100);
        }
        var paper = goSheet.Paper;
        var paperColor = this.Document.PaperColor;
        if (paperColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
            paperColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.White;
        }
        paper.BrushColor = paperColor;
        return goSheet;
    };
    TuView.prototype.deleteSelection = function (sel) {
        if (sel == null) {
            sel = this.Selection;
        }
        if (sel == this.Selection && !this.CanDeleteObjects()) {
            return;
        }
        if (sel.IsEmpty) {
            return;
        }
        var str = undefined;
        try {
            this.startTransaction();
            var cancelEventArg = new _Forms_CancelEventArgs__WEBPACK_IMPORTED_MODULE_51__.CancelEventArgs();
            this.raiseSelectionDeleting(cancelEventArg);
            if (!cancelEventArg.Cancel) {
                this.raiseSelectionStarting();
                sel.removeAllSelectionHandles();
                var goObjectArray = sel.CopyArray();
                this.Layers.SortByZOrder(goObjectArray);
                for (var i = (goObjectArray.length - 1); i >= 0; i--) {
                    var goObject = goObjectArray[i];
                    if (goObject != null && goObject.CanDelete()) {
                        goObject.Remove();
                        sel.Remove(goObject);
                    }
                }
                this.raiseSelectionFinished();
                str = "Delete Selection";
                this.raiseSelectionDeleted();
            }
        }
        finally {
            this.finishTransaction(str);
        }
    };
    TuView.prototype.detectHover = function (viewPnt) {
        // TODO: commentleri kaldir.
        /*   if (this.myHoverTimer == null) {
             this.myHoverTimer = new Timer(new TimerCallback(this.hoverCallback), new EventHandler(this.hoverTick), -1, -1);
             this.myHoverTimerEnabled = false;
         }
         if (this.myHoverPoint != viewPnt) {
             this.stopHoverTimer();
         }
         if (!this.myHoverTimerEnabled) {
             this.myHoverTimerEnabled = true;
             this.myHoverTimer.change(this.HoverDelay, -1);
         }
         this.myHoverPoint = viewPnt;  */
        //console.error('detectHover not implemented.');
    };
    TuView.prototype.dispose = function (disposing) {
        if (disposing) {
            if (this.myAutoScrollTimer != null) {
                this.myAutoScrollTimer.dispose();
                this.myAutoScrollTimer = null;
            }
            if (this.myHoverTimer != null) {
                this.myHoverTimer.dispose();
                this.myHoverTimer = null;
            }
            if (this.myModalControl != null) {
                this.myModalControl.Dispose();
                this.myModalControl = null;
            }
            if (this.Document != null) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Document.Layers, function (layer) {
                    layer.ResetCaches();
                });
            }
        }
        // TODO: analize
        //(super).Dispose(/* disposing */);
        if (this.myDocumentChangedSubscription != null) {
            //this.myDocument.Changed$.remove(this.myDocChangedEventHandler);
            this.myDocumentChangedSubscription.unsubscribe();
        }
        if (this.myBuffer != null) {
            this.myBuffer.Dispose();
            this.myBuffer = null;
        }
        if (this.myBackgroundBrush != null) {
            this.myBackgroundBrush.Dispose();
            this.myBackgroundBrush = null;
        }
        if (this.myShadowBrush != null) {
            this.myShadowBrush.Dispose();
            this.myShadowBrush = null;
        }
        if (this.myShadowPen != null) {
            this.myShadowPen.Dispose();
            this.myShadowPen = null;
        }
    };
    TuView.prototype.doAutoAction = function () {
        if (!this.myActioning) {
            this.myActioning = true;
            this.doInternalAutoScroll();
        }
    };
    TuView.prototype.doAutoPan = function (originPnt, viewPnt) {
        this.myPanning = true;
        this.myPanningOrigin = originPnt;
        this.myAutoScrollPoint = viewPnt;
        this.doInternalAutoScroll();
    };
    TuView.prototype.doAutoScroll = function (viewPnt) {
        this.myPanning = false;
        this.myAutoScrollPoint = viewPnt;
        this.doInternalAutoScroll();
    };
    TuView.prototype.doBackgroundMouseOver = function (evt) {
        this.setCursor1(this.DefaultCursor);
    };
    TuView.prototype.doCancelMouse = function () {
        this.myCancelMouseDown = true;
        this.Tool.doCancelMouse();
    };
    TuView.prototype.doContextClick = function (evt) {
        if (this.lastContextMenu != null) {
            this.lastContextMenu.hideMenu(evt.MouseEventArgs.HtmlEventObject);
            this.lastContextMenu.removeFromDOM();
        }
        var parent = this.pickObject(true, false, evt.DocPoint, false);
        if (parent == null) {
            this.raiseBackgroundContextClicked(evt);
        }
        else {
            this.raiseObjectContextClicked(parent, evt);
            while (parent != null) {
                // TODO: Menu implementation
                var contextMenuStrip = parent.GetContextMenuStrip(this);
                if (contextMenuStrip != null) {
                    this.lastContextMenu = contextMenuStrip;
                    contextMenuStrip.showMenu(evt.MouseEventArgs.HtmlEventObject /* this, evt.ViewPoint */);
                    return true;
                }
                /*  GoContextMenu contextMenu = parent.GetContextMenu(this);
                 if (contextMenu != null) {
                     contextMenu.Show(this, evt.ViewPoint);
                     return true;
                 } */
                if (parent.OnContextClick(evt, this)) {
                    return true;
                }
                parent = parent.Parent;
            }
        }
        return false;
    };
    TuView.prototype.doDoubleClick = function (evt) {
        var parent = this.pickObject(true, false, evt.DocPoint, false);
        if (parent == null) {
            this.raiseBackgroundDoubleClicked(evt);
        }
        else {
            this.raiseObjectDoubleClicked(parent, evt);
            while (parent != null) {
                if (parent.OnDoubleClick(evt, this)) {
                    return true;
                }
                parent = parent.Parent;
            }
        }
        return false;
    };
    TuView.prototype.doEndEdit = function () {
        var editControl = this.EditControl;
        if (editControl != null) {
            editControl.DoEndEdit(this);
        }
    };
    TuView.prototype.doExternalDrag = function (evt) {
        this.followExternalDragImage(this.LastInput.DocPoint);
        if (!this.CanInsertObjects()) {
            evt.Effect = _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.None;
            return;
        }
        evt.Effect = _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.Copy;
        this.doAutoScroll(this.LastInput.ViewPoint);
    };
    TuView.prototype.DoExternalDrop = function (evt) {
        var _this = this;
        var _a;
        var data = (_a = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(evt.Data.GetData((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_11__.Types.TuSelection)), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuSelection)) !== null && _a !== void 0 ? _a : (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(evt.Data.GetData(this.Selection.GetType()), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuSelection);
        if (data != null) {
            var document_1 = this.Document;
            if (document_1 != null) {
                var docPoint = this.LastInput.DocPoint;
                var primary = data.Primary;
                if (primary != null) {
                    var str = undefined;
                    var suspendsRouting = document_1.SuspendsRouting;
                    var goCollections_1 = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__.TuCollection();
                    /* {
                        InternalChecksForDuplicates = false
                    }; */
                    try {
                        this.startTransaction();
                        document_1.SuspendsRouting = true;
                        var left = primary.Left;
                        var hotSpot = data.HotSpot;
                        var width = left + hotSpot.Width;
                        var top_1 = primary.Top;
                        hotSpot = data.HotSpot;
                        var sizeF = _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_29__.TuTool.SubtractPoints(docPoint, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(width, top_1 + hotSpot.Height));
                        var goCopyDictionary = document_1.CopyFromCollection(data, false, true, sizeF, null);
                        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCopyDictionary.Values, function (value) {
                            var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(value, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                            if (goObject == null || !goObject.IsTopLevel || goObject.Document !== document_1) {
                                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                            }
                            goCollections_1.Add(goObject);
                            var location = goObject.Location;
                            goObject.DoMove(_this, location, _this.snapPoint(location, goObject));
                        });
                        var selection_1 = this.Selection;
                        selection_1.Clear();
                        this.raiseSelectionStarting();
                        var item = goCopyDictionary.Get(primary);
                        if (item != null && goCollections_1.Contains(item)) {
                            selection_1.Add(item);
                        }
                        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goCollections_1, function (goCollection) {
                            selection_1.Add(goCollection);
                        });
                        this.raiseSelectionFinished();
                        selection_1.HotSpot = data.HotSpot;
                        if (this.ExternalDragDropsOnEnter) {
                            str = "Drop";
                            this.raiseExternalObjectsDropped(this.LastInput);
                        }
                        else if (!this.doSelectionDropReject(this.LastInput)) {
                            this.doSelectionDropped(this.LastInput);
                            str = "Drop";
                            this.raiseExternalObjectsDropped(this.LastInput);
                        }
                        else {
                            this.deleteSelection(this.Selection);
                            str = null;
                        }
                        document_1.ResumeRouting(suspendsRouting, null);
                    }
                    finally {
                        document_1.SuspendsRouting = suspendsRouting;
                        this.finishTransaction(str);
                    }
                    return goCollections_1;
                }
            }
        }
        return undefined;
    };
    TuView.prototype.doHover = function (evt) {
        var parent = this.pickObject(true, false, evt.DocPoint, false);
        if (parent == null) {
            this.raiseBackgroundHover(evt);
        }
        else {
            this.raiseObjectHover(parent, evt);
            while (parent != null) {
                if (parent.OnHover(evt, this)) {
                    return true;
                }
                parent = parent.Parent;
            }
        }
        return false;
    };
    TuView.prototype.doInternalAutoScroll = function () {
        // throw new NotImplementedException('doInternalAutoScroll');
        /*  if (this.myAutoScrollTimer == null) {
             this.myAutoScrollTimer = new Timer(this.autoScrollCallback.bind(this), this.autoScrollTick.bind(this), -1, -1);
             this.myAutoScrollTimerEnabled = false;
         }
         if (this.myActioning) {
             if (!this.myAutoScrollTimerEnabled) {
                 this.myAutoScrollTimerEnabled = true;
                 this.myAutoScrollTimer.change(this.AutoScrollDelay, -1);
             }
             return;
         }
         if ((this.myPanning ? this.computeAutoPanDocPosition(this.myPanningOrigin, this.myAutoScrollPoint) :
             this.computeAutoScrollDocPosition(this.myAutoScrollPoint)).notEquals(this.DocPosition)) {
             if (!this.myAutoScrollTimerEnabled) {
                 this.myAutoScrollTimerEnabled = true;
                 if (!this.Focused) {
                     this.myAutoScrollTimer.change(this.AutoScrollDelay, -1);
                     return;
                 }
                 this.myAutoScrollTimer.change(this.AutoScrollTime, -1);
                 return;
             }
         }
         else if (!this.myPanning) {
             this.stopAutoScroll();
         } */
    };
    TuView.prototype.doInternalDrag = function (evt) {
        this.doMouseMove();
    };
    TuView.prototype.doInternalDrop = function (evt) {
        this.doMouseUp();
    };
    TuView.prototype.doKeyDown = function () {
        this.Tool.doKeyDown();
    };
    TuView.prototype.doMouseDown = function () {
        _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Console.WriteLine("Mouse Down");
        var focused = this.Focused;
        this.requestFocus();
        if (focused || !this.myCancelMouseDown) {
            this.Tool.doMouseDown();
        }
        this.myCancelMouseDown = false;
    };
    TuView.prototype.doMouseHover = function () {
        this.Tool.doMouseHover();
    };
    TuView.prototype.doMouseMove = function () {
        TuView_1.test++;
        if (TuView_1.test === 10) {
            var a = '';
        }
        this.Tool.doMouseMove();
    };
    TuView.prototype.doMouseOver = function (evt) {
        var parent = this.pickObject(true, true, evt.DocPoint, false);
        if (parent != null) {
            //console.log(parent);
        }
        this.doToolTipObject(parent);
        var flag = false;
        while (parent != null) {
            if (!parent.OnMouseOver(evt, this)) {
                parent = parent.Parent;
            }
            else {
                flag = true;
                break;
            }
        }
        if (!flag) {
            this.doBackgroundMouseOver(evt);
        }
        this.detectHover(evt.ViewPoint);
        return flag;
    };
    TuView.prototype.doMouseUp = function () {
        _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Console.WriteLine("Mouse Up");
        this.Tool.doMouseUp();
    };
    TuView.prototype.doMouseWheel = function () {
        this.Tool.doMouseWheel();
    };
    TuView.prototype.doObjectEnterLeave = function (from, to, evt) {
        this.raiseObjectEnterLeave(from, to, evt);
        var parent = _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_64__.TuObject.FindCommonParent(from, to);
        while (from != null && from !== parent) {
            var goObject = from;
            if (goObject.OnEnterLeave(goObject, to, this)) {
                break;
            }
            from = from.Parent;
        }
        var flag = false;
        while (to != null && to !== parent) {
            if (!to.OnEnterLeave(from, to, this)) {
                to = to.Parent;
            }
            else {
                flag = true;
                break;
            }
        }
        if (!flag) {
            while (parent != null && !parent.OnEnterLeave(from, to, this)) {
                parent = parent.Parent;
            }
        }
    };
    TuView.prototype.doSelectionDropped = function (evt) {
        var parent;
        parent = (!this.mySelectionDropRejectOverValid ? this.pickObjectExcluding(true, false, evt.DocPoint, false, this.Selection) :
            this.mySelectionDropRejectOver);
        this.mySelectionDropRejectOverValid = false;
        if (parent == null) {
            this.raiseBackgroundSelectionDropped(evt);
        }
        else {
            var goObjectEventArg = new _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__.TuObjectEventArgs(parent, evt);
            this.onObjectSelectionDropped(goObjectEventArg);
            while (parent != null) {
                if (parent.OnSelectionDropped(goObjectEventArg, this)) {
                    return true;
                }
                if (goObjectEventArg.TuObject == null) {
                    return false;
                }
                parent = parent.Parent;
            }
        }
        return false;
    };
    TuView.prototype.doSelectionDropReject = function (evt) {
        var parent = this.pickObjectExcluding(true, false, evt.DocPoint, false, this.Selection);
        this.mySelectionDropRejectOverValid = true;
        this.mySelectionDropRejectOver = parent;
        if (parent == null) {
            var goInputEventArg = new _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_8__.TuInputEventArgs(evt);
            this.raiseBackgroundSelectionDropReject(goInputEventArg);
            if (goInputEventArg.InputState === _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Cancel) {
                return true;
            }
        }
        else {
            var goObjectEventArg = new _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__.TuObjectEventArgs(parent, evt);
            this.raiseObjectSelectionDropReject(goObjectEventArg);
            if (goObjectEventArg.InputState === _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Cancel) {
                return true;
            }
            while (parent != null) {
                if (parent.OnSelectionDropReject(goObjectEventArg, this) || goObjectEventArg.InputState === _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Cancel) {
                    return true;
                }
                if (goObjectEventArg.TuObject == null) {
                    return false;
                }
                parent = parent.Parent;
            }
        }
        return false;
    };
    TuView.prototype.doSingleClick = function (evt) {
        var parent = this.pickObject(true, false, evt.DocPoint, false);
        if (parent == null) {
            this.raiseBackgroundSingleClicked(evt);
        }
        else {
            this.raiseObjectSingleClicked(parent, evt);
            while (parent != null) {
                if (parent.OnSingleClick(evt, this)) {
                    return true;
                }
                parent = parent.Parent;
            }
        }
        return false;
    };
    TuView.prototype.doToolTipObject = function (obj) {
        if (this.ToolTip == null) {
            return;
        }
        var toolTip = this.ToolTip.getToolTip(this);
        var toolTipText = undefined;
        while (obj != null) {
            toolTipText = obj.GetToolTip(this);
            if (toolTipText != null) {
                break;
            }
            obj = obj.Parent;
        }
        if (toolTipText == null) {
            toolTipText = this.ToolTipText;
        }
        if (toolTipText == null) {
            toolTipText = '';
        }
        if (toolTipText !== toolTip) {
            this.ToolTip.setToolTip(this, toolTipText);
        }
    };
    /**
     * Perform the standard mouse wheel behavior for views.
     * @param evt
     * @description
     * <p>When the Control key is held down, rotating the mouse wheel changes the
     * [[TuView.DocScale]] to "zoom" the view in or out at the current mouse point.
     * Otherwise rotating the mouse wheel scrolls the view by calling @see [[TuView.ScrollLine]].
     * If the Shift key is held down, the scrolling is horizontal instead of vertical.</p>
     * <p>This is normally called from the @see [[TuToolManager]]. @see [[ToolManager.DoMouseWheel]]
     * method, to handle mouse wheel turns in the standard manner.</p>
     */
    TuView.prototype.doWheel = function (evt) {
        if (evt.Delta == 0) {
            return;
        }
        if (this.EditControl != null) {
            this.requestFocus();
        }
        if (!evt.Control) {
            var delta = (0 - evt.Delta) / 120;
            if (evt.Shift) {
                this.scrollLine(delta, 0);
                return;
            }
            this.scrollLine(0, delta);
            return;
        }
        var docPosition = this.DocPosition;
        this.DocScale = this.DocScale * (1 + evt.Delta / 2400);
        var doc = this.convertViewToDoc(evt.ViewPoint);
        var x = docPosition.X;
        var docPoint = evt.DocPoint;
        var single = x + docPoint.X - doc.X;
        var y = docPosition.Y;
        docPoint = evt.DocPoint;
        this.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(single, y + docPoint.Y - doc.Y);
    };
    /**
     * This convenience method erases any previous XOR-drawn rectangle and then
     * may draw a new one with the given dimensions.
     * @param rect
     * @param drawnew
     * @description
     * <p> This always erases any earlier rectangle drawn by this method.
     * It only draws a new rectangle if [[drawnew]] is true.</p>
     * <p>If [[TuView.DrawsXorMode]] is false, this draws a rectangle using a
     * checkerboard pen, instead of drawing in XOR mode.</p>
     */
    TuView.prototype.drawXorBox = function (rect, drawnew) {
        if (this.myPrevXorRectValid) {
            this.myPrevXorRectValid = false;
            try {
                this.drawXorRectangle(this.myPrevXorRect);
            }
            catch (verificationException) {
                this.DrawsXorMode = false;
            }
        }
        if (drawnew) {
            if (!this.DrawsXorMode) {
                if (this.myMarquee == null) {
                    this.myMarquee = new _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_12__.TuRectangle();
                    this.myMarquee.Brush = undefined;
                    this.myMarquee.Pen = undefined;
                }
                if (this.myMarquee.Pen == null) {
                    // TODO: hatch brush ile yap.
                    var pen = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Pen(_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Brushes.Black /* new HatchBrush(HatchStyle.SmallCheckerBoard, CGColor.Black, CGColor.White) */, 2 / this.DocScale);
                    this.myMarquee.Pen = pen;
                }
                this.myMarquee.Bounds = this.convertViewToDoc(rect);
                this.Layers.Top.Add(this.myMarquee);
                return;
            }
            try {
                this.drawXorRectangle(rect);
                this.myPrevXorRect = rect;
                this.myPrevXorRectValid = true;
            }
            catch (exception) {
                this.DrawsXorMode = false;
            }
        }
        else if (this.myMarquee != null) {
            this.myMarquee.Remove();
        }
    };
    TuView.prototype.pointToScreen = function (p) {
        return p;
    };
    TuView.prototype.rectangleToScreen = function (r) {
        return r;
    };
    /**
     * Draw a line on the screen in XOR mode.
     * @param ax
     * @param ay
     * @param bx
     * @param by
     * @description
     * The parameters are all in view coordinates.
     * You should call this method twice for each set of argument values--
     * once to draw the line and once to restore the original screen image.
     */
    TuView.prototype.drawXorLine = function (ax, ay, bx, by) {
        var point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(ax, ay);
        var point1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(bx, by);
        var screen = this.pointToScreen(point);
        var screen1 = this.pointToScreen(point1);
        var paperColor = this.Document.PaperColor;
        if (paperColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
            paperColor = this.BackColor;
        }
        _Forms_ControlPaint__WEBPACK_IMPORTED_MODULE_66__.ControlPaint.DrawReversibleLine(screen, screen1, paperColor);
    };
    /**
     * Draw a rectangle on the screen in XOR mode.
     * @param rect
     * @description
     * The parameter is in view coordinates.
     * You should call this method twice for each set of rectangular coordinates--
     * once to draw the rectangle and once to restore the original screen image.
     */
    TuView.prototype.drawXorRectangle = function (rect) {
        var screen = this.rectangleToScreen(rect);
        var paperColor = this.Document.PaperColor;
        if (paperColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
            paperColor = this.BackColor;
        }
        _Forms_ControlPaint__WEBPACK_IMPORTED_MODULE_66__.ControlPaint.DrawReversibleFrame(screen, paperColor, _Forms_FrameStyle__WEBPACK_IMPORTED_MODULE_62__.FrameStyle.Thick);
    };
    /**
     * Copy the [[TuView.Selection]] to the clipboard.
     * @description
     * <p>This method does nothing if @see [[TuView.CanCopyObjects]] is false.
     * After calling [[TuView.CopyToClipboard]], this calls [[TuView.raiseClipboardCopied]].
     * All the actions occur within a transaction.</p>
     * <p>All of the objects in the selection will be copied by serializing them.
     * If any of the objects, or any of the objects that they refer to, are not
     * serializable, there will be a serialization exception, and the clipboard
     * might not a copy of the selection.
     * @see [[TuView.CopyToClipboard]] will log any exceptions to any trace listeners.
     * The User Guide discusses serialization and deserialization in more detail.</p>
     * @see [[TuView.CanEditCopy]]
     * @see [[TuView.DisableKeys]]
     */
    TuView.prototype.editCopy = function () {
        if (!this.CanCopyObjects()) {
            return;
        }
        var str = undefined;
        try {
            try {
                this.CursorName = "wait";
                this.startTransaction();
                this.copyToClipboard(this.Selection);
                str = "Copy";
                this.raiseClipboardCopied();
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("EditCopy: ", exception.toString()));
                throw exception;
            }
        }
        finally {
            var undoManager = this.Document.UndoManager;
            if (undoManager != null && undoManager.CurrentEdit == null) {
                undoManager.CurrentEdit = new _TuDocument_TuUndoManagerCompoundEdit__WEBPACK_IMPORTED_MODULE_35__.TuUndoManagerCompoundEdit();
            }
            this.finishTransaction(str);
            this.CursorName = "default";
        }
    };
    /**
     * Copy the current @see [[TuView.Selection]] to the clipboard and then delete it.
     * @description
     * This method does nothing if @see [[TuView.canCopyObjects]] or  @see [[TuView.canDeleteObjects]] is false.
     * After calling @see [[TuView.copyToClipboard]] and @see [[Tuiew.deleteSelection]] , this calls @see [[TuView.raiseClipboardCopied]]".
     * All the actions occur within a transaction.
     * @see [[TuView.CanEditCut]]
     * @see [[TuView.DisableKeys]]
     */
    TuView.prototype.editCut = function () {
        if (!this.CanCopyObjects()) {
            return;
        }
        if (!this.CanDeleteObjects()) {
            return;
        }
        var str = undefined;
        try {
            try {
                this.CursorName = "wait";
                this.startTransaction();
                this.copyToClipboard(this.Selection);
                this.deleteSelection(this.Selection);
                str = "Cut";
                this.raiseClipboardCopied();
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("EditCut: ", exception.toString()));
                throw exception;
            }
        }
        finally {
            this.finishTransaction(str);
            this.CursorName = "default";
        }
    };
    TuView.prototype.editDelete = function () {
        try {
            this.CursorName = "wait";
            this.deleteSelection(this.Selection);
        }
        finally {
            this.CursorName = "default";
        }
    };
    TuView.prototype.editEdit = function () {
        this.editObject(this.Selection.Primary);
    };
    TuView.prototype.editObject = function (obj) {
        if (obj == null) {
            return;
        }
        if (!this.CanEditObjects()) {
            return;
        }
        if (obj.CanEdit()) {
            obj.DoBeginEdit(this);
        }
    };
    TuView.prototype.editPaste = function () {
        var _this = this;
        if (!this.CanInsertObjects()) {
            return;
        }
        var document = this.Document;
        var str = undefined;
        var suspendsRouting = document.SuspendsRouting;
        try {
            try {
                this.CursorName = "wait";
                this.startTransaction();
                document.SuspendsRouting = true;
                var goCopyDictionary_2 = this.pasteFromClipboard();
                if (goCopyDictionary_2 != null) {
                    var flag_1 = false;
                    this.raiseSelectionStarting();
                    var sourceCollection = goCopyDictionary_2.SourceCollection;
                    if (sourceCollection == null) {
                        var enumerator = goCopyDictionary_2.GetEnumerator();
                        while (enumerator.MoveNext()) {
                            var key = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(enumerator.Current.key, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                            if (key == null || !key.IsTopLevel) {
                                continue;
                            }
                            var value = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(enumerator.Current.value, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                            if (value == null || !value.IsTopLevel || value.Document !== document) {
                                continue;
                            }
                            if (!flag_1) {
                                flag_1 = true;
                                this.Selection.Clear();
                            }
                            this.Selection.Add(value);
                        }
                    }
                    else {
                        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(sourceCollection, function (goObject) {
                            var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goCopyDictionary_2.Get(goObject), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                            if (item == null || !item.IsTopLevel || item.Document !== document) {
                                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                            }
                            if (!flag_1) {
                                flag_1 = true;
                                _this.Selection.Clear();
                            }
                            _this.Selection.Add(item);
                        });
                    }
                    this.raiseSelectionFinished();
                }
                str = "Paste";
                this.raiseClipboardPasted();
                document.ResumeRouting(suspendsRouting, this.Selection);
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("EditPaste: ", exception.toString()));
                throw exception;
            }
        }
        finally {
            document.SuspendsRouting = suspendsRouting;
            this.finishTransaction(str);
            this.CursorName = "default";
        }
    };
    TuView.prototype.endUpdate = function () {
        if (this.mySuppressPaint > 0) {
            this.mySuppressPaint = this.mySuppressPaint - 1;
            //this.updateView();
        }
    };
    TuView.prototype.findMouseTool = function (tooltype, subclass) {
        if (subclass === void 0) { subclass = false; }
        // TODO: type ile ilgili konular düzeltilecek.
        var i;
        var mouseDownTools = this.MouseDownTools;
        for (i = 0; i < mouseDownTools.Count; i++) {
            if (mouseDownTools[i].GetType() === tooltype || subclass && mouseDownTools[i].GetType().IsSubclassOf(tooltype)) {
                return mouseDownTools[i];
            }
        }
        mouseDownTools = this.MouseMoveTools;
        for (i = 0; i < mouseDownTools.Count; i++) {
            if (mouseDownTools[i].GetType() === tooltype || subclass && mouseDownTools[i].GetType().IsSubclassOf(tooltype)) {
                return mouseDownTools[i];
            }
        }
        mouseDownTools = this.MouseUpTools;
        for (i = 0; i < mouseDownTools.Count; i++) {
            if (mouseDownTools[i].GetType() === tooltype || subclass && mouseDownTools[i].GetType().IsSubclassOf(tooltype)) {
                return mouseDownTools[i];
            }
        }
        return undefined;
    };
    TuView.prototype.findNearestGridPoint = function (p) {
        if (this.Grid == null) {
            return p;
        }
        return this.Grid.findNearestGridPoint(p, undefined);
    };
    TuView.prototype.finishTransaction = function (tname) {
        return this.Document.finishTransaction(tname);
    };
    TuView.prototype.followExternalDragImage = function (pt) {
        if (this.myExternalDragImage != null) {
            this.myExternalDragImage.Location = pt;
        }
    };
    TuView.prototype.freeTempPointArray = function (a) {
        var length = a.length;
        if (this.myTempArrays != null && length < this.myTempArrays.length) {
            this.myTempArrays[length] = a;
        }
    };
    TuView.prototype.getBitmap = function () {
        var bitmap;
        var flag = this.myIsRenderingBitmap;
        this.myIsRenderingBitmap = true;
        var displayRectangle = this.DisplayRectangle;
        var bitmap1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Bitmap(displayRectangle.Width, displayRectangle.Height);
        var graphic = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Graphics.FromImage(bitmap1);
        graphic.PageUnit = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicsUnit.Pixel;
        graphic.ScaleTransform(this.DocScale, this.DocScale);
        var docPosition = this.DocPosition;
        graphic.translateTransform(-docPosition.X, -docPosition.Y);
        var rectangleF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(docPosition, this.convertViewToDoc(displayRectangle.Size));
        graphic.setClip(rectangleF);
        this.updateDelayedSelectionHandles();
        this.paintView(graphic, rectangleF);
        graphic.dispose();
        this.myIsRenderingBitmap = flag;
        bitmap = bitmap1;
        return bitmap;
    };
    TuView.prototype.getBitmapFromCollection = function () {
        var _this = this;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (args.length === 1) {
            var rectangleF = _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_4__.TuDocument.ComputeBounds(args[0], this);
            return this.getBitmapFromCollection(args[0], rectangleF, true);
        }
        else if (args.length === 3) {
            var coll = args[0];
            var bounds = args[1];
            var paper = args[2];
            var single = 1;
            var worldScale = this.WorldScale;
            var width = 2000 / worldScale.Width;
            worldScale = this.WorldScale;
            var height = 2000 / worldScale.Height;
            if (bounds.Width > width || bounds.Height > height) {
                single = Math.min(width / bounds.Width, height / bounds.Height);
            }
            return this.getBitmapFromCollection(coll, bounds, single, paper);
        }
        else if (args.length === 4) {
            var coll = args[0];
            var bounds = args[1];
            var scale = args[2];
            var paper = args[3];
            var bitmap = void 0;
            if (scale < 9E-09) {
                scale = 9E-09;
            }
            var int32 = (~~Math.ceil((bounds.Width * scale)));
            var int321 = (~~Math.ceil((bounds.Height * scale)));
            if (int32 < 1) {
                int32 = 1;
            }
            if (int321 < 1) {
                int321 = 1;
            }
            var bitmap1 = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Bitmap(int32, int321);
            var smoothingMode_1 = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Graphics.FromImage(bitmap1);
            smoothingMode_1.PageUnit = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicsUnit.Pixel;
            smoothingMode_1.SmoothingMode = this.SmoothingMode;
            //smoothingMode.TextRenderingHint = this.TextRenderingHint;
            smoothingMode_1.InterpolationMode = this.InterpolationMode;
            //smoothingMode.CompositingQuality = this.CompositingQuality;
            smoothingMode_1.PixelOffsetMode = this.PixelOffsetMode;
            var single = scale;
            smoothingMode_1.ScaleTransform(single, single);
            smoothingMode_1.translateTransform(-bounds.X, -bounds.Y);
            var pointF = this.myOrigin;
            var single1 = this.myHorizScale;
            var single2 = this.myVertScale;
            var size = this.myBorderSize;
            var rectangle = this.myDisplayRectangle;
            var flag = this.myIsRenderingBitmap;
            this.myOrigin = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(bounds.X, bounds.Y);
            this.myHorizScale = scale;
            this.myVertScale = scale;
            this.myBorderSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(0, 0);
            this.myViewSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(int32, int321);
            this.myDisplayRectangle = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(0, 0, int32, int321);
            this.myIsRenderingBitmap = true;
            try {
                if (paper) {
                    var rectangleF = { value: bounds };
                    _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.InflateRect(rectangleF, 1, 1);
                    this.paintPaperColor(smoothingMode_1, rectangleF.value);
                }
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(coll, function (goObject) {
                    if (!goObject.CanView()) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    goObject.Paint(smoothingMode_1, _this);
                });
            }
            finally {
                this.myOrigin = pointF;
                this.myHorizScale = single1;
                this.myVertScale = single2;
                this.myBorderSize = size;
                this.myViewSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-1, -1);
                this.myDisplayRectangle = rectangle;
                this.myIsRenderingBitmap = flag;
            }
            smoothingMode_1.dispose();
            bitmap = bitmap1;
            return bitmap;
        }
    };
    TuView.prototype.getExternalDragImage = function (evt) {
        // TODO: fix below getData
        var data = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(evt.Data.GetData((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_11__.Types.TuSelection)), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuSelection) || (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(evt.Data.GetData(this.Selection.GetType()), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuSelection);
        if (data == null) {
            return undefined;
        }
        var primary = data.Primary;
        var goSelection = data;
        // TODO: findMouseTool u kontrol et.
        var goToolDragging = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.findMouseTool((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolDragging), true), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolDragging);
        if (goToolDragging != null) {
            goSelection = goToolDragging.computeEffectiveSelection(data, false);
        }
        var rectangleF = _TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_4__.TuDocument.ComputeBounds(goSelection, undefined);
        var bitmapFromCollection = this.getBitmapFromCollection(goSelection, rectangleF, false);
        var goDragImage = new _TuDragImage__WEBPACK_IMPORTED_MODULE_61__.TuDragImage();
        goDragImage.Image = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGImage.FromBitmap(bitmapFromCollection);
        var sizeF = _TuTool_TuTool__WEBPACK_IMPORTED_MODULE_29__.TuTool.SubtractPoints(primary.Position, rectangleF.Location);
        var width = sizeF.Width;
        var hotSpot = data.HotSpot;
        var single = width + hotSpot.Width;
        var height = sizeF.Height;
        hotSpot = data.HotSpot;
        goDragImage.Offset = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(single, height + hotSpot.Height);
        return goDragImage;
    };
    TuView.prototype.getShadowBrush = function (obj) {
        if (this.myShadowBrush == null || this.myShadowBrush.Color.notEquals(this.ShadowColor)) {
            if (this.myShadowBrush != null) {
                this.myShadowBrush.Dispose();
            }
            this.myShadowBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.SolidBrush(this.ShadowColor);
        }
        return this.myShadowBrush;
    };
    TuView.prototype.getShadowPen = function (obj, width) {
        if (this.myShadowPen == null || this.myShadowPen.Color.notEquals(this.ShadowColor) || _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_36__.TuShape.GetPenWidth(this.myShadowPen) !== width) {
            if (this.myShadowPen != null) {
                this.myShadowPen.Dispose();
            }
            this.myShadowPen = _TuShape_TuShape__WEBPACK_IMPORTED_MODULE_36__.TuShape.NewPen(this.ShadowColor, width);
        }
        return this.myShadowPen;
    };
    TuView.prototype.handleScroll = function (sender, e) {
        if (e.Type === _Forms_ScrollEventType__WEBPACK_IMPORTED_MODULE_63__.ScrollEventType.EndScroll) {
            return;
        }
        var newValue = e.NewValue;
        this.requestFocus();
        var docPosition = this.DocPosition;
        var int32 = newValue;
        var doc = this.convertViewToDoc(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(int32, int32));
        if (sender == this.VerticalScrollBar) {
            docPosition.Y = doc.Height;
            this.DocPosition = docPosition;
            return;
        }
        if (sender == this.HorizontalScrollBar) {
            docPosition.X = doc.Width;
            this.DocPosition = docPosition;
        }
    };
    TuView.prototype.hideExternalDragImage = function () {
        if (this.myExternalDragImage != null) {
            this.myExternalDragImage.Remove();
            this.myExternalDragImage = undefined;
        }
    };
    TuView.prototype.hoverCallback = function (obj) {
        /*  try {
             if (base.IsHandleCreated) {
                 base.Invoke((EventHandler)obj);
             }
         }
         catch (objectDisposedException) {
         } */
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('hoverCallback');
    };
    TuView.prototype.hoverTick = function (sender, e) {
        try {
            if (this.myHoverTimerEnabled) {
                var lastInput = this.LastInput;
                lastInput.ViewPoint = this.myHoverPoint;
                lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
                lastInput.Buttons = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.MouseButtons;
                lastInput.Modifiers = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.ModifierKeys;
                lastInput.Delta = 0;
                lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
                lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Continue;
                this.doMouseHover();
            }
        }
        catch (objectDisposedException) {
        }
    };
    /* internal */ TuView.prototype.initAllowDrop = function (dnd) {
        var flag;
        try {
            this.initAllowDrop2(dnd);
            return true;
        }
        catch (verificationException) {
            this.AllowDragOut = false;
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("GoView.init: ", verificationException.toString()));
            flag = false;
        }
        return flag;
    };
    TuView.prototype.initAllowDrop2 = function (dnd) {
        this.AllowDrop = dnd;
    };
    TuView.prototype.initializeLayersFromDocument = function () {
        var _this = this;
        if (this.Layers != null) {
            this.beginUpdate();
            var defaultLayer = this.Layers.Default;
            var backgroundLayer = this.BackgroundLayer;
            var backgroundGrid = this.BackgroundGrid;
            var sheet = this.Sheet;
            var goLayerArrays = this.Layers.CopyArray();
            for (var i = 0; i < goLayerArrays.length; i++) {
                var goLayers = goLayerArrays[i];
                if (!goLayers.IsInView) {
                    this.Layers.Remove(goLayers);
                }
                else {
                    goLayers.Clear();
                }
            }
            this.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint();
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Document.Layers, function (layer) {
                _this.Layers.InsertDocumentLayerAfter(undefined, layer);
            });
            this.Layers.MoveAfter(undefined, defaultLayer);
            this.Layers.MoveBefore(undefined, backgroundLayer);
            backgroundLayer.Add(backgroundGrid);
            backgroundLayer.Add(sheet);
            this.endUpdate();
        }
    };
    TuView.prototype.internalOnDocumentChanged = function (sender, e) {
        if (this.myQueuedEvents != null) {
            var goChangedEventArg = this.myQueuedEvents.Dequeue();
            if (goChangedEventArg != null) {
                this.onDocumentChanged(goChangedEventArg.Document, goChangedEventArg);
            }
        }
    };
    TuView.prototype.isInputKey = function (k) {
        if (k === _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.Down || k === _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.Up || k === _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.Left || k === _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.Right) {
            var disableKeys = this.DisableKeys;
            if ((disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_15__.TuViewDisableKeys.ArrowMove) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_15__.TuViewDisableKeys.None || (disableKeys & _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_15__.TuViewDisableKeys.ArrowScroll) === _TuViewDisableKeys__WEBPACK_IMPORTED_MODULE_15__.TuViewDisableKeys.None) {
                return true;
            }
        }
        return false;
        //return this.isInputKey(k);
    };
    TuView.prototype.isInternalDragDrop = function (evt) {
        if (!(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(this.Tool, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolDragging))) {
            return false;
        }
        return !this.PretendsInternalDrag;
    };
    TuView.prototype.initView = function (doc) {
        this.myDocChangedEventHandler.add(this.safeOnDocumentChanged.bind(this));
        this.myDocument = doc;
        this.myLayers = new _TuLayer_TuLayerCollection__WEBPACK_IMPORTED_MODULE_16__.TuLayerCollection();
        this.myLayers.init(this);
        this.myBackgroundLayer = this.myLayers.CreateNewLayerBefore(undefined);
        this.myBackgroundLayer.Identifier = -1;
        if (this.myDocument == null) {
            this.myDocument = this.createDocument();
        }
        this.myDocumentChangedSubscription = this.myDocument.Changed$.add(this.myDocChangedEventHandler);
        this.initializeLayersFromDocument();
        this.myBackgroundGrid = this.createGrid();
        this.BackgroundLayer.Add(this.myBackgroundGrid);
        this.mySelection = this.createSelection();
        this.myDefaultTool = this.createDefaultTool();
        this.myTool = this.DefaultTool;
        this.myTool.start();
        /* const version: float = TuView.Version;



        const vScrollBar: Slider = new Slider({ orientation: "vertical" });
        const hScrollBar: Slider = new Slider({ orientation: "horizantal" });
        vScrollBar.Width = SystemInformation.VerticalScrollBarWidth;
        hScrollBar.Height = SystemInformation.HorizontalScrollBarHeight;
        this.myTopBar = undefined;
        this.myRightBar = vScrollBar;
        this.myBottomBar = hScrollBar;
        this.myLeftBar = undefined;
        this.myTopLeftCorner = new Control();
        this.myTopLeftCorner.BackColor = SystemColors.Control;
        this.myTopRightCorner = new Control();
        this.myTopRightCorner.BackColor = SystemColors.Control;
        this.myBottomRightCorner = new Control();
        this.myBottomRightCorner.BackColor = SystemColors.Control;
        this.myBottomLeftCorner = new Control();
        this.myBottomLeftCorner.BackColor = SystemColors.Control;

        vScrollBar.SmallChange = this.ScrollSmallChange.Height;
        hScrollBar.SmallChange = this.ScrollSmallChange.Width;
        this.myToolTip = new ToolTip();
        const goView: TuView = this;
*/
        this.initAllowDrop(true);
        this.BackColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.White;
        /* this.RegisterRenderer(new TuObjectSvgRenderer(this));
        this.RegisterRenderer(new TuRectangleSvgRenderer(this)); */
    };
    TuView.prototype.layoutScrollBars = function (update) {
        console.warn("NotImplementedException('layoutScrollBars')");
        // throw new NotImplementedException('layoutScrollBars');
        /*  let scrollSmallChange: CGSize;
         if (this.myUpdatingScrollBars) {
             return;
         }
         let topBar: Component = null;
         let rightBar: Component = null;
         let bottomBar: Component = null;
         let leftBar: Component = null;
         let topLeftCorner: Component = null;
         let topRightCorner: Component = null;
         let bottomRightCorner: Component = null;
         let bottomLeftCorner: Component = null;
         if (this.TopBar != null && this.TopBar.Visible) {
             topBar = this.TopBar;
         }
         if (this.RightBar != null && this.RightBar.Visible) {
             rightBar = this.RightBar;
         }
         if (this.BottomBar != null && this.BottomBar.Visible) {
             bottomBar = this.BottomBar;
         }
         if (this.LeftBar != null && this.LeftBar.Visible) {
             leftBar = this.LeftBar;
         }
         if (this.TopLeftCorner != null) {
             topLeftCorner = this.TopLeftCorner;
         }
         if (this.TopRightCorner != null) {
             topRightCorner = this.TopRightCorner;
         }
         if (this.BottomRightCorner != null) {
             bottomRightCorner = this.BottomRightCorner;
         }
         if (this.BottomLeftCorner != null) {
             bottomLeftCorner = this.BottomLeftCorner;
         }
         const clientRectangle: CGRectangle = this.ClientRectangle;
         const point: CGPoint = new CGPoint((clientRectangle.X + this.myBorderSize.Width), (clientRectangle.Y + this.myBorderSize.Height));
         const y: CGPoint = new CGPoint(((clientRectangle.X + clientRectangle.Width) - this.myBorderSize.Width), (clientRectangle.Y + this.myBorderSize.Height));
         const x: CGPoint = new CGPoint(((clientRectangle.X + clientRectangle.Width) - this.myBorderSize.Width), ((clientRectangle.Y + clientRectangle.Height) - this.myBorderSize.Height));
         const point1: CGPoint = new CGPoint((clientRectangle.X + this.myBorderSize.Width), ((clientRectangle.Y + clientRectangle.Height) - this.myBorderSize.Height));
         if (topBar != null) {
             point.Y = (point.Y + topBar.Height);
             y.Y = (y.Y + topBar.Height);
         }
         if (rightBar != null) {
             y.X = (y.X - rightBar.Width);
             x.X = (x.X - rightBar.Width);
         }
         if (bottomBar != null) {
             x.Y = (x.Y - bottomBar.Height);
             point1.Y = (point1.Y - bottomBar.Height);
         }
         if (leftBar != null) {
             point1.X = (point1.X + leftBar.Width);
             point.X = (point.X + leftBar.Width);
         }
         this.myDisplayRectangle = new CGRectangle(point.X, point.Y, (x.X - point.X), (x.Y - point.Y));
         if (topLeftCorner != null) {
             if (topBar == null || leftBar == null) {
                 topLeftCorner.Visible = false;
             }
             else {
                 topLeftCorner.Bounds = new CGRectangle((point.X - leftBar.Width), (point.Y - topBar.Height), leftBar.Width, topBar.Height);
                 topLeftCorner.Visible = true;
             }
         }
         if (topRightCorner != null) {
             if (topBar == null || rightBar == null) {
                 topRightCorner.Visible = false;
             }
             else {
                 topRightCorner.Bounds = new CGRectangle(y.X, (y.Y - topBar.Height), rightBar.Width, topBar.Height);
                 topRightCorner.Visible = true;
             }
         }
         if (bottomRightCorner != null) {
             if (bottomBar == null || rightBar == null) {
                 bottomRightCorner.Visible = false;
             }
             else {
                 bottomRightCorner.Bounds = new CGRectangle(x.X, x.Y, rightBar.Width, bottomBar.Height);
                 bottomRightCorner.Visible = true;
             }
         }
         if (bottomLeftCorner != null) {
             if (bottomBar == null || leftBar == null) {
                 bottomLeftCorner.Visible = false;
             }
             else {
                 bottomLeftCorner.Bounds = new CGRectangle((point1.X - leftBar.Width), point1.Y, leftBar.Width, bottomBar.Height);
                 bottomLeftCorner.Visible = true;
             }
         }
         if (topBar != null) {
             const rectangle: CGRectangle = new CGRectangle(point.X, (point.Y - topBar.Height), (y.X - point.X), topBar.Height);
             if (topLeftCorner == null && leftBar != null) {
                 rectangle.X = (rectangle.X - leftBar.Width);
                 rectangle.Width = (rectangle.Width + leftBar.Width);
             }
             if (topRightCorner == null && rightBar != null) {
                 rectangle.Width = (rectangle.Width + rightBar.Width);
             }
             topBar.Bounds = rectangle;
         }
         if (rightBar != null) {
             const rectangle1: CGRectangle = new CGRectangle(y.X, y.Y, rightBar.Width, (x.Y - y.Y));
             rightBar.Bounds = rectangle1;
         }
         if (bottomBar != null) {
             const width: CGRectangle = new CGRectangle(point1.X, point1.Y, (x.X - point1.X), bottomBar.Height);
             if (bottomLeftCorner == null && leftBar != null) {
                 width.X = (width.X - leftBar.Width);
                 width.Width = (width.Width + leftBar.Width);
             }
             if (bottomRightCorner == null && rightBar != null) {
                 width.Width = (width.Width + rightBar.Width);
             }
             bottomBar.Bounds = width;
         }
         if (leftBar != null) {
             const rectangle2: CGRectangle = new CGRectangle((point.X - leftBar.Width), point.Y, leftBar.Width, (point1.Y - point.Y));
             leftBar.Bounds = rectangle2;
         }
         const verticalScrollBar: Slider = this.VerticalScrollBar;
         if (verticalScrollBar != null && verticalScrollBar.Visible) {
             const height: number = this.ScrollSmallChange.Height;
             const int32: number = verticalScrollBar.Height;
             scrollSmallChange = this.ScrollSmallChange;
             verticalScrollBar.LargeChange = Math.max(height, (int32 - scrollSmallChange.Height));
         }
         const horizontalScrollBar: Slider = this.HorizontalScrollBar;
         if (horizontalScrollBar != null && horizontalScrollBar.Visible) {
             const width1: number = this.ScrollSmallChange.Width;
             const int321: number = horizontalScrollBar.Width;
             scrollSmallChange = this.ScrollSmallChange;
             horizontalScrollBar.LargeChange = Math.max(width1, (int321 - scrollSmallChange.Width));
         }
         if (update) {
             this.updateScrollBars();
         } */
    };
    TuView.prototype.limitDocPosition = function (p) {
        if (this.SheetStyle === _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None) {
            var documentTopLeft = this.DocumentTopLeft;
            var documentSize = this.DocumentSize;
            var docExtentSize = this.DocExtentSize;
            var x = documentTopLeft.X + documentSize.Width - docExtentSize.Width;
            if (x < documentTopLeft.X) {
                p.X = documentTopLeft.X;
            }
            else if (p.X > x && x > documentTopLeft.X) {
                p.X = x;
            }
            else if (p.X < documentTopLeft.X) {
                p.X = documentTopLeft.X;
            }
            var y = documentTopLeft.Y + documentSize.Height - docExtentSize.Height;
            if (y < documentTopLeft.Y) {
                p.Y = documentTopLeft.Y;
            }
            else if (p.Y > y && y > documentTopLeft.Y) {
                p.Y = y;
            }
            else if (p.Y < documentTopLeft.Y) {
                p.Y = documentTopLeft.Y;
            }
        }
        return p.clone();
    };
    TuView.prototype.limitDocScale = function (s) {
        var width = this.WorldScale.Width;
        var single = 0.01 / width;
        var single1 = 10 / width;
        if (s < single) {
            s = single;
        }
        if (s > single1) {
            s = single1;
        }
        return s;
    };
    TuView.prototype.matchesNodeLabel = function (part, c) {
        if (part == null) {
            return false;
        }
        var text = part.Text;
        if (text == null) {
            return false;
        }
        if (text.length === 0) {
            return false;
        }
        return text[0].toLocaleUpperCase() === c.toLocaleUpperCase();
    };
    TuView.prototype.moveSelection = function (sel, offset, grid) {
        var _this = this;
        if (sel == null) {
            sel = this.Selection;
        }
        if (sel == this.Selection && !this.CanMoveObjects()) {
            return;
        }
        if (sel.IsEmpty) {
            return;
        }
        var document = this.Document;
        var str = undefined;
        var suspendsRouting = document.SuspendsRouting;
        try {
            this.startTransaction();
            document.SuspendsRouting = true;
            var goObject_2 = undefined;
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(sel, function (goObject1) {
                if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject1, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink) || !goObject1.canMove()) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                goObject_2 = goObject1;
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.BREAK;
            });
            var x_2 = offset;
            if (goObject_2 != null) {
                var location_2 = goObject_2.Location;
                var pointF = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(location_2.X + offset.Width, location_2.Y + offset.Height);
                if (grid) {
                    pointF = this.snapPoint(pointF, goObject_2);
                }
                x_2.Width = pointF.X - location_2.X;
                x_2.Height = pointF.Y - location_2.Y;
            }
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(sel, function (goObject2) {
                if (!(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject2, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink))) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                goObject2.DoMove(_this, goObject2.Position, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(goObject2.Left + x_2.Width, goObject2.Top + x_2.Height));
            });
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(sel, function (goObject3) {
                if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(goObject3, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLink) || !goObject3.canMove()) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                var location1 = goObject3.Location;
                var pointF1 = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(location1.X + x_2.Width, location1.Y + x_2.Height);
                if (grid) {
                    pointF1 = _this.snapPoint(pointF1, goObject3);
                }
                goObject3.DoMove(_this, location1, pointF1);
            });
            if (x_2.Width !== 0 || x_2.Height !== 0) {
                document.ResumeRouting(suspendsRouting, sel);
            }
            str = "Move Selection";
        }
        finally {
            document.SuspendsRouting = suspendsRouting;
            this.finishTransaction(str);
        }
    };
    TuView.prototype.onBackColorChanged = function (evt) {
        this.updateView();
    };
    TuView.prototype.onBackgroundContextClicked = function (evt) {
        this.BackgroundContextClicked$(evt);
    };
    TuView.prototype.onBackgroundDoubleClicked = function (evt) {
        this.BackgroundDoubleClicked$(evt);
    };
    TuView.prototype.onBackgroundHover = function (evt) {
        this.BackgroundHover$(evt);
    };
    TuView.prototype.onBackgroundImageChanged = function (evt) {
        // base.onBackgroundImageChanged(evt);
        this.updateView();
    };
    TuView.prototype.onBackgroundSelectionDropped = function (evt) {
        this.BackgroundSelectionDropped$(evt);
    };
    TuView.prototype.onBackgroundSelectionDropReject = function (evt) {
        this.BackgroundSelectionDropReject$(evt);
    };
    TuView.prototype.onBackgroundSingleClicked = function (evt) {
        this.BackgroundSingleClicked$(evt);
    };
    TuView.prototype.onClipboardCopied = function (evt) {
        this.ClipboardCopied$(evt);
    };
    TuView.prototype.onClipboardPasted = function (evt) {
        this.ClipboardPasted$(evt);
    };
    TuView.prototype.onCreateControl = function () {
        //base.OnCreateControl();
        this.myUpdatingScrollBars = false;
        this.layoutScrollBars(true);
        this.updateExtent();
    };
    TuView.prototype.onDocumentChanged = function (sender, e) {
        var goObject = e.TuObject;
        if (!e.IsBeforeChanging) {
            var hint = e.Hint;
            if (hint <= 220) {
                switch (hint) {
                    case 100:
                    case 108:
                    case 110:
                        {
                            this.Selection.addAllSelectionHandles();
                            this.updateView();
                            break;
                        }
                    case 101:
                        {
                            this.beginUpdate();
                            break;
                        }
                    case 102:
                        {
                            this.endUpdate();
                            break;
                        }
                    case 103:
                        {
                            //base.update();
                            break;
                        }
                    case 104:
                    case 105:
                    case 106:
                    case 107:
                    case 109:
                        {
                            break;
                        }
                    default:
                        {
                            switch (hint) {
                                case _TuDocument_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_54__.TuDocumentEvents.ChangedSize:
                                    {
                                        this.updateScrollBars();
                                        break;
                                    }
                                case _TuDocument_TuDocumentEvents__WEBPACK_IMPORTED_MODULE_54__.TuDocumentEvents.ChangedTopLeft:
                                    {
                                        this.updateScrollBars();
                                        break;
                                    }
                                case 204:
                                    {
                                        break;
                                    }
                                case 205:
                                    {
                                        var sheet = this.Sheet;
                                        if (sheet != null && sheet.Paper != null) {
                                            var paperColor = this.Document.PaperColor;
                                            if (paperColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
                                                paperColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.White;
                                            }
                                            sheet.Paper.BrushColor = paperColor;
                                        }
                                        this.updateView();
                                        break;
                                    }
                                default:
                                    {
                                        if (hint === 220) {
                                            this.Selection.addAllSelectionHandles();
                                            this.updateView();
                                            break;
                                        }
                                        break;
                                    }
                            }
                            break;
                        }
                }
            }
            else if (hint > 803) {
                switch (hint) {
                    case 901:
                        {
                            if (!this.SuppressingPaint) {
                                var bounds = goObject.Bounds;
                                var r = goObject.ExpandPaintBounds(bounds.clone(), this);
                                var view = this.convertDocToView(r);
                                view.inflate(2, 2);
                                this.invalidate(view);
                            }
                            if (e.SubHint === 1001) {
                                if (this.Selection.getHandleCount(goObject) > 0 && !this.myUpdateHandles.Contains(goObject)) {
                                    this.myUpdateHandles.Add(goObject);
                                }
                                if (this.SuppressingPaint) {
                                    break;
                                }
                                var oldRect = e.OldRect;
                                var rectangle = this.convertDocToView(goObject.ExpandPaintBounds(oldRect.clone(), this));
                                rectangle.inflate(2, 2);
                                this.invalidate(rectangle);
                                break;
                            }
                            else if (e.SubHint === 1204 || e.SubHint == 1412) {
                                if (this.Selection.getHandleCount(goObject) <= 0 || this.myUpdateHandles.Contains(goObject)) {
                                    break;
                                }
                                this.myUpdateHandles.Add(goObject);
                                break;
                            }
                            else if (e.SubHint !== 1003) {
                                if (e.SubHint != 1052) {
                                    break;
                                }
                                this.removeFromSelection((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(e.OldValue, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject));
                                break;
                            }
                            else {
                                console.log('update selection handles');
                                this.updateSelectionHandles(goObject);
                                break;
                            }
                        }
                    case 902:
                    case 903:
                    case 904:
                    case 905:
                        {
                            if (e.Hint === 903) {
                                this.removeFromSelection(goObject);
                            }
                            if (this.SuppressingPaint) {
                                break;
                            }
                            var rectangleF = goObject.Bounds;
                            var view1 = this.convertDocToView(goObject.ExpandPaintBounds(rectangleF.clone(), this));
                            view1.inflate(2, 2);
                            this.invalidate(view1);
                            if (this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg || this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                                //this.ForceUpdate();
                            }
                            break;
                        }
                    case 906:
                    case 907:
                    case 908:
                    case 909:
                        {
                            break;
                        }
                    case 910:
                        {
                            var obj = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(e.Object, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLayer);
                            if (obj != null && e.NewValue === false) {
                                this.removeAllTuControls(obj, false);
                            }
                            this.Selection.addAllSelectionHandles();
                            this.updateView();
                            break;
                        }
                    default:
                        {
                            if (hint == 930) {
                                break;
                            }
                            break;
                        }
                }
            }
            else if (hint == 227) {
                var goDocuments = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(sender, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuDocument);
                if (goDocuments != null) {
                    var worldScale = goDocuments.WorldScale;
                    this.myHorizWorld = worldScale.Width;
                    this.myVertWorld = worldScale.Height;
                    this.updateView();
                }
            }
            else {
                switch (hint) {
                    case 801:
                        {
                            var goLayers = e.Object;
                            var oldValue = e.OldValue;
                            if (e.SubHint !== 1) {
                                this.Layers.InsertDocumentLayerBefore(oldValue, goLayers);
                            }
                            else {
                                this.Layers.InsertDocumentLayerAfter(oldValue, goLayers);
                            }
                            this.Selection.addAllSelectionHandles();
                            this.updateView();
                            break;
                        }
                    case 802:
                        {
                            var obj1 = e.Object;
                            this.Layers.Remove(obj1);
                            this.removeAllTuControls(obj1, true);
                            this.Selection.addAllSelectionHandles();
                            this.updateView();
                            break;
                        }
                    case 803:
                        {
                            var oldValue1 = e.OldValue;
                            var newInt = e.NewInt;
                            if (newInt > 0) {
                                var goLayers1 = this.Document.Layers.LayerAt((newInt - 1));
                                this.Layers.MoveAfter(goLayers1, oldValue1);
                            }
                            else {
                                var goLayers2 = this.Document.Layers.LayerAt((newInt + 1));
                                this.Layers.MoveBefore(goLayers2, oldValue1);
                            }
                            this.updateView();
                            break;
                        }
                }
            }
        }
        else if (e.Hint === 901 && !this.SuppressingPaint && goObject != null) {
            var bounds1 = goObject.Bounds;
            var rectangle1 = this.convertDocToView(goObject.ExpandPaintBounds(bounds1.clone(), this));
            rectangle1.inflate(2, 2);
            this.invalidate(rectangle1);
        }
        if (this.DocumentChanged$ != null) {
            this.DocumentChanged$(e);
        }
    };
    TuView.prototype.OnDoubleClick = function (evt) {
        var lastInput = this.LastInput;
        if (this.AllowMouse) {
            var mouseEventArg = lastInput;
            var buttons = mouseEventArg.Buttons;
            var x = lastInput.ViewPoint.X;
            var viewPoint = lastInput.ViewPoint;
            mouseEventArg.MouseEventArgs = new _Forms_MouseEventArgs__WEBPACK_IMPORTED_MODULE_55__.MouseEventArgs(buttons, 2, x, viewPoint.Y, lastInput.Delta);
            lastInput.DoubleClick = true;
            lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Finish;
            this.doMouseUp();
        }
        // base.OnDoubleClick(evt);
        lastInput.DoubleClick = false;
        lastInput.MouseEventArgs = null;
    };
    TuView.prototype.onDragDrop = function (evt) {
        /*  this.stopHoverTimer();
         this.stopAutoScroll(); */
        var lastInput = this.LastInput;
        if (this.AllowMouse) {
            try {
                var point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(evt.X, evt.Y);
                lastInput.ViewPoint = this.pointToClient(point);
                lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
                lastInput.Buttons = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.MouseButtons;
                lastInput.Modifiers = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.ModifierKeys;
                lastInput.Delta = 0;
                lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
                lastInput.DragEventArgs = evt;
                lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Finish;
                if (!this.isInternalDragDrop(evt)) {
                    this.hideExternalDragImage();
                    if (!this.PretendsInternalDrag) {
                        this.DoExternalDrop(evt);
                    }
                    else {
                        this.doMouseUp();
                        this.finishTransaction("Drop");
                    }
                }
                else {
                    this.doInternalDrop(evt);
                }
                this.PretendsInternalDrag = false;
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("OnDragDrop: ", exception.toString()));
                throw exception;
            }
        }
        // base.OnDragDrop(evt);
        lastInput.DragEventArgs = undefined;
    };
    TuView.prototype.pointToClient = function (point) {
        return point.clone();
    };
    TuView.prototype.onDragEnter = function (evt) {
        console.log('Drag Enter');
        if (this.AllowMouse) {
            if (this.ExternalDragDropsOnEnter && !this.isInternalDragDrop(evt) && this.CanInsertObjects()) {
                this.startTransaction();
                var lastInput = this.LastInput;
                var point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(evt.X, evt.Y);
                lastInput.ViewPoint = this.pointToClient(point);
                lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
                lastInput.Buttons = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.MouseButtons;
                lastInput.Modifiers = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.ModifierKeys;
                lastInput.Delta = 0;
                lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
                lastInput.DragEventArgs = evt;
                lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Start;
                var firstInput = this.FirstInput;
                firstInput.ViewPoint = lastInput.ViewPoint;
                firstInput.DocPoint = lastInput.DocPoint;
                firstInput.Buttons = lastInput.Buttons;
                firstInput.Modifiers = lastInput.Modifiers;
                firstInput.Delta = lastInput.Delta;
                firstInput.Key = lastInput.Key;
                firstInput.DragEventArgs = lastInput.DragEventArgs;
                firstInput.InputState = lastInput.InputState;
                var goCollections = this.DoExternalDrop(evt);
                if (goCollections != null && !(goCollections.Count === 0)) {
                    this.PretendsInternalDrag = true;
                    evt.Effect = _Forms_DragDropEffects__WEBPACK_IMPORTED_MODULE_52__.DragDropEffects.Copy;
                    var primary = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.findMouseTool((0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolDragging), true), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolDragging) || new _TuTool_TuToolDragging__WEBPACK_IMPORTED_MODULE_27__.TuToolDragging(this);
                    primary.CurrentObject = this.Selection.Primary;
                    primary.MoveOffset = this.Selection.HotSpot.Clone();
                    primary.SelectsWhenStarts = false;
                    var allowDragOut = this.AllowDragOut;
                    this.AllowDragOut = false;
                    this.Tool = primary;
                    this.AllowDragOut = allowDragOut;
                    // base.OnDragEnter(evt);
                    return;
                }
                this.AbortTransaction();
            }
            if (!this.isInternalDragDrop(evt)) {
                var externalDragImage = this.getExternalDragImage(evt);
                if (externalDragImage != null) {
                    this.showExternalDragImage(externalDragImage);
                    this.followExternalDragImage(this.LastInput.DocPoint);
                }
            }
        }
        // base.OnDragEnter(evt);
    };
    TuView.prototype.onDragLeave = function (e) {
        this.stopHoverTimer();
        this.stopAutoScroll();
        if (this.AllowMouse) {
            if (this.PretendsInternalDrag) {
                this.PretendsInternalDrag = false;
                this.deleteSelection(this.Selection);
                this.AbortTransaction();
                this.Tool = null;
            }
            else if (!this.isInternalDragDrop(undefined)) {
                this.hideExternalDragImage();
            }
            else {
                var tool = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.Tool, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolDragging);
                if (tool != null) {
                    tool.clearDragSelection();
                }
            }
        }
        // base.OnDragLeave(e);
    };
    TuView.prototype.onDragOver = function (evt) {
        var lastInput = this.LastInput;
        if (this.AllowMouse) {
            try {
                var point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(evt.X, evt.Y);
                lastInput.ViewPoint = this.pointToClient(point);
                lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
                /*   lastInput.Buttons = Control.MouseButtons;
                  lastInput.Modifiers = Control.ModifierKeys; */
                lastInput.Delta = 0;
                lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
                lastInput.DragEventArgs = evt;
                lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Continue;
                if (this.isInternalDragDrop(evt)) {
                    this.doInternalDrag(evt);
                }
                else if (!this.PretendsInternalDrag) {
                    this.doExternalDrag(evt);
                }
                else {
                    this.doMouseMove();
                }
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("OnDragOver: ", exception.toString()));
                throw exception;
            }
        }
        //base.OnDragOver(evt);
        lastInput.DragEventArgs = undefined;
    };
    TuView.prototype.onExternalObjectsDropped = function (evt) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('onExternalObjectsDropped');
        /*  if (this.ExternalObjectsDropped != null) {
             this.ExternalObjectsDropped.dispatch(this, evt);
         } */
    };
    TuView.prototype.onGotFocus = function (evt) {
        // base.OnGotFocus(evt);
        this.cleanUpModalControl();
        if (this.Selection != null) {
            this.Selection.onGotFocus();
        }
    };
    TuView.prototype.onKeyDown = function (evt) {
        var lastInput = this.LastInput;
        if (this.AllowKey) {
            lastInput.Buttons = _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.None;
            lastInput.Modifiers = evt.Modifiers;
            lastInput.Delta = 0;
            lastInput.Key = evt.KeyCode;
            lastInput.KeyEventArgs = evt;
            lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Start;
            this.doKeyDown();
        }
        // base.onKeyDown(evt);
        lastInput.KeyEventArgs = undefined;
    };
    TuView.prototype.onLinkCreated = function (evt) {
        if (this.LinkCreated != null) {
            this.LinkCreated(evt);
        }
    };
    TuView.prototype.onLinkRelinked = function (evt) {
        if (this.LinkRelinked != null) {
            this.LinkRelinked(evt);
        }
    };
    TuView.prototype.onLostFocus = function (evt) {
        // base.onLostFocus(evt);
        if (this.Selection != null) {
            this.Selection.onLostFocus();
        }
    };
    TuView.prototype.onMouseDown = function (evt) {
        var lastInput = this.LastInput;
        if (this.AllowMouse) {
            lastInput.ViewPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(evt.X, evt.Y);
            lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
            lastInput.Buttons = evt.Button;
            lastInput.Modifiers = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.ModifierKeys;
            lastInput.Delta = evt.Delta;
            lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
            lastInput.MouseEventArgs = evt;
            lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Start;
            var firstInput = this.FirstInput;
            firstInput.ViewPoint = lastInput.ViewPoint;
            firstInput.DocPoint = lastInput.DocPoint;
            firstInput.Buttons = lastInput.Buttons;
            firstInput.Modifiers = lastInput.Modifiers;
            firstInput.Delta = lastInput.Delta;
            firstInput.Key = lastInput.Key;
            firstInput.MouseEventArgs = evt;
            firstInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Start;
            this.doMouseDown();
        }
        // base.onMouseDown(evt);
        lastInput.MouseEventArgs = undefined;
        this.FirstInput.MouseEventArgs = undefined;
    };
    TuView.prototype.onMouseEnter = function (e) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('onMouseEnter');
        /*  // base.onMouseEnter(e);
         if (this.AllowMouse) {
             const lastInput: TuInputEventArgs = this.LastInput;
             lastInput.ViewPoint = this.pointToClient(Control.MousePosition);
             lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
             lastInput.Buttons = Control.MouseButtons;
             lastInput.Modifiers = Control.ModifierKeys;
             lastInput.Delta = 0;
             lastInput.Key = Keys.None;
             lastInput.MouseEventArgs = undefined;
             lastInput.InputState = TuInputState.Start;
             const goObject: TuObject = this.pickObject(true, false, lastInput.DocPoint, false);
             if (goObject != null) {
                 this.doObjectEnterLeave(null, goObject, this.LastInput);
             }
         } */
    };
    TuView.prototype.onMouseLeave = function (e) {
        var currentObject;
        this.stopHoverTimer();
        this.stopAutoScroll();
        // base.onMouseLeave(e);
        if (this.AllowMouse) {
            var tool = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(this.Tool, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuToolManager);
            if (tool != null) {
                currentObject = tool.CurrentObject;
            }
            else {
                currentObject = null;
            }
            var goObject = currentObject;
            if (goObject != null) {
                this.doObjectEnterLeave(goObject, undefined, this.LastInput);
            }
        }
    };
    TuView.prototype.onMouseMove = function (evt) {
        if (evt.Button !== _Forms_MouseButtons__WEBPACK_IMPORTED_MODULE_65__.MouseButtons.Left) {
            return;
        }
        var lastInput = this.LastInput;
        var point = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(evt.X, evt.Y);
        if (this.AllowMouse) {
            lastInput.ViewPoint = point;
            lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
            lastInput.Buttons = evt.Button;
            lastInput.Modifiers = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.ModifierKeys;
            lastInput.Delta = evt.Delta;
            lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
            lastInput.MouseEventArgs = evt;
            lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Continue;
            this.doMouseMove();
        }
        // base.OnMouseMove(evt);
        lastInput.MouseEventArgs = undefined;
    };
    TuView.prototype.onMouseUp = function (evt) {
        var lastInput = this.LastInput;
        if (this.AllowMouse) {
            lastInput.ViewPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(evt.X, evt.Y);
            lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
            lastInput.Buttons = evt.Button;
            lastInput.Modifiers = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.ModifierKeys;
            lastInput.Delta = evt.Delta;
            lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
            lastInput.MouseEventArgs = evt;
            lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Finish;
            this.doMouseUp();
        }
        // base.onMouseUp(evt);
        lastInput.MouseEventArgs = undefined;
    };
    TuView.prototype.onMouseWheel = function (evt) {
        var lastInput = this.LastInput;
        if (this.AllowMouse) {
            lastInput.ViewPoint = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(evt.X, evt.Y);
            lastInput.DocPoint = this.convertViewToDoc(lastInput.ViewPoint);
            lastInput.Buttons = evt.Button;
            lastInput.Modifiers = _tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Control.ModifierKeys;
            lastInput.Delta = evt.Delta;
            lastInput.Key = _Forms_Keys__WEBPACK_IMPORTED_MODULE_53__.Keys.None;
            lastInput.MouseEventArgs = evt;
            lastInput.InputState = _TuInputState__WEBPACK_IMPORTED_MODULE_34__.TuInputState.Start;
            this.doMouseWheel();
        }
        // base.onMouseWheel(evt);
        lastInput.MouseEventArgs = undefined;
    };
    TuView.prototype.onObjectContextClicked = function (evt) {
        if (this.ObjectContextClicked != null) {
            this.ObjectContextClicked(this, evt);
        }
    };
    TuView.prototype.onObjectDoubleClicked = function (evt) {
        if (this.ObjectDoubleClicked != null) {
            this.ObjectDoubleClicked(evt);
        }
    };
    TuView.prototype.onObjectEdited = function (evt) {
        if (this.ObjectEdited != null) {
            this.ObjectEdited(evt);
        }
    };
    TuView.prototype.onObjectEnterLeave = function (evt) {
        if (this.ObjectEnterLeave != null) {
            this.ObjectEnterLeave(evt);
        }
    };
    TuView.prototype.onObjectGotSelection = function (evt) {
        if (this.ObjectGotSelection != null) {
            this.ObjectGotSelection(evt);
        }
    };
    TuView.prototype.onObjectHover = function (evt) {
        if (this.ObjectHover != null) {
            this.ObjectHover(evt);
        }
    };
    TuView.prototype.onObjectLostSelection = function (evt) {
        if (this.ObjectLostSelection != null) {
            this.ObjectLostSelection(evt);
        }
    };
    TuView.prototype.onObjectResized = function (evt) {
        if (this.ObjectResized != null) {
            this.ObjectResized(evt);
        }
    };
    TuView.prototype.onObjectSelectionDropped = function (evt) {
        if (this.ObjectSelectionDropped != null) {
            this.ObjectSelectionDropped(evt);
        }
    };
    TuView.prototype.onObjectSelectionDropReject = function (evt) {
        if (this.ObjectSelectionDropReject != null) {
            this.ObjectSelectionDropReject(evt);
        }
    };
    TuView.prototype.onObjectSingleClicked = function (evt) {
        if (this.ObjectSingleClicked != null) {
            this.ObjectSingleClicked(evt);
        }
    };
    TuView.prototype.onPaint = function (evt) {
        this.onPaintCanvas(evt);
        /*    if (this.myTuControls != null && this.myTuControls.Count > 0) {
               const displayRectangle: CGRectangle = this.DisplayRectangle;
               foreach(this.myTuControls, (myGoControl: TuControl) => {
                   const control: Control = myGoControl.findControl(this);
                   if (control == null) {
                       return CONTINUE;
                   }
                   const view: CGRectangle = this.convertDocToView(myGoControl.Bounds);
                   if (displayRectangle.intersectsWith(view)) {
                       return CONTINUE;
                   }
                   control.Bounds = view;
               });

           } */
        // base.onPaint(evt);
    };
    /*  private renderCanvas() {
         this.BeginUpdate();
         const clipRectangle: CGRectangle = this.ClientRectangle;
         if (clipRectangle.Width <= 0 || clipRectangle.Height <= 0) {
             return;
         }
         // TODO : ClientRectangle
         const clientRectangle: CGRectangle = this.ClientRectangle;
         if (clientRectangle.Width <= 0 || clientRectangle.Height <= 0) {
             return;
         }

         const rectangle: CGRectangle = CGRectangle.Intersect(clipRectangle, this.DisplayRectangle);
         const doc: CGRectangle = this.convertViewToDoc(rectangle);

         const result = [];

         this.renderBorder(result, clientRectangle, clipRectangle);

         this.beginUpdate();
         this.updateDelayedSelectionHandles();
         this.endUpdate();



         this.renderView(result, doc);
         this.EndUpdate();
         return result;
     } */
    TuView.prototype.onPaintCanvas = function (evt) {
        if (this.SuppressingPaint) {
            return;
        }
        this.myPaintEventArgs = evt;
        var graphics = evt.Graphics;
        graphics.save();
        graphics.PageUnit = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicsUnit.Pixel;
        var clipRectangle = evt.ClipRectangle;
        if (clipRectangle.Width <= 0 || clipRectangle.Height <= 0) {
            return;
        }
        // TODO : ClientRectangle
        var clientRectangle = this.ClientRectangle;
        if (clientRectangle.Width <= 0 || clientRectangle.Height <= 0) {
            return;
        }
        // Gereksiz olduğu görüldü.
        /*  if (this.myBuffer == null || this.myBuffer.Width < clientRectangle.Width || this.myBuffer.Height < clientRectangle.Height) {
             if (this.myBuffer != null) {
                 this.myBuffer.dispose();
             }
             this.myBuffer = new Bitmap(clientRectangle.Width, clientRectangle.Height, graphics);
         } */
        //const graphic: Graphics = Graphics.FromImage(this.myBuffer);
        graphics.PageUnit = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicsUnit.Pixel;
        this.paintBorder(graphics, clientRectangle, clipRectangle);
        var rectangle = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle.Intersect(clipRectangle, this.DisplayRectangle);
        graphics.intersectClip(rectangle);
        var doc = this.convertViewToDoc(rectangle);
        graphics.translateTransform(this.myDisplayRectangle.X, this.myDisplayRectangle.Y);
        graphics.ScaleTransform(this.myHorizScale * this.myHorizWorld, this.myVertScale * this.myVertWorld);
        var docPosition = this.DocPosition;
        graphics.translateTransform(-docPosition.X, -docPosition.Y);
        this.beginUpdate();
        this.updateDelayedSelectionHandles();
        this.endUpdate();
        this.paintView(graphics, doc);
        graphics.restore();
        graphics.dispose();
    };
    TuView.prototype.onPropertyChanged = function (evt) {
        /*  if (this.PropertyChanged != null) {
             this.PropertyChanged.dispatch(this, evt);
         }
         if (evt.PropertyName != "Tool") {
             this.updateView();
         }  */
    };
    TuView.prototype.onQueryContinueDrag = function (evt /* QueryContinueDragEventArgs */) {
        // TODO: QueryContinueDragEventArgs oluştur.
        if (this.AllowMouse) {
            try {
                if (evt.EscapePressed) {
                    this.stopHoverTimer();
                    this.stopAutoScroll();
                    if (this.PretendsInternalDrag) {
                        this.PretendsInternalDrag = false;
                        this.deleteSelection(this.Selection);
                        this.AbortTransaction();
                    }
                    this.doCancelMouse();
                }
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("OnQueryContinueDrag: ", exception.toString()));
                throw exception;
            }
        }
        // base.OnQueryContinueDrag(evt);
    };
    TuView.prototype.onSelectionCopied = function (evt) {
        if (this.SelectionCopied != null) {
            this.SelectionCopied(evt);
        }
    };
    TuView.prototype.onSelectionDeleted = function (evt) {
        if (this.SelectionDeleted != null) {
            this.SelectionDeleted(evt);
        }
    };
    TuView.prototype.onSelectionDeleting = function (evt) {
        if (this.SelectionDeleting != null) {
            this.SelectionDeleting(evt);
        }
    };
    TuView.prototype.onSelectionFinished = function (evt) {
        if (this.SelectionFinished != null) {
            this.SelectionFinished(evt);
        }
    };
    TuView.prototype.onSelectionMoved = function (evt) {
        if (this.SelectionMoved != null) {
            this.SelectionMoved(evt);
        }
    };
    TuView.prototype.onSelectionStarting = function (evt) {
        if (this.SelectionStarting != null) {
            this.SelectionStarting(evt);
        }
    };
    TuView.prototype.onSizeChanged = function (evt) {
        this.layoutScrollBars(false);
        // base.onSizeChanged(evt);
        this.updateExtent();
        this.updateView();
    };
    TuView.prototype.onStyleChanged = function (evt) {
        // base.onStyleChanged(evt);
        this.updateView();
    };
    TuView.prototype.onSystemColorsChanged = function (evt) {
        // base.onSystemColorsChanged(evt);
        this.updateView();
    };
    TuView.prototype.onVisibleChanged = function (evt) {
        // base.onVisibleChanged(evt);
        if (this.Visible) {
            this.layoutScrollBars(false);
            this.updateExtent();
            this.updateView();
        }
    };
    TuView.prototype.renderBackgroundDecoration = function (result, clipRect) {
    };
    TuView.prototype.paintBackgroundDecoration = function (g, clipRect) {
        var backgroundImage = this.BackgroundImage;
        if (backgroundImage != null) {
            var rectangleF = clipRect;
            rectangleF.Width = Math.min(rectangleF.Width, 32767);
            rectangleF.Height = Math.min(rectangleF.Height, 32767);
            var rectangleF1 = rectangleF;
            g.DrawImage(backgroundImage, rectangleF1 /* rectangleF1 */ /* , GraphicsUnit.Pixel */);
        }
    };
    TuView.prototype.renderBorder = function (result, rect, clipRect) {
        switch (this.BorderStyle) {
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.None:
                {
                    return;
                }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.FixedSingle:
                {
                    if (clipRect.X > (rect.X + this.myBorderSize.Width) && clipRect.Y > (rect.Y + this.myBorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - this.myBorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - this.myBorderSize.Height)) {
                        return;
                    }
                    var color = _Globals__WEBPACK_IMPORTED_MODULE_58__.SystemPens_WindowFrame.Color.toString('#rrggbb');
                    var penWidth = _Globals__WEBPACK_IMPORTED_MODULE_58__.SystemPens_WindowFrame.Width;
                    rect = rect.inflate(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-penWidth, -penWidth));
                    result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Teact.createElement("rect", { x: rect.X, y: rect.Y, width: rect.Width, height: rect.Height, fill: 'transparent', stroke: color, "stroke-width": penWidth }));
                }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.Fixed3D:
                {
                    if (clipRect.X > (rect.X + this.myBorderSize.Width) && clipRect.Y > (rect.Y + this.myBorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - this.myBorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - this.myBorderSize.Height)) {
                        return;
                    }
                    //ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                    var color = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Pens.Black.Color.toString('#rrggbb');
                    var penWidth = _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Pens.Black.Width;
                    rect = rect.inflate(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-penWidth, -penWidth));
                    result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Teact.createElement("rect", { x: rect.X, y: rect.Y, width: rect.Width, height: rect.Height, fill: 'transparent', stroke: color, "stroke-width": penWidth }));
                }
            default:
                {
                    if (clipRect.X > (rect.X + this.myBorderSize.Width) && clipRect.Y > (rect.Y + this.myBorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - this.myBorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - this.myBorderSize.Height)) {
                        return;
                    }
                    //ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                    return;
                }
        }
    };
    TuView.prototype.paintBorder = function (g, rect, clipRect) {
        switch (this.BorderStyle) {
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.None:
                {
                    return;
                }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.FixedSingle:
                {
                    if (clipRect.X > (rect.X + this.myBorderSize.Width) && clipRect.Y > (rect.Y + this.myBorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - this.myBorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - this.myBorderSize.Height)) {
                        return;
                    }
                    g.DrawRectangle(_Globals__WEBPACK_IMPORTED_MODULE_58__.SystemPens_WindowFrame, rect);
                    return;
                }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.Fixed3D:
                {
                    if (clipRect.X > (rect.X + this.myBorderSize.Width) && clipRect.Y > (rect.Y + this.myBorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - this.myBorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - this.myBorderSize.Height)) {
                        return;
                    }
                    _Forms_ControlPaint__WEBPACK_IMPORTED_MODULE_66__.ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                    return;
                }
            default:
                {
                    if (clipRect.X > (rect.X + this.myBorderSize.Width) && clipRect.Y > (rect.Y + this.myBorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - this.myBorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - this.myBorderSize.Height)) {
                        return;
                    }
                    _Forms_ControlPaint__WEBPACK_IMPORTED_MODULE_66__.ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                    return;
                }
        }
    };
    /*  protected renderObjects(result: any[], doc: boolean, view: boolean, clipRect: CGRectangle): void {
         foreach(this.Layers, (layer: TuLayer) => {
             if ((!doc || !layer.IsInDocument) && (!view || !layer.IsInView)) {
                 return CONTINUE;
             }
             layer.renderPaint(result, this, clipRect);
         });
     } */
    TuView.prototype.paintObjects = function (doc, view, g, clipRect) {
        var _this = this;
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
            if ((!doc || !layer.IsInDocument) && (!view || !layer.IsInView)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
            }
            layer.Paint(g, _this, clipRect);
        });
    };
    TuView.prototype.renderPaperColor = function (result, clipRect) {
        var backColor = (this.SheetStyle === _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None ? this.Document.PaperColor : _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty);
        if (backColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
            backColor = this.BackColor;
        }
        if (this.myBackgroundBrush == null || this.myBackgroundBrush.Color.notEquals(backColor)) {
            if (this.myBackgroundBrush != null) {
                this.myBackgroundBrush.Dispose();
            }
            this.myBackgroundBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.SolidBrush(backColor);
        }
        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.Teact.createElement("rect", { x: clipRect.X, y: clipRect.Y, width: clipRect.Width, height: clipRect.Height, fill: this.myBackgroundBrush.Color.toString('#rrggbb'), "stroke-width": 1 }));
    };
    TuView.prototype.paintPaperColor = function (g, clipRect) {
        var backColor = (this.SheetStyle === _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None ? this.Document.PaperColor : _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty);
        if (backColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
            backColor = this.BackColor;
        }
        if (this.myBackgroundBrush == null || this.myBackgroundBrush.Color.notEquals(backColor)) {
            if (this.myBackgroundBrush != null) {
                this.myBackgroundBrush.Dispose();
            }
            this.myBackgroundBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.SolidBrush(backColor);
        }
        g.renderer.drawingContext.clearRect(clipRect.X, clipRect.Y, clipRect.Width, clipRect.Height);
        //g.fillRectangle(this.myBackgroundBrush, clipRect);
    };
    /* protected renderView(result: any[], clipRect: CGRectangle) {
        this.renderPaperColor(result, clipRect);
        this.renderBackgroundDecoration(result, clipRect);
        this.renderObjects(result, true, true, clipRect);
    } */
    TuView.prototype.paintView = function (g, clipRect) {
        this.paintPaperColor(g, clipRect);
        this.paintBackgroundDecoration(g, clipRect);
        g.SmoothingMode = this.SmoothingMode;
        // g.TextRenderingHint = this.TextRenderingHint;
        g.InterpolationMode = this.InterpolationMode;
        // g.CompositingQuality = this.CompositingQuality;
        g.PixelOffsetMode = this.PixelOffsetMode;
        this.paintObjects(true, true, g, clipRect);
    };
    TuView.prototype.pasteFromClipboard = function () {
        var document = this.Document;
        if (document == null) {
            return undefined;
        }
        var data = undefined;
        try {
            var dataObject = _Forms_Clipboard__WEBPACK_IMPORTED_MODULE_42__.Clipboard.GetDataObject();
            if (dataObject != null) {
                data = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(dataObject.GetData(document.DataFormat), _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuDocument);
            }
            else {
                return undefined;
            }
        }
        catch (verificationException) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("TuView.PasteFromClipboard: ", verificationException.toString()));
            var outData = { value: data };
            TuView_1.myClipboard.TryGetValue(document.DataFormat, outData);
            data = outData.value;
        }
        if (data == null) {
            return undefined;
        }
        return document.CopyFromCollection(data, false, false, new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(1, 1), undefined);
    };
    TuView.prototype.pickObject = function (doc, view, p, selectableOnly) {
        var goObject;
        if (selectableOnly && !this.CanSelectObjects()) {
            return undefined;
        }
        var enumerator = this.Layers.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if ((!doc || !current.IsInDocument) && (!view || !current.IsInView)) {
                    continue;
                }
                var goObject1 = current.PickObject(p, selectableOnly);
                if (goObject1 == null) {
                    continue;
                }
                goObject = goObject1;
                return goObject;
            }
            return undefined;
        }
        finally {
            enumerator.Dispose();
        }
        return goObject;
    };
    TuView.prototype.pickObjectExcluding = function (doc, view, p, selectableOnly, ignore) {
        var goObject;
        if (selectableOnly && !this.CanSelectObjects()) {
            return undefined;
        }
        var goCollections = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__.TuCollection();
        /* {
            InternalChecksForDuplicates = false
        }; */
        var enumerator = this.Layers.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if ((!doc || !current.IsInDocument) && (!view || !current.IsInView)) {
                    continue;
                }
                goCollections.Clear();
                current.PickObjects(p, selectableOnly, goCollections, 999999);
                var goCollectionEnumerators = goCollections.GetEnumerator();
                try {
                    var _loop_1 = function () {
                        var current1 = goCollectionEnumerators.Current;
                        var flag = false;
                        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.using)(ignore.GetEnumerator(), function (enumerator1) {
                            while (enumerator1.MoveNext()) {
                                var goObject1 = enumerator1.Current;
                                if (current1 !== goObject1 && !current1.isChildOf(goObject1)) {
                                    continue;
                                }
                                flag = true;
                                if (flag) {
                                    continue;
                                }
                                goObject = current1;
                                return goObject;
                            }
                        });
                        if (flag) {
                            return "continue";
                        }
                        goObject = current1;
                        return { value: goObject };
                    };
                    while (goCollectionEnumerators.MoveNext()) {
                        var state_1 = _loop_1();
                        if (typeof state_1 === "object")
                            return state_1.value;
                    }
                }
                finally {
                    goCollectionEnumerators.Dispose();
                }
            }
            return undefined;
        }
        finally {
            enumerator.Dispose();
        }
        return goObject;
    };
    TuView.prototype.pickObjects = function (doc, view, p, selectableOnly, coll, max) {
        var goCollections;
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__.TuCollection({
                internalChecksForDuplicates: false
            });
        }
        if (selectableOnly && !this.CanSelectObjects()) {
            return undefined;
        }
        var enumerator = this.Layers.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (coll.Count < max) {
                    if ((!doc || !current.IsInDocument) && (!view || !current.IsInView)) {
                        continue;
                    }
                    current.PickObjects(p, selectableOnly, coll, max);
                }
                else {
                    goCollections = coll;
                    return goCollections;
                }
            }
            return coll;
        }
        finally {
            enumerator.Dispose();
        }
        return goCollections;
    };
    TuView.prototype.pickObjectsInRectangle = function (doc, view, rect, pickstyle, coll, max) {
        var goCollections;
        if (coll == null) {
            coll = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__.TuCollection({
                internalChecksForDuplicates: false
            });
        }
        if (_TuDocument_TuDocument__WEBPACK_IMPORTED_MODULE_4__.TuDocument.PickStyleSelectableOnly(pickstyle) && !this.CanSelectObjects()) {
            return coll;
        }
        var enumerator = this.Layers.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (coll.Count < max) {
                    if ((!doc || !current.IsInDocument) && (!view || !current.IsInView)) {
                        continue;
                    }
                    current.PickObjectsInRectangle(rect, pickstyle, coll, max);
                }
                else {
                    goCollections = coll;
                    return goCollections;
                }
            }
            return coll;
        }
        finally {
            enumerator.Dispose();
        }
        return goCollections;
    };
    TuView.prototype.print = function () {
        try {
            try {
                var printDocument = new _Forms_PrintDocument__WEBPACK_IMPORTED_MODULE_50__.PrintDocument();
                var goView = this;
                // TODO:
                printDocument.PrintPage.add(new _Forms_PrintPageEventHandler__WEBPACK_IMPORTED_MODULE_56__.PrintPageEventHandler(goView.PrintDocumentPage));
                printDocument.DocumentName = this.Document.Name;
                if (this.PrintShowDialog(printDocument) !== _Forms_DialogResult__WEBPACK_IMPORTED_MODULE_57__.DialogResult.Cancel) {
                    printDocument.print();
                }
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("Print: ", exception.toString()));
                throw exception;
            }
        }
        finally {
            this.myPrintInfo = undefined;
        }
    };
    TuView.prototype.printDecoration = function (g, e, hpnum, hpmax, vpnum, vpmax) {
        var x = e.MarginBounds.X;
        var y = e.MarginBounds.Y;
        var width = e.MarginBounds.Width;
        var height = e.MarginBounds.Height;
        var single = x + width;
        var single1 = y + height;
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, x, y, x + 10, y);
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, x, y, x, y + 10);
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, single, y, single - 10, y);
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, single, y, single, y + 10);
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, x, single1, x + 10, single1);
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, x, single1, x, single1 - 10);
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, single, single1, single - 10, single1);
        g.DrawLine(_Globals__WEBPACK_IMPORTED_MODULE_58__.Pens_Black, single, single1, single, single1 - 10);
    };
    TuView.prototype.printDocumentPage = function (sender, e) {
        /*  const graphics: Graphics = e.Graphics;
         if (this.myPrintInfo == null) {
             this.myPrintInfo = new PrintInfo();
             this.myPrintInfo.DocRect = new CGRectangle(this.PrintDocumentTopLeft, this.PrintDocumentSize);
             this.myPrintInfo.HorizScale = this.PrintScale;
             this.myPrintInfo.VertScale = this.myPrintInfo.HorizScale;
             const marginBounds: CGRectangle = e.MarginBounds;
             this.myPrintInfo.PrintSize = new CGSize(marginBounds.Width / this.myPrintInfo.HorizScale, marginBounds.Height / this.myPrintInfo.VertScale);
             if (this.myPrintInfo.PrintSize.Width > 0 && this.myPrintInfo.PrintSize.Height > 0) {
                 this.myPrintInfo.NumPagesAcross = (~~Math.ceil((this.myPrintInfo.DocRect.Width / this.myPrintInfo.PrintSize.Width)));
                 this.myPrintInfo.NumPagesDown = (~~Math.ceil((this.myPrintInfo.DocRect.Height / this.myPrintInfo.PrintSize.Height)));

                 switch (e.PageSettings.PrinterSettings.PrintRange) {
                     case PrintRange.Selection:
                         {
                             this.myPrintInfo.CurPage = 0;
                             break;
                         }
                     case PrintRange.SomePages:
                         {
                             this.myPrintInfo.CurPage = e.PageSettings.PrinterSettings.FromPage - 1;
                             break;
                         }
                     default:
                         {
                             this.myPrintInfo.CurPage = 0;
                             break;
                         }
                 }
             }
         }
         if (this.myPrintInfo.NumPagesAcross <= 0 || this.myPrintInfo.NumPagesDown <= 0) {
             e.HasMorePages = false;
             return;
         }
         const curPage: number = this.myPrintInfo.CurPage % this.myPrintInfo.NumPagesAcross;
         const int32: number = this.myPrintInfo.CurPage / this.myPrintInfo.NumPagesAcross;
         const pointF: CGPoint = this.myOrigin;
         const single: float = this.myHorizScale;
         const single1: float = this.myVertScale;
         const size: CGSize = this.myBorderSize;
         const rectangle: CGRectangle = this.myDisplayRectangle;
         this.myOrigin = new CGPoint(this.myPrintInfo.DocRect.X + curPage * this.myPrintInfo.PrintSize.Width, this.myPrintInfo.DocRect.Y + int32 * this.myPrintInfo.PrintSize.Height);
         this.myHorizScale = this.myPrintInfo.HorizScale;
         this.myVertScale = this.myPrintInfo.VertScale;
         this.myBorderSize = new CGSize(e.MarginBounds.X, e.MarginBounds.Y);
         this.myDisplayRectangle = e.MarginBounds;
         const rectangleF: CGRectangle = new CGRectangle(this.myOrigin.X, this.myOrigin.Y, Math.min(this.myPrintInfo.PrintSize.Width, this.myPrintInfo.DocRect.Width), Math.min(this.myPrintInfo.PrintSize.Height, this.myPrintInfo.DocRect.Height));
         const view: CGRectangle = this.convertDocToView(rectangleF);
         try {
             this.printDecoration(graphics, e, curPage, this.myPrintInfo.NumPagesAcross, int32, this.myPrintInfo.NumPagesDown);
             graphics.intersectClip(e.MarginBounds);
             graphics.intersectClip(view);
             graphics.translateTransform(this.myDisplayRectangle.X, this.myDisplayRectangle.Y);
             graphics.ScaleTransform(this.myHorizScale * this.myHorizWorld, this.myVertScale * this.myVertWorld);
             graphics.translateTransform(-this.myOrigin.X, -this.myOrigin.Y);
             this.updateDelayedSelectionHandles();
             this.printView(graphics, rectangleF);
         }
         finally {
             this.myOrigin = pointF;
             this.myHorizScale = single;
             this.myVertScale = single1;
             this.myBorderSize = size;
             this.myDisplayRectangle = rectangle;
         }
         let numPagesAcross: number = 0;
         switch (e.PageSettings.PrinterSettings.PrintRange) {
             case PrintRange.Selection:
                 {
                     numPagesAcross = ((this.myPrintInfo.NumPagesAcross * this.myPrintInfo.NumPagesDown) - 1);
                     break;
                 }
             case PrintRange.SomePages:
                 {
                     numPagesAcross = (e.PageSettings.PrinterSettings.ToPage - 1);
                     break;
                 }
             default:
                 {
                     numPagesAcross = ((this.myPrintInfo.NumPagesAcross * this.myPrintInfo.NumPagesDown) - 1);
                     break;
                 }
         }
         e.HasMorePages = this.myPrintInfo.CurPage < numPagesAcross;
         if (!e.HasMorePages) {
             this.myPrintInfo = null;
             return;
         }
         const printInfo: PrintInfo = this.myPrintInfo;
         printInfo.CurPage = printInfo.CurPage + 1; */
    };
    TuView.prototype.printPregetView = function () {
        try {
            try {
                var printDocument = new _Forms_PrintDocument__WEBPACK_IMPORTED_MODULE_50__.PrintDocument();
                var goView = this;
                // TODO:
                printDocument.PrintPage.add(new _Forms_PrintPageEventHandler__WEBPACK_IMPORTED_MODULE_56__.PrintPageEventHandler(goView.PrintDocumentPage));
                printDocument.DocumentName = this.Document.Name;
                this.printPreviewShowDialog(printDocument);
            }
            catch (exception) {
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("PrintPreview: ", exception.toString()));
                throw exception;
            }
        }
        finally {
            this.myPrintInfo = undefined;
        }
    };
    TuView.prototype.printPreviewShowDialog = function (pd) {
        // TODO:
        /* (new PrintPreviewDialog()
        {
            UseAntiAlias = true,
            Document = pd
        }).ShowDialog(); */
    };
    TuView.prototype.printShowDialog = function (pd) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('printShowDialog method of TuView not implemented.');
        /* PrintDialog printDialog = new PrintDialog()
        {
            Document = pd,
            AllowSomePages = true
        };
        printDialog.PrinterSettings.MinimumPage = 1;
        printDialog.PrinterSettings.FromPage = 1;
        printDialog.PrinterSettings.ToPage = printDialog.PrinterSettings.MaximumPage;
        return printDialog.ShowDialog(); */
    };
    TuView.prototype.printView = function (g, clipRect) {
        this.paintBackgroundDecoration(g, clipRect);
        g.SmoothingMode = this.SmoothingMode;
        //g.TextRenderingHint = this.TextRenderingHint;
        g.InterpolationMode = this.InterpolationMode;
        //g.CompositingQuality = this.CompositingQuality;
        g.PixelOffsetMode = this.PixelOffsetMode;
        this.paintObjects(true, this.PrintsViewObjects, g, clipRect);
    };
    // TODO:
    /*  protected  processCmdKey(m: Out<Message>, keyData: Keys): boolean {
         const editControl: TuControl = this.EditControl;
         if (editControl != null) {
             const control: Control = editControl.getControl(this);
             if (control != null && control.Focused) {
                 return false;
             }
         }
         //return base.ProcessCmdKey(ref m, keyData);
     } */
    TuView.prototype.raiseBackgroundContextClicked = function (evt) {
        this.onBackgroundContextClicked(evt);
    };
    TuView.prototype.raiseBackgroundDoubleClicked = function (evt) {
        this.onBackgroundDoubleClicked(evt);
    };
    TuView.prototype.raiseBackgroundHover = function (evt) {
        this.onBackgroundHover(evt);
    };
    TuView.prototype.raiseBackgroundSelectionDropped = function (evt) {
        this.onBackgroundSelectionDropped(evt);
    };
    TuView.prototype.raiseBackgroundSelectionDropReject = function (evt) {
        this.onBackgroundSelectionDropReject(evt);
    };
    TuView.prototype.raiseBackgroundSingleClicked = function (evt) {
        this.onBackgroundSingleClicked(evt);
    };
    TuView.prototype.RaiseChanged = function (hint, subhint, x, oldI, oldVal, oldRect, newI, newVal, newRect) {
        if (hint > 904) {
            if (hint !== 910) {
                return;
            }
            var goLayers = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(x, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLayer);
            if (goLayers != null && newVal == false) {
                this.removeAllTuControls(goLayers, false);
            }
            this.updateView();
        }
        else {
            switch (hint) {
                case 801:
                case 803:
                    {
                        this.updateView();
                        return;
                    }
                case 802:
                    {
                        var goLayers1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(x, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuLayer);
                        if (goLayers1 != null) {
                            this.removeAllTuControls(goLayers1, true);
                        }
                        this.updateView();
                        return;
                    }
                default:
                    {
                        switch (hint) {
                            case 901:
                            case 904:
                                {
                                    if (this.SuppressingPaint) {
                                        return;
                                    }
                                    var goObject = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(x, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                                    if (goObject == null) {
                                        return;
                                    }
                                    var view = this.convertDocToView(goObject.ExpandPaintBounds(goObject.Bounds.clone(), this));
                                    view.inflate(2, 2);
                                    if (hint != 901 || subhint != 1001) {
                                        this.invalidate(view);
                                        return;
                                    }
                                    oldRect = goObject.ExpandPaintBounds(oldRect.clone(), this);
                                    var rectangle = this.convertDocToView(oldRect);
                                    rectangle.inflate(2, 2);
                                    if (view.intersectsWith(rectangle)) {
                                        this.invalidate(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle.Union(view, rectangle));
                                        return;
                                    }
                                    this.invalidate(view);
                                    this.invalidate(rectangle);
                                    return;
                                }
                            case 902:
                                {
                                    if (this.SuppressingPaint) {
                                        return;
                                    }
                                    var goObject1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(x, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                                    if (goObject1 == null) {
                                        return;
                                    }
                                    var view1 = this.convertDocToView(goObject1.ExpandPaintBounds(goObject1.Bounds.clone(), this));
                                    view1.inflate(2, 2);
                                    this.invalidate(view1);
                                    return;
                                }
                            case 903:
                                {
                                    if (this.SuppressingPaint) {
                                        return;
                                    }
                                    var goObject2 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(x, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                                    if (goObject2 == null) {
                                        return;
                                    }
                                    var rectangle1 = this.convertDocToView(goObject2.ExpandPaintBounds(goObject2.Bounds.clone(), this));
                                    rectangle1.inflate(2, 2);
                                    this.invalidate(rectangle1);
                                    if (this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg || this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html) {
                                        //this.ForceUpdate();
                                    }
                                    return;
                                }
                            default:
                                {
                                    return;
                                }
                        }
                        break;
                    }
            }
        }
    };
    TuView.prototype.raiseClipboardCopied = function () {
        this.onClipboardCopied(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
    };
    /// <summary>
    /// Call <see cref="M:Northwoods.Go.GoView.OnClipboardPasted(System.EventArgs)" /> to raise a <see cref="E:Northwoods.Go.GoView.ClipboardPasted" /> event.
    /// </summary>
    TuView.prototype.raiseClipboardPasted = function () {
        this.onClipboardPasted(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
    };
    TuView.prototype.raiseExternalObjectsDropped = function (evt) {
        this.onExternalObjectsDropped(evt);
    };
    TuView.prototype.raiseLinkCreated = function (obj) {
        this.onLinkCreated(new _TuSelection_TuSelectionEventArgs__WEBPACK_IMPORTED_MODULE_38__.TuSelectionEventArgs(obj));
    };
    TuView.prototype.raiseLinkRelinked = function (obj) {
        this.onLinkRelinked(new _TuSelection_TuSelectionEventArgs__WEBPACK_IMPORTED_MODULE_38__.TuSelectionEventArgs(obj));
    };
    TuView.prototype.raiseObjectContextClicked = function (obj, evt) {
        this.onObjectContextClicked(new _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__.TuObjectEventArgs(obj, evt));
    };
    TuView.prototype.raiseObjectDoubleClicked = function (obj, evt) {
        this.onObjectDoubleClicked(new _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__.TuObjectEventArgs(obj, evt));
    };
    TuView.prototype.raiseObjectEdited = function (obj) {
        this.onObjectEdited(new _TuSelection_TuSelectionEventArgs__WEBPACK_IMPORTED_MODULE_38__.TuSelectionEventArgs(obj));
    };
    TuView.prototype.raiseObjectEnterLeave = function (from, to, evt) {
        this.onObjectEnterLeave(new _TuObjectEnterLeaveEventArgs__WEBPACK_IMPORTED_MODULE_68__.TuObjectEnterLeaveEventArgs(from, to, evt));
    };
    TuView.prototype.raiseObjectGotSelection = function (obj) {
        this.onObjectGotSelection(new _TuSelection_TuSelectionEventArgs__WEBPACK_IMPORTED_MODULE_38__.TuSelectionEventArgs(obj));
    };
    TuView.prototype.raiseObjectHover = function (obj, evt) {
        this.onObjectHover(new _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__.TuObjectEventArgs(obj, evt));
    };
    TuView.prototype.raiseObjectLostSelection = function (obj) {
        this.onObjectLostSelection(new _TuSelection_TuSelectionEventArgs__WEBPACK_IMPORTED_MODULE_38__.TuSelectionEventArgs(obj));
    };
    TuView.prototype.raiseObjectResized = function (obj) {
        this.onObjectResized(new _TuSelection_TuSelectionEventArgs__WEBPACK_IMPORTED_MODULE_38__.TuSelectionEventArgs(obj));
    };
    TuView.prototype.raiseObjectSelectionDropped = function (obj, evt) {
        this.onObjectSelectionDropped(new _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__.TuObjectEventArgs(obj, evt));
    };
    TuView.prototype.raiseObjectSelectionDropReject = function (evt) {
        this.onObjectSelectionDropReject(evt);
    };
    TuView.prototype.raiseObjectSingleClicked = function (obj, evt) {
        this.onObjectSingleClicked(new _TuObject_TuObjectEventArgs__WEBPACK_IMPORTED_MODULE_33__.TuObjectEventArgs(obj, evt));
    };
    TuView.prototype.raisePropertyChangedEvent = function (propname) {
        this.onPropertyChanged(new _Forms_PropertyChangedEventArgs__WEBPACK_IMPORTED_MODULE_67__.PropertyChangedEventArgs(propname));
    };
    TuView.prototype.raiseSelectionCopied = function () {
        this.onSelectionCopied(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
    };
    TuView.prototype.raiseSelectionDeleted = function () {
        this.onSelectionDeleted(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
    };
    TuView.prototype.raiseSelectionDeleting = function (evt) {
        this.onSelectionDeleting(evt);
    };
    TuView.prototype.raiseSelectionFinished = function () {
        this.onSelectionFinished(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
    };
    TuView.prototype.raiseSelectionMoved = function () {
        this.onSelectionMoved(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
    };
    TuView.prototype.raiseSelectionStarting = function () {
        this.onSelectionStarting(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
    };
    TuView.prototype.redo = function () {
        if (this.canRedo()) {
            this.Document.Redo();
        }
    };
    /* internal */ TuView.prototype.removeAllTuControls = function (layer, remove) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('removeAllTuControls');
        /*  if (this.myTuControls != null) {
             const array: TuControl[] = this.myTuControls.toArray();
             for (let i = 0; i < array.length; i++) {
                 const goControl: TuControl = array[i];
                 if (goControl.Layer === layer) {
                     //TODO findControl below
                     const control: Control = goControl.findControl(this);
                     if (control != null) {
                         if (!remove) {
                             control.Visible = false;
                         }
                         else {
                             this.Controls.remove(control);
                             this.myTuControls.remove(goControl);
                         }
                     }
                 }
             }
         } */
    };
    TuView.prototype.removeFromSelection = function (obj) {
        var _this = this;
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                _this.removeFromSelection(enumerator);
            });
        }
        this.Selection.Remove(obj);
    };
    TuView.prototype.removeTuControl = function (g, c) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('removeTuControl');
        /*   if (this.myTuControls != null) {
              this.myTuControls.remove(g);
              this.Controls.remove(c);
          } */
    };
    TuView.prototype.replaceMouseTool = function (tooltype, newtool) {
        var i;
        var mouseDownTools = this.MouseDownTools;
        for (i = 0; i < mouseDownTools.Count; i++) {
            // TODO: solve GetType
            if (mouseDownTools[i].GetType() === tooltype) {
                var item = mouseDownTools[i];
                if (newtool == null) {
                    mouseDownTools.RemoveAt(i);
                    return item;
                }
                mouseDownTools[i] = newtool;
                return item;
            }
        }
        mouseDownTools = this.MouseMoveTools;
        for (i = 0; i < mouseDownTools.Count; i++) {
            if (mouseDownTools[i].GetType() === tooltype) {
                var goTool = mouseDownTools[i];
                if (newtool == null) {
                    mouseDownTools.RemoveAt(i);
                    return goTool;
                }
                mouseDownTools[i] = newtool;
                return goTool;
            }
        }
        mouseDownTools = this.MouseUpTools;
        for (i = 0; i < mouseDownTools.Count; i++) {
            if (mouseDownTools[i].GetType() === tooltype) {
                var item1 = mouseDownTools[i];
                if (newtool == null) {
                    mouseDownTools.RemoveAt(i);
                    return item1;
                }
                mouseDownTools[i] = newtool;
                return item1;
            }
        }
        return undefined;
    };
    TuView.prototype.requestFocus = function () {
        try {
            this.requestFocus2();
        }
        catch (verificationException) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.trace)(_tuval_core__WEBPACK_IMPORTED_MODULE_0__.TString.Concat("Focus: ", verificationException.toString()));
            this.onGotFocus(_Forms_EventArgs__WEBPACK_IMPORTED_MODULE_40__.EventArgs.Empty);
        }
    };
    TuView.prototype.requestFocus2 = function () {
        // base.Focus();
    };
    TuView.prototype.rescaleToFit = function () {
        var size = this.DisplayRectangle.Size;
        var width = this.computeDocumentBounds();
        var shadowOffset = this.ShadowOffset;
        width.Width = width.Width + Math.abs(shadowOffset.Width);
        width.Height = width.Height + Math.abs(shadowOffset.Height);
        if (shadowOffset.Width < 0) {
            width.X = width.X + shadowOffset.Width;
        }
        if (shadowOffset.Height < 0) {
            width.Y = width.Y + shadowOffset.Height;
        }
        this.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(width.X, width.Y);
        var single = 1;
        if (width.Width > 0 && width.Height > 0) {
            single = Math.min(size.Width / width.Width, size.Height / width.Height);
        }
        if (single > 1) {
            single = 1;
        }
        this.DocScale = single;
    };
    TuView.prototype.rescaleWithCenter = function (newscale, docPt) {
        this.DocScale = newscale;
        var docExtent = this.DocExtent;
        this.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(docPt.X - docExtent.Width / 2, docPt.Y - docExtent.Height / 2);
    };
    TuView.prototype.resetAutoPanRegion = function () {
        this.AutoPanRegion = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(16, 16);
    };
    TuView.prototype.resetAutoScrollRegion = function () {
        this.AutoScrollRegion = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(_Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.VerticalScrollBarWidth, _Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.HorizontalScrollBarHeight);
    };
    TuView.prototype.resetGridLineColor = function () {
        this.GridLineColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray;
    };
    TuView.prototype.resetGridLineDashPattern = function () {
        this.GridLineDashPattern = _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__.TuGrid.DefaultLineDashPattern;
    };
    TuView.prototype.resetGridMajorLineColor = function () {
        this.GridMajorLineColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Gray;
    };
    TuView.prototype.resetGridMajorLineDashPattern = function () {
        this.GridMajorLineDashPattern = _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__.TuGrid.DefaultMajorLineDashPattern;
    };
    TuView.prototype.resetGridMajorLineFrequency = function () {
        this.GridMajorLineFrequency = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(0, 0);
    };
    TuView.prototype.resetNoFocusSelectionColor = function () {
        this.NoFocusSelectionColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray;
    };
    TuView.prototype.resetPrimarySelectionColor = function () {
        this.PrimarySelectionColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Chartreuse;
    };
    TuView.prototype.resetScrollSmallChange = function () {
        this.ScrollSmallChange = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(16, 16);
    };
    TuView.prototype.resetSecondarySelectionColor = function () {
        this.SecondarySelectionColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Cyan;
    };
    TuView.prototype.resetShadowColor = function () {
        this.ShadowColor = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.FromRgba(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Gray, 127);
    };
    TuView.prototype.resetSheetMarginColor = function () {
        this.SheetMarginColor = _TuSheet_TuSheet__WEBPACK_IMPORTED_MODULE_10__.TuSheet.DefaultMarginColor;
    };
    TuView.prototype.resetSheetRoom = function () {
        this.SheetRoom = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(10, 10);
    };
    TuView.prototype.safeOnDocumentChanged = function (e) {
        if (!this.InvokeRequired) {
            this.onDocumentChanged(undefined, e);
            return;
        }
        if (this.mySafeOnDocumentChangedDelegate == null) {
            this.mySafeOnDocumentChangedDelegate = this.internalOnDocumentChanged.bind(this);
        }
        if (this.myQueuedEvents == null) {
            this.myQueuedEvents = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Queue();
        }
        var goChangedEventArg = new _TuChangedEventArgs__WEBPACK_IMPORTED_MODULE_37__.TuChangedEventArgs(e);
        this.myQueuedEvents.Enqueue(goChangedEventArg);
        if (this.mySafeOnDocumentChangedDelegate) {
            this.mySafeOnDocumentChangedDelegate(undefined, undefined);
        }
    };
    TuView.prototype.scrollLine = function (dx, dy) {
        var docPosition = this.DocPosition;
        var docExtentSize = this.DocExtentSize.Clone();
        var documentTopLeft = this.DocumentTopLeft.clone();
        var documentSize = this.DocumentSize.Clone();
        var scrollSmallChange = this.ScrollSmallChange.Clone();
        var size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(scrollSmallChange.Width, scrollSmallChange.Height);
        var doc = this.convertViewToDoc(size.Clone());
        var single = dx * doc.Width;
        docPosition.X = docPosition.X + single;
        if (single <= 0) {
            docPosition.X = Math.max(docPosition.X, documentTopLeft.X);
        }
        else {
            docPosition.X = Math.min(docPosition.X, Math.max(documentTopLeft.X, documentTopLeft.X + documentSize.Width - docExtentSize.Width));
        }
        var single1 = dy * doc.Height;
        docPosition.Y = docPosition.Y + single1;
        if (single1 <= 0) {
            docPosition.Y = Math.max(docPosition.Y, documentTopLeft.Y);
        }
        else {
            docPosition.Y = Math.min(docPosition.Y, Math.max(documentTopLeft.Y, documentTopLeft.Y + documentSize.Height - docExtentSize.Height));
        }
        this.DocPosition = docPosition.clone();
    };
    TuView.prototype.scrollPage = function (dx, dy) {
        var docPosition = this.DocPosition;
        var docExtentSize = this.DocExtentSize;
        var documentTopLeft = this.DocumentTopLeft;
        var documentSize = this.DocumentSize;
        var scrollSmallChange = this.ScrollSmallChange;
        var view = this.convertDocToView(docExtentSize);
        var size = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(Math.max(scrollSmallChange.Width, view.Width - scrollSmallChange.Width), Math.max(scrollSmallChange.Height, (view.Height - scrollSmallChange.Height)));
        var doc = this.convertViewToDoc(size);
        var single = dx * doc.Width;
        docPosition.X = docPosition.X + single;
        if (single < 0) {
            docPosition.X = Math.max(docPosition.X, documentTopLeft.X);
        }
        else {
            docPosition.X = Math.min(docPosition.X, Math.max(documentTopLeft.X, documentTopLeft.X + documentSize.Width - docExtentSize.Width));
        }
        var single1 = dy * doc.Height;
        docPosition.Y = docPosition.Y + single1;
        if (single1 < 0) {
            docPosition.Y = Math.max(docPosition.Y, documentTopLeft.Y);
        }
        else {
            docPosition.Y = Math.min(docPosition.Y, Math.max(documentTopLeft.Y, documentTopLeft.Y + documentSize.Height - docExtentSize.Height));
        }
        this.DocPosition = docPosition;
    };
    TuView.prototype.scrollRectangleToVisible = function (contentRect) {
        var single;
        var single1;
        var docExtent = this.DocExtent;
        if (_GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.ContainsRect(docExtent, contentRect)) {
            return;
        }
        single = (contentRect.Width >= docExtent.Width ? contentRect.X : contentRect.X + contentRect.Width / 2 - docExtent.Width / 2);
        single1 = (contentRect.Height >= docExtent.Height ? contentRect.Y : contentRect.Y + contentRect.Height / 2 - docExtent.Height / 2);
        this.DocPosition = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGPoint(single, single1);
    };
    TuView.prototype.selectAll = function () {
        var _this = this;
        if (!this.CanSelectObjects()) {
            return;
        }
        try {
            this.CursorName = "wait";
            var goObjects_1 = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
                if (!layer.IsInDocument || !layer.CanViewObjects() || !layer.CanSelectObjects()) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(layer, function (goObject) {
                    if (!goObject.CanView() || !goObject.CanSelect()) {
                        return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                    }
                    goObjects_1.Add(goObject);
                });
            });
            if (goObjects_1.Count > 0) {
                this.raiseSelectionStarting();
                (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goObjects_1, function (goObject1) {
                    _this.Selection.Add(goObject1);
                });
                this.raiseSelectionFinished();
            }
        }
        finally {
            this.CursorName = "default";
        }
    };
    TuView.prototype.selectInRectangle = function (rect) {
        var _this = this;
        if (!this.CanSelectObjects()) {
            return;
        }
        try {
            this.CursorName = "wait";
            var goCollections_2 = new _TuCollection_TuCollection__WEBPACK_IMPORTED_MODULE_31__.TuCollection({
                internalChecksForDuplicates: false
            });
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Layers, function (layer) {
                if (!layer.IsInDocument) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                layer.PickObjectsInRectangle(rect, _this.SelectInRectangleStyle, goCollections_2, _this.MaximumSelectionCount);
            });
            this.Selection.addRange(goCollections_2);
        }
        finally {
            this.CursorName = "default";
        }
    };
    TuView.prototype.selectNextNode = function (c) {
        if (!this.CanSelectObjects()) {
            return false;
        }
        var goLabeledPart = null;
        var primary = this.Selection.Primary;
        if (primary != null && _tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.typeof(primary, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLabeledPart)) {
            goLabeledPart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(primary, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLabeledPart);
        }
        var enumerator = this.Document.GetEnumerator();
        if (goLabeledPart != null) {
            while (enumerator.MoveNext()) {
                if (enumerator.Current === goLabeledPart) {
                    while (enumerator.MoveNext()) {
                        var current = enumerator.Current;
                        var goLabeledPart1 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(current, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLabeledPart);
                        if (goLabeledPart1 == null || !this.matchesNodeLabel(goLabeledPart1, c)) {
                            continue;
                        }
                        this.Selection.select(current);
                        this.scrollRectangleToVisible(current.Bounds);
                        return true;
                    }
                    enumerator = this.Document.GetEnumerator();
                    while (enumerator.MoveNext()) {
                        var goObject = enumerator.Current;
                        var goLabeledPart2 = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLabeledPart);
                        if (goLabeledPart2 === goLabeledPart) {
                            break;
                        }
                        if (goLabeledPart2 == null || !this.matchesNodeLabel(goLabeledPart2, c)) {
                            continue;
                        }
                        this.Selection.select(goObject);
                        this.scrollRectangleToVisible(goObject.Bounds.clone());
                        return true;
                    }
                    break;
                }
            }
        }
        return false;
    };
    TuView.prototype.setCursor1 = function (c) {
        try {
            this.setCursor2(c);
        }
        catch (verificationException) {
        }
    };
    TuView.prototype.setCursor2 = function (c) {
        if (c != null && this.Cursor !== c) {
            this.Cursor = c;
        }
    };
    TuView.prototype.SetModifiable = function (b) {
        this.AllowMove = b;
        this.AllowResize = b;
        this.AllowReshape = b;
        this.AllowDelete = b;
        this.AllowInsert = b;
        this.AllowLink = b;
        this.AllowEdit = b;
    };
    TuView.prototype.shouldSerializeAutoPanRegion = function () {
        return this.AutoPanRegion.NotEquals(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(16, 16));
    };
    TuView.prototype.shouldSerializeAutoScrollRegion = function () {
        return this.AutoScrollRegion.NotEquals(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(_Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.VerticalScrollBarWidth, _Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.HorizontalScrollBarHeight));
    };
    TuView.prototype.shouldSerializeGridLineColor = function () {
        return this.GridLineColor.notEquals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray);
    };
    TuView.prototype.shouldSerializeGridLineDashPattern = function () {
        var gridLineDashPattern = this.GridLineDashPattern;
        var defaultLineDashPattern = _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__.TuGrid.DefaultLineDashPattern;
        if (gridLineDashPattern.length !== defaultLineDashPattern.length) {
            return true;
        }
        for (var i = 0; i < gridLineDashPattern.length; i++) {
            if (gridLineDashPattern[i] !== defaultLineDashPattern[i]) {
                return true;
            }
        }
        return false;
    };
    TuView.prototype.shouldSerializeGridMajorLineColor = function () {
        return this.GridMajorLineColor.notEquals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Gray);
    };
    TuView.prototype.shouldSerializeGridMajorLineDashPattern = function () {
        var gridMajorLineDashPattern = this.GridMajorLineDashPattern;
        var defaultMajorLineDashPattern = _TuGrid_TuGrid__WEBPACK_IMPORTED_MODULE_9__.TuGrid.DefaultMajorLineDashPattern;
        if (gridMajorLineDashPattern.length !== defaultMajorLineDashPattern.length) {
            return true;
        }
        for (var i = 0; i < gridMajorLineDashPattern.length; i++) {
            if (gridMajorLineDashPattern[i] !== defaultMajorLineDashPattern[i]) {
                return true;
            }
        }
        return false;
    };
    TuView.prototype.shouldSerializeGridMajorLineFrequency = function () {
        return this.GridMajorLineFrequency.NotEquals(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(0, 0));
    };
    TuView.prototype.shouldSerializeNoFocusSelectionColor = function () {
        return this.NoFocusSelectionColor.notEquals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.LightGray);
    };
    TuView.prototype.shouldSerializePrimarySelectionColor = function () {
        return this.PrimarySelectionColor.notEquals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Chartreuse);
    };
    TuView.prototype.shouldSerializeScrollSmallChange = function () {
        return this.ScrollSmallChange.NotEquals(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(16, 16));
    };
    TuView.prototype.shouldSerializeSecondarySelectionColor = function () {
        return this.SecondarySelectionColor.notEquals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Cyan);
    };
    TuView.prototype.shouldSerializeShadowColor = function () {
        return this.ShadowColor.notEquals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.FromRgba(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Gray, 127));
    };
    TuView.prototype.shouldSerializeSheetMarginColor = function () {
        return this.SheetMarginColor.notEquals(_TuSheet_TuSheet__WEBPACK_IMPORTED_MODULE_10__.TuSheet.DefaultMarginColor);
    };
    TuView.prototype.shouldSerializeSheetRoom = function () {
        return this.SheetRoom.NotEquals(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(10, 10));
    };
    TuView.prototype.showExternalDragImage = function (img) {
        this.myExternalDragImage = img;
        this.Layers.Default.Add(img);
    };
    TuView.prototype.snapPoint = function (p, obj) {
        var pointF;
        var pointF1 = p;
        var single = { value: 1E+21 };
        var enumerator = this.Layers.Backwards.GetEnumerator();
        try {
            while (enumerator.MoveNext()) {
                var current = enumerator.Current;
                if (!current.CanViewObjects()) {
                    continue;
                }
                var goLayerCache = current.FindCache(p);
                if (goLayerCache == null) {
                    var goLayerEnumerators = current.Backwards.GetEnumerator();
                    try {
                        while (goLayerEnumerators.MoveNext()) {
                            var goObject = goLayerEnumerators.Current;
                            pointF1 = this.snapPoint1(p, obj, goObject, pointF1, single);
                            if (single.value >= 0) {
                                continue;
                            }
                            pointF = pointF1;
                            return pointF;
                        }
                    }
                    finally {
                        goLayerEnumerators.Dispose();
                    }
                }
                else {
                    var snappers = goLayerCache.Snappers;
                    var count = snappers.Count - 1;
                    while (count >= 0) {
                        var item = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(snappers[count], _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuObject);
                        pointF1 = this.snapPoint1(p, obj, item, pointF1, single);
                        if (single.value >= 0) {
                            count--;
                        }
                        else {
                            pointF = pointF1;
                            return pointF;
                        }
                    }
                }
            }
            return pointF1;
        }
        finally {
            enumerator.Dispose();
        }
        return pointF;
    };
    TuView.prototype.snapPoint1 = function (p, obj, o, nearest, nearestDist) {
        var pointF;
        var goDragSnapper = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(o, _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuDragSnapper);
        if (goDragSnapper != null && goDragSnapper.canSnapPoint(p, obj, this)) {
            var pointF1 = goDragSnapper.snapPoint(p, obj, this);
            var x = (p.X - pointF1.X) * (p.X - pointF1.X) + (p.Y - pointF1.Y) * (p.Y - pointF1.Y);
            if (x < nearestDist.value) {
                nearest = pointF1;
                nearestDist.value = x;
            }
            if (goDragSnapper.SnapOpaque) {
                nearestDist.value = -1;
                return nearest;
            }
        }
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(o, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuGroup);
        if (goGroups != null) {
            var enumerator = goGroups.GetEnumerator().GetEnumerator();
            try {
                while (enumerator.MoveNext()) {
                    var current = enumerator.Current;
                    nearest = this.snapPoint1(p, obj, current, nearest, nearestDist);
                    if (nearestDist.value >= 0) {
                        continue;
                    }
                    pointF = nearest;
                    return pointF;
                }
                return nearest;
            }
            finally {
                enumerator.Dispose();
            }
            return pointF;
        }
        return nearest;
    };
    TuView.prototype.standardizeCursorName = function (s) {
        if (s == null) {
            return "default";
        }
        var lower = s.toLowerCase();
        if (lower === "default") {
            return "default";
        }
        if (lower === "auto") {
            return "default";
        }
        if (lower === "cross") {
            return "crosshair";
        }
        if (lower === "hand") {
            return "pointer";
        }
        if (lower === "sizeall") {
            return "move";
        }
        if (lower === "sizenesw") {
            return "ne-resize";
        }
        if (lower === "sizens") {
            return "s-resize";
        }
        if (lower === "sizenwse") {
            return "se-resize";
        }
        if (lower === "sizewe") {
            return "e-resize";
        }
        if (lower === "vsplit") {
            return "col-resize";
        }
        if (lower === "hsplit") {
            return "row-resize";
        }
        if (lower === "no") {
            return "not-allowed";
        }
        if (lower === "waitcursor") {
            return "wait";
        }
        if (lower !== "ibeam") {
            return lower;
        }
        return "text";
    };
    TuView.prototype.startTransaction = function () {
        return this.Document.StartTransaction();
    };
    TuView.prototype.stopAutoScroll = function () {
        this.myActioning = false;
        if (this.myAutoScrollTimer != null) {
            this.myAutoScrollTimerEnabled = false;
            this.myAutoScrollTimer.change(-1, -1);
        }
    };
    TuView.prototype.stopHoverTimer = function () {
        if (this.myHoverTimer != null) {
            this.myHoverTimerEnabled = false;
            this.myHoverTimer.change(-1, -1);
        }
        console.error('stopHoverTimer not implemented.');
    };
    TuView.prototype.translateTransform = function (g, w, h) {
        g.translateTransform(w, h);
    };
    TuView.prototype.undo = function () {
        if (this.canUndo()) {
            this.Document.Undo();
        }
    };
    TuView.prototype.updateBorderWidths = function () {
        var borderSize = this.myBorderSize;
        switch (this.BorderStyle) {
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.None:
                {
                    borderSize = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize();
                    break;
                }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.FixedSingle:
                {
                    borderSize = _Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.BorderSize;
                    break;
                }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_46__.BorderStyle.Fixed3D:
            default:
                {
                    borderSize = _Forms_SystemInformation__WEBPACK_IMPORTED_MODULE_43__.SystemInformation.Border3DSize;
                    break;
                }
        }
        if (borderSize.NotEquals(this.myBorderSize)) {
            this.myBorderSize = borderSize;
            this.layoutScrollBars(false);
        }
    };
    TuView.prototype.updateDelayedSelectionHandles = function () {
        if (this.myUpdateHandles != null) {
            var selection_2 = this.Selection;
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.myUpdateHandles, function (myUpdateHandle) {
                if (selection_2.getHandleCount(myUpdateHandle) <= 0) {
                    return _tuval_core__WEBPACK_IMPORTED_MODULE_0__.CONTINUE;
                }
                if (!myUpdateHandle.CanView()) {
                    myUpdateHandle.RemoveSelectionHandles(selection_2);
                }
                else {
                    myUpdateHandle.AddSelectionHandles(selection_2, selection_2.getAnExistingHandle(myUpdateHandle).SelectedObject);
                }
            });
            this.myUpdateHandles.Clear();
        }
    };
    TuView.prototype.updateExtent = function () {
        /*  Control parent = null;
         try {
             parent = base.Parent;
             while (parent != null && !(parent is Form))
             {
                 parent = parent.Parent;
             }
         }
         catch (verificationException)
         {
         }

         if (parent != null && parent is Form)
         {
             Form form = (Form)parent;
             if (form.WindowState == FormWindowState.Minimized) {
                 this.myWindowState = FormWindowState.Minimized;
                 return;
             }
             if (this.myWindowState == FormWindowState.Minimized) {
                 this.myWindowState = form.WindowState;
                 return;
             }
         } */
        if (this.SheetStyle !== _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.None && this.Sheet != null) {
            var bounds = { value: this.Sheet.Bounds };
            var doc = this.convertViewToDoc(this.SheetRoom);
            var width = doc.Width;
            var shadowOffset = this.ShadowOffset;
            var single = width + Math.abs(shadowOffset.Width);
            var height = doc.Height;
            shadowOffset = this.ShadowOffset;
            _GeomUtilities__WEBPACK_IMPORTED_MODULE_5__.GeomUtilities.InflateRect(bounds, single, height + Math.abs(shadowOffset.Height));
            var size = this.DisplayRectangle.Size;
            var docScale = this.DocScale;
            switch (this.SheetStyle) {
                case _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.Sheet:
                    {
                        this.rescaleWithCenter(docScale, this.myPreviousCenter);
                        break;
                    }
                case _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.WholeSheet:
                    {
                        if (bounds.value.Width <= 0 || bounds.value.Height <= 0) {
                            this.rescaleWithCenter(docScale, this.myPreviousCenter);
                            break;
                        }
                        docScale = Math.min(size.Width / bounds.value.Width, size.Height / bounds.value.Height);
                        this.rescaleWithCenter(docScale, this.myPreviousCenter);
                        break;
                    }
                case _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.SheetWidth:
                    {
                        if (bounds.value.Width <= 0) {
                            this.rescaleWithCenter(docScale, this.myPreviousCenter);
                            break;
                        }
                        docScale = size.Width / bounds.value.Width;
                        this.rescaleWithCenter(docScale, this.myPreviousCenter);
                        break;
                    }
                case _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewSheetStyle.SheetHeight:
                    {
                        if (bounds.value.Height <= 0) {
                            this.rescaleWithCenter(docScale, this.myPreviousCenter);
                            break;
                        }
                        docScale = size.Height / bounds.value.Height;
                        this.rescaleWithCenter(docScale, this.myPreviousCenter);
                        break;
                    }
                default:
                    {
                        this.rescaleWithCenter(docScale, this.myPreviousCenter);
                        break;
                    }
            }
        }
    };
    TuView.prototype.updateScrollBars = function () {
        var flag;
        var flag1;
        var flag2;
        var flag3;
        if (this.myUpdatingScrollBars) {
            return;
        }
        var horizontalScrollBar = this.HorizontalScrollBar;
        var verticalScrollBar = this.VerticalScrollBar;
        if (verticalScrollBar == null && horizontalScrollBar == null) {
            return;
        }
        var documentTopLeft = this.DocumentTopLeft;
        var documentSize = this.DocumentSize;
        var int32 = Math.floor(documentTopLeft.X * this.myHorizScale * this.myHorizWorld);
        var int321 = Math.floor((documentTopLeft.Y * this.myVertScale * this.myVertWorld));
        var int322 = Math.floor((documentTopLeft.X + documentSize.Width) * this.myHorizScale * this.myHorizWorld);
        var int323 = Math.floor((documentTopLeft.Y + documentSize.Height) * this.myVertScale * this.myVertWorld);
        var docPosition = this.DocPosition;
        var int324 = Math.floor(docPosition.X * this.myHorizScale * this.myHorizWorld);
        var int325 = Math.floor(docPosition.Y * this.myVertScale * this.myVertWorld);
        var size = this.Size;
        size.Width = size.Width - (2 * this.myBorderSize.Width);
        if (size.Width < 0) {
            size.Width = 0;
        }
        size.Height = size.Height - (2 * this.myBorderSize.Height);
        if (size.Height < 0) {
            size.Height = 0;
        }
        var flag4 = ((int323 - int321) > size.Height || int325 > int321 ? true : int325 < (int323 - size.Height));
        if (verticalScrollBar == null) {
            flag = false;
        }
        else {
            flag = (this.ShowVerticalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.Show ? true : this.ShowVerticalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.IfNeeded && flag4);
        }
        var flag5 = flag;
        var flag6 = ((int322 - int32) > size.Width || int324 > int32 ? true : int324 < (int322 - size.Width));
        if (horizontalScrollBar == null) {
            flag1 = false;
        }
        else {
            flag1 = (this.ShowHorizontalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.Show ? true : this.ShowHorizontalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.IfNeeded && flag6);
        }
        var flag7 = flag1;
        if (flag5) {
            if (verticalScrollBar != null) {
                size.Width = size.Width - verticalScrollBar.Width;
            }
            size.Width = Math.max(0, size.Width);
        }
        if (flag7) {
            if (horizontalScrollBar != null) {
                size.Height = size.Height - horizontalScrollBar.Height;
            }
            size.Height = Math.max(0, size.Height);
        }
        flag4 = ((int323 - int321) > size.Height || int325 > int321 ? true : int325 < (int323 - size.Height));
        if (verticalScrollBar == null) {
            flag2 = false;
        }
        else {
            flag2 = (this.ShowVerticalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.Show ? true : this.ShowVerticalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.IfNeeded && flag4);
        }
        flag5 = flag2;
        flag6 = ((int322 - int32) > size.Width || int324 > int32 ? true : int324 < (int322 - size.Width));
        if (horizontalScrollBar == null) {
            flag3 = false;
        }
        else {
            flag3 = (this.ShowHorizontalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.Show ? true : this.ShowHorizontalScrollBar === _TuViewScrollBarVisibility__WEBPACK_IMPORTED_MODULE_30__.TuViewScrollBarVisibility.IfNeeded && flag6);
        }
        flag7 = flag3;
        this.myUpdatingScrollBars = true;
        var flag8 = false;
        if (verticalScrollBar != null) {
            var height = (int323 - size.Height);
            if (int325 > height && height > int321) {
                int325 = height;
            }
            if (int325 < int321) {
                int325 = int321;
            }
            var int326 = (Math.max(int323, (int325 + size.Height)) - 12);
            int326 = Math.max(int326, int325);
            if (verticalScrollBar.Minimum != int321) {
                verticalScrollBar.Minimum = int321;
            }
            if (verticalScrollBar.Value > int326 && verticalScrollBar.Value != int325) {
                verticalScrollBar.Value = int325;
            }
            if (verticalScrollBar.Maximum != int326) {
                verticalScrollBar.Maximum = int326;
            }
            if (verticalScrollBar.Value != int325) {
                verticalScrollBar.Value = int325;
            }
            if (verticalScrollBar.Visible != flag5) {
                flag8 = true;
            }
            verticalScrollBar.Visible = flag5;
            verticalScrollBar.Enabled = flag4;
        }
        if (horizontalScrollBar != null) {
            var width = (int322 - size.Width);
            if (int324 > width && width > int32) {
                int324 = width;
            }
            if (int324 < int32) {
                int324 = int32;
            }
            var int327 = (Math.max(int322, (int324 + size.Width)) - 12);
            int327 = Math.max(int327, int324);
            if (horizontalScrollBar.Minimum !== int32) {
                horizontalScrollBar.Minimum = int32;
            }
            if (horizontalScrollBar.Value > int327 && horizontalScrollBar.Value !== int324) {
                horizontalScrollBar.Value = int324;
            }
            if (horizontalScrollBar.Maximum !== int327) {
                horizontalScrollBar.Maximum = int327;
            }
            if (horizontalScrollBar.Value !== int324) {
                horizontalScrollBar.Value = int324;
            }
            if (horizontalScrollBar.Visible !== flag7) {
                flag8 = true;
            }
            horizontalScrollBar.Visible = flag7;
            horizontalScrollBar.Enabled = flag6;
        }
        this.myUpdatingScrollBars = false;
        if (flag8) {
            this.layoutScrollBars(false);
        }
    };
    TuView.prototype.updateSelectionHandles = function (obj) {
        var _this = this;
        var goGroups = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(obj, _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuGroup);
        if (goGroups != null) {
            (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(goGroups.GetEnumerator(), function (enumerator) {
                _this.updateSelectionHandles(enumerator);
            });
        }
        var selectionObject = obj.SelectionObject;
        if (selectionObject != null) {
            var selection = this.Selection;
            if (selection.Contains(obj) && obj.CanView()) {
                selectionObject.AddSelectionHandles(selection, obj);
                return;
            }
            selectionObject.RemoveSelectionHandles(selection);
        }
    };
    TuView.prototype.updateView = function () {
        this.updateBorderWidths();
        this.updateScrollBars();
        //this.batchDraw();
        this.invalidate();
    };
    TuView.prototype.invalidate = function (rect) {
        //return;
        //this.clipRect = rect;
        //console.log(rect);
        //this.drawView();
        if (this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Html || this.RenderingMode === _ViewRenderingMode__WEBPACK_IMPORTED_MODULE_69__.ViewRenderingMode.Svg) {
            //this.ForceUpdate();
        }
        this.invalidateRects.Add(rect || this.ClientRectangle);
    };
    TuView.prototype.drawView = function (forceInvalidate) {
        if (forceInvalidate === void 0) { forceInvalidate = false; }
        if (!this.SuppressingPaint) {
            //throw new NotImplementedException('invalide not implemented.');
            if (this.graphics == null) {
                if (this.canvasElement != null) {
                    var context = this.canvasElement.getContext('2d');
                    this.canvasElement.width = this.ClientRectangle.Width;
                    this.canvasElement.height = this.ClientRectangle.Height;
                    this.graphics = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Graphics(context);
                    //this.graphics.fillRectangle(this.myBackgroundBrush, this.ClientRectangle);
                }
            }
            /*  if (this.clipRect == null || !(this.clipRect instanceof CGRectangle)) {
                 this.clipRect = this.ClientRectangle;
             } */
            if (!forceInvalidate) {
                if (!this.invalidateRects.IsEmpty) {
                    var rectToUpdate = this.invalidateRects.getInvalidateRectangle();
                    if (rectToUpdate != null) {
                        this.onPaint(new _TuTool_TuToolPanning__WEBPACK_IMPORTED_MODULE_22__.PaintEventArgs(this.graphics, rectToUpdate));
                        //console.log('draw partial : ' + rectToUpdate + '  Count : ' + this.invalidateRects.Count);
                    }
                }
            }
            else {
                this.onPaint(new _TuTool_TuToolPanning__WEBPACK_IMPORTED_MODULE_22__.PaintEventArgs(this.graphics, this.ClientRectangle));
                //console.log('draw all : ' + this.ClientRectangle);
            }
            //window.requestAnimationFrame(this.invalidateMe.bind(this));
        }
    };
    TuView.prototype.invalidateMe = function (rect) {
        return;
        if (!this.SuppressingPaint) {
            //throw new NotImplementedException('invalide not implemented.');
            if (this.graphics == null) {
                if (this.canvasElement != null) {
                    var context = this.canvasElement.getContext('2d');
                    this.canvasElement.width = this.ClientRectangle.Width;
                    this.canvasElement.height = this.ClientRectangle.Height;
                    this.graphics = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.Graphics(context);
                    //this.graphics.fillRectangle(this.myBackgroundBrush, this.ClientRectangle);
                }
            }
            if (rect == null || !(rect instanceof _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle)) {
                rect = new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle(0, 0, 100, 100); //this.ClientRectangle;
            }
            //this.graphics.intersectClip(new CGRectangle(0,0,1500,1500));
            this.graphics.clear(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.White);
            this.onPaint(new _TuTool_TuToolPanning__WEBPACK_IMPORTED_MODULE_22__.PaintEventArgs(this.graphics, rect));
            //window.requestAnimationFrame(this.invalidateMe.bind(this));
        }
    };
    TuView.prototype.setHeight = function (value) {
        this.Height = value;
        if (this.canvasElement != null) {
            this.canvasElement.height = value;
        }
    };
    TuView.prototype.setWidth = function (value) {
        this.Width = value;
        if (this.canvasElement != null) {
            this.canvasElement.width = value;
        }
    };
    /*  public render(useRef: boolean = true): HTMLElement {
         return (
             <div>
                 <canvas ref={(el) => this.canvasElement = useRef ? el : this.canvasElement} id='canvasMe'>Hello TuView</canvas>
             </div>
         );
     } */
    TuView.prototype.batchDraw = function (rect) { };
    TuView.prototype.loopDraw = function () {
        var that = this;
        that.invalidate(that.ClientRectangle);
        if (!this.batchAnim) {
            this.batchAnim = new _Animation__WEBPACK_IMPORTED_MODULE_73__.Animation(function () {
                // stop animation after first tick
                //that.batchAnim.stop();
            }, this);
        }
        if (!this.batchAnim.isRunning()) {
            this.batchAnim.start();
        }
        return this;
    };
    TuView.prototype.resizeView = function (size) {
        this.Width = size.Width;
        this.Height = size.Height;
        if (this.canvasElement) {
            var canvas = this.canvasElement;
            canvas.style.padding = '0';
            canvas.style.margin = '0';
            canvas.style.border = '0';
            canvas.style.background = 'transparent';
            canvas.style.position = 'relative';
            canvas.style.top = '0';
            canvas.style.left = '0';
            canvas.width = size.Width;
            canvas.style.width = size.Width + 'px';
            canvas.height = size.Height;
            canvas.style.height = size.Height + 'px';
            this.invalidate();
        }
    };
    TuView.prototype.createButton = function (label, value) {
        throw new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.NotImplementedException('createButton');
        /*  return new TuButtonElement({
             label: label,
             icon: "pi pi-check",
         }); */
    };
    var TuView_1;
    /* internal */ TuView.myVersion = 0;
    /* internal */ TuView.myVersionMajor = 0;
    /* internal */ TuView.myVersionMinor = 0;
    TuView.test = 0;
    TuView.counter = 0;
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myFrameWidth", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myFrameHeight", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDragEntered", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "batchAnim", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myRenderingMode", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBackColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myQueuedEvents", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowDragOut", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myExternalDragImage", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPretendsInternalDrag", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myExternalDragDropsOnEnter", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySuppressPaint", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDefaultCursor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPrintScale", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPrintsViewObjects", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDrawsXorMode", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPrevXorRect", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPrevXorRectValid", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myMarquee", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myEditControl", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myGoControls", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myModalControl", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myCancelMouseDown", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myImageList", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBorderStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBorder3DStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBorderSize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDocument", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDocChangedEventHandler", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySelection", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myMaximumSelectionCount", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySelectInRectangleStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPrimarySelectionColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySecondarySelectionColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myNoFocusSelectionColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myResizeHandleSize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myResizeHandlePenWidth", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBoundingHandlePenWidth", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myHidesSelection", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDisableKeys", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myArrowMoveSmall", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myArrowMoveLarge", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myLayers", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBackgroundLayer", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myScrollSmallChange", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAutoPanRegion", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myShowsNegativeCoordinates", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myOrigin", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myHorizScale", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myVertScale", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myViewSize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDisplayRectangle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myHorizWorld", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myVertWorld", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPreviousCenter", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySmoothingMode", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myTextRenderingHint", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myInterpolationMode", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myCompositingQuality", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPixelOffsetMode", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowSelect", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowMove", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowCopy", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowResize", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowReshape", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowDelete", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowInsert", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowLink", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowEdit", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowMouse", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myAllowKey", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBackgroundBrush", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myTempArrays", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myUpdateHandles", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myIsRenderingBitmap", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myFirstInput", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myLastInput", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myTool", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDefaultTool", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myMouseDownTools", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myMouseMoveTools", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myMouseUpTools", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDragsRealtime", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myDragRoutesRealtime", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySelectionDropRejectOverValid", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySelectionDropRejectOver", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPortGravity", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myNewLinkPrototype", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myBackgroundGrid", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySheet", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySheetStyle", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "mySheetRoom", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myShadowOffset", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myShadowColor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myShadowBrush", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myShadowPen", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPaintNothingScale", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myPaintGreekScale", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myVisible", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myWidth", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myHeight", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myControls", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "myCursor", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "SelectionStarting", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "SelectionMoved", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "SelectionFinished", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "SelectionDeleting", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "SelectionDeleted", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "SelectionCopied", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectSingleClicked", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectSelectionDropReject", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectSelectionDropped", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectResized", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectLostSelection", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectHover", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectGotSelection", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectEnterLeave", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectEdited", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectContextClicked", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ObjectDoubleClicked", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "LinkCreated", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "LinkRelinked", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "BackgroundContextClicked$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "BackgroundDoubleClicked$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "BackgroundHover$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "BackgroundSelectionDropped$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "BackgroundSelectionDropReject$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "BackgroundSingleClicked$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ClipboardCopied$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "ClipboardPasted$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "DocumentChanged$", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "invalidateRects", void 0);
    __decorate([
        (0,_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.State)()
    ], TuView.prototype, "canvasElement", void 0);
    TuView = TuView_1 = __decorate([
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ClassInfo)({
            fullName: _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuView,
            instanceof: [
                _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuView,
                _types__WEBPACK_IMPORTED_MODULE_11__.Types.Control,
                _types__WEBPACK_IMPORTED_MODULE_11__.Types.TuElement,
                _types__WEBPACK_IMPORTED_MODULE_11__.Types.DisposableBase,
                _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLayerCollectionContainer,
                _types__WEBPACK_IMPORTED_MODULE_11__.Types.ITuLayerAbilities
            ]
        })
    ], TuView);
    return TuView;
}(_tuval_forms__WEBPACK_IMPORTED_MODULE_3__.TComponent));

(function staticContructor() {
    TuView.myVersion = -1;
    TuView.myVersionAssembly = "";
    TuView.myCAN = "";
    TuView.myClipboard = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.Dictionary();
})();


/***/ }),

/***/ "./src/TuView/TuViewCanvasRenderrer.tsx":
/*!**********************************************!*\
  !*** ./src/TuView/TuViewCanvasRenderrer.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewCanvasRenderrer": () => (/* binding */ TuViewCanvasRenderrer)
/* harmony export */ });
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__);

var TuViewCanvasRenderrer = /** @class */ (function () {
    function TuViewCanvasRenderrer() {
    }
    TuViewCanvasRenderrer.Apply = function (view) {
        return (_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("canvas", { ref: function (el) {
                view.Ref = el;
                view.BeginUpdate();
                view.canvasElement = el;
                view.EndUpdate();
            }, id: 'tuval-canvas-view', width: view.Width, height: view.Height }, "Hello TuView"));
    };
    return TuViewCanvasRenderrer;
}());



/***/ }),

/***/ "./src/TuView/TuViewHtmlRenderrer.tsx":
/*!********************************************!*\
  !*** ./src/TuView/TuViewHtmlRenderrer.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewHtmlRenderrer": () => (/* binding */ TuViewHtmlRenderrer)
/* harmony export */ });
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Forms/BorderStyle */ "./src/Forms/BorderStyle.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuViewSheetStyle */ "./src/TuView/TuViewSheetStyle.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_6__);







var TuViewHtmlRenderrer = /** @class */ (function () {
    function TuViewHtmlRenderrer() {
    }
    TuViewHtmlRenderrer.renderBorder = function (result, view, rect, clipRect) {
        switch (view.BorderStyle) {
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_3__.BorderStyle.None: {
                return;
            }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_3__.BorderStyle.FixedSingle: {
                if (clipRect.X > (rect.X + view.BorderSize.Width) && clipRect.Y > (rect.Y + view.BorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - view.BorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - view.BorderSize.Height)) {
                    return;
                }
                var color = _Globals__WEBPACK_IMPORTED_MODULE_2__.SystemPens_WindowFrame.Color.toString('#rrggbb');
                var penWidth = _Globals__WEBPACK_IMPORTED_MODULE_2__.SystemPens_WindowFrame.Width;
                rect = rect.inflate(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-penWidth, -penWidth));
                result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("rect", { x: rect.X, y: rect.Y, width: rect.Width, height: rect.Height, fill: 'transparent', stroke: color, "stroke-width": penWidth }));
            }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_3__.BorderStyle.Fixed3D: {
                if (clipRect.X > (rect.X + view.BorderSize.Width) && clipRect.Y > (rect.Y + view.BorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - view.BorderSize.Width) &&
                    (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - view.BorderSize.Height)) {
                    return;
                }
                //ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                var color = _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.Pens.Black.Color.toString('#rrggbb');
                var penWidth = _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.Pens.Black.Width;
                rect = rect.inflate(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-penWidth, -penWidth));
                var style = {};
                style['position'] = 'absolute';
                style['left'] = rect.X + 'px';
                style['top'] = rect.Y + 'px';
                style['width'] = rect.Width + 'px';
                style['height'] = rect.Height + 'px';
                style['backgroundColor'] = 'transparent';
                style['borderColor'] = color;
                style['borderWidth'] = penWidth;
                style['borderStyle'] = 'solid';
                result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("div", { class: "TuViewBorder", style: style }));
            }
            default:
                {
                    if (clipRect.X > (rect.X + view.BorderSize.Width) && clipRect.Y > (rect.Y + view.BorderSize.Height) &&
                        (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - view.BorderSize.Width) &&
                        (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - view.BorderSize.Height)) {
                        return;
                    }
                    //ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                    return;
                }
        }
    };
    TuViewHtmlRenderrer.renderCanvas = function (view) {
        view.BeginUpdate();
        var clipRectangle = view.ClientRectangle;
        if (clipRectangle.Width <= 0 || clipRectangle.Height <= 0) {
            return;
        }
        // TODO : ClientRectangle
        var clientRectangle = view.ClientRectangle;
        if (clientRectangle.Width <= 0 || clientRectangle.Height <= 0) {
            return;
        }
        var rectangle = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle.Intersect(clipRectangle, view.DisplayRectangle);
        var doc = view.convertViewToDoc(rectangle);
        var result = [];
        TuViewHtmlRenderrer.renderBorder(result, view, clientRectangle, clipRectangle);
        view.beginUpdate();
        view.updateDelayedSelectionHandles();
        view.endUpdate();
        TuViewHtmlRenderrer.renderView(result, view, doc);
        view.EndUpdate();
        return result;
    };
    TuViewHtmlRenderrer.renderView = function (result, view, clipRect) {
        TuViewHtmlRenderrer.renderPaperColor(result, view, clipRect);
        TuViewHtmlRenderrer.renderBackgroundDecoration(result, view, clipRect);
        TuViewHtmlRenderrer.renderObjects(result, view, true, true, clipRect);
    };
    TuViewHtmlRenderrer.renderPaperColor = function (result, view, clipRect) {
        var backColor = (view.SheetStyle === _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewSheetStyle.None ? view.Document.PaperColor : _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty);
        if (backColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
            backColor = view.BackColor;
        }
        if (view.BackgroundBrush == null || view.BackgroundBrush.Color.notEquals(backColor)) {
            if (view.BackgroundBrush != null) {
                view.BackgroundBrush.Dispose();
            }
            view.BackgroundBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(backColor);
        }
        var style = {};
        style['position'] = 'absolute';
        style['left'] = clipRect.X + 'px';
        style['top'] = clipRect.Y + 'px';
        style['width'] = clipRect.Width + 'px';
        style['height'] = clipRect.Height + 'px';
        style['backgroundColor'] = view.BackgroundBrush.Color.toString('#rrggbb');
        style['borderColor'] = 'transparent';
        style['borderWidth'] = '0px';
        style['borderStyle'] = 'solid';
        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("div", { class: "TuViewPaperColor", style: style }));
    };
    TuViewHtmlRenderrer.renderBackgroundDecoration = function (result, view, clipRect) {
    };
    TuViewHtmlRenderrer.renderObjects = function (result, view, doc, isView, clipRect) {
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.foreach)(view.Layers, function (layer) {
            if ((!doc || !layer.IsInDocument) && (!isView || !layer.IsInView)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_6__.CONTINUE;
            }
            /* layer.renderPaint(result, view, clipRect); */
            result.push(layer.CreateMainElement({
                view: view,
                clipRect: clipRect
            }));
        });
    };
    TuViewHtmlRenderrer.Apply = function (view) {
        var style = {};
        style['width'] = view.Width + 'px';
        style['height'] = view.Height + 'px';
        style['position'] = 'relative';
        style['left'] = '0px';
        style['top'] = '0px';
        style['overflow'] = 'hidden';
        return (_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("div", { class: "TuView", ref: function (e) { return view.Ref = e; }, style: style }, TuViewHtmlRenderrer.renderCanvas(view)));
    };
    return TuViewHtmlRenderrer;
}());



/***/ }),

/***/ "./src/TuView/TuViewScrollBarVisibility.ts":
/*!*************************************************!*\
  !*** ./src/TuView/TuViewScrollBarVisibility.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewScrollBarVisibility": () => (/* binding */ TuViewScrollBarVisibility)
/* harmony export */ });
var TuViewScrollBarVisibility;
(function (TuViewScrollBarVisibility) {
    TuViewScrollBarVisibility[TuViewScrollBarVisibility["Hide"] = 0] = "Hide";
    TuViewScrollBarVisibility[TuViewScrollBarVisibility["Show"] = 1] = "Show";
    TuViewScrollBarVisibility[TuViewScrollBarVisibility["IfNeeded"] = 2] = "IfNeeded";
})(TuViewScrollBarVisibility || (TuViewScrollBarVisibility = {}));


/***/ }),

/***/ "./src/TuView/TuViewSheetStyle.ts":
/*!****************************************!*\
  !*** ./src/TuView/TuViewSheetStyle.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewSheetStyle": () => (/* binding */ TuViewSheetStyle)
/* harmony export */ });
var TuViewSheetStyle;
(function (TuViewSheetStyle) {
    TuViewSheetStyle[TuViewSheetStyle["None"] = 0] = "None";
    TuViewSheetStyle[TuViewSheetStyle["Sheet"] = 1] = "Sheet";
    TuViewSheetStyle[TuViewSheetStyle["WholeSheet"] = 2] = "WholeSheet";
    TuViewSheetStyle[TuViewSheetStyle["SheetWidth"] = 3] = "SheetWidth";
    TuViewSheetStyle[TuViewSheetStyle["SheetHeight"] = 4] = "SheetHeight";
})(TuViewSheetStyle || (TuViewSheetStyle = {}));


/***/ }),

/***/ "./src/TuView/TuViewSnapStyle.ts":
/*!***************************************!*\
  !*** ./src/TuView/TuViewSnapStyle.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewSnapStyle": () => (/* binding */ TuViewSnapStyle)
/* harmony export */ });
var TuViewSnapStyle;
(function (TuViewSnapStyle) {
    TuViewSnapStyle[TuViewSnapStyle["None"] = 0] = "None";
    TuViewSnapStyle[TuViewSnapStyle["Jump"] = 1] = "Jump";
    TuViewSnapStyle[TuViewSnapStyle["After"] = 2] = "After";
})(TuViewSnapStyle || (TuViewSnapStyle = {}));


/***/ }),

/***/ "./src/TuView/TuViewSvgRenderrer.tsx":
/*!*******************************************!*\
  !*** ./src/TuView/TuViewSvgRenderrer.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuViewSvgRenderrer": () => (/* binding */ TuViewSvgRenderrer)
/* harmony export */ });
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Forms/BorderStyle */ "./src/Forms/BorderStyle.ts");
/* harmony import */ var _Globals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Globals */ "./src/Globals.ts");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuViewSheetStyle */ "./src/TuView/TuViewSheetStyle.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_6__);







var TuViewSvgRenderrer = /** @class */ (function () {
    function TuViewSvgRenderrer() {
    }
    TuViewSvgRenderrer.renderBorder = function (result, view, rect, clipRect) {
        switch (view.BorderStyle) {
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_2__.BorderStyle.None: {
                return;
            }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_2__.BorderStyle.FixedSingle: {
                if (clipRect.X > (rect.X + view.BorderSize.Width) && clipRect.Y > (rect.Y + view.BorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - view.BorderSize.Width) && (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - view.BorderSize.Height)) {
                    return;
                }
                var color = _Globals__WEBPACK_IMPORTED_MODULE_3__.SystemPens_WindowFrame.Color.toString('#rrggbb');
                var penWidth = _Globals__WEBPACK_IMPORTED_MODULE_3__.SystemPens_WindowFrame.Width;
                rect = rect.inflate(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-penWidth, -penWidth));
                result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("rect", { x: rect.X, y: rect.Y, width: rect.Width, height: rect.Height, fill: 'transparent', stroke: color, "stroke-width": penWidth }));
            }
            case _Forms_BorderStyle__WEBPACK_IMPORTED_MODULE_2__.BorderStyle.Fixed3D: {
                if (clipRect.X > (rect.X + view.BorderSize.Width) && clipRect.Y > (rect.Y + view.BorderSize.Height) && (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - view.BorderSize.Width) &&
                    (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - view.BorderSize.Height)) {
                    return;
                }
                //ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                var color = _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.Pens.Black.Color.toString('#rrggbb');
                var penWidth = _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.Pens.Black.Width;
                rect = rect.inflate(new _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGSize(-penWidth, -penWidth));
                result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("rect", { x: rect.X, y: rect.Y, width: rect.Width, height: rect.Height, fill: 'transparent', stroke: color, "stroke-width": penWidth }));
            }
            default:
                {
                    if (clipRect.X > (rect.X + view.BorderSize.Width) && clipRect.Y > (rect.Y + view.BorderSize.Height) &&
                        (clipRect.X + clipRect.Width) < ((rect.X + rect.Width) - view.BorderSize.Width) &&
                        (clipRect.Y + clipRect.Height) < ((rect.Y + rect.Height) - view.BorderSize.Height)) {
                        return;
                    }
                    //ControlPaint.DrawBorder3D(g, rect, this.Border3DStyle);
                    return;
                }
        }
    };
    TuViewSvgRenderrer.renderCanvas = function (view) {
        view.BeginUpdate();
        var clipRectangle = view.ClientRectangle;
        if (clipRectangle.Width <= 0 || clipRectangle.Height <= 0) {
            return;
        }
        // TODO : ClientRectangle
        var clientRectangle = view.ClientRectangle;
        if (clientRectangle.Width <= 0 || clientRectangle.Height <= 0) {
            return;
        }
        var rectangle = _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGRectangle.Intersect(clipRectangle, view.DisplayRectangle);
        var doc = view.convertViewToDoc(rectangle);
        var result = [];
        TuViewSvgRenderrer.renderBorder(result, view, clientRectangle, clipRectangle);
        /*  this.beginUpdate();
         this.updateDelayedSelectionHandles();
         this.endUpdate(); */
        TuViewSvgRenderrer.renderView(result, view, doc);
        view.EndUpdate();
        return result;
    };
    TuViewSvgRenderrer.renderView = function (result, view, clipRect) {
        TuViewSvgRenderrer.renderPaperColor(result, view, clipRect);
        TuViewSvgRenderrer.renderBackgroundDecoration(result, view, clipRect);
        TuViewSvgRenderrer.renderObjects(result, view, true, true, clipRect);
    };
    TuViewSvgRenderrer.renderPaperColor = function (result, view, clipRect) {
        var backColor = (view.SheetStyle === _TuViewSheetStyle__WEBPACK_IMPORTED_MODULE_5__.TuViewSheetStyle.None ? view.Document.PaperColor : _tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty);
        if (backColor.Equals(_tuval_cg__WEBPACK_IMPORTED_MODULE_1__.CGColor.Empty)) {
            backColor = view.BackColor;
        }
        if (view.BackgroundBrush == null || view.BackgroundBrush.Color.notEquals(backColor)) {
            if (view.BackgroundBrush != null) {
                view.BackgroundBrush.Dispose();
            }
            view.BackgroundBrush = new _tuval_graphics__WEBPACK_IMPORTED_MODULE_4__.SolidBrush(backColor);
        }
        clipRect = clipRect.inflate(-2, -2);
        result.push(_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("rect", { x: clipRect.X, y: clipRect.Y, width: clipRect.Width, height: clipRect.Height, fill: view.BackgroundBrush.Color.toString('#rrggbb'), "stroke-width": 1 }));
    };
    TuViewSvgRenderrer.renderBackgroundDecoration = function (result, view, clipRect) {
    };
    TuViewSvgRenderrer.renderObjects = function (result, view, doc, isView, clipRect) {
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_6__.foreach)(view.Layers, function (layer) {
            if ((!doc || !layer.IsInDocument) && (!isView || !layer.IsInView)) {
                return _tuval_core__WEBPACK_IMPORTED_MODULE_6__.CONTINUE;
            }
            result.push(layer.CreateMainElement({
                view: view,
                clipRect: clipRect
            }));
        });
    };
    TuViewSvgRenderrer.Apply = function (view) {
        return (_tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("svg", { ref: function (e) { return view.Ref = e; }, width: view.Width, height: view.Height, viewBox: "0 0 " + view.Width + " " + view.Height, xmlns: "http://www.w3.org/2000/svg" },
            _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("defs", null,
                _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("filter", { id: "drop-shadow", height: "200%", width: "200%", x: "-50%", y: "-50%", filterUnits: "objectBoundingBox" },
                    _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("feOffset", { dx: "0", dy: "2", in: "SourceAlpha", result: "shadowOffsetOuter1" }),
                    _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("feGaussianBlur", { stdDeviation: "1.5", in: "shadowOffsetOuter1", result: "shadowBlurOuter1" }),
                    _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("feColorMatrix", { values: "0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.075 0", in: "shadowBlurOuter1", type: "matrix", result: "shadowMatrixOuter1" }),
                    _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("feMerge", null,
                        _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("feMergeNode", { in: "shadowMatrixOuter1" }),
                        _tuval_forms__WEBPACK_IMPORTED_MODULE_0__.Teact.createElement("feMergeNode", { in: "SourceGraphic" })))),
            TuViewSvgRenderrer.renderCanvas(view)));
    };
    return TuViewSvgRenderrer;
}());



/***/ }),

/***/ "./src/TuView/ViewRenderingMode.ts":
/*!*****************************************!*\
  !*** ./src/TuView/ViewRenderingMode.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewRenderingMode": () => (/* binding */ ViewRenderingMode)
/* harmony export */ });
var ViewRenderingMode;
(function (ViewRenderingMode) {
    ViewRenderingMode[ViewRenderingMode["Canvas"] = 0] = "Canvas";
    ViewRenderingMode[ViewRenderingMode["Svg"] = 1] = "Svg";
    ViewRenderingMode[ViewRenderingMode["Html"] = 2] = "Html";
})(ViewRenderingMode || (ViewRenderingMode = {}));


/***/ }),

/***/ "./src/Xml/TuHtmlRenderer.ts":
/*!***********************************!*\
  !*** ./src/Xml/TuHtmlRenderer.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuHtmlRenderer": () => (/* binding */ TuHtmlRenderer)
/* harmony export */ });
/* harmony import */ var _TuXmlTransformer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuXmlTransformer */ "./src/Xml/TuXmlTransformer.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var TuHtmlRenderer = /** @class */ (function (_super) {
    __extends(TuHtmlRenderer, _super);
    function TuHtmlRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuHtmlRenderer.prototype.TranslateAlpha = function (c) {
        return c.A / 255;
    };
    TuHtmlRenderer.prototype.TranslateColor = function (c) {
        var str = ["rgb(", c.R, ",", c.G, ",", c.B, ")"];
        return str.join('');
    };
    TuHtmlRenderer.prototype.TranslateGraphicsPath = function (path) {
        var str = "";
        try {
            var pathPoints = path.PathPoints;
            var pathTypes = path.PathTypes;
            var str1 = "";
            for (var i = 0; i < Math.min(pathPoints.length, pathTypes.length); i++) {
                var str2 = "M";
                var int32 = pathTypes[i];
                var flag = false;
                if ((int32 & 128) != 0) {
                    flag = true;
                    int32 &= 127;
                }
                switch (int32 & 63) {
                    case 0:
                        {
                            str2 = "M";
                            break;
                        }
                    case 1:
                        {
                            str2 = "L";
                            break;
                        }
                    case 2:
                        {
                            str2 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat("?", int32, "?");
                            break;
                        }
                    case 3:
                        {
                            str2 = "C";
                            break;
                        }
                    default:
                        {
                            str2 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat("?", int32, "?");
                            break;
                        }
                }
                if (str2 !== str1) {
                    str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, str2);
                    str1 = str2;
                }
                var str3 = str;
                var strArrays = [str3, pathPoints[i].X, " ", pathPoints[i].Y, " "];
                str = strArrays.join('');
                if (flag) {
                    str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, "Z ");
                }
            }
        }
        catch (exception) {
        }
        return str;
    };
    TuHtmlRenderer.prototype.WriteBrushAttributes = function (brush) {
        if (brush == null) {
            this.WriteStyleAttrVal("background-color", "transparent");
            return;
        }
        var solidBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicTypes.SolidBrush);
        if (solidBrush != null) {
            this.WriteStyleAttrVal("background-color", this.TranslateColor(solidBrush.Color));
            if (solidBrush.Color.A !== 255) {
                this.WriteAttrVal("fill-opacity", this.TranslateAlpha(solidBrush.Color));
            }
        }
        //base.Writer.InvokeGenerateAttributes(b.GetType(), b);
    };
    TuHtmlRenderer.prototype.WriteEllipse = function (p, b, r) {
        this.WriteStartElement("div");
        this.WriteBrushAttributes(b);
        this.WritePenAttributes(p);
        this.WriteStyleAttrVal('position', 'absolute');
        this.WriteStyleAttrVal('left', r.Left + 'px');
        this.WriteStyleAttrVal('top', r.Top + 'px');
        this.WriteStyleAttrVal('width', r.Width + 'px');
        this.WriteStyleAttrVal('height', r.Height + 'px');
        this.WriteStyleAttrVal('border-radius', '50%');
        this.WriteEndElement();
    };
    TuHtmlRenderer.prototype.WriteLine = function (p, a, b) {
        var color = p.Color.toString('#rrggbb');
        var width = p.Width;
        var ax = a.X;
        var ay = a.Y;
        var bx = b.X;
        var by = b.Y;
        if (ax > bx) {
            bx = ax + bx;
            ax = bx - ax;
            bx = bx - ax;
            by = ay + by;
            ay = by - ay;
            by = by - ay;
        }
        var angle = Math.atan((ay - by) / (bx - ax));
        // console.log('angle: ' + angle);
        angle = (angle * 180 / Math.PI);
        //   console.log('angle: ' + angle);
        angle = -angle;
        //   console.log('angle: ' + angle);
        var length = Math.sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by));
        //console.log('length: ' + length);
        this.WriteStartElement("div");
        this.WriteStyleAttrVal('left', ax + "px");
        this.WriteStyleAttrVal('top', ay + "px");
        this.WriteStyleAttrVal('width', length + "px");
        this.WriteStyleAttrVal('height', width + "px");
        this.WriteStyleAttrVal('background-color', color);
        this.WriteStyleAttrVal('position', 'absolute');
        this.WriteStyleAttrVal('transform', "rotate(" + angle + "deg)");
        this.WriteStyleAttrVal('-ms-transform', "rotate(" + angle + "deg)");
        this.WriteStyleAttrVal('transform-origin', "0% 0%");
        this.WriteStyleAttrVal('-moz-transform', "rotate(" + angle + "deg)");
        this.WriteStyleAttrVal('-moz-transform-origin', "0% 0%");
        this.WriteStyleAttrVal('-webkit-transform', "rotate(" + angle + "deg)");
        this.WriteStyleAttrVal('-webkit-transform-origin', "0% 0%");
        this.WriteStyleAttrVal('-o-transform', "rotate(" + angle + "deg)");
        this.WriteStyleAttrVal('-o-transform-origin', "0% 0%");
        this.WriteEndElement();
    };
    TuHtmlRenderer.prototype.WriteLines = function (p, v) {
        this.WriteStartElement("div");
        //this.WriteBrushAttributes(null);
        this.WritePenAttributes(p);
        var str = "";
        for (var i = 0; i < v.length; i++) {
            var pointF = v[i];
            var str1 = str;
            var strArrays = [str1, pointF.X, ",", pointF.Y, " "];
            str = strArrays.join('');
        }
        this.WriteStyleAttrVal("clip-path", "polygon(" + str + ")");
        this.WriteEndElement();
    };
    TuHtmlRenderer.prototype.WritePath = function (p, b, pathdesc) {
        this.WriteStartElement("div");
        this.WriteBrushAttributes(b);
        this.WritePenAttributes(p);
        this.WriteStyleAttrVal("clip-path", "path(" + pathdesc + ")");
        this.WriteEndElement();
    };
    TuHtmlRenderer.prototype.WritePenAttributes = function (pen) {
        if (pen == null || pen.Color.IsEmpty) {
            this.WriteStyleAttrVal("borderColor", "transparent");
            return;
        }
        this.WriteStyleAttrVal("borderColor", this.TranslateColor(pen.Color));
        var width = pen.Width;
        if (width !== 0) {
            this.WriteStyleAttrVal("borderWidth", width);
        }
        else {
            this.WriteStyleAttrVal("borderWidth", width + "px");
        }
        if (pen.Color.A !== 255) {
            this.WriteStyleAttrVal("stroke-opacity", this.TranslateAlpha(pen.Color));
        }
        if (pen.DashOffset > 0) {
            this.WriteStyleAttrVal("borderStyle", pen.DashOffset);
        }
        if (pen.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.DashStyle.Solid) {
            var dashPattern = pen.DashPattern;
            var str = "";
            for (var i = 0; i < dashPattern.length; i++) {
                if (i > 0) {
                    str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, ",");
                }
                str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, dashPattern[i] * width);
            }
            this.WriteStyleAttrVal("borderStyle", str);
        }
        else {
            this.WriteStyleAttrVal("borderStyle", 'solid');
        }
        //base.Writer.InvokeGenerateAttributes(p.GetType(), p);
    };
    TuHtmlRenderer.prototype.WritePolygon = function (p, b, poly) {
        if (poly == null || poly.length < 2) {
            return;
        }
        var str = ["M", poly[0].X, " ", poly[0].Y, " "];
        var str1 = str.join('');
        for (var i = 1; i < poly.length; i++) {
            var pointF = poly[i];
            var str2 = str1;
            var strArrays = [str2, "L", pointF.X, " ", pointF.Y, " "];
            str1 = strArrays.join('');
        }
        str1 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str1, "Z");
        this.WritePath(p, b, str1);
    };
    TuHtmlRenderer.prototype.WriteRectangle = function (p, b, r, corner) {
        this.WriteStartElement("div");
        this.WriteBrushAttributes(b);
        this.WritePenAttributes(p);
        this.WriteStyleAttrVal('position', 'absolute');
        this.WriteStyleAttrVal('left', r.Left + 'px');
        this.WriteStyleAttrVal('top', r.Top + 'px');
        this.WriteStyleAttrVal('width', r.Width + 'px');
        this.WriteStyleAttrVal('height', r.Height + 'px');
        if (corner.Width > 0 && corner.Height > 0) {
            this.WriteStyleAttrVal('border-radius', corner.Width + "px " + corner.Height + "px");
        }
        this.WriteEndElement();
    };
    return TuHtmlRenderer;
}(_TuXmlTransformer__WEBPACK_IMPORTED_MODULE_0__.TuXmlTransformer));



/***/ }),

/***/ "./src/Xml/TuObjectHtmlRenderer.ts":
/*!*****************************************!*\
  !*** ./src/Xml/TuObjectHtmlRenderer.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuObjectHtmlRenderer": () => (/* binding */ TuObjectHtmlRenderer)
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _TuSvgRenderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuSvgRenderer */ "./src/Xml/TuSvgRenderer.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var TuObjectHtmlRenderer = /** @class */ (function (_super) {
    __extends(TuObjectHtmlRenderer, _super);
    function TuObjectHtmlRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuObjectHtmlRenderer.prototype.DecideCache = function () {
        this.InvalidateCache();
    };
    TuObjectHtmlRenderer.prototype.GenerateElement = function (view, obj) {
        var goObject = obj;
        this.WriteStartElement("div");
        return true;
    };
    TuObjectHtmlRenderer.prototype.GenerateAttributes = function (view, obj) {
    };
    TuObjectHtmlRenderer.prototype.GenerateBody = function (view, obj) {
        var goObject = obj;
        var goLabeledPart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_0__.Types.ITuLabeledPart);
        if (goLabeledPart != null) {
            this.WriteStartElement("desc");
            this.WriteTextBody(goLabeledPart.Text);
            this.WriteEndElement();
        }
        /*  string toolTip = goObject.GetToolTip(base.View);
         if (toolTip != null)
         {
             base.WriteStartElement("title");
             toolTip = toolTip.Replace('\r', ' ');
             toolTip = toolTip.Replace('\n', ' ');
             base.WriteTextBody(toolTip);
             base.WriteEndElement();
         } */
    };
    TuObjectHtmlRenderer.prototype.GenerateElementFinish = function (view, obj) {
        this.WriteEndElement();
    };
    return TuObjectHtmlRenderer;
}(_TuSvgRenderer__WEBPACK_IMPORTED_MODULE_2__.TuSvgRenderer));



/***/ }),

/***/ "./src/Xml/TuObjectSvgRenderer.ts":
/*!****************************************!*\
  !*** ./src/Xml/TuObjectSvgRenderer.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuObjectSvgRenderer": () => (/* binding */ TuObjectSvgRenderer)
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _TuSvgRenderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuSvgRenderer */ "./src/Xml/TuSvgRenderer.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var TuObjectSvgRenderer = /** @class */ (function (_super) {
    __extends(TuObjectSvgRenderer, _super);
    function TuObjectSvgRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuObjectSvgRenderer.prototype.DecideCache = function () {
        this.InvalidateCache();
    };
    TuObjectSvgRenderer.prototype.GenerateElement = function (view, obj) {
        var goObject = obj;
        this.WriteStartElement("g");
        return true;
    };
    TuObjectSvgRenderer.prototype.GenerateAttributes = function (view, obj) {
    };
    TuObjectSvgRenderer.prototype.GenerateBody = function (view, obj) {
        var goObject = obj;
        var goLabeledPart = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(goObject, _types__WEBPACK_IMPORTED_MODULE_0__.Types.ITuLabeledPart);
        if (goLabeledPart != null) {
            this.WriteStartElement("desc");
            this.WriteTextBody(goLabeledPart.Text);
            this.WriteEndElement();
        }
        /*  string toolTip = goObject.GetToolTip(base.View);
         if (toolTip != null)
         {
             base.WriteStartElement("title");
             toolTip = toolTip.Replace('\r', ' ');
             toolTip = toolTip.Replace('\n', ' ');
             base.WriteTextBody(toolTip);
             base.WriteEndElement();
         } */
    };
    TuObjectSvgRenderer.prototype.GenerateElementFinish = function (view, obj) {
        this.WriteEndElement();
    };
    return TuObjectSvgRenderer;
}(_TuSvgRenderer__WEBPACK_IMPORTED_MODULE_2__.TuSvgRenderer));



/***/ }),

/***/ "./src/Xml/TuShapeHtmlRenderer.ts":
/*!****************************************!*\
  !*** ./src/Xml/TuShapeHtmlRenderer.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuShapeHtmlRenderer": () => (/* binding */ TuShapeHtmlRenderer)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuHtmlRenderer */ "./src/Xml/TuHtmlRenderer.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var TuShapeHtmlRenderer = /** @class */ (function (_super) {
    __extends(TuShapeHtmlRenderer, _super);
    function TuShapeHtmlRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuShapeHtmlRenderer.prototype.DecideCache = function () {
        this.InvalidateCache();
    };
    TuShapeHtmlRenderer.prototype.GenerateElement = function (view, obj) {
        return true;
    };
    TuShapeHtmlRenderer.prototype.GenerateAttributes = function (view, obj) {
    };
    TuShapeHtmlRenderer.prototype.GenerateElementFinish = function (view, obj) {
    };
    TuShapeHtmlRenderer.prototype.GenerateBody = function (view, obj) {
        // super.GenerateBody(obj);
        var goShape = obj;
        var graphicsPath = goShape.makePath();
        if (graphicsPath == null || graphicsPath.PointCount <= 0) {
            return;
        }
        var str = this.TranslateGraphicsPath(graphicsPath);
        var shadowBrush = null;
        var shadowPen = null;
        if (goShape.Shadowed && this.View != null) {
            var shadowOffset = goShape.GetShadowOffset(this.View);
            this.WriteStartElement("div");
            var strArrays = ["translate(", shadowOffset.Width, ",", shadowOffset.Height, ")"];
            this.WriteStyleAttrVal("transform", strArrays.join(''));
            if (goShape.Brush != null || goShape.Pen == null) {
                shadowBrush = goShape.GetShadowBrush(this.View);
            }
            else {
                shadowPen = goShape.GetShadowPen(this.View, goShape.PenWidth);
            }
            if (goShape.GetType() === (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuRoundedRectangle)) {
                var goRoundedRectangle = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.as)(goShape, _types__WEBPACK_IMPORTED_MODULE_1__.Types.TuRoundedRectangle);
                var corner = goRoundedRectangle.Corner;
                if (goRoundedRectangle.RoundedCornerSpots !== 30) {
                    this.WritePath(shadowPen, shadowBrush, str);
                }
                else {
                    this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, corner);
                }
            }
            else if (goShape.GetType() === (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuRectangle)) {
                this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(0, 0));
            }
            else if (goShape.GetType() !== (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuEllipse)) {
                this.WritePath(shadowPen, shadowBrush, str);
            }
            else {
                this.WriteEllipse(shadowPen, shadowBrush, goShape.Bounds);
            }
            _super.prototype.WriteEndElement.call(this);
        }
        shadowBrush = goShape.Brush;
        shadowPen = goShape.Pen;
        if (goShape.GetType() !== (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuRoundedRectangle)) {
            if (goShape.GetType() === (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuRectangle)) {
                this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, new _tuval_cg__WEBPACK_IMPORTED_MODULE_2__.CGSize(0, 0));
                return;
            }
            if (goShape.GetType() !== (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_1__.Types.TuEllipse)) {
                this.WritePath(shadowPen, shadowBrush, str);
                return;
            }
            this.WriteEllipse(shadowPen, shadowBrush, goShape.Bounds);
            return;
        }
        var goRoundedRectangle1 = goShape;
        var sizeF = goRoundedRectangle1.Corner;
        if (goRoundedRectangle1.RoundedCornerSpots !== 30) {
            this.WritePath(shadowPen, shadowBrush, str);
            return;
        }
        this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, sizeF);
    };
    return TuShapeHtmlRenderer;
}(_TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_3__.TuHtmlRenderer));



/***/ }),

/***/ "./src/Xml/TuShapeSvgRenderer.ts":
/*!***************************************!*\
  !*** ./src/Xml/TuShapeSvgRenderer.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuShapeSvgRenderer": () => (/* binding */ TuShapeSvgRenderer)
/* harmony export */ });
/* harmony import */ var _TuSvgRenderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuSvgRenderer */ "./src/Xml/TuSvgRenderer.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ "./src/types.ts");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tuval/cg */ "@tuval/cg");
/* harmony import */ var _tuval_cg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_tuval_cg__WEBPACK_IMPORTED_MODULE_3__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var TuShapeSvgRenderer = /** @class */ (function (_super) {
    __extends(TuShapeSvgRenderer, _super);
    function TuShapeSvgRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuShapeSvgRenderer.prototype.DecideCache = function () {
        this.InvalidateCache();
    };
    TuShapeSvgRenderer.prototype.GenerateElement = function (view, obj) {
        return true;
    };
    TuShapeSvgRenderer.prototype.GenerateAttributes = function (view, obj) {
    };
    TuShapeSvgRenderer.prototype.GenerateElementFinish = function (view, obj) {
    };
    TuShapeSvgRenderer.prototype.GenerateBody = function (view, obj) {
        // super.GenerateBody(obj);
        var goShape = obj;
        var graphicsPath = goShape.makePath();
        if (graphicsPath == null || graphicsPath.PointCount <= 0) {
            return;
        }
        var str = this.TranslateGraphicsPath(graphicsPath);
        var shadowBrush = null;
        var shadowPen = null;
        if (goShape.Shadowed && this.View != null) {
            var shadowOffset = goShape.GetShadowOffset(this.View);
            this.WriteStartElement("g");
            this.WriteAttrVal("id", 11);
            var strArrays = ["translate(", shadowOffset.Width, ",", shadowOffset.Height, ")"];
            this.WriteAttrVal("transform", strArrays.join(''));
            if (goShape.Brush != null || goShape.Pen == null) {
                shadowBrush = goShape.GetShadowBrush(this.View);
            }
            else {
                shadowPen = goShape.GetShadowPen(this.View, goShape.PenWidth);
            }
            if (goShape.GetType() === (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuRoundedRectangle)) {
                var goRoundedRectangle = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(goShape, _types__WEBPACK_IMPORTED_MODULE_2__.Types.TuRoundedRectangle);
                var corner = goRoundedRectangle.Corner;
                if (goRoundedRectangle.RoundedCornerSpots !== 30) {
                    this.WritePath(shadowPen, shadowBrush, str);
                }
                else {
                    this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, corner);
                }
            }
            else if (goShape.GetType() === (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuRectangle)) {
                this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize(0, 0));
            }
            else if (goShape.GetType() !== (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuEllipse)) {
                this.WritePath(shadowPen, shadowBrush, str);
            }
            else {
                this.WriteEllipse(shadowPen, shadowBrush, goShape.Bounds);
            }
            _super.prototype.WriteEndElement.call(this);
        }
        shadowBrush = goShape.Brush;
        shadowPen = goShape.Pen;
        if (goShape.GetType() !== (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuRoundedRectangle)) {
            if (goShape.GetType() === (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuRectangle)) {
                this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, new _tuval_cg__WEBPACK_IMPORTED_MODULE_3__.CGSize(0, 0));
                return;
            }
            if (goShape.GetType() !== (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.typeOf)(_types__WEBPACK_IMPORTED_MODULE_2__.Types.TuEllipse)) {
                this.WritePath(shadowPen, shadowBrush, str);
                return;
            }
            this.WriteEllipse(shadowPen, shadowBrush, goShape.Bounds);
            return;
        }
        var goRoundedRectangle1 = goShape;
        var sizeF = goRoundedRectangle1.Corner;
        if (goRoundedRectangle1.RoundedCornerSpots !== 30) {
            this.WritePath(shadowPen, shadowBrush, str);
            return;
        }
        this.WriteRectangle(shadowPen, shadowBrush, goShape.Bounds, sizeF);
    };
    return TuShapeSvgRenderer;
}(_TuSvgRenderer__WEBPACK_IMPORTED_MODULE_0__.TuSvgRenderer));



/***/ }),

/***/ "./src/Xml/TuSvgRenderer.ts":
/*!**********************************!*\
  !*** ./src/Xml/TuSvgRenderer.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuSvgRenderer": () => (/* binding */ TuSvgRenderer)
/* harmony export */ });
/* harmony import */ var _TuXmlTransformer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuXmlTransformer */ "./src/Xml/TuXmlTransformer.ts");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tuval/graphics */ "@tuval/graphics");
/* harmony import */ var _tuval_graphics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_tuval_graphics__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Matrix */ "./src/Matrix.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var TuSvgRenderer = /** @class */ (function (_super) {
    __extends(TuSvgRenderer, _super);
    function TuSvgRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TuSvgRenderer.prototype.TranslateAlpha = function (c) {
        return c.A / 255;
    };
    TuSvgRenderer.prototype.TranslateColor = function (c) {
        var str = ["rgb(", c.R, ",", c.G, ",", c.B, ")"];
        return str.join('');
    };
    TuSvgRenderer.prototype.TranslateGraphicsPath = function (path) {
        var str = "";
        try {
            var pathPoints = path.PathPoints;
            var pathTypes = path.PathTypes;
            var str1 = "";
            for (var i = 0; i < Math.min(pathPoints.length, pathTypes.length); i++) {
                var str2 = "M";
                var int32 = pathTypes[i];
                var flag = false;
                if ((int32 & 128) != 0) {
                    flag = true;
                    int32 &= 127;
                }
                switch (int32 & 63) {
                    case 0:
                        {
                            str2 = "M";
                            break;
                        }
                    case 1:
                        {
                            str2 = "L";
                            break;
                        }
                    case 2:
                        {
                            str2 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat("?", int32, "?");
                            break;
                        }
                    case 3:
                        {
                            str2 = "C";
                            break;
                        }
                    default:
                        {
                            str2 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat("?", int32, "?");
                            break;
                        }
                }
                if (str2 !== str1) {
                    str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, str2);
                    str1 = str2;
                }
                var str3 = str;
                var strArrays = [str3, pathPoints[i].X, " ", pathPoints[i].Y, " "];
                str = strArrays.join('');
                if (flag) {
                    str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, "Z ");
                }
            }
        }
        catch (exception) {
        }
        return str;
    };
    TuSvgRenderer.prototype.WriteBrushAttributes = function (brush) {
        if (brush == null) {
            this.WriteAttrVal("fill", "none");
            return;
        }
        var solidBrush = (0,_tuval_core__WEBPACK_IMPORTED_MODULE_1__.as)(brush, _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.GraphicTypes.SolidBrush);
        if (solidBrush != null) {
            this.WriteAttrVal("fill", this.TranslateColor(solidBrush.Color));
            if (solidBrush.Color.A !== 255) {
                this.WriteAttrVal("fill-opacity", this.TranslateAlpha(solidBrush.Color));
            }
        }
        //base.Writer.InvokeGenerateAttributes(b.GetType(), b);
    };
    TuSvgRenderer.prototype.WriteEllipse = function (p, b, r) {
        this.WriteStartElement("ellipse");
        this.WriteBrushAttributes(b);
        this.WritePenAttributes(p);
        this.WriteAttrVal("cx", r.X + r.Width / 2);
        this.WriteAttrVal("cy", r.Y + r.Height / 2);
        this.WriteAttrVal("rx", r.Width / 2);
        this.WriteAttrVal("ry", r.Height / 2);
        this.WriteEndElement();
    };
    TuSvgRenderer.prototype.WriteLine = function (p, a, b) {
        this.WriteStartElement("line");
        this.WriteBrushAttributes(null);
        this.WritePenAttributes(p);
        this.WriteAttrVal("x1", a.X);
        this.WriteAttrVal("y1", a.Y);
        this.WriteAttrVal("x2", b.X);
        this.WriteAttrVal("y2", b.Y);
        this.WriteEndElement();
    };
    TuSvgRenderer.prototype.WriteLines = function (p, v) {
        this.WriteStartElement("polyline");
        this.WriteBrushAttributes(null);
        this.WritePenAttributes(p);
        var str = "";
        for (var i = 0; i < v.length; i++) {
            var pointF = v[i];
            var str1 = str;
            var strArrays = [str1, pointF.X, ",", pointF.Y, " "];
            str = strArrays.join('');
        }
        this.WriteAttrVal("points", str);
        this.WriteEndElement();
    };
    TuSvgRenderer.prototype.WritePath = function (p, b, pathdesc) {
        this.WriteStartElement("path");
        this.WriteBrushAttributes(b);
        this.WritePenAttributes(p);
        this.WriteAttrVal("d", pathdesc);
        this.WriteEndElement();
    };
    TuSvgRenderer.prototype.WritePenAttributes = function (pen) {
        if (pen == null || pen.Color.IsEmpty) {
            this.WriteAttrVal("stroke", "none");
            return;
        }
        this.WriteAttrVal("stroke", this.TranslateColor(pen.Color));
        var width = pen.Width;
        if (width !== 1) {
            if (width !== 0) {
                this.WriteAttrVal("stroke-width", width);
            }
            else {
                this.WriteAttrVal("stroke-width", "1px");
            }
        }
        if (pen.Color.A !== 255) {
            this.WriteAttrVal("stroke-opacity", this.TranslateAlpha(pen.Color));
        }
        if (pen.DashOffset > 0) {
            this.WriteAttrVal("stroke-dashoffset", pen.DashOffset);
        }
        if (pen.DashStyle !== _tuval_graphics__WEBPACK_IMPORTED_MODULE_2__.DashStyle.Solid) {
            var dashPattern = pen.DashPattern;
            var str = "";
            for (var i = 0; i < dashPattern.length; i++) {
                if (i > 0) {
                    str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, ",");
                }
                str = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str, dashPattern[i] * width);
            }
            this.WriteAttrVal("stroke-dasharray", str);
        }
        //base.Writer.InvokeGenerateAttributes(p.GetType(), p);
    };
    TuSvgRenderer.prototype.WritePolygon = function (p, b, poly) {
        if (poly == null || poly.length < 2) {
            return;
        }
        var str = ["M", poly[0].X, " ", poly[0].Y, " "];
        var str1 = str.join('');
        for (var i = 1; i < poly.length; i++) {
            var pointF = poly[i];
            var str2 = str1;
            var strArrays = [str2, "L", pointF.X, " ", pointF.Y, " "];
            str1 = strArrays.join('');
        }
        str1 = _tuval_core__WEBPACK_IMPORTED_MODULE_1__.TString.Concat(str1, "Z");
        this.WritePath(p, b, str1);
    };
    TuSvgRenderer.prototype.WriteRectangle = function (p, b, r, corner) {
        var matrix = new _Matrix__WEBPACK_IMPORTED_MODULE_3__.SvgMatrix();
        matrix = matrix.translate(0.5, 0.5);
        this.WriteStartElement("rect");
        this.WriteBrushAttributes(b);
        this.WritePenAttributes(p);
        this.WriteAttrVal("x", r.X);
        this.WriteAttrVal("y", r.Y);
        this.WriteAttrVal("width", r.Width);
        this.WriteAttrVal("height", r.Height);
        this.WriteAttrVal("transform", matrix.transformString);
        if (corner.Width > 0 && corner.Height > 0) {
            this.WriteAttrVal("rx", corner.Width);
            this.WriteAttrVal("ry", corner.Height);
        }
        this.WriteEndElement();
    };
    return TuSvgRenderer;
}(_TuXmlTransformer__WEBPACK_IMPORTED_MODULE_0__.TuXmlTransformer));



/***/ }),

/***/ "./src/Xml/TuXmlTransformer.ts":
/*!*************************************!*\
  !*** ./src/Xml/TuXmlTransformer.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuXmlTransformer": () => (/* binding */ TuXmlTransformer)
/* harmony export */ });
/* harmony import */ var _TuXmlWriter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TuXmlWriter */ "./src/Xml/TuXmlWriter.ts");

var TuXmlTransformer = /** @class */ (function () {
    function TuXmlTransformer() {
        this.Writer = new _TuXmlWriter__WEBPACK_IMPORTED_MODULE_0__.TuXmlWriter();
        /* this.View = view;
        this.Object = obj; */
    }
    TuXmlTransformer.prototype.WriteStartElement = function (name) {
        this.Writer.WriteStartElement(name);
    };
    TuXmlTransformer.prototype.WriteEndElement = function () {
        this.Writer.WriteEndElement();
    };
    TuXmlTransformer.prototype.WriteAttrVal = function (name, val) {
        //const str: string = val;
        this.Writer.WriteAttrVal(name, val);
        return val;
    };
    TuXmlTransformer.prototype.WriteStyleAttrVal = function (name, val) {
        //const str: string = val;
        this.Writer.WriteStyleAttrVal(name, val);
        return val;
    };
    /*  public WriteIntAttrVal(name: string, val: int): string {
         const str: string = Convert.ToString(val);
         this.Writer.WriteAttrVal(name, str);
         return str;
     } */
    TuXmlTransformer.prototype.WriteTextBody = function (text) {
        this.Writer.WriteTextBody(text);
    };
    TuXmlTransformer.prototype.WriteControl = function (control) {
        this.Writer.WriteControl(control);
    };
    TuXmlTransformer.prototype.WriteComponent = function (text) {
        this.Writer.WriteComponent(text);
    };
    TuXmlTransformer.prototype.InvalidateCache = function () {
    };
    TuXmlTransformer.prototype.reset = function () {
        this.Writer = new _TuXmlWriter__WEBPACK_IMPORTED_MODULE_0__.TuXmlWriter();
    };
    TuXmlTransformer.prototype.Render = function (result, view, obj) {
        this.reset();
        this.GenerateElement(view, obj);
        this.GenerateAttributes(view, obj);
        this.GenerateBody(view, obj);
        this.GenerateElementFinish(view, obj);
        result.push(this.Writer.RenderToNode());
    };
    return TuXmlTransformer;
}());



/***/ }),

/***/ "./src/Xml/TuXmlWriter.ts":
/*!********************************!*\
  !*** ./src/Xml/TuXmlWriter.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuXmlWriter": () => (/* binding */ TuXmlWriter)
/* harmony export */ });
/* harmony import */ var _XmlElement__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./XmlElement */ "./src/Xml/XmlElement.tsx");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_1__);


var TuXmlWriter = /** @class */ (function () {
    function TuXmlWriter() {
    }
    TuXmlWriter.prototype.WriteStartElement = function (name) {
        if (name == null) {
            throw new _tuval_core__WEBPACK_IMPORTED_MODULE_1__.ArgumentNullException("name");
        }
        var writerElement = this.WriterElement;
        if (writerElement != null) {
            var xmlElement = _XmlElement__WEBPACK_IMPORTED_MODULE_0__.XmlElement.CreateElement(name);
            writerElement.AppendChild(xmlElement);
            this.WriterElement = xmlElement;
        }
        else {
            this.WriterElement = _XmlElement__WEBPACK_IMPORTED_MODULE_0__.XmlElement.CreateElement(name);
        }
    };
    TuXmlWriter.prototype.WriteAttrVal = function (name, val) {
        if (name != null && val != null) {
            var writerElement = this.WriterElement;
            if (writerElement != null) {
                writerElement.SetAttribute(name, val);
            }
            return val;
        }
    };
    TuXmlWriter.prototype.WriteStyleAttrVal = function (name, val) {
        if (name != null && val != null) {
            var writerElement = this.WriterElement;
            if (writerElement != null) {
                writerElement.SetStyleAttribute(name, val);
            }
            return val;
        }
    };
    TuXmlWriter.prototype.WriteTextBody = function (text) {
        var writerElement = this.WriterElement;
        writerElement.SetInnerText(text);
    };
    TuXmlWriter.prototype.WriteComponent = function (node) {
        var writerElement = this.WriterElement;
        writerElement.AppendChild(node);
    };
    TuXmlWriter.prototype.WriteControl = function (control) {
        var writerElement = this.WriterElement;
        writerElement.AppendChild(control.CreateMainElement());
    };
    TuXmlWriter.prototype.WriteEndElement = function () {
        var writerElement = this.WriterElement;
        if (writerElement != null && writerElement.ParentNode != null) {
            this.WriterElement = writerElement.ParentNode;
        }
    };
    TuXmlWriter.prototype.RenderToNode = function () {
        if (this.WriterElement != null) {
            return this.WriterElement.RenderNode();
        }
    };
    return TuXmlWriter;
}());



/***/ }),

/***/ "./src/Xml/XmlElement.tsx":
/*!********************************!*\
  !*** ./src/Xml/XmlElement.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XmlElement": () => (/* binding */ XmlElement)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tuval/forms */ "@tuval/forms");
/* harmony import */ var _tuval_forms__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_tuval_forms__WEBPACK_IMPORTED_MODULE_1__);


var XmlElement = /** @class */ (function () {
    function XmlElement(name) {
        this.props = {};
        this.ElementName = name;
        this.Children = new _tuval_core__WEBPACK_IMPORTED_MODULE_0__.List();
    }
    XmlElement.prototype.SetAttribute = function (attrName, value) {
        this.props[attrName] = value;
    };
    XmlElement.prototype.SetStyleAttribute = function (attrName, value) {
        if (this.props['style'] == null) {
            this.props['style'] = {};
        }
        this.props['style'][attrName] = value;
    };
    XmlElement.prototype.SetInnerText = function (text) {
        this.innerText = text;
    };
    XmlElement.prototype.AppendChild = function (child) {
        child.ParentNode = this;
        this.Children.Add(child);
    };
    XmlElement.prototype.RenderNode = function () {
        var result = [];
        (0,_tuval_core__WEBPACK_IMPORTED_MODULE_0__.foreach)(this.Children, function (node) {
            if (node instanceof XmlElement) {
                result.push(node.RenderNode());
            }
            else {
                result.push(node);
            }
        });
        if (result.length === 0 && !_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.nullOrEmpty(this.innerText)) {
            return _tuval_forms__WEBPACK_IMPORTED_MODULE_1__.React.createElement(this.ElementName, this.props, this.innerText);
        }
        else {
            return _tuval_forms__WEBPACK_IMPORTED_MODULE_1__.React.createElement(this.ElementName, this.props, result);
        }
    };
    XmlElement.CreateElement = function (name) {
        return new XmlElement(name);
    };
    return XmlElement;
}());



/***/ }),

/***/ "./src/exports.ts":
/*!************************!*\
  !*** ./src/exports.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./src/index.ts");


var globalObject = undefined;
/// #if WEB
if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.workerContext()) {
    globalObject = self;
}
else {
    globalObject = window;
}
/// #endif
/// #if NODE
//globalObject = global;
/// #endif
globalObject['realmocean$diagram'] = _index__WEBPACK_IMPORTED_MODULE_1__;
_tuval_core__WEBPACK_IMPORTED_MODULE_0__.ModuleLoader.FireModuleLoadedEvent('realmocean$diagram', _index__WEBPACK_IMPORTED_MODULE_1__);
debugger;
//if (is.workerContext()) {
console.log('tuval diagram yüklendi.');
//console.log(globalObject['tuval$forms']);
//}


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TuView": () => (/* reexport safe */ _TuView_TuView__WEBPACK_IMPORTED_MODULE_1__.TuView),
/* harmony export */   "ViewRenderingMode": () => (/* reexport safe */ _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_2__.ViewRenderingMode),
/* harmony export */   "TuViewSnapStyle": () => (/* reexport safe */ _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_3__.TuViewSnapStyle),
/* harmony export */   "TuHtmlRenderer": () => (/* reexport safe */ _Xml_TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_4__.TuHtmlRenderer),
/* harmony export */   "TuInputEventArgs": () => (/* reexport safe */ _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_5__.TuInputEventArgs),
/* harmony export */   "TuRectangle": () => (/* reexport safe */ _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_6__.TuRectangle),
/* harmony export */   "TuViewGridStyle": () => (/* reexport safe */ _TuGrid_TuViewGridStyle__WEBPACK_IMPORTED_MODULE_7__.TuViewGridStyle),
/* harmony export */   "TuObject": () => (/* reexport safe */ _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_8__.TuObject),
/* harmony export */   "Types": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_9__.Types),
/* harmony export */   "ValueOf": () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_9__.ValueOf),
/* harmony export */   "TuText": () => (/* reexport safe */ _TuText_TuText__WEBPACK_IMPORTED_MODULE_10__.TuText),
/* harmony export */   "BottomCenter": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.BottomCenter),
/* harmony export */   "BottomLeft": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.BottomLeft),
/* harmony export */   "BottomRight": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.BottomRight),
/* harmony export */   "Middle": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.Middle),
/* harmony export */   "MiddleBottom": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleBottom),
/* harmony export */   "MiddleCenter": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleCenter),
/* harmony export */   "MiddleLeft": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleLeft),
/* harmony export */   "MiddleRight": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleRight),
/* harmony export */   "MiddleTop": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.MiddleTop),
/* harmony export */   "NoSpot": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.NoSpot),
/* harmony export */   "Spot": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.Spot),
/* harmony export */   "TopCenter": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.TopCenter),
/* harmony export */   "TopLeft": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.TopLeft),
/* harmony export */   "TopRight": () => (/* reexport safe */ _Spot__WEBPACK_IMPORTED_MODULE_11__.TopRight),
/* harmony export */   "DragEventArgs": () => (/* reexport safe */ _Forms_DragEventArgs__WEBPACK_IMPORTED_MODULE_12__.DragEventArgs),
/* harmony export */   "IDataObject": () => (/* reexport safe */ _Forms_IDataObject__WEBPACK_IMPORTED_MODULE_13__.IDataObject),
/* harmony export */   "TuRectangleButton": () => (/* reexport safe */ _TuRectangle_TuRectangleButton__WEBPACK_IMPORTED_MODULE_15__.TuRectangleButton),
/* harmony export */   "DataObject": () => (/* reexport safe */ _Forms_DataObject__WEBPACK_IMPORTED_MODULE_16__.DataObject)
/* harmony export */ });
/* harmony import */ var _SvgMesurements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SvgMesurements */ "./src/SvgMesurements.ts");
/* harmony import */ var _TuView_TuView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TuView/TuView */ "./src/TuView/TuView.tsx");
/* harmony import */ var _TuView_ViewRenderingMode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TuView/ViewRenderingMode */ "./src/TuView/ViewRenderingMode.ts");
/* harmony import */ var _TuView_TuViewSnapStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TuView/TuViewSnapStyle */ "./src/TuView/TuViewSnapStyle.ts");
/* harmony import */ var _Xml_TuHtmlRenderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Xml/TuHtmlRenderer */ "./src/Xml/TuHtmlRenderer.ts");
/* harmony import */ var _TuInputEventArgs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TuInputEventArgs */ "./src/TuInputEventArgs.ts");
/* harmony import */ var _TuRectangle_TuRectangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TuRectangle/TuRectangle */ "./src/TuRectangle/TuRectangle.tsx");
/* harmony import */ var _TuGrid_TuViewGridStyle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TuGrid/TuViewGridStyle */ "./src/TuGrid/TuViewGridStyle.ts");
/* harmony import */ var _TuObject_TuObject__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./TuObject/TuObject */ "./src/TuObject/TuObject.ts");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./types */ "./src/types.ts");
/* harmony import */ var _TuText_TuText__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./TuText/TuText */ "./src/TuText/TuText.ts");
/* harmony import */ var _Spot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Spot */ "./src/Spot.ts");
/* harmony import */ var _Forms_DragEventArgs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Forms/DragEventArgs */ "./src/Forms/DragEventArgs.ts");
/* harmony import */ var _Forms_IDataObject__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Forms/IDataObject */ "./src/Forms/IDataObject.ts");
/* harmony import */ var _ITuCollection__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ITuCollection */ "./src/ITuCollection.ts");
/* harmony import */ var _TuRectangle_TuRectangleButton__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./TuRectangle/TuRectangleButton */ "./src/TuRectangle/TuRectangleButton.tsx");
/* harmony import */ var _Forms_DataObject__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Forms/DataObject */ "./src/Forms/DataObject.ts");
/* harmony import */ var _exports__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./exports */ "./src/exports.ts");
/**
 * Diagram component exported items
 */




















/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ValueOf": () => (/* binding */ ValueOf),
/* harmony export */   "Types": () => (/* binding */ Types)
/* harmony export */ });
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tuval/core */ "@tuval/core");
/* harmony import */ var _tuval_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tuval_core__WEBPACK_IMPORTED_MODULE_0__);

function ValueOf(value) {
    if (_tuval_core__WEBPACK_IMPORTED_MODULE_0__.is.function(value)) {
        return value();
    }
    else {
        return value;
    }
}
var Types = {
    TextBoxControl: Symbol('TextBoxControl'),
    ComboBoxControl: Symbol('ComboBoxControl'),
    TuOverviewRectangle: Symbol('TuOverviewRectangle'),
    TuMultiTextNodeListGroup: Symbol('TuMultiTextNodeListGroup'),
    TuLayerCache: Symbol('TuLayerCache'),
    TuDrawingData: Symbol('TuDrawingData'),
    TuHandleRotated: Symbol('TuHandleRotated'),
    TuRoundedRectangle: Symbol('TuRoundedRectangle'),
    TuCollapsibleHandle: Symbol('TuCollapsibleHandle'),
    TuCopyDelayedsCollection: Symbol('TuCopyDelayedsCollection'),
    TuToolZooming: Symbol('TuToolZooming'),
    TuToolRubberBanding: Symbol('TuToolRubberBanding'),
    TuToolRelinking: Symbol('TuToolRelinking'),
    TuToolPanning: Symbol('TuToolPanning'),
    TuToolLinkingNew: Symbol('TuToolLinkingNew'),
    TuView: Symbol('TuView'),
    TuPort: Symbol('TuPort'),
    TuLink: Symbol('TuLink'),
    ITuLink: Symbol('ITuLink'),
    TuBalloon: Symbol('TuBalloon'),
    TuDocument: Symbol('TuDocument'),
    TuObject: Symbol('TuObject'),
    TuShape: Symbol('TuShape'),
    TuGroup: Symbol('TuGroup'),
    TuControl: Symbol('TuControl'),
    ITuNode: Symbol('ITuNode'),
    ITuDragSnapper: Symbol('ITuDragSnapper'),
    ITuIdentifiablePart: Symbol('ITuIdentifiablePart'),
    ITuRoutable: Symbol('ITuRoutable'),
    ITuLabeledPart: Symbol('ITuLabeledPart'),
    TuSubGraphBase: Symbol('TuSubGraphBase'),
    TuLayer: Symbol('TuLayer'),
    DisposableBase: Symbol('DisposableBase'),
    ITuCollection: Symbol('ITuCollection'),
    ITuLayerCollectionContainer: Symbol('ITuLayerCollectionContainer'),
    ITuLayerAbilities: Symbol('ITuLayerAbilities'),
    TuLabeledLink: Symbol('TuLabeledLink'),
    ICollection: Symbol('ICollection'),
    TuLayerCollection: Symbol('TuLayerCollection'),
    TuHScrollBarElement: Symbol('TuHScrollBarElement'),
    Slider: Symbol('Slider'),
    Control: Symbol('Control'),
    TuElement: Symbol('TuElement'),
    TuHandle: Symbol('TuHandle'),
    ITuTool: Symbol('ITuTool'),
    TuTriangle: Symbol('TuTriangle'),
    TuToolDragging: Symbol('TuToolDragging'),
    TuDrawing: Symbol('TuDrawing'),
    TuFigureDrawing: Symbol('TuFigureDrawing'),
    IActionObject: Symbol('IActionObject'),
    TuTool: Symbol('TuTool'),
    TuToolAction: Symbol('TuToolAction'),
    TuToolContext: Symbol('TuToolContext'),
    TuToolCreating: Symbol('TuToolCreating'),
    TuToolSelecting: Symbol('TuToolSelecting'),
    ITuHandle: Symbol('ITuHandle'),
    TuToolResizing: Symbol('TuToolResizing'),
    TuGrid: Symbol('TuGrid'),
    ITuControlObject: Symbol('ITuControlObject'),
    TuOverview: Symbol('TuOverview'),
    TuSheet: Symbol('TuSheet'),
    TuSelection: Symbol('TuSelection'),
    TuNode: Symbol('TuNode'),
    ITuGraphPart: Symbol('ITuGraphPart'),
    ITuLabeledNode: Symbol('ITuLabeledNode'),
    TuNodeLinkEnumerator: Symbol('TuNodeLinkEnumerator'),
    TuNodeNodeEnumerator: Symbol('TuNodeNodeEnumerator'),
    TuNodePortEnumerator: Symbol('TuNodePortEnumerator'),
    ITuPort: Symbol('ITuPort'),
    TuText: Symbol('TuText'),
    TuBasicNode: Symbol('TuBasicNode'),
    TuEllipse: Symbol('TuEllipse'),
    TuPortFilteredLinkEnumerator: Symbol('TuPortFilteredLinkEnumerator'),
    TuPortLinkEnumerator: Symbol('TuPortLinkEnumerator'),
    TuSubGraph: Symbol('TuSubGraph'),
    TuGeneralNode: Symbol('TuGeneralNode'),
    TuMultiTextNode: Symbol('TuMultiTextNode'),
    TuGeneralNodePort: Symbol('TuGeneralNodePort'),
    TuBoxPort: Symbol('TuBoxPort'),
    TuCollection: Symbol('TuCollection'),
    TuCollectionEnumerator: Symbol('TuCollectionEnumerator'),
    TuCube: Symbol('TuCube'),
    TuCylinder: Symbol('TuCylinder'),
    TuUndoManager: Symbol('TuUndoManager'),
    TuUndoManagerCompoundEdit: Symbol('TuUndoManagerCompoundEdit'),
    TuGroupEnumerator: Symbol('TuGroupEnumerator'),
    TuLayerCollectionEnumerator: Symbol('TuLayerCollectionEnumerator'),
    TuLayerCollectionObjectEnumerator: Symbol('TuLayerCollectionObjectEnumerator'),
    TuLayerEnumerator: Symbol('TuLayerEnumerator'),
    Animation: Symbol('Animation'),
    TuPenInfo: Symbol('TuPenInfo'),
    TuStroke: Symbol('TuStroke'),
    TemporaryPort: Symbol('TemporaryPort'),
    TuToolManager: Symbol('TuToolManager'),
    ITuCollapsible: Symbol('ITuCollapsible'),
    TuSubGraphHandle: Symbol('TuSubGraphHandle'),
    TuArc: Symbol('TuArc'),
    TuComment: Symbol('TuComment'),
    TuPolygon: Symbol('TuPolygon'),
    TuBoxNode: Symbol('TuBoxNode'),
    TuGeneralNodePortLabel: Symbol('TuGeneralNodePortLabel'),
    ITuNodeIconConstraint: Symbol('ITuNodeIconConstraint'),
    TuImage: Symbol('TuImage'),
    TuNodeIcon: Symbol('TuNodeIcon'),
    TuBrushInfo: Symbol('TuBrushInfo'),
    TuListGroup: Symbol('TuListGroup'),
    BrushInfoEx: Symbol('BrushInfoEx'),
    TuPenInfoEx: Symbol('TuPenInfoEx'),
    TuRectangle: Symbol('TuRectangle'),
    TuPartInfo: Symbol('TuPartInfo'),
    TuDragImage: Symbol('TuDragImage'),
    TuImageInfo: Symbol('TuImageInfo'),
    TuToolLinking: Symbol('TuToolLinking')
};


/***/ }),

/***/ "@tuval/core":
/*!*****************************!*\
  !*** external "tuval$core" ***!
  \*****************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__tuval_core__;

/***/ }),

/***/ "@tuval/cg":
/*!**************************************!*\
  !*** external "tuval$core$graphics" ***!
  \**************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__tuval_cg__;

/***/ }),

/***/ "@tuval/forms":
/*!******************************!*\
  !*** external "tuval$forms" ***!
  \******************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__tuval_forms__;

/***/ }),

/***/ "@tuval/graphics":
/*!*********************************!*\
  !*** external "tuval$graphics" ***!
  \*********************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__tuval_graphics__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=index.js.map
                     console.log('diagram module loaded.');
